ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,5,4
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.comm	uart_received_string,1024,4
  44              		.global	uart_string_index
  45              		.bss
  46              		.align	1
  47              		.type	uart_string_index, %object
  48              		.size	uart_string_index, 2
  49              	uart_string_index:
  50 0000 0000     		.space	2
  51              		.section	.text.isr_telit_rx,"ax",%progbits
  52              		.align	2
  53              		.global	isr_telit_rx
  54              		.thumb
  55              		.thumb_func
  56              		.type	isr_telit_rx, %function
  57              	isr_telit_rx:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 2


  58              	.LFB64:
  59              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** 
   5:modem.c       **** char uart_received_string[1024];
   6:modem.c       **** int16 uart_string_index=0;
   7:modem.c       **** 
   8:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
   9:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  10:modem.c       **** 
  11:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 180 //seconds
  12:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  13:modem.c       **** 
  14:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  15:modem.c       **** 
  16:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  17:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  18:modem.c       **** CY_ISR(isr_telit_rx){      
  60              		.loc 1 18 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 98B5     		push	{r3, r4, r7, lr}
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 3, -16
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  19:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  20:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  72              		.loc 1 20 0
  73 0004 12E0     		b	.L2
  74              	.L3:
  21:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  75              		.loc 1 21 0
  76 0006 0D4B     		ldr	r3, .L4
  77 0008 B3F90030 		ldrsh	r3, [r3]
  78 000c 1C46     		mov	r4, r3
  79 000e FFF7FEFF 		bl	UART_Telit_GetChar
  80 0012 0346     		mov	r3, r0
  81 0014 1A46     		mov	r2, r3
  82 0016 0A4B     		ldr	r3, .L4+4
  83 0018 1A55     		strb	r2, [r3, r4]
  22:modem.c       ****         uart_string_index++;
  84              		.loc 1 22 0
  85 001a 084B     		ldr	r3, .L4
  86 001c B3F90030 		ldrsh	r3, [r3]
  87 0020 9BB2     		uxth	r3, r3
  88 0022 0133     		adds	r3, r3, #1
  89 0024 9BB2     		uxth	r3, r3
  90 0026 1AB2     		sxth	r2, r3
  91 0028 044B     		ldr	r3, .L4
  92 002a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 3


  93              	.L2:
  20:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  94              		.loc 1 20 0
  95 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  96 0030 0346     		mov	r3, r0
  97 0032 012B     		cmp	r3, #1
  98 0034 E7D0     		beq	.L3
  23:modem.c       ****     }
  24:modem.c       **** 
  25:modem.c       **** }
  99              		.loc 1 25 0
 100 0036 00BF     		nop
 101 0038 98BD     		pop	{r3, r4, r7, pc}
 102              	.L5:
 103 003a 00BF     		.align	2
 104              	.L4:
 105 003c 00000000 		.word	uart_string_index
 106 0040 00000000 		.word	uart_received_string
 107              		.cfi_endproc
 108              	.LFE64:
 109              		.size	isr_telit_rx, .-isr_telit_rx
 110              		.section	.text.modem_initialize,"ax",%progbits
 111              		.align	2
 112              		.global	modem_initialize
 113              		.thumb
 114              		.thumb_func
 115              		.type	modem_initialize, %function
 116              	modem_initialize:
 117              	.LFB65:
  26:modem.c       **** 
  27:modem.c       **** // Initialize the modem
  28:modem.c       **** void modem_initialize(){
 118              		.loc 1 28 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
  29:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  30:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  31:modem.c       ****     pins_configure_inactive();
 128              		.loc 1 31 0
 129 0004 FFF7FEFF 		bl	pins_configure_inactive
  32:modem.c       ****     modem_state = 0;
 130              		.loc 1 32 0
 131 0008 154B     		ldr	r3, .L7
 132 000a 0022     		movs	r2, #0
 133 000c 1A70     		strb	r2, [r3]
  33:modem.c       ****     //initialize states
  34:modem.c       ****     modem_info.imei[0] = '\0';
 134              		.loc 1 34 0
 135 000e 154B     		ldr	r3, .L7+4
 136 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 4


 137 0012 83F82820 		strb	r2, [r3, #40]
  35:modem.c       ****     modem_info.model_id[0] = '\0';
 138              		.loc 1 35 0
 139 0016 134B     		ldr	r3, .L7+4
 140 0018 0022     		movs	r2, #0
 141 001a 1A75     		strb	r2, [r3, #20]
  36:modem.c       ****     modem_info.sim_id[0] = '\0';
 142              		.loc 1 36 0
 143 001c 114B     		ldr	r3, .L7+4
 144 001e 0022     		movs	r2, #0
 145 0020 1A70     		strb	r2, [r3]
  37:modem.c       ****     modem_stats.rxlev = 0;
 146              		.loc 1 37 0
 147 0022 114B     		ldr	r3, .L7+8
 148 0024 0022     		movs	r2, #0
 149 0026 1A60     		str	r2, [r3]
  38:modem.c       ****     modem_stats.ber = 0;
 150              		.loc 1 38 0
 151 0028 0F4B     		ldr	r3, .L7+8
 152 002a 0022     		movs	r2, #0
 153 002c 5A60     		str	r2, [r3, #4]
  39:modem.c       ****     modem_stats.rscp = 0;
 154              		.loc 1 39 0
 155 002e 0E4B     		ldr	r3, .L7+8
 156 0030 0022     		movs	r2, #0
 157 0032 9A60     		str	r2, [r3, #8]
  40:modem.c       ****     modem_stats.ecno = 0;
 158              		.loc 1 40 0
 159 0034 0C4B     		ldr	r3, .L7+8
 160 0036 0022     		movs	r2, #0
 161 0038 DA60     		str	r2, [r3, #12]
  41:modem.c       ****     modem_stats.rsrq = 0;
 162              		.loc 1 41 0
 163 003a 0B4B     		ldr	r3, .L7+8
 164 003c 0022     		movs	r2, #0
 165 003e 1A61     		str	r2, [r3, #16]
  42:modem.c       ****     modem_stats.rsrp = 0;
 166              		.loc 1 42 0
 167 0040 094B     		ldr	r3, .L7+8
 168 0042 0022     		movs	r2, #0
 169 0044 5A61     		str	r2, [r3, #20]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 170              		.loc 1 43 0
 171 0046 084B     		ldr	r3, .L7+8
 172 0048 0022     		movs	r2, #0
 173 004a DA61     		str	r2, [r3, #28]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 174              		.loc 1 44 0
 175 004c 064B     		ldr	r3, .L7+8
 176 004e 0022     		movs	r2, #0
 177 0050 9A61     		str	r2, [r3, #24]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 178              		.loc 1 48 0
 179 0052 0021     		movs	r1, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 5


 180 0054 4020     		movs	r0, #64
 181 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 182              		.loc 1 50 0
 183 005a 00BF     		nop
 184 005c 80BD     		pop	{r7, pc}
 185              	.L8:
 186 005e 00BF     		.align	2
 187              	.L7:
 188 0060 00000000 		.word	modem_state
 189 0064 00000000 		.word	modem_info
 190 0068 00000000 		.word	modem_stats
 191              		.cfi_endproc
 192              	.LFE65:
 193              		.size	modem_initialize, .-modem_initialize
 194              		.section	.text.pins_configure_inactive,"ax",%progbits
 195              		.align	2
 196              		.global	pins_configure_inactive
 197              		.thumb
 198              		.thumb_func
 199              		.type	pins_configure_inactive, %function
 200              	pins_configure_inactive:
 201              	.LFB66:
  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 202              		.loc 1 54 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 212              		.loc 1 56 0
 213 0004 0020     		movs	r0, #0
 214 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 215              		.loc 1 57 0
 216 000a 0C20     		movs	r0, #12
 217 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 218              		.loc 1 59 0
 219 0010 0020     		movs	r0, #0
 220 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 221              		.loc 1 62 0
 222 0016 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 6


 223 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 224              		.loc 1 63 0
 225 001c 0020     		movs	r0, #0
 226 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 227              		.loc 1 64 0
 228 0022 0020     		movs	r0, #0
 229 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 230              		.loc 1 65 0
 231 0028 0020     		movs	r0, #0
 232 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 233              		.loc 1 67 0
 234 002e 00BF     		nop
 235 0030 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE66:
 238              		.size	pins_configure_inactive, .-pins_configure_inactive
 239 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 240              		.align	2
 241              		.global	pins_configure_active
 242              		.thumb
 243              		.thumb_func
 244              		.type	pins_configure_active, %function
 245              	pins_configure_active:
 246              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 247              		.loc 1 70 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 257              		.loc 1 72 0
 258 0004 0220     		movs	r0, #2
 259 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 260              		.loc 1 73 0
 261 000a 0120     		movs	r0, #1
 262 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 263              		.loc 1 74 0
 264 0010 0120     		movs	r0, #1
 265 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 266              		.loc 1 75 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 7


 267 0016 6420     		movs	r0, #100
 268 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 269              		.loc 1 76 0
 270 001c 00BF     		nop
 271 001e 80BD     		pop	{r7, pc}
 272              		.cfi_endproc
 273              	.LFE67:
 274              		.size	pins_configure_active, .-pins_configure_active
 275              		.section	.rodata
 276              		.align	2
 277              	.LC0:
 278 0000 4F4B00   		.ascii	"OK\000"
 279 0003 00       		.align	2
 280              	.LC1:
 281 0004 41542353 		.ascii	"AT#SHDN\015\000"
 281      48444E0D 
 281      00
 282              		.section	.text.modem_power_down,"ax",%progbits
 283              		.align	2
 284              		.global	modem_power_down
 285              		.thumb
 286              		.thumb_func
 287              		.type	modem_power_down, %function
 288              	modem_power_down:
 289              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 290              		.loc 1 79 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 300              		.loc 1 82 0
 301 0004 41F28832 		movw	r2, #5000
 302 0008 0A49     		ldr	r1, .L12
 303 000a 0B48     		ldr	r0, .L12+4
 304 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 305              		.loc 1 85 0
 306 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 307              		.loc 1 86 0
 308 0014 4FF47A70 		mov	r0, #1000
 309 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 8


  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 310              		.loc 1 88 0
 311 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 312              		.loc 1 89 0
 313 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 314              		.loc 1 90 0
 315 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     modem_state = MODEM_STATE_OFF;
 316              		.loc 1 91 0
 317 0028 044B     		ldr	r3, .L12+8
 318 002a 0022     		movs	r2, #0
 319 002c 1A70     		strb	r2, [r3]
  92:modem.c       ****     
  93:modem.c       **** }
 320              		.loc 1 93 0
 321 002e 00BF     		nop
 322 0030 80BD     		pop	{r7, pc}
 323              	.L13:
 324 0032 00BF     		.align	2
 325              	.L12:
 326 0034 00000000 		.word	.LC0
 327 0038 04000000 		.word	.LC1
 328 003c 00000000 		.word	modem_state
 329              		.cfi_endproc
 330              	.LFE68:
 331              		.size	modem_power_down, .-modem_power_down
 332              		.section	.rodata
 333 000d 000000   		.align	2
 334              	.LC2:
 335 0010 41544530 		.ascii	"ATE0\015\000"
 335      0D00
 336 0016 0000     		.align	2
 337              	.LC3:
 338 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 338      6D20626F 
 338      6F742074 
 338      696D653A 
 338      20256400 
 339              		.align	2
 340              	.LC4:
 341 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 341      6D207265 
 341      61647920 
 341      666F7220 
 341      41542063 
 342 005d 000000   		.align	2
 343              	.LC5:
 344 0060 4E6F2072 		.ascii	"No response from modem.\000"
 344      6573706F 
 344      6E736520 
 344      66726F6D 
 344      206D6F64 
 345              		.section	.text.modem_power_up,"ax",%progbits
 346              		.align	2
 347              		.global	modem_power_up
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 9


 348              		.thumb
 349              		.thumb_func
 350              		.type	modem_power_up, %function
 351              	modem_power_up:
 352              	.LFB69:
  94:modem.c       **** 
  95:modem.c       **** // This puts all the modem pins into a state that won't leak power
  96:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  97:modem.c       **** uint8 modem_power_up(){
 353              		.loc 1 97 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357 0000 80B5     		push	{r7, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 82B0     		sub	sp, sp, #8
 362              		.cfi_def_cfa_offset 16
 363 0004 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
  98:modem.c       **** 
  99:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 365              		.loc 1 99 0
 366 0006 FFF7FEFF 		bl	pins_configure_active
 100:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 367              		.loc 1 100 0
 368 000a FFF7FEFF 		bl	UART_Telit_Start
 101:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 369              		.loc 1 101 0
 370 000e 2C48     		ldr	r0, .L27
 371 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 102:modem.c       **** 
 103:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 372              		.loc 1 103 0
 373 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 104:modem.c       ****     
 105:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 106:modem.c       ****     uint8 at_ready = 0;
 374              		.loc 1 106 0
 375 0018 0023     		movs	r3, #0
 376 001a FB71     		strb	r3, [r7, #7]
 107:modem.c       ****     uint8 attempts = 0;
 377              		.loc 1 107 0
 378 001c 0023     		movs	r3, #0
 379 001e 3B71     		strb	r3, [r7, #4]
 108:modem.c       ****     // Create variable boot_time of the current time stamp.
 109:modem.c       ****     long boot_time = getTimeStamp();
 380              		.loc 1 109 0
 381 0020 FFF7FEFF 		bl	getTimeStamp
 382 0024 3860     		str	r0, [r7]
 383              	.LBB2:
 110:modem.c       ****     
 111:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 112:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 384              		.loc 1 112 0
 385 0026 0023     		movs	r3, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 10


 386 0028 BB71     		strb	r3, [r7, #6]
 387 002a 1CE0     		b	.L15
 388              	.L22:
 389              	.LBB3:
 113:modem.c       ****         
 114:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 390              		.loc 1 114 0
 391 002c 0023     		movs	r3, #0
 392 002e 7B71     		strb	r3, [r7, #5]
 393 0030 0EE0     		b	.L16
 394              	.L19:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 116:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 395              		.loc 1 116 0
 396 0032 4FF47A72 		mov	r2, #1000
 397 0036 2349     		ldr	r1, .L27+4
 398 0038 2348     		ldr	r0, .L27+8
 399 003a FFF7FEFF 		bl	at_write_command
 400 003e 0346     		mov	r3, r0
 401 0040 002B     		cmp	r3, #0
 402 0042 02D0     		beq	.L17
 117:modem.c       ****                 at_ready = 1;
 403              		.loc 1 117 0
 404 0044 0123     		movs	r3, #1
 405 0046 FB71     		strb	r3, [r7, #7]
 118:modem.c       ****                 break;
 406              		.loc 1 118 0
 407 0048 05E0     		b	.L18
 408              	.L17:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 409              		.loc 1 114 0 discriminator 2
 410 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 411 004c 0133     		adds	r3, r3, #1
 412 004e 7B71     		strb	r3, [r7, #5]
 413              	.L16:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 414              		.loc 1 114 0 is_stmt 0 discriminator 1
 415 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 416 0052 132B     		cmp	r3, #19
 417 0054 EDD9     		bls	.L19
 418              	.L18:
 419              	.LBE3:
 119:modem.c       ****             }
 120:modem.c       ****         }
 121:modem.c       ****             
 122:modem.c       ****         if(at_ready == 1){
 420              		.loc 1 122 0 is_stmt 1
 421 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 422 0058 012B     		cmp	r3, #1
 423 005a 08D0     		beq	.L26
 123:modem.c       ****             break;
 124:modem.c       ****         }else{
 125:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 126:modem.c       ****             modem_soft_power_cycle();
 424              		.loc 1 126 0 discriminator 2
 425 005c FFF7FEFF 		bl	modem_soft_power_cycle
 112:modem.c       ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 11


 426              		.loc 1 112 0 discriminator 2
 427 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 428 0062 0133     		adds	r3, r3, #1
 429 0064 BB71     		strb	r3, [r7, #6]
 430              	.L15:
 112:modem.c       ****         
 431              		.loc 1 112 0 is_stmt 0 discriminator 1
 432 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 433 0068 022B     		cmp	r3, #2
 434 006a DFD9     		bls	.L22
 435 006c 00E0     		b	.L21
 436              	.L26:
 123:modem.c       ****             break;
 437              		.loc 1 123 0 is_stmt 1
 438 006e 00BF     		nop
 439              	.L21:
 440              	.LBE2:
 127:modem.c       ****         }
 128:modem.c       ****     }
 129:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 130:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 441              		.loc 1 130 0
 442 0070 FFF7FEFF 		bl	getTimeStamp
 443 0074 0246     		mov	r2, r0
 444 0076 3B68     		ldr	r3, [r7]
 445 0078 D31A     		subs	r3, r2, r3
 446 007a 3B60     		str	r3, [r7]
 131:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 447              		.loc 1 131 0
 448 007c 3A68     		ldr	r2, [r7]
 449 007e 1349     		ldr	r1, .L27+12
 450 0080 0020     		movs	r0, #0
 451 0082 FFF7FEFF 		bl	printNotif
 132:modem.c       ****    
 133:modem.c       ****     if(at_ready == 1){
 452              		.loc 1 133 0
 453 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 454 0088 012B     		cmp	r3, #1
 455 008a 0AD1     		bne	.L23
 134:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 456              		.loc 1 134 0
 457 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 458 008e 1A46     		mov	r2, r3
 459 0090 0F49     		ldr	r1, .L27+16
 460 0092 0020     		movs	r0, #0
 461 0094 FFF7FEFF 		bl	printNotif
 135:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 462              		.loc 1 135 0
 463 0098 0E4B     		ldr	r3, .L27+20
 464 009a 0122     		movs	r2, #1
 465 009c 1A70     		strb	r2, [r3]
 136:modem.c       ****     }else{
 137:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 140:modem.c       ****         modem_power_down();
 141:modem.c       ****         return 0u;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 12


 142:modem.c       ****     }
 143:modem.c       ****     return 1u;
 466              		.loc 1 143 0
 467 009e 0123     		movs	r3, #1
 468 00a0 09E0     		b	.L25
 469              	.L23:
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 470              		.loc 1 137 0
 471 00a2 0D49     		ldr	r1, .L27+24
 472 00a4 0220     		movs	r0, #2
 473 00a6 FFF7FEFF 		bl	printNotif
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 474              		.loc 1 138 0
 475 00aa 0A4B     		ldr	r3, .L27+20
 476 00ac 0022     		movs	r2, #0
 477 00ae 1A70     		strb	r2, [r3]
 140:modem.c       ****         return 0u;
 478              		.loc 1 140 0
 479 00b0 FFF7FEFF 		bl	modem_power_down
 141:modem.c       ****     }
 480              		.loc 1 141 0
 481 00b4 0023     		movs	r3, #0
 482              	.L25:
 144:modem.c       **** }
 483              		.loc 1 144 0
 484 00b6 1846     		mov	r0, r3
 485 00b8 0837     		adds	r7, r7, #8
 486              		.cfi_def_cfa_offset 8
 487 00ba BD46     		mov	sp, r7
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 00bc 80BD     		pop	{r7, pc}
 491              	.L28:
 492 00be 00BF     		.align	2
 493              	.L27:
 494 00c0 00000000 		.word	isr_telit_rx
 495 00c4 00000000 		.word	.LC0
 496 00c8 10000000 		.word	.LC2
 497 00cc 18000000 		.word	.LC3
 498 00d0 2C000000 		.word	.LC4
 499 00d4 00000000 		.word	modem_state
 500 00d8 60000000 		.word	.LC5
 501              		.cfi_endproc
 502              	.LFE69:
 503              		.size	modem_power_up, .-modem_power_up
 504              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 505              		.align	2
 506              		.global	modem_soft_power_cycle
 507              		.thumb
 508              		.thumb_func
 509              		.type	modem_soft_power_cycle, %function
 510              	modem_soft_power_cycle:
 511              	.LFB70:
 145:modem.c       **** 
 146:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 147:modem.c       **** void modem_soft_power_cycle(){
 512              		.loc 1 147 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 13


 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 00AF     		add	r7, sp, #0
 521              		.cfi_def_cfa_register 7
 148:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 522              		.loc 1 148 0
 523 0004 0120     		movs	r0, #1
 524 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 149:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 525              		.loc 1 149 0
 526 000a 4FF4FA60 		mov	r0, #2000
 527 000e FFF7FEFF 		bl	CyDelay
 150:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 528              		.loc 1 150 0
 529 0012 0020     		movs	r0, #0
 530 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 151:modem.c       ****     
 152:modem.c       **** }
 531              		.loc 1 152 0
 532 0018 00BF     		nop
 533 001a 80BD     		pop	{r7, pc}
 534              		.cfi_endproc
 535              	.LFE70:
 536              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 537              		.section	.text.uart_string_reset,"ax",%progbits
 538              		.align	2
 539              		.global	uart_string_reset
 540              		.thumb
 541              		.thumb_func
 542              		.type	uart_string_reset, %function
 543              	uart_string_reset:
 544              	.LFB71:
 153:modem.c       **** 
 154:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 155:modem.c       **** void uart_string_reset(){
 545              		.loc 1 155 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549 0000 80B5     		push	{r7, lr}
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 156:modem.c       ****     uart_string_index=0;
 555              		.loc 1 156 0
 556 0004 064B     		ldr	r3, .L31
 557 0006 0022     		movs	r2, #0
 558 0008 1A80     		strh	r2, [r3]	@ movhi
 157:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 158:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 14


 559              		.loc 1 158 0
 560 000a 4FF48062 		mov	r2, #1024
 561 000e 0021     		movs	r1, #0
 562 0010 0448     		ldr	r0, .L31+4
 563 0012 FFF7FEFF 		bl	memset
 159:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 160:modem.c       ****     UART_Telit_ClearRxBuffer();
 564              		.loc 1 160 0
 565 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 161:modem.c       **** }
 566              		.loc 1 161 0
 567 001a 00BF     		nop
 568 001c 80BD     		pop	{r7, pc}
 569              	.L32:
 570 001e 00BF     		.align	2
 571              	.L31:
 572 0020 00000000 		.word	uart_string_index
 573 0024 00000000 		.word	uart_received_string
 574              		.cfi_endproc
 575              	.LFE71:
 576              		.size	uart_string_reset, .-uart_string_reset
 577              		.section	.rodata
 578              		.align	2
 579              	.LC6:
 580 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 580      6D207365 
 580      6E742041 
 580      5420636F 
 580      6D6D616E 
 581              		.align	2
 582              	.LC7:
 583 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 583      6D205265 
 583      63656976 
 583      65642065 
 583      78706563 
 584 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 584      616E643A 
 584      2025730A 
 584      52656365 
 584      69766564 
 585 00f1 000000   		.align	2
 586              	.LC8:
 587 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 587      6D207265 
 587      71756972 
 587      65642025 
 587      64207472 
 588 0127 0A00     		.ascii	"\012\000"
 589 0129 000000   		.align	2
 590              	.LC9:
 591 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 591      64206E6F 
 591      74207772 
 591      69746520 
 591      41542063 
 592 0159 00       		.ascii	"\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 15


 593              		.section	.text.at_write_command,"ax",%progbits
 594              		.align	2
 595              		.global	at_write_command
 596              		.thumb
 597              		.thumb_func
 598              		.type	at_write_command, %function
 599              	at_write_command:
 600              	.LFB72:
 162:modem.c       **** 
 163:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 164:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 165:modem.c       **** // Sends commands to the modem
 166:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 601              		.loc 1 166 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 40
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0000 80B5     		push	{r7, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 8AB0     		sub	sp, sp, #40
 610              		.cfi_def_cfa_offset 48
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 613 0006 F860     		str	r0, [r7, #12]
 614 0008 B960     		str	r1, [r7, #8]
 615 000a 7A60     		str	r2, [r7, #4]
 167:modem.c       **** 
 168:modem.c       ****     uint32 at_attempt = 0;
 616              		.loc 1 168 0
 617 000c 0023     		movs	r3, #0
 618 000e 7B62     		str	r3, [r7, #36]
 169:modem.c       ****     
 170:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 619              		.loc 1 170 0
 620 0010 0023     		movs	r3, #0
 621 0012 7B62     		str	r3, [r7, #36]
 622 0014 46E0     		b	.L34
 623              	.L42:
 624              	.LBB4:
 171:modem.c       ****         
 172:modem.c       ****         char* compare_location;
 173:modem.c       ****         uint32_t delay=10;
 625              		.loc 1 173 0
 626 0016 0A23     		movs	r3, #10
 627 0018 FB61     		str	r3, [r7, #28]
 174:modem.c       ****         uint32_t i, interval=timeout/delay;        
 628              		.loc 1 174 0
 629 001a 7A68     		ldr	r2, [r7, #4]
 630 001c FB69     		ldr	r3, [r7, #28]
 631 001e B2FBF3F3 		udiv	r3, r2, r3
 632 0022 BB61     		str	r3, [r7, #24]
 175:modem.c       ****         
 176:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 177:modem.c       ****         uart_string_reset();
 633              		.loc 1 177 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 16


 634 0024 FFF7FEFF 		bl	uart_string_reset
 178:modem.c       ****         
 179:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 180:modem.c       ****         UART_Telit_PutString(commands);
 635              		.loc 1 180 0
 636 0028 F868     		ldr	r0, [r7, #12]
 637 002a FFF7FEFF 		bl	UART_Telit_PutString
 181:modem.c       ****         
 182:modem.c       ****         
 183:modem.c       ****         // If no timeout, no need to wait for response
 184:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 638              		.loc 1 184 0
 639 002e 7B68     		ldr	r3, [r7, #4]
 640 0030 002B     		cmp	r3, #0
 641 0032 06D1     		bne	.L35
 185:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 642              		.loc 1 185 0
 643 0034 FA68     		ldr	r2, [r7, #12]
 644 0036 1F49     		ldr	r1, .L43
 645 0038 0020     		movs	r0, #0
 646 003a FFF7FEFF 		bl	printNotif
 186:modem.c       ****             return 1u;
 647              		.loc 1 186 0
 648 003e 0123     		movs	r3, #1
 649 0040 34E0     		b	.L36
 650              	.L35:
 187:modem.c       ****         }
 188:modem.c       ****       
 189:modem.c       ****      
 190:modem.c       ****         for(i=0;i<interval;i++){ 
 651              		.loc 1 190 0
 652 0042 0023     		movs	r3, #0
 653 0044 3B62     		str	r3, [r7, #32]
 654 0046 20E0     		b	.L37
 655              	.L41:
 191:modem.c       ****             CyDelay((uint32) delay);
 656              		.loc 1 191 0
 657 0048 F869     		ldr	r0, [r7, #28]
 658 004a FFF7FEFF 		bl	CyDelay
 192:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 193:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 194:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 659              		.loc 1 194 0
 660 004e B968     		ldr	r1, [r7, #8]
 661 0050 1948     		ldr	r0, .L43+4
 662 0052 FFF7FEFF 		bl	strstr
 663 0056 7861     		str	r0, [r7, #20]
 195:modem.c       ****             if(compare_location!=NULL) {
 664              		.loc 1 195 0
 665 0058 7B69     		ldr	r3, [r7, #20]
 666 005a 002B     		cmp	r3, #0
 667 005c 12D0     		beq	.L38
 196:modem.c       ****                 if (at_attempt == 0){
 668              		.loc 1 196 0
 669 005e 7B6A     		ldr	r3, [r7, #36]
 670 0060 002B     		cmp	r3, #0
 671 0062 06D1     		bne	.L39
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 17


 197:modem.c       ****                     // we add \n for new line to make it easier to decipher
 198:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 672              		.loc 1 198 0
 673 0064 144B     		ldr	r3, .L43+4
 674 0066 FA68     		ldr	r2, [r7, #12]
 675 0068 1449     		ldr	r1, .L43+8
 676 006a 0020     		movs	r0, #0
 677 006c FFF7FEFF 		bl	printNotif
 678 0070 06E0     		b	.L40
 679              	.L39:
 199:modem.c       ****                 }else{
 200:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 680              		.loc 1 200 0
 681 0072 7B6A     		ldr	r3, [r7, #36]
 682 0074 5A1C     		adds	r2, r3, #1
 683 0076 104B     		ldr	r3, .L43+4
 684 0078 1149     		ldr	r1, .L43+12
 685 007a 0120     		movs	r0, #1
 686 007c FFF7FEFF 		bl	printNotif
 687              	.L40:
 201:modem.c       ****                  
 202:modem.c       ****                 }
 203:modem.c       ****                 return(1);
 688              		.loc 1 203 0
 689 0080 0123     		movs	r3, #1
 690 0082 13E0     		b	.L36
 691              	.L38:
 190:modem.c       ****             CyDelay((uint32) delay);
 692              		.loc 1 190 0 discriminator 2
 693 0084 3B6A     		ldr	r3, [r7, #32]
 694 0086 0133     		adds	r3, r3, #1
 695 0088 3B62     		str	r3, [r7, #32]
 696              	.L37:
 190:modem.c       ****             CyDelay((uint32) delay);
 697              		.loc 1 190 0 is_stmt 0 discriminator 1
 698 008a 3A6A     		ldr	r2, [r7, #32]
 699 008c BB69     		ldr	r3, [r7, #24]
 700 008e 9A42     		cmp	r2, r3
 701 0090 DAD3     		bcc	.L41
 204:modem.c       ****             }
 205:modem.c       ****             
 206:modem.c       ****         }  
 207:modem.c       ****         
 208:modem.c       ****         // Something went wrong, restart UART
 209:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 702              		.loc 1 209 0 is_stmt 1 discriminator 2
 703 0092 094B     		ldr	r3, .L43+4
 704 0094 FA68     		ldr	r2, [r7, #12]
 705 0096 0B49     		ldr	r1, .L43+16
 706 0098 0220     		movs	r0, #2
 707 009a FFF7FEFF 		bl	printNotif
 708              	.LBE4:
 170:modem.c       ****         
 709              		.loc 1 170 0 discriminator 2
 710 009e 7B6A     		ldr	r3, [r7, #36]
 711 00a0 0133     		adds	r3, r3, #1
 712 00a2 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 18


 713              	.L34:
 170:modem.c       ****         
 714              		.loc 1 170 0 is_stmt 0 discriminator 1
 715 00a4 7B6A     		ldr	r3, [r7, #36]
 716 00a6 022B     		cmp	r3, #2
 717 00a8 B5D9     		bls	.L42
 210:modem.c       ****       
 211:modem.c       ****     }
 212:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 213:modem.c       ****           
 214:modem.c       ****     return(0);    
 718              		.loc 1 214 0 is_stmt 1
 719 00aa 0023     		movs	r3, #0
 720              	.L36:
 215:modem.c       **** }
 721              		.loc 1 215 0
 722 00ac 1846     		mov	r0, r3
 723 00ae 2837     		adds	r7, r7, #40
 724              		.cfi_def_cfa_offset 8
 725 00b0 BD46     		mov	sp, r7
 726              		.cfi_def_cfa_register 13
 727              		@ sp needed
 728 00b2 80BD     		pop	{r7, pc}
 729              	.L44:
 730              		.align	2
 731              	.L43:
 732 00b4 78000000 		.word	.LC6
 733 00b8 00000000 		.word	uart_received_string
 734 00bc A4000000 		.word	.LC7
 735 00c0 F4000000 		.word	.LC8
 736 00c4 2C010000 		.word	.LC9
 737              		.cfi_endproc
 738              	.LFE72:
 739              		.size	at_write_command, .-at_write_command
 740              		.section	.rodata
 741 015a 0000     		.align	2
 742              	.LC10:
 743 015c 54455354 		.ascii	"TEST_MODEM\000"
 743      5F4D4F44 
 743      454D00
 744 0167 00       		.align	2
 745              	.LC11:
 746 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 746      65706F6E 
 746      73652066 
 746      726F6D20 
 746      6D6F6465 
 747 017f 00       		.align	2
 748              	.LC12:
 749 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 749      6D20636F 
 749      6E6E6563 
 749      74656420 
 749      746F206E 
 750              		.section	.text.modem_test,"ax",%progbits
 751              		.align	2
 752              		.global	modem_test
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 19


 753              		.thumb
 754              		.thumb_func
 755              		.type	modem_test, %function
 756              	modem_test:
 757              	.LFB73:
 216:modem.c       **** 
 217:modem.c       **** // Test modem -- needs fleshed out
 218:modem.c       **** test_t modem_test(){
 758              		.loc 1 218 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 408
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 B0B5     		push	{r4, r5, r7, lr}
 763              		.cfi_def_cfa_offset 16
 764              		.cfi_offset 4, -16
 765              		.cfi_offset 5, -12
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 E6B0     		sub	sp, sp, #408
 769              		.cfi_def_cfa_offset 424
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 772 0006 3B1D     		adds	r3, r7, #4
 773 0008 1860     		str	r0, [r3]
 219:modem.c       ****     
 220:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 221:modem.c       ****     test.status = 0;
 774              		.loc 1 221 0
 775 000a 07F10C03 		add	r3, r7, #12
 776 000e 0022     		movs	r2, #0
 777 0010 83F88020 		strb	r2, [r3, #128]
 222:modem.c       ****     // Print test name and test reason
 223:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 778              		.loc 1 223 0
 779 0014 07F10C03 		add	r3, r7, #12
 780 0018 364A     		ldr	r2, .L53
 781 001a 07CA     		ldmia	r2, {r0, r1, r2}
 782 001c 03C3     		stmia	r3!, {r0, r1}
 783 001e 1A80     		strh	r2, [r3]	@ movhi
 784 0020 0233     		adds	r3, r3, #2
 785 0022 120C     		lsrs	r2, r2, #16
 786 0024 1A70     		strb	r2, [r3]
 224:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 787              		.loc 1 224 0
 788 0026 07F10C03 		add	r3, r7, #12
 789 002a 8133     		adds	r3, r3, #129
 790 002c 324A     		ldr	r2, .L53+4
 791 002e 1C46     		mov	r4, r3
 792 0030 1546     		mov	r5, r2
 793 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 794 0034 2060     		str	r0, [r4]	@ unaligned
 795 0036 6160     		str	r1, [r4, #4]	@ unaligned
 796 0038 A260     		str	r2, [r4, #8]	@ unaligned
 797 003a E360     		str	r3, [r4, #12]	@ unaligned
 798 003c 2868     		ldr	r0, [r5]	@ unaligned
 799 003e 2061     		str	r0, [r4, #16]	@ unaligned
 800 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 20


 801 0042 AA79     		ldrb	r2, [r5, #6]
 802 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 803 0046 1346     		mov	r3, r2
 804 0048 A375     		strb	r3, [r4, #22]
 805              	.LBB5:
 225:modem.c       ****    
 226:modem.c       ****     //try the modem 60*1000ms (60 secs)
 227:modem.c       ****     for(int i = 0; i< 60; i++){
 806              		.loc 1 227 0
 807 004a 0023     		movs	r3, #0
 808 004c C7F89431 		str	r3, [r7, #404]
 809 0050 3AE0     		b	.L46
 810              	.L51:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 229:modem.c       ****         modem_process_tasks();
 811              		.loc 1 229 0
 812 0052 FFF7FEFF 		bl	modem_process_tasks
 230:modem.c       ****          
 231:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 813              		.loc 1 231 0
 814 0056 FFF7FEFF 		bl	modem_get_state
 815 005a 0346     		mov	r3, r0
 816 005c 002B     		cmp	r3, #0
 817 005e 02D1     		bne	.L47
 232:modem.c       ****             // This puts all the modem points into a state that won't leak power
 233:modem.c       ****             modem_power_up();
 818              		.loc 1 233 0
 819 0060 FFF7FEFF 		bl	modem_power_up
 820 0064 27E0     		b	.L48
 821              	.L47:
 234:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 235:modem.c       ****             
 236:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 822              		.loc 1 236 0
 823 0066 FFF7FEFF 		bl	modem_get_state
 824 006a 0346     		mov	r3, r0
 825 006c 042B     		cmp	r3, #4
 826 006e 22D1     		bne	.L48
 827              	.LBB6:
 237:modem.c       ****         
 238:modem.c       ****         
 239:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 240:modem.c       ****         long network_time = modem_get_network_time();
 828              		.loc 1 240 0
 829 0070 FFF7FEFF 		bl	modem_get_network_time
 830 0074 C7F89001 		str	r0, [r7, #400]
 241:modem.c       ****         if(network_time != 0){
 831              		.loc 1 241 0
 832 0078 D7F89031 		ldr	r3, [r7, #400]
 833 007c 002B     		cmp	r3, #0
 834 007e 03D0     		beq	.L49
 242:modem.c       ****             setTime(network_time); // Set the system time 
 835              		.loc 1 242 0
 836 0080 D7F89001 		ldr	r0, [r7, #400]
 837 0084 FFF7FEFF 		bl	setTime
 838              	.L49:
 243:modem.c       ****         }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 21


 244:modem.c       ****             
 245:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 839              		.loc 1 245 0
 840 0088 07F10C03 		add	r3, r7, #12
 841 008c 8133     		adds	r3, r3, #129
 842 008e 1B4A     		ldr	r2, .L53+8
 843 0090 1D46     		mov	r5, r3
 844 0092 1446     		mov	r4, r2
 845 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 846 0096 2860     		str	r0, [r5]	@ unaligned
 847 0098 6960     		str	r1, [r5, #4]	@ unaligned
 848 009a AA60     		str	r2, [r5, #8]	@ unaligned
 849 009c EB60     		str	r3, [r5, #12]	@ unaligned
 850 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 851 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 852 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 853 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 246:modem.c       ****         test.status = 1;
 854              		.loc 1 246 0
 855 00a6 07F10C03 		add	r3, r7, #12
 856 00aa 0122     		movs	r2, #1
 857 00ac 83F88020 		strb	r2, [r3, #128]
 247:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 248:modem.c       ****         modem_power_down();
 858              		.loc 1 248 0
 859 00b0 FFF7FEFF 		bl	modem_power_down
 249:modem.c       ****         break;
 860              		.loc 1 249 0
 861 00b4 0CE0     		b	.L50
 862              	.L48:
 863              	.LBE6:
 250:modem.c       ****         
 251:modem.c       ****       }
 252:modem.c       ****         CyDelay(1000u);
 864              		.loc 1 252 0 discriminator 2
 865 00b6 4FF47A70 		mov	r0, #1000
 866 00ba FFF7FEFF 		bl	CyDelay
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 867              		.loc 1 227 0 discriminator 2
 868 00be D7F89431 		ldr	r3, [r7, #404]
 869 00c2 0133     		adds	r3, r3, #1
 870 00c4 C7F89431 		str	r3, [r7, #404]
 871              	.L46:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 872              		.loc 1 227 0 is_stmt 0 discriminator 1
 873 00c8 D7F89431 		ldr	r3, [r7, #404]
 874 00cc 3B2B     		cmp	r3, #59
 875 00ce C0DD     		ble	.L51
 876              	.L50:
 877              	.LBE5:
 253:modem.c       ****         
 254:modem.c       ****     }
 255:modem.c       ****     
 256:modem.c       ****     return test;
 878              		.loc 1 256 0 is_stmt 1
 879 00d0 3B1D     		adds	r3, r7, #4
 880 00d2 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 22


 881 00d4 07F10C03 		add	r3, r7, #12
 882 00d8 1046     		mov	r0, r2
 883 00da 1946     		mov	r1, r3
 884 00dc 40F28113 		movw	r3, #385
 885 00e0 1A46     		mov	r2, r3
 886 00e2 FFF7FEFF 		bl	memcpy
 257:modem.c       **** }
 887              		.loc 1 257 0
 888 00e6 3B1D     		adds	r3, r7, #4
 889 00e8 1868     		ldr	r0, [r3]
 890 00ea 07F5CC77 		add	r7, r7, #408
 891              		.cfi_def_cfa_offset 16
 892 00ee BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 00f0 B0BD     		pop	{r4, r5, r7, pc}
 896              	.L54:
 897 00f2 00BF     		.align	2
 898              	.L53:
 899 00f4 5C010000 		.word	.LC10
 900 00f8 68010000 		.word	.LC11
 901 00fc 80010000 		.word	.LC12
 902              		.cfi_endproc
 903              	.LFE73:
 904              		.size	modem_test, .-modem_test
 905              		.section	.text.extract_string,"ax",%progbits
 906              		.align	2
 907              		.global	extract_string
 908              		.thumb
 909              		.thumb_func
 910              		.type	extract_string, %function
 911              	extract_string:
 912              	.LFB74:
 258:modem.c       **** 
 259:modem.c       **** // Extract string from the UART
 260:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 913              		.loc 1 260 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 24
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 86B0     		sub	sp, sp, #24
 922              		.cfi_def_cfa_offset 32
 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 F860     		str	r0, [r7, #12]
 926 0008 B960     		str	r1, [r7, #8]
 927 000a 7A60     		str	r2, [r7, #4]
 928 000c 3B60     		str	r3, [r7]
 261:modem.c       ****     
 262:modem.c       ****         char *a, *b;
 263:modem.c       ****   
 264:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 265:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 23


 266:modem.c       ****         a = strstr(from,beginMarker);
 929              		.loc 1 266 0
 930 000e B968     		ldr	r1, [r7, #8]
 931 0010 F868     		ldr	r0, [r7, #12]
 932 0012 FFF7FEFF 		bl	strstr
 933 0016 7861     		str	r0, [r7, #20]
 267:modem.c       ****         if (a == NULL) {
 934              		.loc 1 267 0
 935 0018 7B69     		ldr	r3, [r7, #20]
 936 001a 002B     		cmp	r3, #0
 937 001c 01D1     		bne	.L56
 268:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 269:modem.c       ****             a = from;
 938              		.loc 1 269 0
 939 001e FB68     		ldr	r3, [r7, #12]
 940 0020 7B61     		str	r3, [r7, #20]
 941              	.L56:
 270:modem.c       ****         }
 271:modem.c       ****         // The strlen() function calculates the length of a given string.
 272:modem.c       ****         a += strlen(beginMarker);
 942              		.loc 1 272 0
 943 0022 B868     		ldr	r0, [r7, #8]
 944 0024 FFF7FEFF 		bl	strlen
 945 0028 0246     		mov	r2, r0
 946 002a 7B69     		ldr	r3, [r7, #20]
 947 002c 1344     		add	r3, r3, r2
 948 002e 7B61     		str	r3, [r7, #20]
 273:modem.c       ****         
 274:modem.c       ****         // - Find the end marking and offset by 1
 275:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 276:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 277:modem.c       ****         b = strstr(a,endMarker);
 949              		.loc 1 277 0
 950 0030 7968     		ldr	r1, [r7, #4]
 951 0032 7869     		ldr	r0, [r7, #20]
 952 0034 FFF7FEFF 		bl	strstr
 953 0038 3861     		str	r0, [r7, #16]
 278:modem.c       ****         if (b == NULL) {
 954              		.loc 1 278 0
 955 003a 3B69     		ldr	r3, [r7, #16]
 956 003c 002B     		cmp	r3, #0
 957 003e 06D1     		bne	.L57
 279:modem.c       ****             // Puts("Comma not found in uart_received_string");
 280:modem.c       ****             b=from+strlen(from);
 958              		.loc 1 280 0
 959 0040 F868     		ldr	r0, [r7, #12]
 960 0042 FFF7FEFF 		bl	strlen
 961 0046 0246     		mov	r2, r0
 962 0048 FB68     		ldr	r3, [r7, #12]
 963 004a 1344     		add	r3, r3, r2
 964 004c 3B61     		str	r3, [r7, #16]
 965              	.L57:
 281:modem.c       ****         }        
 282:modem.c       ****         
 283:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 284:modem.c       ****         strncpy(target,a,b-a);
 966              		.loc 1 284 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 24


 967 004e 3A69     		ldr	r2, [r7, #16]
 968 0050 7B69     		ldr	r3, [r7, #20]
 969 0052 D31A     		subs	r3, r2, r3
 970 0054 1A46     		mov	r2, r3
 971 0056 7969     		ldr	r1, [r7, #20]
 972 0058 3868     		ldr	r0, [r7]
 973 005a FFF7FEFF 		bl	strncpy
 285:modem.c       ****         target[b-a] = '\0';
 974              		.loc 1 285 0
 975 005e 3A69     		ldr	r2, [r7, #16]
 976 0060 7B69     		ldr	r3, [r7, #20]
 977 0062 D31A     		subs	r3, r2, r3
 978 0064 1A46     		mov	r2, r3
 979 0066 3B68     		ldr	r3, [r7]
 980 0068 1344     		add	r3, r3, r2
 981 006a 0022     		movs	r2, #0
 982 006c 1A70     		strb	r2, [r3]
 286:modem.c       ****         return 1u;
 983              		.loc 1 286 0
 984 006e 0123     		movs	r3, #1
 287:modem.c       ****         
 288:modem.c       **** }
 985              		.loc 1 288 0
 986 0070 1846     		mov	r0, r3
 987 0072 1837     		adds	r7, r7, #24
 988              		.cfi_def_cfa_offset 8
 989 0074 BD46     		mov	sp, r7
 990              		.cfi_def_cfa_register 13
 991              		@ sp needed
 992 0076 80BD     		pop	{r7, pc}
 993              		.cfi_endproc
 994              	.LFE74:
 995              		.size	extract_string, .-extract_string
 996              		.section	.rodata
 997              		.align	2
 998              	.LC13:
 999 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 999      20746F20 
 999      636F6E6E 
 999      65637420 
 999      746F206E 
 1000 01c3 00       		.align	2
 1001              	.LC14:
 1002 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1002      6D207469 
 1002      6D656420 
 1002      6F757420 
 1002      6F6E206E 
 1003 01e7 00       		.align	2
 1004              	.LC15:
 1005 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1005      69726564 
 1005      20495020 
 1005      61646472 
 1005      6573733A 
 1006              		.align	2
 1007              	.LC16:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 25


 1008 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1008      6D207469 
 1008      6D656420 
 1008      6F757420 
 1008      6F6E2049 
 1009              		.section	.text.modem_process_tasks,"ax",%progbits
 1010              		.align	2
 1011              		.global	modem_process_tasks
 1012              		.thumb
 1013              		.thumb_func
 1014              		.type	modem_process_tasks, %function
 1015              	modem_process_tasks:
 1016              	.LFB75:
 289:modem.c       **** 
 290:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 291:modem.c       **** uint8 modem_process_tasks(){
 1017              		.loc 1 291 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 8
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 292:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 293:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1029              		.loc 1 293 0
 1030 0006 464B     		ldr	r3, .L73
 1031 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1032 000a 012B     		cmp	r3, #1
 1033 000c 0BD1     		bne	.L60
 294:modem.c       ****         
 295:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1034              		.loc 1 295 0
 1035 000e FFF7FEFF 		bl	getTimeStamp
 1036 0012 0246     		mov	r2, r0
 1037 0014 434B     		ldr	r3, .L73+4
 1038 0016 1A60     		str	r2, [r3]
 296:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1039              		.loc 1 296 0
 1040 0018 FFF7FEFF 		bl	modem_configure_settings
 297:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1041              		.loc 1 297 0
 1042 001c 404B     		ldr	r3, .L73
 1043 001e 0222     		movs	r2, #2
 1044 0020 1A70     		strb	r2, [r3]
 298:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1045              		.loc 1 298 0
 1046 0022 0123     		movs	r3, #1
 1047 0024 77E0     		b	.L61
 1048              	.L60:
 299:modem.c       ****         
 300:modem.c       ****     }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 26


 301:modem.c       ****     // Else if modem state is "waiting for network" 
 302:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1049              		.loc 1 302 0
 1050 0026 3E4B     		ldr	r3, .L73
 1051 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1052 002a 022B     		cmp	r3, #2
 1053 002c 44D1     		bne	.L62
 1054              	.LBB7:
 303:modem.c       ****         
 304:modem.c       ****         // Check if modem has a good cell signal each second for up to 30 seconds
 305:modem.c       ****         for(uint8 i=0;i<30;i++){
 1055              		.loc 1 305 0
 1056 002e 0023     		movs	r3, #0
 1057 0030 FB71     		strb	r3, [r7, #7]
 1058 0032 10E0     		b	.L63
 1059              	.L66:
 306:modem.c       ****             // Get cell network stats
 307:modem.c       ****             get_cell_network_stats();
 1060              		.loc 1 307 0
 1061 0034 FFF7FEFF 		bl	get_cell_network_stats
 308:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 309:modem.c       ****             // Otherwise, keep checking rsrp
 310:modem.c       ****             if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1062              		.loc 1 310 0
 1063 0038 3B4B     		ldr	r3, .L73+8
 1064 003a 5B69     		ldr	r3, [r3, #20]
 1065 003c 1A2B     		cmp	r3, #26
 1066 003e 03DD     		ble	.L64
 1067              		.loc 1 310 0 is_stmt 0 discriminator 1
 1068 0040 394B     		ldr	r3, .L73+8
 1069 0042 5B69     		ldr	r3, [r3, #20]
 1070 0044 FF2B     		cmp	r3, #255
 1071 0046 0AD1     		bne	.L72
 1072              	.L64:
 311:modem.c       ****                 break;
 312:modem.c       ****             }
 313:modem.c       ****             // Delay for 1 second
 314:modem.c       ****             CyDelay(1000u);
 1073              		.loc 1 314 0 is_stmt 1 discriminator 2
 1074 0048 4FF47A70 		mov	r0, #1000
 1075 004c FFF7FEFF 		bl	CyDelay
 305:modem.c       ****             // Get cell network stats
 1076              		.loc 1 305 0 discriminator 2
 1077 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1078 0052 0133     		adds	r3, r3, #1
 1079 0054 FB71     		strb	r3, [r7, #7]
 1080              	.L63:
 305:modem.c       ****             // Get cell network stats
 1081              		.loc 1 305 0 is_stmt 0 discriminator 1
 1082 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1083 0058 1D2B     		cmp	r3, #29
 1084 005a EBD9     		bls	.L66
 1085 005c 00E0     		b	.L65
 1086              	.L72:
 311:modem.c       ****                 break;
 1087              		.loc 1 311 0 is_stmt 1
 1088 005e 00BF     		nop
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 27


 1089              	.L65:
 1090              	.LBE7:
 315:modem.c       ****         }
 316:modem.c       ****         
 317:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 318:modem.c       ****         if(is_connected_to_cell_network()){
 1091              		.loc 1 318 0
 1092 0060 FFF7FEFF 		bl	is_connected_to_cell_network
 1093 0064 0346     		mov	r3, r0
 1094 0066 002B     		cmp	r3, #0
 1095 0068 13D0     		beq	.L67
 319:modem.c       ****       
 320:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1096              		.loc 1 320 0
 1097 006a FFF7FEFF 		bl	getTimeStamp
 1098 006e 0246     		mov	r2, r0
 1099 0070 2C4B     		ldr	r3, .L73+4
 1100 0072 1B68     		ldr	r3, [r3]
 1101 0074 D31A     		subs	r3, r2, r3
 1102 0076 2C4A     		ldr	r2, .L73+8
 1103 0078 9361     		str	r3, [r2, #24]
 321:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1104              		.loc 1 321 0
 1105 007a 2B4B     		ldr	r3, .L73+8
 1106 007c 9B69     		ldr	r3, [r3, #24]
 1107 007e 1A46     		mov	r2, r3
 1108 0080 2A49     		ldr	r1, .L73+12
 1109 0082 0020     		movs	r0, #0
 1110 0084 FFF7FEFF 		bl	printNotif
 322:modem.c       ****                                             modem_stats.time_to_network_connect);
 323:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1111              		.loc 1 323 0
 1112 0088 FFF7FEFF 		bl	set_up_internet_connection
 324:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1113              		.loc 1 324 0
 1114 008c 244B     		ldr	r3, .L73
 1115 008e 0322     		movs	r2, #3
 1116 0090 1A70     		strb	r2, [r3]
 1117              	.L67:
 325:modem.c       ****         }
 326:modem.c       ****         
 327:modem.c       ****         //power off if we time out should only take ~30 secs to connect to network
 328:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1118              		.loc 1 328 0
 1119 0092 FFF7FEFF 		bl	getTimeStamp
 1120 0096 0246     		mov	r2, r0
 1121 0098 224B     		ldr	r3, .L73+4
 1122 009a 1B68     		ldr	r3, [r3]
 1123 009c D31A     		subs	r3, r2, r3
 1124 009e B42B     		cmp	r3, #180
 1125 00a0 08DD     		ble	.L68
 329:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1126              		.loc 1 329 0
 1127 00a2 1F4B     		ldr	r3, .L73
 1128 00a4 0022     		movs	r2, #0
 1129 00a6 1A70     		strb	r2, [r3]
 330:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 28


 1130              		.loc 1 330 0
 1131 00a8 FFF7FEFF 		bl	modem_power_down
 331:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1132              		.loc 1 331 0
 1133 00ac 2049     		ldr	r1, .L73+16
 1134 00ae 0220     		movs	r0, #2
 1135 00b0 FFF7FEFF 		bl	printNotif
 1136              	.L68:
 332:modem.c       ****             
 333:modem.c       ****         }
 334:modem.c       ****         return 0u;//ok to hand off to sleep
 1137              		.loc 1 334 0
 1138 00b4 0023     		movs	r3, #0
 1139 00b6 2EE0     		b	.L61
 1140              	.L62:
 335:modem.c       ****         
 336:modem.c       ****     // Else if modem state is "waiting for IP"
 337:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1141              		.loc 1 337 0
 1142 00b8 194B     		ldr	r3, .L73
 1143 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1144 00bc 032B     		cmp	r3, #3
 1145 00be 29D1     		bne	.L69
 338:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 339:modem.c       ****         if(is_connected_to_internet()){
 1146              		.loc 1 339 0
 1147 00c0 FFF7FEFF 		bl	is_connected_to_internet
 1148 00c4 0346     		mov	r3, r0
 1149 00c6 002B     		cmp	r3, #0
 1150 00c8 11D0     		beq	.L70
 340:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1151              		.loc 1 340 0
 1152 00ca 154B     		ldr	r3, .L73
 1153 00cc 0422     		movs	r2, #4
 1154 00ce 1A70     		strb	r2, [r3]
 341:modem.c       ****             // Save/print time to acquire IP address
 342:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1155              		.loc 1 342 0
 1156 00d0 FFF7FEFF 		bl	getTimeStamp
 1157 00d4 0246     		mov	r2, r0
 1158 00d6 134B     		ldr	r3, .L73+4
 1159 00d8 1B68     		ldr	r3, [r3]
 1160 00da D31A     		subs	r3, r2, r3
 1161 00dc 124A     		ldr	r2, .L73+8
 1162 00de D361     		str	r3, [r2, #28]
 343:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1163              		.loc 1 343 0
 1164 00e0 114B     		ldr	r3, .L73+8
 1165 00e2 DB69     		ldr	r3, [r3, #28]
 1166 00e4 1A46     		mov	r2, r3
 1167 00e6 1349     		ldr	r1, .L73+20
 1168 00e8 0020     		movs	r0, #0
 1169 00ea FFF7FEFF 		bl	printNotif
 1170              	.L70:
 344:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 345:modem.c       ****         }
 346:modem.c       ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 29


 347:modem.c       ****         // Power off if we times out should only take ~30 secs to connect to network
 348:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1171              		.loc 1 348 0
 1172 00ee FFF7FEFF 		bl	getTimeStamp
 1173 00f2 0246     		mov	r2, r0
 1174 00f4 0B4B     		ldr	r3, .L73+4
 1175 00f6 1B68     		ldr	r3, [r3]
 1176 00f8 D31A     		subs	r3, r2, r3
 1177 00fa E62B     		cmp	r3, #230
 1178 00fc 08DD     		ble	.L71
 349:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1179              		.loc 1 349 0
 1180 00fe 084B     		ldr	r3, .L73
 1181 0100 0022     		movs	r2, #0
 1182 0102 1A70     		strb	r2, [r3]
 350:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1183              		.loc 1 350 0
 1184 0104 FFF7FEFF 		bl	modem_power_down
 351:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1185              		.loc 1 351 0
 1186 0108 0B49     		ldr	r1, .L73+24
 1187 010a 0220     		movs	r0, #2
 1188 010c FFF7FEFF 		bl	printNotif
 1189              	.L71:
 352:modem.c       ****       
 353:modem.c       ****         }
 354:modem.c       ****         return 0u;//ok to hand off to sleep
 1190              		.loc 1 354 0
 1191 0110 0023     		movs	r3, #0
 1192 0112 00E0     		b	.L61
 1193              	.L69:
 355:modem.c       ****     }
 356:modem.c       ****     
 357:modem.c       ****     return 0u;
 1194              		.loc 1 357 0
 1195 0114 0023     		movs	r3, #0
 1196              	.L61:
 358:modem.c       ****     
 359:modem.c       **** }
 1197              		.loc 1 359 0
 1198 0116 1846     		mov	r0, r3
 1199 0118 0837     		adds	r7, r7, #8
 1200              		.cfi_def_cfa_offset 8
 1201 011a BD46     		mov	sp, r7
 1202              		.cfi_def_cfa_register 13
 1203              		@ sp needed
 1204 011c 80BD     		pop	{r7, pc}
 1205              	.L74:
 1206 011e 00BF     		.align	2
 1207              	.L73:
 1208 0120 00000000 		.word	modem_state
 1209 0124 00000000 		.word	modem_start_time_stamp
 1210 0128 00000000 		.word	modem_stats
 1211 012c 9C010000 		.word	.LC13
 1212 0130 C4010000 		.word	.LC14
 1213 0134 E8010000 		.word	.LC15
 1214 0138 08020000 		.word	.LC16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 30


 1215              		.cfi_endproc
 1216              	.LFE75:
 1217              		.size	modem_process_tasks, .-modem_process_tasks
 1218              		.section	.rodata
 1219 022f 00       		.align	2
 1220              	.LC17:
 1221 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1221      6B696E67 
 1221      2041542B 
 1221      43524547 
 1221      3F00
 1222 0242 0000     		.align	2
 1223              	.LC18:
 1224 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1224      5245473F 
 1224      0D00
 1225 024e 0000     		.align	2
 1226              	.LC19:
 1227 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1227      61637469 
 1227      6E672073 
 1227      7472696E 
 1227      67204154 
 1228 026b 00       		.align	2
 1229              	.LC20:
 1230 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1230      5F726563 
 1230      65697665 
 1230      645F7374 
 1230      72696E67 
 1231 0285 000000   		.align	2
 1232              	.LC21:
 1233 0288 0D00     		.ascii	"\015\000"
 1234 028a 0000     		.align	2
 1235              	.LC22:
 1236 028c 3A2000   		.ascii	": \000"
 1237 028f 00       		.align	2
 1238              	.LC23:
 1239 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1239      73746572 
 1239      65642074 
 1239      6F206E65 
 1239      74776F72 
 1240              		.align	2
 1241              	.LC24:
 1242 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1242      20657874 
 1242      72616369 
 1242      6E672073 
 1242      7472696E 
 1243 02cf 00       		.align	2
 1244              	.LC25:
 1245 02d0 302C3100 		.ascii	"0,1\000"
 1246              		.align	2
 1247              	.LC26:
 1248 02d4 302C3500 		.ascii	"0,5\000"
 1249              		.section	.text.is_connected_to_cell_network,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 31


 1250              		.align	2
 1251              		.global	is_connected_to_cell_network
 1252              		.thumb
 1253              		.thumb_func
 1254              		.type	is_connected_to_cell_network, %function
 1255              	is_connected_to_cell_network:
 1256              	.LFB76:
 360:modem.c       **** 
 361:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 362:modem.c       **** uint8 is_connected_to_cell_network(){
 1257              		.loc 1 362 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 16
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261 0000 80B5     		push	{r7, lr}
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 7, -8
 1264              		.cfi_offset 14, -4
 1265 0002 84B0     		sub	sp, sp, #16
 1266              		.cfi_def_cfa_offset 24
 1267 0004 00AF     		add	r7, sp, #0
 1268              		.cfi_def_cfa_register 7
 363:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 364:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1269              		.loc 1 364 0
 1270 0006 2049     		ldr	r1, .L80
 1271 0008 0020     		movs	r0, #0
 1272 000a FFF7FEFF 		bl	printNotif
 365:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 366:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1273              		.loc 1 366 0
 1274 000e 4FF4FA62 		mov	r2, #2000
 1275 0012 1E49     		ldr	r1, .L80+4
 1276 0014 1E48     		ldr	r0, .L80+8
 1277 0016 FFF7FEFF 		bl	at_write_command
 1278 001a 0346     		mov	r3, r0
 1279 001c FB73     		strb	r3, [r7, #15]
 367:modem.c       ****     
 368:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1280              		.loc 1 368 0
 1281 001e 1D49     		ldr	r1, .L80+12
 1282 0020 0020     		movs	r0, #0
 1283 0022 FFF7FEFF 		bl	printNotif
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1284              		.loc 1 369 0
 1285 0026 1C4A     		ldr	r2, .L80+16
 1286 0028 1C49     		ldr	r1, .L80+20
 1287 002a 0020     		movs	r0, #0
 1288 002c FFF7FEFF 		bl	printNotif
 370:modem.c       ****     
 371:modem.c       ****     // If the modem has a status
 372:modem.c       ****     if(status){
 1289              		.loc 1 372 0
 1290 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1291 0032 002B     		cmp	r3, #0
 1292 0034 23D0     		beq	.L76
 1293              	.LBB8:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 32


 373:modem.c       ****         // Create a character array of length 10 called creg
 374:modem.c       ****         char creg[10];
 375:modem.c       ****         creg[0] = '\0';
 1294              		.loc 1 375 0
 1295 0036 0023     		movs	r3, #0
 1296 0038 3B71     		strb	r3, [r7, #4]
 376:modem.c       ****         // Extract string from the UART
 377:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1297              		.loc 1 377 0
 1298 003a 3B1D     		adds	r3, r7, #4
 1299 003c 184A     		ldr	r2, .L80+24
 1300 003e 1949     		ldr	r1, .L80+28
 1301 0040 1548     		ldr	r0, .L80+16
 1302 0042 FFF7FEFF 		bl	extract_string
 378:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1303              		.loc 1 378 0
 1304 0046 3B1D     		adds	r3, r7, #4
 1305 0048 1A46     		mov	r2, r3
 1306 004a 1749     		ldr	r1, .L80+32
 1307 004c 0020     		movs	r0, #0
 1308 004e FFF7FEFF 		bl	printNotif
 379:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1309              		.loc 1 379 0
 1310 0052 1649     		ldr	r1, .L80+36
 1311 0054 0020     		movs	r0, #0
 1312 0056 FFF7FEFF 		bl	printNotif
 380:modem.c       ****     
 381:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 382:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1313              		.loc 1 382 0
 1314 005a 3B1D     		adds	r3, r7, #4
 1315 005c 1449     		ldr	r1, .L80+40
 1316 005e 1846     		mov	r0, r3
 1317 0060 FFF7FEFF 		bl	strstr
 1318 0064 0346     		mov	r3, r0
 1319 0066 002B     		cmp	r3, #0
 1320 0068 07D1     		bne	.L77
 1321              		.loc 1 382 0 is_stmt 0 discriminator 1
 1322 006a 3B1D     		adds	r3, r7, #4
 1323 006c 1149     		ldr	r1, .L80+44
 1324 006e 1846     		mov	r0, r3
 1325 0070 FFF7FEFF 		bl	strstr
 1326 0074 0346     		mov	r3, r0
 1327 0076 002B     		cmp	r3, #0
 1328 0078 01D0     		beq	.L76
 1329              	.L77:
 383:modem.c       ****             return 1u;
 1330              		.loc 1 383 0 is_stmt 1
 1331 007a 0123     		movs	r3, #1
 1332 007c 00E0     		b	.L79
 1333              	.L76:
 1334              	.LBE8:
 384:modem.c       ****         }
 385:modem.c       ****     }
 386:modem.c       ****     // If the modem doesn't have a status, return 0u
 387:modem.c       ****     return 0u;
 1335              		.loc 1 387 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 33


 1336 007e 0023     		movs	r3, #0
 1337              	.L79:
 388:modem.c       ****         
 389:modem.c       **** }
 1338              		.loc 1 389 0
 1339 0080 1846     		mov	r0, r3
 1340 0082 1037     		adds	r7, r7, #16
 1341              		.cfi_def_cfa_offset 8
 1342 0084 BD46     		mov	sp, r7
 1343              		.cfi_def_cfa_register 13
 1344              		@ sp needed
 1345 0086 80BD     		pop	{r7, pc}
 1346              	.L81:
 1347              		.align	2
 1348              	.L80:
 1349 0088 30020000 		.word	.LC17
 1350 008c 00000000 		.word	.LC0
 1351 0090 44020000 		.word	.LC18
 1352 0094 50020000 		.word	.LC19
 1353 0098 00000000 		.word	uart_received_string
 1354 009c 6C020000 		.word	.LC20
 1355 00a0 88020000 		.word	.LC21
 1356 00a4 8C020000 		.word	.LC22
 1357 00a8 90020000 		.word	.LC23
 1358 00ac B0020000 		.word	.LC24
 1359 00b0 D0020000 		.word	.LC25
 1360 00b4 D4020000 		.word	.LC26
 1361              		.cfi_endproc
 1362              	.LFE76:
 1363              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1364              		.section	.rodata
 1365              		.align	2
 1366              	.LC27:
 1367 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1367      47414354 
 1367      3D312C31 
 1367      0D0A00
 1368              		.section	.text.set_up_internet_connection,"ax",%progbits
 1369              		.align	2
 1370              		.global	set_up_internet_connection
 1371              		.thumb
 1372              		.thumb_func
 1373              		.type	set_up_internet_connection, %function
 1374              	set_up_internet_connection:
 1375              	.LFB77:
 390:modem.c       **** 
 391:modem.c       **** // Connect the modem to the internet
 392:modem.c       **** void set_up_internet_connection(){
 1376              		.loc 1 392 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 1, uses_anonymous_args = 0
 1380 0000 80B5     		push	{r7, lr}
 1381              		.cfi_def_cfa_offset 8
 1382              		.cfi_offset 7, -8
 1383              		.cfi_offset 14, -4
 1384 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 34


 1385              		.cfi_def_cfa_register 7
 393:modem.c       ****     
 394:modem.c       ****     //port 3
 395:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 396:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 397:modem.c       ****     
 398:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 399:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 400:modem.c       ****     // <cid>,<stat>
 401:modem.c       ****    
 402:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 403:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1386              		.loc 1 403 0
 1387 0004 4FF47A72 		mov	r2, #1000
 1388 0008 0249     		ldr	r1, .L83
 1389 000a 0348     		ldr	r0, .L83+4
 1390 000c FFF7FEFF 		bl	at_write_command
 404:modem.c       ****     
 405:modem.c       **** }
 1391              		.loc 1 405 0
 1392 0010 00BF     		nop
 1393 0012 80BD     		pop	{r7, pc}
 1394              	.L84:
 1395              		.align	2
 1396              	.L83:
 1397 0014 00000000 		.word	.LC0
 1398 0018 D8020000 		.word	.LC27
 1399              		.cfi_endproc
 1400              	.LFE77:
 1401              		.size	set_up_internet_connection, .-set_up_internet_connection
 1402              		.section	.rodata
 1403 02e7 00       		.align	2
 1404              	.LC28:
 1405 02e8 312C3100 		.ascii	"1,1\000"
 1406              		.align	2
 1407              	.LC29:
 1408 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1408      47414354 
 1408      3F0D00
 1409              		.section	.text.is_connected_to_internet,"ax",%progbits
 1410              		.align	2
 1411              		.global	is_connected_to_internet
 1412              		.thumb
 1413              		.thumb_func
 1414              		.type	is_connected_to_internet, %function
 1415              	is_connected_to_internet:
 1416              	.LFB78:
 406:modem.c       **** 
 407:modem.c       **** // Checks if the modem is connected to the internet
 408:modem.c       **** uint8 is_connected_to_internet(){
 1417              		.loc 1 408 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 1, uses_anonymous_args = 0
 1421 0000 80B5     		push	{r7, lr}
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 35


 1424              		.cfi_offset 14, -4
 1425 0002 00AF     		add	r7, sp, #0
 1426              		.cfi_def_cfa_register 7
 409:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 410:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 411:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 412:modem.c       ****     // Check for 3,1 if Verizon 
 413:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1427              		.loc 1 413 0
 1428 0004 4FF4FA62 		mov	r2, #2000
 1429 0008 0549     		ldr	r1, .L88
 1430 000a 0648     		ldr	r0, .L88+4
 1431 000c FFF7FEFF 		bl	at_write_command
 1432 0010 0346     		mov	r3, r0
 1433 0012 002B     		cmp	r3, #0
 1434 0014 01D0     		beq	.L86
 414:modem.c       ****         return 1u;
 1435              		.loc 1 414 0
 1436 0016 0123     		movs	r3, #1
 1437 0018 00E0     		b	.L87
 1438              	.L86:
 415:modem.c       ****     }
 416:modem.c       ****     return 0u;  
 1439              		.loc 1 416 0
 1440 001a 0023     		movs	r3, #0
 1441              	.L87:
 417:modem.c       **** }
 1442              		.loc 1 417 0
 1443 001c 1846     		mov	r0, r3
 1444 001e 80BD     		pop	{r7, pc}
 1445              	.L89:
 1446              		.align	2
 1447              	.L88:
 1448 0020 E8020000 		.word	.LC28
 1449 0024 EC020000 		.word	.LC29
 1450              		.cfi_endproc
 1451              	.LFE78:
 1452              		.size	is_connected_to_internet, .-is_connected_to_internet
 1453              		.section	.rodata
 1454 02f7 00       		.align	2
 1455              	.LC30:
 1456 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1456      4553510D 
 1456      00
 1457 0301 000000   		.align	2
 1458              	.LC31:
 1459 0304 0D0A2B43 		.ascii	"\015\012+CESQ: %d,%d,%d,%d,%d,%d%*s\000"
 1459      4553513A 
 1459      2025642C 
 1459      25642C25 
 1459      642C2564 
 1460              		.section	.text.get_cell_network_stats,"ax",%progbits
 1461              		.align	2
 1462              		.global	get_cell_network_stats
 1463              		.thumb
 1464              		.thumb_func
 1465              		.type	get_cell_network_stats, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 36


 1466              	get_cell_network_stats:
 1467              	.LFB79:
 418:modem.c       **** 
 419:modem.c       **** void get_cell_network_stats(){
 1468              		.loc 1 419 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 8
 1471              		@ frame_needed = 1, uses_anonymous_args = 0
 1472 0000 80B5     		push	{r7, lr}
 1473              		.cfi_def_cfa_offset 8
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 86B0     		sub	sp, sp, #24
 1477              		.cfi_def_cfa_offset 32
 1478 0004 04AF     		add	r7, sp, #16
 1479              		.cfi_def_cfa 7, 16
 420:modem.c       ****     // Initialize values
 421:modem.c       ****     modem_stats.ber = 255;
 1480              		.loc 1 421 0
 1481 0006 154B     		ldr	r3, .L91
 1482 0008 FF22     		movs	r2, #255
 1483 000a 5A60     		str	r2, [r3, #4]
 422:modem.c       ****     modem_stats.ecno = 255;
 1484              		.loc 1 422 0
 1485 000c 134B     		ldr	r3, .L91
 1486 000e FF22     		movs	r2, #255
 1487 0010 DA60     		str	r2, [r3, #12]
 423:modem.c       ****     modem_stats.rscp = 255;
 1488              		.loc 1 423 0
 1489 0012 124B     		ldr	r3, .L91
 1490 0014 FF22     		movs	r2, #255
 1491 0016 9A60     		str	r2, [r3, #8]
 424:modem.c       ****     modem_stats.rsrp = 255;
 1492              		.loc 1 424 0
 1493 0018 104B     		ldr	r3, .L91
 1494 001a FF22     		movs	r2, #255
 1495 001c 5A61     		str	r2, [r3, #20]
 425:modem.c       ****     modem_stats.rsrq = 255;
 1496              		.loc 1 425 0
 1497 001e 0F4B     		ldr	r3, .L91
 1498 0020 FF22     		movs	r2, #255
 1499 0022 1A61     		str	r2, [r3, #16]
 426:modem.c       ****     modem_stats.rxlev = 255;
 1500              		.loc 1 426 0
 1501 0024 0D4B     		ldr	r3, .L91
 1502 0026 FF22     		movs	r2, #255
 1503 0028 1A60     		str	r2, [r3]
 427:modem.c       **** 
 428:modem.c       ****     //for(uint8 attempts =0; attempts <10; attempts++){
 429:modem.c       ****     at_write_command("AT+CESQ\r", "OK", DEFAULT_AT_TIMEOUT);
 1504              		.loc 1 429 0
 1505 002a 4FF4FA62 		mov	r2, #2000
 1506 002e 0C49     		ldr	r1, .L91+4
 1507 0030 0C48     		ldr	r0, .L91+8
 1508 0032 FFF7FEFF 		bl	at_write_command
 430:modem.c       ****     //CESQ: <rxlev>,<ber>,<rscp>,<ecno>,<rsrq>,<rsrp>
 431:modem.c       **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 37


 432:modem.c       ****     int match = sscanf(uart_received_string,"\r\n+CESQ: %d,%d,%d,%d,%d,%d%*s",
 1509              		.loc 1 432 0
 1510 0036 0C4B     		ldr	r3, .L91+12
 1511 0038 0393     		str	r3, [sp, #12]
 1512 003a 0C4B     		ldr	r3, .L91+16
 1513 003c 0293     		str	r3, [sp, #8]
 1514 003e 0C4B     		ldr	r3, .L91+20
 1515 0040 0193     		str	r3, [sp, #4]
 1516 0042 0C4B     		ldr	r3, .L91+24
 1517 0044 0093     		str	r3, [sp]
 1518 0046 0C4B     		ldr	r3, .L91+28
 1519 0048 044A     		ldr	r2, .L91
 1520 004a 0C49     		ldr	r1, .L91+32
 1521 004c 0C48     		ldr	r0, .L91+36
 1522 004e FFF7FEFF 		bl	sscanf
 1523 0052 7860     		str	r0, [r7, #4]
 433:modem.c       ****         &modem_stats.rxlev,
 434:modem.c       ****         &modem_stats.ber,
 435:modem.c       ****         &modem_stats.rscp,
 436:modem.c       ****         &modem_stats.ecno,
 437:modem.c       ****         &modem_stats.rsrq,
 438:modem.c       ****         &modem_stats.rsrp);
 439:modem.c       **** 
 440:modem.c       ****         //check to see if we’re getting a good received signal strength
 441:modem.c       ****         //if(modem_stats.rsrp != 255 && modem_stats.rsrp > 26){// || modem_stats.rxlev !=0){
 442:modem.c       ****         //    break;
 443:modem.c       ****         //}
 444:modem.c       ****         // Delay one second
 445:modem.c       ****         //CyDelay(1000u);
 446:modem.c       ****     //}
 447:modem.c       **** }
 1524              		.loc 1 447 0
 1525 0054 00BF     		nop
 1526 0056 0837     		adds	r7, r7, #8
 1527              		.cfi_def_cfa_offset 8
 1528 0058 BD46     		mov	sp, r7
 1529              		.cfi_def_cfa_register 13
 1530              		@ sp needed
 1531 005a 80BD     		pop	{r7, pc}
 1532              	.L92:
 1533              		.align	2
 1534              	.L91:
 1535 005c 00000000 		.word	modem_stats
 1536 0060 00000000 		.word	.LC0
 1537 0064 F8020000 		.word	.LC30
 1538 0068 14000000 		.word	modem_stats+20
 1539 006c 10000000 		.word	modem_stats+16
 1540 0070 0C000000 		.word	modem_stats+12
 1541 0074 08000000 		.word	modem_stats+8
 1542 0078 04000000 		.word	modem_stats+4
 1543 007c 04030000 		.word	.LC31
 1544 0080 00000000 		.word	uart_received_string
 1545              		.cfi_endproc
 1546              	.LFE79:
 1547              		.size	get_cell_network_stats, .-get_cell_network_stats
 1548              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1549              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 38


 1550              		.global	updatable_parameters_initialize
 1551              		.thumb
 1552              		.thumb_func
 1553              		.type	updatable_parameters_initialize, %function
 1554              	updatable_parameters_initialize:
 1555              	.LFB80:
 448:modem.c       **** 
 449:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 450:modem.c       **** void updatable_parameters_initialize(){
 1556              		.loc 1 450 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 0
 1559              		@ frame_needed = 1, uses_anonymous_args = 0
 1560              		@ link register save eliminated.
 1561 0000 80B4     		push	{r7}
 1562              		.cfi_def_cfa_offset 4
 1563              		.cfi_offset 7, -4
 1564 0002 00AF     		add	r7, sp, #0
 1565              		.cfi_def_cfa_register 7
 451:modem.c       ****     updatable_parameters.node_type = NODE_TYPE_DEPTH;
 1566              		.loc 1 451 0
 1567 0004 094B     		ldr	r3, .L94
 1568 0006 0022     		movs	r2, #0
 1569 0008 1A70     		strb	r2, [r3]
 452:modem.c       ****     updatable_parameters.sim_type = SIM_TYPE_STANDARD;
 1570              		.loc 1 452 0
 1571 000a 084B     		ldr	r3, .L94
 1572 000c 0022     		movs	r2, #0
 1573 000e 5A70     		strb	r2, [r3, #1]
 453:modem.c       ****     updatable_parameters.measure_time = 10u;
 1574              		.loc 1 453 0
 1575 0010 064B     		ldr	r3, .L94
 1576 0012 0A22     		movs	r2, #10
 1577 0014 9A70     		strb	r2, [r3, #2]
 454:modem.c       ****     updatable_parameters.sync_time = 60u;
 1578              		.loc 1 454 0
 1579 0016 054B     		ldr	r3, .L94
 1580 0018 3C22     		movs	r2, #60
 1581 001a DA70     		strb	r2, [r3, #3]
 455:modem.c       ****     updatable_parameters.debug_level = 1u;
 1582              		.loc 1 455 0
 1583 001c 034B     		ldr	r3, .L94
 1584 001e 0122     		movs	r2, #1
 1585 0020 1A71     		strb	r2, [r3, #4]
 456:modem.c       **** }
 1586              		.loc 1 456 0
 1587 0022 00BF     		nop
 1588 0024 BD46     		mov	sp, r7
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 0026 80BC     		pop	{r7}
 1592              		.cfi_restore 7
 1593              		.cfi_def_cfa_offset 0
 1594 0028 7047     		bx	lr
 1595              	.L95:
 1596 002a 00BF     		.align	2
 1597              	.L94:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 39


 1598 002c 00000000 		.word	updatable_parameters
 1599              		.cfi_endproc
 1600              	.LFE80:
 1601              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1602              		.section	.rodata
 1603 0322 0000     		.align	2
 1604              	.LC32:
 1605 0324 4E6F6465 		.ascii	"Node_Type: \000"
 1605      5F547970 
 1605      653A2000 
 1606              		.align	2
 1607              	.LC33:
 1608 0330 53494D5F 		.ascii	"SIM_Type: \000"
 1608      54797065 
 1608      3A2000
 1609 033b 00       		.align	2
 1610              	.LC34:
 1611 033c 53616D70 		.ascii	"Sample_Freq: \000"
 1611      6C655F46 
 1611      7265713A 
 1611      2000
 1612 034a 0000     		.align	2
 1613              	.LC35:
 1614 034c 5265706F 		.ascii	"Report_Freq: \000"
 1614      72745F46 
 1614      7265713A 
 1614      2000
 1615 035a 0000     		.align	2
 1616              	.LC36:
 1617 035c 44656275 		.ascii	"Debug_Freq: \000"
 1617      675F4672 
 1617      65713A20 
 1617      00
 1618 0369 000000   		.align	2
 1619              	.LC37:
 1620 036c 256400   		.ascii	"%d\000"
 1621 036f 00       		.align	2
 1622              	.LC38:
 1623 0370 4E6F6465 		.ascii	"Node type changed to: %d\015\012\000"
 1623      20747970 
 1623      65206368 
 1623      616E6765 
 1623      6420746F 
 1624 038b 00       		.align	2
 1625              	.LC39:
 1626 038c 436F756C 		.ascii	"Could not change node type.\000"
 1626      64206E6F 
 1626      74206368 
 1626      616E6765 
 1626      206E6F64 
 1627              		.align	2
 1628              	.LC40:
 1629 03a8 53494D20 		.ascii	"SIM type changed to: %d\015\012\000"
 1629      74797065 
 1629      20636861 
 1629      6E676564 
 1629      20746F3A 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 40


 1630 03c2 0000     		.align	2
 1631              	.LC41:
 1632 03c4 436F756C 		.ascii	"Could not change SIM type.\000"
 1632      64206E6F 
 1632      74206368 
 1632      616E6765 
 1632      2053494D 
 1633 03df 00       		.align	2
 1634              	.LC42:
 1635 03e0 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1635      6C696E67 
 1635      20667265 
 1635      7175656E 
 1635      63792063 
 1636              		.align	2
 1637              	.LC43:
 1638 0404 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1638      64206E6F 
 1638      74207061 
 1638      72736520 
 1638      6E657720 
 1639 0432 0000     		.align	2
 1640              	.LC44:
 1641 0434 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1641      7274696E 
 1641      67206672 
 1641      65717565 
 1641      6E637920 
 1642 0459 000000   		.align	2
 1643              	.LC45:
 1644 045c 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
 1644      64206E6F 
 1644      74207061 
 1644      72736520 
 1644      6E657720 
 1645 048b 00       		.align	2
 1646              	.LC46:
 1647 048c 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1647      67207072 
 1647      696E7469 
 1647      6E672066 
 1647      72657175 
 1648 04b6 0000     		.align	2
 1649              	.LC47:
 1650 04b8 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1650      64206E6F 
 1650      74207061 
 1650      72736520 
 1650      6E657720 
 1651              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1652              		.align	2
 1653              		.global	get_updated_parameters_from_malcom
 1654              		.thumb
 1655              		.thumb_func
 1656              		.type	get_updated_parameters_from_malcom, %function
 1657              	get_updated_parameters_from_malcom:
 1658              	.LFB81:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 41


 457:modem.c       **** 
 458:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 459:modem.c       **** void get_updated_parameters_from_malcom(){
 1659              		.loc 1 459 0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 88
 1662              		@ frame_needed = 1, uses_anonymous_args = 0
 1663 0000 90B5     		push	{r4, r7, lr}
 1664              		.cfi_def_cfa_offset 12
 1665              		.cfi_offset 4, -12
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 97B0     		sub	sp, sp, #92
 1669              		.cfi_def_cfa_offset 104
 1670 0004 00AF     		add	r7, sp, #0
 1671              		.cfi_def_cfa_register 7
 460:modem.c       ****     
 461:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 462:modem.c       ****     char s_node_type[10];
 463:modem.c       ****     char s_sim_type[10];
 464:modem.c       ****     char s_sample_freq[10];
 465:modem.c       ****     char s_report_freq[10];
 466:modem.c       ****     char s_debug_freq[10];
 467:modem.c       ****     
 468:modem.c       ****     s_node_type[0] = '\0';
 1672              		.loc 1 468 0
 1673 0006 0023     		movs	r3, #0
 1674 0008 87F84C30 		strb	r3, [r7, #76]
 469:modem.c       ****     s_sim_type[0] = '\0';
 1675              		.loc 1 469 0
 1676 000c 0023     		movs	r3, #0
 1677 000e 87F84030 		strb	r3, [r7, #64]
 470:modem.c       ****     s_sample_freq[0] = '\0';
 1678              		.loc 1 470 0
 1679 0012 0023     		movs	r3, #0
 1680 0014 87F83430 		strb	r3, [r7, #52]
 471:modem.c       ****     s_report_freq[0] = '\0';
 1681              		.loc 1 471 0
 1682 0018 0023     		movs	r3, #0
 1683 001a 87F82830 		strb	r3, [r7, #40]
 472:modem.c       ****     s_debug_freq[0] = '\0';
 1684              		.loc 1 472 0
 1685 001e 0023     		movs	r3, #0
 1686 0020 3B77     		strb	r3, [r7, #28]
 473:modem.c       ****     
 474:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 475:modem.c       ****     extract_string(uart_received_string,"Node_Type: ","\r",s_node_type);
 1687              		.loc 1 475 0
 1688 0022 07F14C03 		add	r3, r7, #76
 1689 0026 644A     		ldr	r2, .L108
 1690 0028 6449     		ldr	r1, .L108+4
 1691 002a 6548     		ldr	r0, .L108+8
 1692 002c FFF7FEFF 		bl	extract_string
 476:modem.c       ****     extract_string(uart_received_string,"SIM_Type: ","\r",s_sim_type);
 1693              		.loc 1 476 0
 1694 0030 07F14003 		add	r3, r7, #64
 1695 0034 604A     		ldr	r2, .L108
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 42


 1696 0036 6349     		ldr	r1, .L108+12
 1697 0038 6148     		ldr	r0, .L108+8
 1698 003a FFF7FEFF 		bl	extract_string
 477:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1699              		.loc 1 477 0
 1700 003e 07F13403 		add	r3, r7, #52
 1701 0042 5D4A     		ldr	r2, .L108
 1702 0044 6049     		ldr	r1, .L108+16
 1703 0046 5E48     		ldr	r0, .L108+8
 1704 0048 FFF7FEFF 		bl	extract_string
 478:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
 1705              		.loc 1 478 0
 1706 004c 07F12803 		add	r3, r7, #40
 1707 0050 594A     		ldr	r2, .L108
 1708 0052 5E49     		ldr	r1, .L108+20
 1709 0054 5A48     		ldr	r0, .L108+8
 1710 0056 FFF7FEFF 		bl	extract_string
 479:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1711              		.loc 1 479 0
 1712 005a 07F11C03 		add	r3, r7, #28
 1713 005e 564A     		ldr	r2, .L108
 1714 0060 5B49     		ldr	r1, .L108+24
 1715 0062 5748     		ldr	r0, .L108+8
 1716 0064 FFF7FEFF 		bl	extract_string
 480:modem.c       ****     
 481:modem.c       ****     // Create variables for what is sent back from the server
 482:modem.c       ****     int node_type, sim_type, sample_freq, report_freq, debug_freq;
 483:modem.c       ****     
 484:modem.c       ****     // Scan character arrays and save values 
 485:modem.c       ****     if(sscanf(s_node_type, "%d", &node_type)==1){
 1717              		.loc 1 485 0
 1718 0068 07F11802 		add	r2, r7, #24
 1719 006c 07F14C03 		add	r3, r7, #76
 1720 0070 5849     		ldr	r1, .L108+28
 1721 0072 1846     		mov	r0, r3
 1722 0074 FFF7FEFF 		bl	sscanf
 1723 0078 0346     		mov	r3, r0
 1724 007a 012B     		cmp	r3, #1
 1725 007c 0AD1     		bne	.L97
 486:modem.c       ****         updatable_parameters.node_type = node_type;
 1726              		.loc 1 486 0
 1727 007e BB69     		ldr	r3, [r7, #24]
 1728 0080 DAB2     		uxtb	r2, r3
 1729 0082 554B     		ldr	r3, .L108+32
 1730 0084 1A70     		strb	r2, [r3]
 487:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Node type changed to: %d\r\n", node_type);
 1731              		.loc 1 487 0
 1732 0086 BB69     		ldr	r3, [r7, #24]
 1733 0088 1A46     		mov	r2, r3
 1734 008a 5449     		ldr	r1, .L108+36
 1735 008c 0020     		movs	r0, #0
 1736 008e FFF7FEFF 		bl	printNotif
 1737 0092 03E0     		b	.L98
 1738              	.L97:
 488:modem.c       ****     }else{
 489:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change node type.");
 1739              		.loc 1 489 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 43


 1740 0094 5249     		ldr	r1, .L108+40
 1741 0096 0220     		movs	r0, #2
 1742 0098 FFF7FEFF 		bl	printNotif
 1743              	.L98:
 490:modem.c       ****     }
 491:modem.c       ****     if(sscanf(s_sim_type, "%d", &sim_type)==1){
 1744              		.loc 1 491 0
 1745 009c 07F11402 		add	r2, r7, #20
 1746 00a0 07F14003 		add	r3, r7, #64
 1747 00a4 4B49     		ldr	r1, .L108+28
 1748 00a6 1846     		mov	r0, r3
 1749 00a8 FFF7FEFF 		bl	sscanf
 1750 00ac 0346     		mov	r3, r0
 1751 00ae 012B     		cmp	r3, #1
 1752 00b0 0ED1     		bne	.L99
 492:modem.c       ****         updatable_parameters.sim_type = sim_type;
 1753              		.loc 1 492 0
 1754 00b2 7B69     		ldr	r3, [r7, #20]
 1755 00b4 002B     		cmp	r3, #0
 1756 00b6 14BF     		ite	ne
 1757 00b8 0123     		movne	r3, #1
 1758 00ba 0023     		moveq	r3, #0
 1759 00bc DAB2     		uxtb	r2, r3
 1760 00be 464B     		ldr	r3, .L108+32
 1761 00c0 5A70     		strb	r2, [r3, #1]
 493:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "SIM type changed to: %d\r\n", sim_type);
 1762              		.loc 1 493 0
 1763 00c2 7B69     		ldr	r3, [r7, #20]
 1764 00c4 1A46     		mov	r2, r3
 1765 00c6 4749     		ldr	r1, .L108+44
 1766 00c8 0020     		movs	r0, #0
 1767 00ca FFF7FEFF 		bl	printNotif
 1768 00ce 03E0     		b	.L100
 1769              	.L99:
 494:modem.c       ****     }else{
 495:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change SIM type.");
 1770              		.loc 1 495 0
 1771 00d0 4549     		ldr	r1, .L108+48
 1772 00d2 0220     		movs	r0, #2
 1773 00d4 FFF7FEFF 		bl	printNotif
 1774              	.L100:
 496:modem.c       ****     }
 497:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 1775              		.loc 1 497 0
 1776 00d8 07F11002 		add	r2, r7, #16
 1777 00dc 07F13403 		add	r3, r7, #52
 1778 00e0 3C49     		ldr	r1, .L108+28
 1779 00e2 1846     		mov	r0, r3
 1780 00e4 FFF7FEFF 		bl	sscanf
 1781 00e8 0346     		mov	r3, r0
 1782 00ea 012B     		cmp	r3, #1
 1783 00ec 19D1     		bne	.L101
 498:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 1784              		.loc 1 498 0
 1785 00ee 3B69     		ldr	r3, [r7, #16]
 1786 00f0 DAB2     		uxtb	r2, r3
 1787 00f2 394B     		ldr	r3, .L108+32
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 44


 1788 00f4 9A70     		strb	r2, [r3, #2]
 499:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 500:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 1789              		.loc 1 500 0
 1790 00f6 384B     		ldr	r3, .L108+32
 1791 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1792 00fa 99B2     		uxth	r1, r3
 1793 00fc 3B4C     		ldr	r4, .L108+52
 1794 00fe 3846     		mov	r0, r7
 1795 0100 0723     		movs	r3, #7
 1796 0102 0122     		movs	r2, #1
 1797 0104 FFF7FEFF 		bl	CreateAlarm
 1798 0108 2246     		mov	r2, r4
 1799 010a 3B46     		mov	r3, r7
 1800 010c 1968     		ldr	r1, [r3]	@ unaligned
 1801 010e 1160     		str	r1, [r2]	@ unaligned
 1802 0110 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1803 0112 9380     		strh	r3, [r2, #4]	@ unaligned
 501:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 1804              		.loc 1 501 0
 1805 0114 3B69     		ldr	r3, [r7, #16]
 1806 0116 1A46     		mov	r2, r3
 1807 0118 3549     		ldr	r1, .L108+56
 1808 011a 0020     		movs	r0, #0
 1809 011c FFF7FEFF 		bl	printNotif
 1810 0120 03E0     		b	.L102
 1811              	.L101:
 502:modem.c       ****     }else{
 503:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 1812              		.loc 1 503 0
 1813 0122 3449     		ldr	r1, .L108+60
 1814 0124 0220     		movs	r0, #2
 1815 0126 FFF7FEFF 		bl	printNotif
 1816              	.L102:
 504:modem.c       ****     }
 505:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 1817              		.loc 1 505 0
 1818 012a 07F10C02 		add	r2, r7, #12
 1819 012e 07F12803 		add	r3, r7, #40
 1820 0132 2849     		ldr	r1, .L108+28
 1821 0134 1846     		mov	r0, r3
 1822 0136 FFF7FEFF 		bl	sscanf
 1823 013a 0346     		mov	r3, r0
 1824 013c 012B     		cmp	r3, #1
 1825 013e 19D1     		bne	.L103
 506:modem.c       ****         updatable_parameters.sync_time = report_freq;
 1826              		.loc 1 506 0
 1827 0140 FB68     		ldr	r3, [r7, #12]
 1828 0142 DAB2     		uxtb	r2, r3
 1829 0144 244B     		ldr	r3, .L108+32
 1830 0146 DA70     		strb	r2, [r3, #3]
 507:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 508:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 1831              		.loc 1 508 0
 1832 0148 234B     		ldr	r3, .L108+32
 1833 014a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1834 014c 99B2     		uxth	r1, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 45


 1835 014e 2A4C     		ldr	r4, .L108+64
 1836 0150 3846     		mov	r0, r7
 1837 0152 0723     		movs	r3, #7
 1838 0154 0122     		movs	r2, #1
 1839 0156 FFF7FEFF 		bl	CreateAlarm
 1840 015a 2246     		mov	r2, r4
 1841 015c 3B46     		mov	r3, r7
 1842 015e 1968     		ldr	r1, [r3]	@ unaligned
 1843 0160 1160     		str	r1, [r2]	@ unaligned
 1844 0162 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1845 0164 9380     		strh	r3, [r2, #4]	@ unaligned
 509:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 1846              		.loc 1 509 0
 1847 0166 FB68     		ldr	r3, [r7, #12]
 1848 0168 1A46     		mov	r2, r3
 1849 016a 2449     		ldr	r1, .L108+68
 1850 016c 0020     		movs	r0, #0
 1851 016e FFF7FEFF 		bl	printNotif
 1852 0172 03E0     		b	.L104
 1853              	.L103:
 510:modem.c       ****         }else{
 511:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 1854              		.loc 1 511 0
 1855 0174 2249     		ldr	r1, .L108+72
 1856 0176 0220     		movs	r0, #2
 1857 0178 FFF7FEFF 		bl	printNotif
 1858              	.L104:
 512:modem.c       ****     }
 513:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 1859              		.loc 1 513 0
 1860 017c 07F10802 		add	r2, r7, #8
 1861 0180 07F11C03 		add	r3, r7, #28
 1862 0184 1349     		ldr	r1, .L108+28
 1863 0186 1846     		mov	r0, r3
 1864 0188 FFF7FEFF 		bl	sscanf
 1865 018c 0346     		mov	r3, r0
 1866 018e 012B     		cmp	r3, #1
 1867 0190 0AD1     		bne	.L105
 514:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 1868              		.loc 1 514 0
 1869 0192 BB68     		ldr	r3, [r7, #8]
 1870 0194 DAB2     		uxtb	r2, r3
 1871 0196 104B     		ldr	r3, .L108+32
 1872 0198 1A71     		strb	r2, [r3, #4]
 515:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 1873              		.loc 1 515 0
 1874 019a BB68     		ldr	r3, [r7, #8]
 1875 019c 1A46     		mov	r2, r3
 1876 019e 1949     		ldr	r1, .L108+76
 1877 01a0 0020     		movs	r0, #0
 1878 01a2 FFF7FEFF 		bl	printNotif
 516:modem.c       ****     }else{
 517:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
 518:modem.c       ****     }
 519:modem.c       **** }
 1879              		.loc 1 519 0
 1880 01a6 03E0     		b	.L107
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 46


 1881              	.L105:
 517:modem.c       ****     }
 1882              		.loc 1 517 0
 1883 01a8 1749     		ldr	r1, .L108+80
 1884 01aa 0220     		movs	r0, #2
 1885 01ac FFF7FEFF 		bl	printNotif
 1886              	.L107:
 1887              		.loc 1 519 0
 1888 01b0 00BF     		nop
 1889 01b2 5C37     		adds	r7, r7, #92
 1890              		.cfi_def_cfa_offset 12
 1891 01b4 BD46     		mov	sp, r7
 1892              		.cfi_def_cfa_register 13
 1893              		@ sp needed
 1894 01b6 90BD     		pop	{r4, r7, pc}
 1895              	.L109:
 1896              		.align	2
 1897              	.L108:
 1898 01b8 88020000 		.word	.LC21
 1899 01bc 24030000 		.word	.LC32
 1900 01c0 00000000 		.word	uart_received_string
 1901 01c4 30030000 		.word	.LC33
 1902 01c8 3C030000 		.word	.LC34
 1903 01cc 4C030000 		.word	.LC35
 1904 01d0 5C030000 		.word	.LC36
 1905 01d4 6C030000 		.word	.LC37
 1906 01d8 00000000 		.word	updatable_parameters
 1907 01dc 70030000 		.word	.LC38
 1908 01e0 8C030000 		.word	.LC39
 1909 01e4 A8030000 		.word	.LC40
 1910 01e8 C4030000 		.word	.LC41
 1911 01ec 00000000 		.word	alarmMeasure
 1912 01f0 E0030000 		.word	.LC42
 1913 01f4 04040000 		.word	.LC43
 1914 01f8 00000000 		.word	alarmSync
 1915 01fc 34040000 		.word	.LC44
 1916 0200 5C040000 		.word	.LC45
 1917 0204 8C040000 		.word	.LC46
 1918 0208 B8040000 		.word	.LC47
 1919              		.cfi_endproc
 1920              	.LFE81:
 1921              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 1922              		.section	.rodata
 1923 04e7 00       		.align	2
 1924              	.LC48:
 1925 04e8 41542343 		.ascii	"AT#CGMM\015\000"
 1925      474D4D0D 
 1925      00
 1926 04f1 000000   		.align	2
 1927              	.LC49:
 1928 04f4 4D6F6465 		.ascii	"Modem Model: %s\000"
 1928      6D204D6F 
 1928      64656C3A 
 1928      20257300 
 1929              		.align	2
 1930              	.LC50:
 1931 0504 41542343 		.ascii	"AT#CCID\015\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 47


 1931      4349440D 
 1931      00
 1932 050d 000000   		.align	2
 1933              	.LC51:
 1934 0510 53494D20 		.ascii	"SIM ID: %s\000"
 1934      49443A20 
 1934      257300
 1935 051b 00       		.align	2
 1936              	.LC52:
 1937 051c 41542B43 		.ascii	"AT+CGSN\015\000"
 1937      47534E0D 
 1937      00
 1938 0525 000000   		.align	2
 1939              	.LC53:
 1940 0528 494D4549 		.ascii	"IMEI: %s\000"
 1940      3A202573 
 1940      00
 1941 0531 000000   		.align	2
 1942              	.LC54:
 1943 0534 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1943      4744434F 
 1943      4E543D31 
 1943      2C224950 
 1943      222C2277 
 1944 055d 00       		.ascii	"\000"
 1945 055e 0000     		.align	2
 1946              	.LC55:
 1947 0560 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"super\"\015\012\000"
 1947      4744434F 
 1947      4E543D31 
 1947      2C224950 
 1947      222C2273 
 1948              		.align	2
 1949              	.LC56:
 1950 057c 41542B43 		.ascii	"AT+CFUN?\015\000"
 1950      46554E3F 
 1950      0D00
 1951 0586 0000     		.align	2
 1952              	.LC57:
 1953 0588 4346554E 		.ascii	"CFUN: %s\000"
 1953      3A202573 
 1953      00
 1954 0591 000000   		.align	2
 1955              	.LC58:
 1956 0594 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1956      46554E3D 
 1956      310D00
 1957              		.section	.text.modem_configure_settings,"ax",%progbits
 1958              		.align	2
 1959              		.global	modem_configure_settings
 1960              		.thumb
 1961              		.thumb_func
 1962              		.type	modem_configure_settings, %function
 1963              	modem_configure_settings:
 1964              	.LFB82:
 520:modem.c       ****     
 521:modem.c       **** // Configure the modem settings
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 48


 522:modem.c       **** void modem_configure_settings(){
 1965              		.loc 1 522 0
 1966              		.cfi_startproc
 1967              		@ args = 0, pretend = 0, frame = 16
 1968              		@ frame_needed = 1, uses_anonymous_args = 0
 1969 0000 80B5     		push	{r7, lr}
 1970              		.cfi_def_cfa_offset 8
 1971              		.cfi_offset 7, -8
 1972              		.cfi_offset 14, -4
 1973 0002 84B0     		sub	sp, sp, #16
 1974              		.cfi_def_cfa_offset 24
 1975 0004 00AF     		add	r7, sp, #0
 1976              		.cfi_def_cfa_register 7
 523:modem.c       ****     
 524:modem.c       ****     // Save/print modem model ID number
 525:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1977              		.loc 1 525 0
 1978 0006 454B     		ldr	r3, .L119
 1979 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1980 000a 002B     		cmp	r3, #0
 1981 000c 13D1     		bne	.L111
 526:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 527:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1982              		.loc 1 527 0
 1983 000e 4FF4FA62 		mov	r2, #2000
 1984 0012 4349     		ldr	r1, .L119+4
 1985 0014 4348     		ldr	r0, .L119+8
 1986 0016 FFF7FEFF 		bl	at_write_command
 1987 001a 0346     		mov	r3, r0
 1988 001c 002B     		cmp	r3, #0
 1989 001e 0AD0     		beq	.L111
 528:modem.c       ****             // Extract modem model ID number string from the UART
 529:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1990              		.loc 1 529 0
 1991 0020 414B     		ldr	r3, .L119+12
 1992 0022 424A     		ldr	r2, .L119+16
 1993 0024 4249     		ldr	r1, .L119+20
 1994 0026 4348     		ldr	r0, .L119+24
 1995 0028 FFF7FEFF 		bl	extract_string
 530:modem.c       ****             // Print modem model ID number
 531:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1996              		.loc 1 531 0
 1997 002c 3E4A     		ldr	r2, .L119+12
 1998 002e 4249     		ldr	r1, .L119+28
 1999 0030 0020     		movs	r0, #0
 2000 0032 FFF7FEFF 		bl	printNotif
 2001              	.L111:
 532:modem.c       ****         }
 533:modem.c       ****     }
 534:modem.c       ****     
 535:modem.c       ****    // Save/print SIM-card ID
 536:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 2002              		.loc 1 536 0
 2003 0036 394B     		ldr	r3, .L119
 2004 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2005 003a 002B     		cmp	r3, #0
 2006 003c 13D1     		bne	.L112
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 49


 537:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 538:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 2007              		.loc 1 538 0
 2008 003e 4FF4FA62 		mov	r2, #2000
 2009 0042 3749     		ldr	r1, .L119+4
 2010 0044 3D48     		ldr	r0, .L119+32
 2011 0046 FFF7FEFF 		bl	at_write_command
 2012 004a 0346     		mov	r3, r0
 2013 004c 002B     		cmp	r3, #0
 2014 004e 0AD0     		beq	.L112
 539:modem.c       ****             // Extract SIM-card ID string from the UART
 540:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2015              		.loc 1 540 0
 2016 0050 324B     		ldr	r3, .L119
 2017 0052 364A     		ldr	r2, .L119+16
 2018 0054 3649     		ldr	r1, .L119+20
 2019 0056 3748     		ldr	r0, .L119+24
 2020 0058 FFF7FEFF 		bl	extract_string
 541:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2021              		.loc 1 541 0
 2022 005c 2F4A     		ldr	r2, .L119
 2023 005e 3849     		ldr	r1, .L119+36
 2024 0060 0020     		movs	r0, #0
 2025 0062 FFF7FEFF 		bl	printNotif
 2026              	.L112:
 542:modem.c       ****         }
 543:modem.c       ****    }
 544:modem.c       **** 
 545:modem.c       ****     // Save/print modem IMEI
 546:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2027              		.loc 1 546 0
 2028 0066 2D4B     		ldr	r3, .L119
 2029 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2030 006c 002B     		cmp	r3, #0
 2031 006e 13D1     		bne	.L113
 547:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 548:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2032              		.loc 1 548 0
 2033 0070 4FF4FA62 		mov	r2, #2000
 2034 0074 2A49     		ldr	r1, .L119+4
 2035 0076 3348     		ldr	r0, .L119+40
 2036 0078 FFF7FEFF 		bl	at_write_command
 2037 007c 0346     		mov	r3, r0
 2038 007e 002B     		cmp	r3, #0
 2039 0080 0AD0     		beq	.L113
 549:modem.c       ****             // Extract modem IMEI number string from the UART
 550:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 2040              		.loc 1 550 0
 2041 0082 314B     		ldr	r3, .L119+44
 2042 0084 294A     		ldr	r2, .L119+16
 2043 0086 2A49     		ldr	r1, .L119+20
 2044 0088 2A48     		ldr	r0, .L119+24
 2045 008a FFF7FEFF 		bl	extract_string
 551:modem.c       ****             // Print modem IMEI number
 552:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2046              		.loc 1 552 0
 2047 008e 2E4A     		ldr	r2, .L119+44
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 50


 2048 0090 2E49     		ldr	r1, .L119+48
 2049 0092 0020     		movs	r0, #0
 2050 0094 FFF7FEFF 		bl	printNotif
 2051              	.L113:
 553:modem.c       ****         } 
 554:modem.c       ****     }
 555:modem.c       ****     
 556:modem.c       ****     // Configure protocol and cellular end point
 557:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 558:modem.c       ****     if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 2052              		.loc 1 558 0
 2053 0098 2D4B     		ldr	r3, .L119+52
 2054 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2055 009c 83F00103 		eor	r3, r3, #1
 2056 00a0 DBB2     		uxtb	r3, r3
 2057 00a2 002B     		cmp	r3, #0
 2058 00a4 06D0     		beq	.L114
 559:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOU
 2059              		.loc 1 559 0
 2060 00a6 4FF4FA62 		mov	r2, #2000
 2061 00aa 1D49     		ldr	r1, .L119+4
 2062 00ac 2948     		ldr	r0, .L119+56
 2063 00ae FFF7FEFF 		bl	at_write_command
 2064 00b2 09E0     		b	.L115
 2065              	.L114:
 560:modem.c       ****     
 561:modem.c       ****     }else if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 2066              		.loc 1 561 0
 2067 00b4 264B     		ldr	r3, .L119+52
 2068 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2069 00b8 002B     		cmp	r3, #0
 2070 00ba 05D0     		beq	.L115
 562:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"super\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2071              		.loc 1 562 0
 2072 00bc 4FF4FA62 		mov	r2, #2000
 2073 00c0 1749     		ldr	r1, .L119+4
 2074 00c2 2548     		ldr	r0, .L119+60
 2075 00c4 FFF7FEFF 		bl	at_write_command
 2076              	.L115:
 563:modem.c       ****     }
 564:modem.c       ****     
 565:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 566:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 567:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2077              		.loc 1 567 0
 2078 00c8 4FF4FA62 		mov	r2, #2000
 2079 00cc 1449     		ldr	r1, .L119+4
 2080 00ce 2348     		ldr	r0, .L119+64
 2081 00d0 FFF7FEFF 		bl	at_write_command
 2082 00d4 0346     		mov	r3, r0
 2083 00d6 002B     		cmp	r3, #0
 2084 00d8 1BD0     		beq	.L118
 2085              	.LBB9:
 568:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 569:modem.c       ****         CFUN[0] = '\0';
 2086              		.loc 1 569 0
 2087 00da 0023     		movs	r3, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 51


 2088 00dc 3B71     		strb	r3, [r7, #4]
 570:modem.c       ****         // Extract UART string recieved from the modem
 571:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2089              		.loc 1 571 0
 2090 00de 3B1D     		adds	r3, r7, #4
 2091 00e0 124A     		ldr	r2, .L119+16
 2092 00e2 1349     		ldr	r1, .L119+20
 2093 00e4 1348     		ldr	r0, .L119+24
 2094 00e6 FFF7FEFF 		bl	extract_string
 572:modem.c       ****         // Print UART string recieved from the modem
 573:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 2095              		.loc 1 573 0
 2096 00ea 3B1D     		adds	r3, r7, #4
 2097 00ec 1A46     		mov	r2, r3
 2098 00ee 1C49     		ldr	r1, .L119+68
 2099 00f0 0020     		movs	r0, #0
 2100 00f2 FFF7FEFF 		bl	printNotif
 574:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 575:modem.c       ****         // If it returns NULL, then write another command to the modem
 576:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2101              		.loc 1 576 0
 2102 00f6 3B1D     		adds	r3, r7, #4
 2103 00f8 3121     		movs	r1, #49
 2104 00fa 1846     		mov	r0, r3
 2105 00fc FFF7FEFF 		bl	strchr
 2106 0100 0346     		mov	r3, r0
 2107 0102 002B     		cmp	r3, #0
 2108 0104 05D1     		bne	.L118
 577:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 578:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 579:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2109              		.loc 1 579 0
 2110 0106 4FF4FA62 		mov	r2, #2000
 2111 010a 0549     		ldr	r1, .L119+4
 2112 010c 1548     		ldr	r0, .L119+72
 2113 010e FFF7FEFF 		bl	at_write_command
 2114              	.L118:
 2115              	.LBE9:
 580:modem.c       ****         }
 581:modem.c       ****     }
 582:modem.c       **** 
 583:modem.c       ****     
 584:modem.c       **** }
 2116              		.loc 1 584 0
 2117 0112 00BF     		nop
 2118 0114 1037     		adds	r7, r7, #16
 2119              		.cfi_def_cfa_offset 8
 2120 0116 BD46     		mov	sp, r7
 2121              		.cfi_def_cfa_register 13
 2122              		@ sp needed
 2123 0118 80BD     		pop	{r7, pc}
 2124              	.L120:
 2125 011a 00BF     		.align	2
 2126              	.L119:
 2127 011c 00000000 		.word	modem_info
 2128 0120 00000000 		.word	.LC0
 2129 0124 E8040000 		.word	.LC48
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 52


 2130 0128 14000000 		.word	modem_info+20
 2131 012c 88020000 		.word	.LC21
 2132 0130 8C020000 		.word	.LC22
 2133 0134 00000000 		.word	uart_received_string
 2134 0138 F4040000 		.word	.LC49
 2135 013c 04050000 		.word	.LC50
 2136 0140 10050000 		.word	.LC51
 2137 0144 1C050000 		.word	.LC52
 2138 0148 28000000 		.word	modem_info+40
 2139 014c 28050000 		.word	.LC53
 2140 0150 00000000 		.word	updatable_parameters
 2141 0154 34050000 		.word	.LC54
 2142 0158 60050000 		.word	.LC55
 2143 015c 7C050000 		.word	.LC56
 2144 0160 88050000 		.word	.LC57
 2145 0164 94050000 		.word	.LC58
 2146              		.cfi_endproc
 2147              	.LFE82:
 2148              		.size	modem_configure_settings, .-modem_configure_settings
 2149              		.section	.rodata
 2150 059f 00       		.align	2
 2151              	.LC59:
 2152 05a0 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2152      6D206E6F 
 2152      74207265 
 2152      61647920 
 2152      746F2067 
 2153 05d3 6B2E00   		.ascii	"k.\000"
 2154 05d6 0000     		.align	2
 2155              	.LC60:
 2156 05d8 41542B43 		.ascii	"AT+CCLK?\015\000"
 2156      434C4B3F 
 2156      0D00
 2157 05e2 0000     		.align	2
 2158              	.LC61:
 2159 05e4 220D00   		.ascii	"\"\015\000"
 2160 05e7 00       		.align	2
 2161              	.LC62:
 2162 05e8 3A202200 		.ascii	": \"\000"
 2163              		.align	2
 2164              	.LC63:
 2165 05ec 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2165      642F2564 
 2165      2C25643A 
 2165      25643A25 
 2165      642D2564 
 2166 0601 000000   		.align	2
 2167              	.LC64:
 2168 0604 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2168      642F2564 
 2168      2C25643A 
 2168      25643A25 
 2168      642B2564 
 2169 0619 000000   		.align	2
 2170              	.LC65:
 2171 061c 436F756C 		.ascii	"Could not parse modem time.\000"
 2171      64206E6F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 53


 2171      74207061 
 2171      72736520 
 2171      6D6F6465 
 2172              		.section	.text.modem_get_network_time,"ax",%progbits
 2173              		.align	2
 2174              		.global	modem_get_network_time
 2175              		.thumb
 2176              		.thumb_func
 2177              		.type	modem_get_network_time, %function
 2178              	modem_get_network_time:
 2179              	.LFB83:
 585:modem.c       **** 
 586:modem.c       **** //returns 0 if modem can't get time
 587:modem.c       **** long modem_get_network_time(){
 2180              		.loc 1 587 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 104
 2183              		@ frame_needed = 1, uses_anonymous_args = 0
 2184 0000 80B5     		push	{r7, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 7, -8
 2187              		.cfi_offset 14, -4
 2188 0002 A0B0     		sub	sp, sp, #128
 2189              		.cfi_def_cfa_offset 136
 2190 0004 06AF     		add	r7, sp, #24
 2191              		.cfi_def_cfa 7, 112
 588:modem.c       ****     
 589:modem.c       ****     //modem reposen format (careful to include the quotes "")
 590:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 591:modem.c       ****     //ex: 14:48 GMT
 592:modem.c       **** 
 593:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 594:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2192              		.loc 1 594 0
 2193 0006 444B     		ldr	r3, .L128
 2194 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2195 000a 042B     		cmp	r3, #4
 2196 000c 05D0     		beq	.L122
 595:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2197              		.loc 1 595 0
 2198 000e 4349     		ldr	r1, .L128+4
 2199 0010 0220     		movs	r0, #2
 2200 0012 FFF7FEFF 		bl	printNotif
 596:modem.c       ****         return 0;   
 2201              		.loc 1 596 0
 2202 0016 0023     		movs	r3, #0
 2203 0018 7AE0     		b	.L123
 2204              	.L122:
 597:modem.c       ****     }
 598:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2205              		.loc 1 598 0
 2206 001a 0023     		movs	r3, #0
 2207 001c 7B66     		str	r3, [r7, #100]
 599:modem.c       ****     
 600:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 601:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2208              		.loc 1 601 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 54


 2209 001e 4FF4FA62 		mov	r2, #2000
 2210 0022 3F49     		ldr	r1, .L128+8
 2211 0024 3F48     		ldr	r0, .L128+12
 2212 0026 FFF7FEFF 		bl	at_write_command
 2213 002a 0346     		mov	r3, r0
 2214 002c 002B     		cmp	r3, #0
 2215 002e 6ED0     		beq	.L124
 2216              	.LBB10:
 602:modem.c       ****         // need to set this to /0
 603:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 604:modem.c       ****         network_time[0] = '\0';
 2217              		.loc 1 604 0
 2218 0030 0023     		movs	r3, #0
 2219 0032 87F84430 		strb	r3, [r7, #68]
 605:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 606:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2220              		.loc 1 606 0
 2221 0036 07F14403 		add	r3, r7, #68
 2222 003a 3B4A     		ldr	r2, .L128+16
 2223 003c 3B49     		ldr	r1, .L128+20
 2224 003e 3C48     		ldr	r0, .L128+24
 2225 0040 FFF7FEFF 		bl	extract_string
 607:modem.c       ****         
 608:modem.c       ****         ///////////////////  
 609:modem.c       ****         struct tm t; // Creates variable t of struct tm
 610:modem.c       ****         
 611:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 612:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2226              		.loc 1 612 0
 2227 0044 0023     		movs	r3, #0
 2228 0046 BB62     		str	r3, [r7, #40]
 613:modem.c       ****       
 614:modem.c       ****         // Determines the GMT offset 
 615:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 616:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 617:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2229              		.loc 1 617 0
 2230 0048 07F13C01 		add	r1, r7, #60
 2231 004c 07F14002 		add	r2, r7, #64
 2232 0050 07F14400 		add	r0, r7, #68
 2233 0054 07F12803 		add	r3, r7, #40
 2234 0058 0493     		str	r3, [sp, #16]
 2235 005a 07F12C03 		add	r3, r7, #44
 2236 005e 0393     		str	r3, [sp, #12]
 2237 0060 07F13003 		add	r3, r7, #48
 2238 0064 0293     		str	r3, [sp, #8]
 2239 0066 07F13403 		add	r3, r7, #52
 2240 006a 0193     		str	r3, [sp, #4]
 2241 006c 07F13803 		add	r3, r7, #56
 2242 0070 0093     		str	r3, [sp]
 2243 0072 0B46     		mov	r3, r1
 2244 0074 2F49     		ldr	r1, .L128+28
 2245 0076 FFF7FEFF 		bl	sscanf
 2246 007a 0346     		mov	r3, r0
 2247 007c 072B     		cmp	r3, #7
 2248 007e 06D1     		bne	.L125
 618:modem.c       ****             gmt_offset = gmt_offset*(900);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 55


 2249              		.loc 1 618 0
 2250 0080 BB6A     		ldr	r3, [r7, #40]
 2251 0082 4FF46172 		mov	r2, #900
 2252 0086 02FB03F3 		mul	r3, r2, r3
 2253 008a BB62     		str	r3, [r7, #40]
 2254 008c 27E0     		b	.L126
 2255              	.L125:
 619:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2256              		.loc 1 619 0
 2257 008e 07F13C01 		add	r1, r7, #60
 2258 0092 07F14002 		add	r2, r7, #64
 2259 0096 07F14400 		add	r0, r7, #68
 2260 009a 07F12803 		add	r3, r7, #40
 2261 009e 0493     		str	r3, [sp, #16]
 2262 00a0 07F12C03 		add	r3, r7, #44
 2263 00a4 0393     		str	r3, [sp, #12]
 2264 00a6 07F13003 		add	r3, r7, #48
 2265 00aa 0293     		str	r3, [sp, #8]
 2266 00ac 07F13403 		add	r3, r7, #52
 2267 00b0 0193     		str	r3, [sp, #4]
 2268 00b2 07F13803 		add	r3, r7, #56
 2269 00b6 0093     		str	r3, [sp]
 2270 00b8 0B46     		mov	r3, r1
 2271 00ba 1F49     		ldr	r1, .L128+32
 2272 00bc FFF7FEFF 		bl	sscanf
 2273 00c0 0346     		mov	r3, r0
 2274 00c2 072B     		cmp	r3, #7
 2275 00c4 05D1     		bne	.L127
 620:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2276              		.loc 1 620 0
 2277 00c6 BB6A     		ldr	r3, [r7, #40]
 2278 00c8 1C4A     		ldr	r2, .L128+36
 2279 00ca 02FB03F3 		mul	r3, r2, r3
 2280 00ce BB62     		str	r3, [r7, #40]
 2281 00d0 05E0     		b	.L126
 2282              	.L127:
 621:modem.c       ****         }else{
 622:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2283              		.loc 1 622 0
 2284 00d2 1B49     		ldr	r1, .L128+40
 2285 00d4 0220     		movs	r0, #2
 2286 00d6 FFF7FEFF 		bl	printNotif
 623:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2287              		.loc 1 623 0
 2288 00da 0023     		movs	r3, #0
 2289 00dc 18E0     		b	.L123
 2290              	.L126:
 624:modem.c       ****         }
 625:modem.c       ****         
 626:modem.c       ****         // Sets each variable to the correct time 
 627:modem.c       ****         t.tm_sec = second;
 2291              		.loc 1 627 0
 2292 00de FB6A     		ldr	r3, [r7, #44]
 2293 00e0 7B60     		str	r3, [r7, #4]
 628:modem.c       ****         t.tm_min = minute;
 2294              		.loc 1 628 0
 2295 00e2 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 56


 2296 00e4 BB60     		str	r3, [r7, #8]
 629:modem.c       ****         t.tm_hour = hour;
 2297              		.loc 1 629 0
 2298 00e6 7B6B     		ldr	r3, [r7, #52]
 2299 00e8 FB60     		str	r3, [r7, #12]
 630:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2300              		.loc 1 630 0
 2301 00ea 3B6C     		ldr	r3, [r7, #64]
 2302 00ec 6433     		adds	r3, r3, #100
 2303 00ee BB61     		str	r3, [r7, #24]
 631:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2304              		.loc 1 631 0
 2305 00f0 FB6B     		ldr	r3, [r7, #60]
 2306 00f2 013B     		subs	r3, r3, #1
 2307 00f4 7B61     		str	r3, [r7, #20]
 632:modem.c       ****         t.tm_mday = day;           // Day of the month
 2308              		.loc 1 632 0
 2309 00f6 BB6B     		ldr	r3, [r7, #56]
 2310 00f8 3B61     		str	r3, [r7, #16]
 633:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2311              		.loc 1 633 0
 2312 00fa 0023     		movs	r3, #0
 2313 00fc 7B62     		str	r3, [r7, #36]
 634:modem.c       ****     
 635:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 636:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 637:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2314              		.loc 1 637 0
 2315 00fe 3B1D     		adds	r3, r7, #4
 2316 0100 1846     		mov	r0, r3
 2317 0102 FFF7FEFF 		bl	mktime
 2318 0106 0246     		mov	r2, r0
 2319 0108 BB6A     		ldr	r3, [r7, #40]
 2320 010a 1344     		add	r3, r3, r2
 2321 010c 7B66     		str	r3, [r7, #100]
 2322              	.L124:
 2323              	.LBE10:
 638:modem.c       ****     }
 639:modem.c       ****     
 640:modem.c       ****     return epoch_time;
 2324              		.loc 1 640 0
 2325 010e 7B6E     		ldr	r3, [r7, #100]
 2326              	.L123:
 641:modem.c       **** }
 2327              		.loc 1 641 0
 2328 0110 1846     		mov	r0, r3
 2329 0112 6837     		adds	r7, r7, #104
 2330              		.cfi_def_cfa_offset 8
 2331 0114 BD46     		mov	sp, r7
 2332              		.cfi_def_cfa_register 13
 2333              		@ sp needed
 2334 0116 80BD     		pop	{r7, pc}
 2335              	.L129:
 2336              		.align	2
 2337              	.L128:
 2338 0118 00000000 		.word	modem_state
 2339 011c A0050000 		.word	.LC59
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 57


 2340 0120 00000000 		.word	.LC0
 2341 0124 D8050000 		.word	.LC60
 2342 0128 E4050000 		.word	.LC61
 2343 012c E8050000 		.word	.LC62
 2344 0130 00000000 		.word	uart_received_string
 2345 0134 EC050000 		.word	.LC63
 2346 0138 04060000 		.word	.LC64
 2347 013c 7CFCFFFF 		.word	-900
 2348 0140 1C060000 		.word	.LC65
 2349              		.cfi_endproc
 2350              	.LFE83:
 2351              		.size	modem_get_network_time, .-modem_get_network_time
 2352              		.section	.text.modem_get_state,"ax",%progbits
 2353              		.align	2
 2354              		.global	modem_get_state
 2355              		.thumb
 2356              		.thumb_func
 2357              		.type	modem_get_state, %function
 2358              	modem_get_state:
 2359              	.LFB84:
 642:modem.c       **** 
 643:modem.c       **** // Get the modem state
 644:modem.c       **** uint8 modem_get_state(){
 2360              		.loc 1 644 0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 0
 2363              		@ frame_needed = 1, uses_anonymous_args = 0
 2364              		@ link register save eliminated.
 2365 0000 80B4     		push	{r7}
 2366              		.cfi_def_cfa_offset 4
 2367              		.cfi_offset 7, -4
 2368 0002 00AF     		add	r7, sp, #0
 2369              		.cfi_def_cfa_register 7
 645:modem.c       ****     return modem_state;
 2370              		.loc 1 645 0
 2371 0004 024B     		ldr	r3, .L132
 2372 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 646:modem.c       **** }
 2373              		.loc 1 646 0
 2374 0008 1846     		mov	r0, r3
 2375 000a BD46     		mov	sp, r7
 2376              		.cfi_def_cfa_register 13
 2377              		@ sp needed
 2378 000c 80BC     		pop	{r7}
 2379              		.cfi_restore 7
 2380              		.cfi_def_cfa_offset 0
 2381 000e 7047     		bx	lr
 2382              	.L133:
 2383              		.align	2
 2384              	.L132:
 2385 0010 00000000 		.word	modem_state
 2386              		.cfi_endproc
 2387              	.LFE84:
 2388              		.size	modem_get_state, .-modem_get_state
 2389              		.section	.text.modem_sleep,"ax",%progbits
 2390              		.align	2
 2391              		.global	modem_sleep
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 58


 2392              		.thumb
 2393              		.thumb_func
 2394              		.type	modem_sleep, %function
 2395              	modem_sleep:
 2396              	.LFB85:
 647:modem.c       **** 
 648:modem.c       **** // Set modem to sleep
 649:modem.c       **** void modem_sleep(){
 2397              		.loc 1 649 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 1, uses_anonymous_args = 0
 2401 0000 80B5     		push	{r7, lr}
 2402              		.cfi_def_cfa_offset 8
 2403              		.cfi_offset 7, -8
 2404              		.cfi_offset 14, -4
 2405 0002 00AF     		add	r7, sp, #0
 2406              		.cfi_def_cfa_register 7
 650:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 651:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2407              		.loc 1 651 0
 2408 0004 FFF7FEFF 		bl	modem_get_state
 2409 0008 0346     		mov	r3, r0
 2410 000a 002B     		cmp	r3, #0
 2411 000c 03D0     		beq	.L136
 652:modem.c       **** 
 653:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2412              		.loc 1 653 0
 2413 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 654:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2414              		.loc 1 654 0
 2415 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2416              	.L136:
 655:modem.c       ****         
 656:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 657:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 658:modem.c       ****      }
 659:modem.c       **** }
 2417              		.loc 1 659 0
 2418 0016 00BF     		nop
 2419 0018 80BD     		pop	{r7, pc}
 2420              		.cfi_endproc
 2421              	.LFE85:
 2422              		.size	modem_sleep, .-modem_sleep
 2423 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2424              		.align	2
 2425              		.global	modem_wakeup
 2426              		.thumb
 2427              		.thumb_func
 2428              		.type	modem_wakeup, %function
 2429              	modem_wakeup:
 2430              	.LFB86:
 660:modem.c       **** 
 661:modem.c       **** // Wakeup the modem
 662:modem.c       **** void modem_wakeup(){
 2431              		.loc 1 662 0
 2432              		.cfi_startproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 59


 2433              		@ args = 0, pretend = 0, frame = 0
 2434              		@ frame_needed = 1, uses_anonymous_args = 0
 2435 0000 80B5     		push	{r7, lr}
 2436              		.cfi_def_cfa_offset 8
 2437              		.cfi_offset 7, -8
 2438              		.cfi_offset 14, -4
 2439 0002 00AF     		add	r7, sp, #0
 2440              		.cfi_def_cfa_register 7
 663:modem.c       ****     // If modem state is not off then wake it up
 664:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2441              		.loc 1 664 0
 2442 0004 FFF7FEFF 		bl	modem_get_state
 2443 0008 0346     		mov	r3, r0
 2444 000a 002B     		cmp	r3, #0
 2445 000c 0BD0     		beq	.L139
 665:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2446              		.loc 1 665 0
 2447 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 666:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 667:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 668:modem.c       ****         UART_Telit_Wakeup();
 2448              		.loc 1 668 0
 2449 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 669:modem.c       ****         // Remove the need for this pin itterupt
 670:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 671:modem.c       ****         
 672:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 673:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2450              		.loc 1 673 0
 2451 0016 FFF7FEFF 		bl	modem_get_state
 2452 001a 0346     		mov	r3, r0
 2453 001c 032B     		cmp	r3, #3
 2454 001e 02D1     		bne	.L139
 674:modem.c       ****             CyDelay(100u);
 2455              		.loc 1 674 0
 2456 0020 6420     		movs	r0, #100
 2457 0022 FFF7FEFF 		bl	CyDelay
 2458              	.L139:
 675:modem.c       ****         }
 676:modem.c       ****      }
 677:modem.c       **** }
 2459              		.loc 1 677 0
 2460 0026 00BF     		nop
 2461 0028 80BD     		pop	{r7, pc}
 2462              		.cfi_endproc
 2463              	.LFE86:
 2464              		.size	modem_wakeup, .-modem_wakeup
 2465 002a 00BF     		.section	.rodata
 2466              		.align	2
 2467              	.LC66:
 2468 0638 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2468      50494F3D 
 2468      352C312C 
 2468      312C300D 
 2468      00
 2469 0649 000000   		.align	2
 2470              	.LC67:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 60


 2471 064c 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2471      55504C53 
 2471      45433D31 
 2471      0D00
 2472 065a 0000     		.align	2
 2473              	.LC68:
 2474 065c 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2474      55504C56 
 2474      3D320D00 
 2475              		.align	2
 2476              	.LC69:
 2477 0668 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2477      47505345 
 2477      4E3D310D 
 2477      00
 2478 0675 000000   		.align	2
 2479              	.LC70:
 2480 0678 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2480      4C503D31 
 2480      2C227375 
 2480      706C2E67 
 2480      6F6F676C 
 2481 0699 000000   		.align	2
 2482              	.LC71:
 2483 069c 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2483      47414354 
 2483      3D312C30 
 2483      0D0A00
 2484 06ab 00       		.align	2
 2485              	.LC72:
 2486 06ac 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2486      43534C4B 
 2486      3D312C31 
 2486      0D00
 2487 06ba 0000     		.align	2
 2488              	.LC73:
 2489 06bc 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2489      5053534C 
 2489      53523D31 
 2489      2C312C2C 
 2489      2C2C2C32 
 2490 06d2 0000     		.align	2
 2491              	.LC74:
 2492 06d4 4E00     		.ascii	"N\000"
 2493 06d6 0000     		.align	2
 2494              	.LC75:
 2495 06d8 41542447 		.ascii	"AT$GPSACP\015\000"
 2495      50534143 
 2495      500D00
 2496 06e3 00       		.align	2
 2497              	.LC76:
 2498 06e4 24475053 		.ascii	"$GPSACP: \000"
 2498      4143503A 
 2498      2000
 2499 06ee 0000     		.align	2
 2500              	.LC77:
 2501 06f0 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 61


 2501      4143503A 
 2501      20252A66 
 2501      2C25664E 
 2501      2C256657 
 2502              		.global	__aeabi_fdiv
 2503              		.global	__aeabi_f2d
 2504              		.global	__aeabi_ddiv
 2505              		.global	__aeabi_dadd
 2506              		.global	__aeabi_d2f
 2507              		.align	2
 2508              	.LC78:
 2509 0710 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2509      50494F3D 
 2509      352C302C 
 2509      312C300D 
 2509      00
 2510 0721 000000   		.align	2
 2511              	.LC79:
 2512 0724 41542447 		.ascii	"AT$GPSR=0\015\000"
 2512      5053523D 
 2512      300D00
 2513 072f 00       		.align	2
 2514              	.LC80:
 2515 0730 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2515      20746F20 
 2515      6C6F636B 
 2515      20475053 
 2515      3A202564 
 2516              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2517              		.align	2
 2518              		.global	modem_get_gps_coordinates
 2519              		.thumb
 2520              		.thumb_func
 2521              		.type	modem_get_gps_coordinates, %function
 2522              	modem_get_gps_coordinates:
 2523              	.LFB87:
 678:modem.c       **** 
 679:modem.c       ****     
 680:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 681:modem.c       **** gps_t modem_get_gps_coordinates(){
 2524              		.loc 1 681 0
 2525              		.cfi_startproc
 2526              		@ args = 0, pretend = 0, frame = 56
 2527              		@ frame_needed = 1, uses_anonymous_args = 0
 2528 0000 B0B5     		push	{r4, r5, r7, lr}
 2529              		.cfi_def_cfa_offset 16
 2530              		.cfi_offset 4, -16
 2531              		.cfi_offset 5, -12
 2532              		.cfi_offset 7, -8
 2533              		.cfi_offset 14, -4
 2534 0002 90B0     		sub	sp, sp, #64
 2535              		.cfi_def_cfa_offset 80
 2536 0004 02AF     		add	r7, sp, #8
 2537              		.cfi_def_cfa 7, 72
 2538 0006 7860     		str	r0, [r7, #4]
 682:modem.c       ****     gps_t gps;
 683:modem.c       ****     gps.altitude = 0;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 62


 2539              		.loc 1 683 0
 2540 0008 4FF00003 		mov	r3, #0
 2541 000c FB61     		str	r3, [r7, #28]	@ float
 684:modem.c       ****     gps.longitude = 0;
 2542              		.loc 1 684 0
 2543 000e 4FF00003 		mov	r3, #0
 2544 0012 BB61     		str	r3, [r7, #24]	@ float
 685:modem.c       ****     gps.latitude = 0;
 2545              		.loc 1 685 0
 2546 0014 4FF00003 		mov	r3, #0
 2547 0018 7B61     		str	r3, [r7, #20]	@ float
 686:modem.c       ****     gps.time_to_lock =0;
 2548              		.loc 1 686 0
 2549 001a 0023     		movs	r3, #0
 2550 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 687:modem.c       ****     gps.valid = 0;
 2551              		.loc 1 687 0
 2552 001e 0023     		movs	r3, #0
 2553 0020 87F82230 		strb	r3, [r7, #34]
 688:modem.c       ****     
 689:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 690:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2554              		.loc 1 690 0
 2555 0024 7F4B     		ldr	r3, .L150
 2556 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2557 0028 042B     		cmp	r3, #4
 2558 002a 07D0     		beq	.L141
 691:modem.c       ****         return gps;//where valid = 0
 2559              		.loc 1 691 0
 2560 002c 7B68     		ldr	r3, [r7, #4]
 2561 002e 1C46     		mov	r4, r3
 2562 0030 07F11403 		add	r3, r7, #20
 2563 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2564 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2565 003a EFE0     		b	.L140
 2566              	.L141:
 692:modem.c       ****     }
 693:modem.c       ****     
 694:modem.c       ****     long lock_time = getTimeStamp();
 2567              		.loc 1 694 0
 2568 003c FFF7FEFF 		bl	getTimeStamp
 2569 0040 3863     		str	r0, [r7, #48]
 695:modem.c       ****     
 696:modem.c       ****     // Enable this for the LTER module
 697:modem.c       ****     // Enable GPS Low-Dropout Regulator
 698:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2570              		.loc 1 698 0
 2571 0042 4FF4FA62 		mov	r2, #2000
 2572 0046 7849     		ldr	r1, .L150+4
 2573 0048 7848     		ldr	r0, .L150+8
 2574 004a FFF7FEFF 		bl	at_write_command
 699:modem.c       ****     
 700:modem.c       ****     // Configure SUPL connection params
 701:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2575              		.loc 1 701 0
 2576 004e 4FF4FA62 		mov	r2, #2000
 2577 0052 7549     		ldr	r1, .L150+4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 63


 2578 0054 7648     		ldr	r0, .L150+12
 2579 0056 FFF7FEFF 		bl	at_write_command
 702:modem.c       ****     
 703:modem.c       ****     // Use SUPL2.0
 704:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2580              		.loc 1 704 0
 2581 005a 4FF4FA62 		mov	r2, #2000
 2582 005e 7249     		ldr	r1, .L150+4
 2583 0060 7448     		ldr	r0, .L150+16
 2584 0062 FFF7FEFF 		bl	at_write_command
 705:modem.c       ****     
 706:modem.c       ****     // Enable AGPS service
 707:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2585              		.loc 1 707 0
 2586 0066 4FF4FA62 		mov	r2, #2000
 2587 006a 6F49     		ldr	r1, .L150+4
 2588 006c 7248     		ldr	r0, .L150+20
 2589 006e FFF7FEFF 		bl	at_write_command
 708:modem.c       ****     
 709:modem.c       ****     // Chose SUPL server, use google public service
 710:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2590              		.loc 1 710 0
 2591 0072 4FF4FA62 		mov	r2, #2000
 2592 0076 6C49     		ldr	r1, .L150+4
 2593 0078 7048     		ldr	r0, .L150+24
 2594 007a FFF7FEFF 		bl	at_write_command
 711:modem.c       ****     
 712:modem.c       ****     //pdp context has to be locked to carrier for this to work
 713:modem.c       ****     
 714:modem.c       ****     // Unlock context since it needs to be used by modem
 715:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2595              		.loc 1 715 0
 2596 007e 4FF4FA62 		mov	r2, #2000
 2597 0082 6949     		ldr	r1, .L150+4
 2598 0084 6E48     		ldr	r0, .L150+28
 2599 0086 FFF7FEFF 		bl	at_write_command
 716:modem.c       ****     
 717:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2600              		.loc 1 717 0
 2601 008a 4FF4FA62 		mov	r2, #2000
 2602 008e 6649     		ldr	r1, .L150+4
 2603 0090 6C48     		ldr	r0, .L150+32
 2604 0092 FFF7FEFF 		bl	at_write_command
 718:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 719:modem.c       ****     
 720:modem.c       ****     // Relock the context
 721:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2605              		.loc 1 721 0
 2606 0096 42F21072 		movw	r2, #10000
 2607 009a 6349     		ldr	r1, .L150+4
 2608 009c 6A48     		ldr	r0, .L150+36
 2609 009e FFF7FEFF 		bl	at_write_command
 722:modem.c       ****     
 723:modem.c       ****     //start AGPS service
 724:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2610              		.loc 1 724 0
 2611 00a2 4FF4FA62 		mov	r2, #2000
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 64


 2612 00a6 6049     		ldr	r1, .L150+4
 2613 00a8 6848     		ldr	r0, .L150+40
 2614 00aa FFF7FEFF 		bl	at_write_command
 725:modem.c       ****     
 726:modem.c       ****     
 727:modem.c       ****     // Start the AGPS service
 728:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 729:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 730:modem.c       ****     
 731:modem.c       ****     
 732:modem.c       ****  
 733:modem.c       ****     uint8 gps_status = 0;
 2615              		.loc 1 733 0
 2616 00ae 0023     		movs	r3, #0
 2617 00b0 87F82F30 		strb	r3, [r7, #47]
 2618              	.LBB11:
 734:modem.c       ****     for(uint16 i=0;i<200;i++){
 2619              		.loc 1 734 0
 2620 00b4 0023     		movs	r3, #0
 2621 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2622 00b8 13E0     		b	.L143
 2623              	.L146:
 735:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2624              		.loc 1 735 0
 2625 00ba 4FF4FA62 		mov	r2, #2000
 2626 00be 6449     		ldr	r1, .L150+44
 2627 00c0 6448     		ldr	r0, .L150+48
 2628 00c2 FFF7FEFF 		bl	at_write_command
 2629 00c6 0346     		mov	r3, r0
 2630 00c8 87F82F30 		strb	r3, [r7, #47]
 736:modem.c       ****         if(gps_status){
 2631              		.loc 1 736 0
 2632 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2633 00d0 002B     		cmp	r3, #0
 2634 00d2 0AD1     		bne	.L149
 737:modem.c       ****             break;   
 738:modem.c       ****         }
 739:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2635              		.loc 1 739 0 discriminator 2
 2636 00d4 4FF47A70 		mov	r0, #1000
 2637 00d8 FFF7FEFF 		bl	CyDelay
 734:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2638              		.loc 1 734 0 discriminator 2
 2639 00dc FB8E     		ldrh	r3, [r7, #54]
 2640 00de 0133     		adds	r3, r3, #1
 2641 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2642              	.L143:
 734:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2643              		.loc 1 734 0 is_stmt 0 discriminator 1
 2644 00e2 FB8E     		ldrh	r3, [r7, #54]
 2645 00e4 C72B     		cmp	r3, #199
 2646 00e6 E8D9     		bls	.L146
 2647 00e8 00E0     		b	.L145
 2648              	.L149:
 737:modem.c       ****             break;   
 2649              		.loc 1 737 0 is_stmt 1
 2650 00ea 00BF     		nop
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 65


 2651              	.L145:
 2652              	.LBE11:
 740:modem.c       ****     }
 741:modem.c       ****     
 742:modem.c       ****     //parse data here
 743:modem.c       ****     
 744:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 745:modem.c       ****     float lat;
 746:modem.c       ****     float lon;
 747:modem.c       ****     float alt;
 748:modem.c       ****     
 749:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 750:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 751:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2653              		.loc 1 751 0
 2654 00ec 5A49     		ldr	r1, .L150+52
 2655 00ee 5B48     		ldr	r0, .L150+56
 2656 00f0 FFF7FEFF 		bl	strstr
 2657 00f4 B862     		str	r0, [r7, #40]
 752:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 753:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 754:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2658              		.loc 1 754 0
 2659 00f6 07F10C01 		add	r1, r7, #12
 2660 00fa 07F11002 		add	r2, r7, #16
 2661 00fe 07F10803 		add	r3, r7, #8
 2662 0102 0093     		str	r3, [sp]
 2663 0104 0B46     		mov	r3, r1
 2664 0106 5649     		ldr	r1, .L150+60
 2665 0108 B86A     		ldr	r0, [r7, #40]
 2666 010a FFF7FEFF 		bl	sscanf
 2667 010e 7862     		str	r0, [r7, #36]
 755:modem.c       ****     if(match >= 3){
 2668              		.loc 1 755 0
 2669 0110 7B6A     		ldr	r3, [r7, #36]
 2670 0112 022B     		cmp	r3, #2
 2671 0114 60DD     		ble	.L147
 756:modem.c       ****         // Calculate lat and lon
 757:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 758:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 759:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2672              		.loc 1 759 0
 2673 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2674 0118 5249     		ldr	r1, .L150+64
 2675 011a 1846     		mov	r0, r3
 2676 011c FFF7FEFF 		bl	__aeabi_fdiv
 2677 0120 0346     		mov	r3, r0
 2678 0122 1846     		mov	r0, r3
 2679 0124 FFF7FEFF 		bl	floorf
 2680 0128 0346     		mov	r3, r0
 2681 012a 1846     		mov	r0, r3
 2682 012c FFF7FEFF 		bl	__aeabi_f2d
 2683 0130 0446     		mov	r4, r0
 2684 0132 0D46     		mov	r5, r1
 2685 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2686 0136 1846     		mov	r0, r3
 2687 0138 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 66


 2688 013c 4FF00002 		mov	r2, #0
 2689 0140 494B     		ldr	r3, .L150+68
 2690 0142 FFF7FEFF 		bl	fmod
 2691 0146 4FF00002 		mov	r2, #0
 2692 014a 484B     		ldr	r3, .L150+72
 2693 014c FFF7FEFF 		bl	__aeabi_ddiv
 2694 0150 0246     		mov	r2, r0
 2695 0152 0B46     		mov	r3, r1
 2696 0154 2046     		mov	r0, r4
 2697 0156 2946     		mov	r1, r5
 2698 0158 FFF7FEFF 		bl	__aeabi_dadd
 2699 015c 0346     		mov	r3, r0
 2700 015e 0C46     		mov	r4, r1
 2701 0160 1846     		mov	r0, r3
 2702 0162 2146     		mov	r1, r4
 2703 0164 FFF7FEFF 		bl	__aeabi_d2f
 2704 0168 0346     		mov	r3, r0
 2705 016a 3B61     		str	r3, [r7, #16]	@ float
 760:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2706              		.loc 1 760 0
 2707 016c FB68     		ldr	r3, [r7, #12]	@ float
 2708 016e 3D49     		ldr	r1, .L150+64
 2709 0170 1846     		mov	r0, r3
 2710 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2711 0176 0346     		mov	r3, r0
 2712 0178 1846     		mov	r0, r3
 2713 017a FFF7FEFF 		bl	floorf
 2714 017e 0346     		mov	r3, r0
 2715 0180 1846     		mov	r0, r3
 2716 0182 FFF7FEFF 		bl	__aeabi_f2d
 2717 0186 0446     		mov	r4, r0
 2718 0188 0D46     		mov	r5, r1
 2719 018a FB68     		ldr	r3, [r7, #12]	@ float
 2720 018c 1846     		mov	r0, r3
 2721 018e FFF7FEFF 		bl	__aeabi_f2d
 2722 0192 4FF00002 		mov	r2, #0
 2723 0196 344B     		ldr	r3, .L150+68
 2724 0198 FFF7FEFF 		bl	fmod
 2725 019c 4FF00002 		mov	r2, #0
 2726 01a0 324B     		ldr	r3, .L150+72
 2727 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2728 01a6 0246     		mov	r2, r0
 2729 01a8 0B46     		mov	r3, r1
 2730 01aa 2046     		mov	r0, r4
 2731 01ac 2946     		mov	r1, r5
 2732 01ae FFF7FEFF 		bl	__aeabi_dadd
 2733 01b2 0346     		mov	r3, r0
 2734 01b4 0C46     		mov	r4, r1
 2735 01b6 1846     		mov	r0, r3
 2736 01b8 2146     		mov	r1, r4
 2737 01ba FFF7FEFF 		bl	__aeabi_d2f
 2738 01be 0346     		mov	r3, r0
 2739 01c0 83F00043 		eor	r3, r3, #-2147483648
 2740 01c4 FB60     		str	r3, [r7, #12]	@ float
 761:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2741              		.loc 1 761 0
 2742 01c6 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 67


 2743 01c8 FB61     		str	r3, [r7, #28]	@ float
 762:modem.c       ****         gps.latitude = lat;
 2744              		.loc 1 762 0
 2745 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2746 01cc 7B61     		str	r3, [r7, #20]	@ float
 763:modem.c       ****         gps.longitude = lon;
 2747              		.loc 1 763 0
 2748 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2749 01d0 BB61     		str	r3, [r7, #24]	@ float
 764:modem.c       ****         gps.valid = 1;
 2750              		.loc 1 764 0
 2751 01d2 0123     		movs	r3, #1
 2752 01d4 87F82230 		strb	r3, [r7, #34]
 2753              	.L147:
 765:modem.c       ****     }
 766:modem.c       ****     
 767:modem.c       ****     // Disable LDO, just in case
 768:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2754              		.loc 1 768 0
 2755 01d8 4FF4FA62 		mov	r2, #2000
 2756 01dc 1249     		ldr	r1, .L150+4
 2757 01de 2448     		ldr	r0, .L150+76
 2758 01e0 FFF7FEFF 		bl	at_write_command
 769:modem.c       ****     
 770:modem.c       ****     // Flush modem's GPS data, just in case
 771:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2759              		.loc 1 771 0
 2760 01e4 4FF4FA62 		mov	r2, #2000
 2761 01e8 0F49     		ldr	r1, .L150+4
 2762 01ea 2248     		ldr	r0, .L150+80
 2763 01ec FFF7FEFF 		bl	at_write_command
 772:modem.c       ****     
 773:modem.c       ****     
 774:modem.c       ****     
 775:modem.c       ****     
 776:modem.c       ****     
 777:modem.c       ****     /* Relevant to 3g modem, can ignore
 778:modem.c       ****     
 779:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 780:modem.c       ****     //AT$GPSQOS=50,50,100,0
 781:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 782:modem.c       ****     
 783:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 784:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 785:modem.c       ****     
 786:modem.c       ****     //unlock contedt, simnce its being used by modem
 787:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 788:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 789:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 790:modem.c       ****     
 791:modem.c       ****     //unlock contedt, simnce its being used by modem
 792:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 793:modem.c       ****     
 794:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 795:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 796:modem.c       ****     
 797:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 68


 798:modem.c       ****    uint8 gps_status = 0;
 799:modem.c       ****     for(uint16 i=0;i<200;i++){
 800:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 801:modem.c       ****         if(gps_status){
 802:modem.c       ****             break;   
 803:modem.c       ****         }
 804:modem.c       ****   }
 805:modem.c       ****     
 806:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 807:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 808:modem.c       ****     if(gps_status){
 809:modem.c       ****         float lat,lon,alt = 0;
 810:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 811:modem.c       ****             gps.altitude = alt;
 812:modem.c       ****             gps.latitude = lat/60;
 813:modem.c       ****             gps.longitude = lon/60;
 814:modem.c       ****             gps.valid = 1;
 815:modem.c       ****         }
 816:modem.c       ****         
 817:modem.c       ****     }
 818:modem.c       ****     
 819:modem.c       ****     //turn off gps
 820:modem.c       ****     //AT$GPSP=0
 821:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 822:modem.c       ****     
 823:modem.c       ****     */
 824:modem.c       **** 
 825:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 826:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2764              		.loc 1 826 0
 2765 01f0 FFF7FEFF 		bl	getTimeStamp
 2766 01f4 0246     		mov	r2, r0
 2767 01f6 3B6B     		ldr	r3, [r7, #48]
 2768 01f8 D31A     		subs	r3, r2, r3
 2769 01fa 3B63     		str	r3, [r7, #48]
 827:modem.c       ****     gps.time_to_lock = lock_time;
 2770              		.loc 1 827 0
 2771 01fc 3B6B     		ldr	r3, [r7, #48]
 2772 01fe 9BB2     		uxth	r3, r3
 2773 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 828:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2774              		.loc 1 828 0
 2775 0202 3B8C     		ldrh	r3, [r7, #32]
 2776 0204 1A46     		mov	r2, r3
 2777 0206 1C49     		ldr	r1, .L150+84
 2778 0208 0020     		movs	r0, #0
 2779 020a FFF7FEFF 		bl	printNotif
 829:modem.c       ****     
 830:modem.c       ****     return gps;
 2780              		.loc 1 830 0
 2781 020e 7B68     		ldr	r3, [r7, #4]
 2782 0210 1C46     		mov	r4, r3
 2783 0212 07F11403 		add	r3, r7, #20
 2784 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2785 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2786              	.L140:
 831:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 69


 832:modem.c       **** }
 2787              		.loc 1 832 0
 2788 021c 7868     		ldr	r0, [r7, #4]
 2789 021e 3837     		adds	r7, r7, #56
 2790              		.cfi_def_cfa_offset 16
 2791 0220 BD46     		mov	sp, r7
 2792              		.cfi_def_cfa_register 13
 2793              		@ sp needed
 2794 0222 B0BD     		pop	{r4, r5, r7, pc}
 2795              	.L151:
 2796              		.align	2
 2797              	.L150:
 2798 0224 00000000 		.word	modem_state
 2799 0228 00000000 		.word	.LC0
 2800 022c 38060000 		.word	.LC66
 2801 0230 4C060000 		.word	.LC67
 2802 0234 5C060000 		.word	.LC68
 2803 0238 68060000 		.word	.LC69
 2804 023c 78060000 		.word	.LC70
 2805 0240 9C060000 		.word	.LC71
 2806 0244 AC060000 		.word	.LC72
 2807 0248 D8020000 		.word	.LC27
 2808 024c BC060000 		.word	.LC73
 2809 0250 D4060000 		.word	.LC74
 2810 0254 D8060000 		.word	.LC75
 2811 0258 E4060000 		.word	.LC76
 2812 025c 00000000 		.word	uart_received_string
 2813 0260 F0060000 		.word	.LC77
 2814 0264 0000C842 		.word	1120403456
 2815 0268 00005940 		.word	1079574528
 2816 026c 00004E40 		.word	1078853632
 2817 0270 10070000 		.word	.LC78
 2818 0274 24070000 		.word	.LC79
 2819 0278 30070000 		.word	.LC80
 2820              		.cfi_endproc
 2821              	.LFE87:
 2822              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2823              		.text
 2824              	.Letext0:
 2825              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2826              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2827              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2828              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2829              		.file 6 "testing.h"
 2830              		.file 7 "data.h"
 2831              		.file 8 "modem.h"
 2832              		.file 9 "notoriOS.h"
 2833              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2834              		.section	.debug_info,"",%progbits
 2835              	.Ldebug_info0:
 2836 0000 D20B0000 		.4byte	0xbd2
 2837 0004 0400     		.2byte	0x4
 2838 0006 00000000 		.4byte	.Ldebug_abbrev0
 2839 000a 04       		.byte	0x4
 2840 000b 01       		.uleb128 0x1
 2841 000c 64000000 		.4byte	.LASF159
 2842 0010 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 70


 2843 0011 F2030000 		.4byte	.LASF160
 2844 0015 CD020000 		.4byte	.LASF161
 2845 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2846 001d 00000000 		.4byte	0
 2847 0021 00000000 		.4byte	.Ldebug_line0
 2848 0025 02       		.uleb128 0x2
 2849 0026 01       		.byte	0x1
 2850 0027 06       		.byte	0x6
 2851 0028 67010000 		.4byte	.LASF0
 2852 002c 03       		.uleb128 0x3
 2853 002d 38000000 		.4byte	.LASF4
 2854 0031 02       		.byte	0x2
 2855 0032 1D       		.byte	0x1d
 2856 0033 37000000 		.4byte	0x37
 2857 0037 02       		.uleb128 0x2
 2858 0038 01       		.byte	0x1
 2859 0039 08       		.byte	0x8
 2860 003a C0050000 		.4byte	.LASF1
 2861 003e 02       		.uleb128 0x2
 2862 003f 02       		.byte	0x2
 2863 0040 05       		.byte	0x5
 2864 0041 2A040000 		.4byte	.LASF2
 2865 0045 02       		.uleb128 0x2
 2866 0046 02       		.byte	0x2
 2867 0047 07       		.byte	0x7
 2868 0048 75020000 		.4byte	.LASF3
 2869 004c 03       		.uleb128 0x3
 2870 004d 3F040000 		.4byte	.LASF5
 2871 0051 02       		.byte	0x2
 2872 0052 3F       		.byte	0x3f
 2873 0053 57000000 		.4byte	0x57
 2874 0057 02       		.uleb128 0x2
 2875 0058 04       		.byte	0x4
 2876 0059 05       		.byte	0x5
 2877 005a EF010000 		.4byte	.LASF6
 2878 005e 03       		.uleb128 0x3
 2879 005f 98020000 		.4byte	.LASF7
 2880 0063 02       		.byte	0x2
 2881 0064 41       		.byte	0x41
 2882 0065 69000000 		.4byte	0x69
 2883 0069 02       		.uleb128 0x2
 2884 006a 04       		.byte	0x4
 2885 006b 07       		.byte	0x7
 2886 006c 5F030000 		.4byte	.LASF8
 2887 0070 02       		.uleb128 0x2
 2888 0071 08       		.byte	0x8
 2889 0072 05       		.byte	0x5
 2890 0073 59010000 		.4byte	.LASF9
 2891 0077 02       		.uleb128 0x2
 2892 0078 08       		.byte	0x8
 2893 0079 07       		.byte	0x7
 2894 007a FF000000 		.4byte	.LASF10
 2895 007e 04       		.uleb128 0x4
 2896 007f 04       		.byte	0x4
 2897 0080 05       		.byte	0x5
 2898 0081 696E7400 		.ascii	"int\000"
 2899 0085 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 71


 2900 0086 04       		.byte	0x4
 2901 0087 07       		.byte	0x7
 2902 0088 A6060000 		.4byte	.LASF11
 2903 008c 03       		.uleb128 0x3
 2904 008d DD070000 		.4byte	.LASF12
 2905 0091 03       		.byte	0x3
 2906 0092 18       		.byte	0x18
 2907 0093 2C000000 		.4byte	0x2c
 2908 0097 03       		.uleb128 0x3
 2909 0098 B8050000 		.4byte	.LASF13
 2910 009c 03       		.byte	0x3
 2911 009d 2C       		.byte	0x2c
 2912 009e 4C000000 		.4byte	0x4c
 2913 00a2 03       		.uleb128 0x3
 2914 00a3 6D070000 		.4byte	.LASF14
 2915 00a7 03       		.byte	0x3
 2916 00a8 30       		.byte	0x30
 2917 00a9 5E000000 		.4byte	0x5e
 2918 00ad 05       		.uleb128 0x5
 2919 00ae 27020000 		.4byte	.LASF15
 2920 00b2 04       		.byte	0x4
 2921 00b3 9201     		.2byte	0x192
 2922 00b5 37000000 		.4byte	0x37
 2923 00b9 05       		.uleb128 0x5
 2924 00ba 0B000000 		.4byte	.LASF16
 2925 00be 04       		.byte	0x4
 2926 00bf 9301     		.2byte	0x193
 2927 00c1 45000000 		.4byte	0x45
 2928 00c5 05       		.uleb128 0x5
 2929 00c6 88020000 		.4byte	.LASF17
 2930 00ca 04       		.byte	0x4
 2931 00cb 9401     		.2byte	0x194
 2932 00cd 69000000 		.4byte	0x69
 2933 00d1 05       		.uleb128 0x5
 2934 00d2 E5070000 		.4byte	.LASF18
 2935 00d6 04       		.byte	0x4
 2936 00d7 9601     		.2byte	0x196
 2937 00d9 3E000000 		.4byte	0x3e
 2938 00dd 05       		.uleb128 0x5
 2939 00de 34020000 		.4byte	.LASF19
 2940 00e2 04       		.byte	0x4
 2941 00e3 9701     		.2byte	0x197
 2942 00e5 57000000 		.4byte	0x57
 2943 00e9 02       		.uleb128 0x2
 2944 00ea 04       		.byte	0x4
 2945 00eb 04       		.byte	0x4
 2946 00ec 71050000 		.4byte	.LASF20
 2947 00f0 02       		.uleb128 0x2
 2948 00f1 08       		.byte	0x8
 2949 00f2 04       		.byte	0x4
 2950 00f3 2D020000 		.4byte	.LASF21
 2951 00f7 02       		.uleb128 0x2
 2952 00f8 01       		.byte	0x1
 2953 00f9 08       		.byte	0x8
 2954 00fa 8D060000 		.4byte	.LASF22
 2955 00fe 02       		.uleb128 0x2
 2956 00ff 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 72


 2957 0100 04       		.byte	0x4
 2958 0101 81060000 		.4byte	.LASF23
 2959 0105 02       		.uleb128 0x2
 2960 0106 04       		.byte	0x4
 2961 0107 07       		.byte	0x7
 2962 0108 C1040000 		.4byte	.LASF24
 2963 010c 06       		.uleb128 0x6
 2964 010d 04       		.byte	0x4
 2965 010e F7000000 		.4byte	0xf7
 2966 0112 06       		.uleb128 0x6
 2967 0113 04       		.byte	0x4
 2968 0114 18010000 		.4byte	0x118
 2969 0118 07       		.uleb128 0x7
 2970 0119 F7000000 		.4byte	0xf7
 2971 011d 08       		.uleb128 0x8
 2972 011e F7000000 		.4byte	0xf7
 2973 0122 2D010000 		.4byte	0x12d
 2974 0126 09       		.uleb128 0x9
 2975 0127 05010000 		.4byte	0x105
 2976 012b 17       		.byte	0x17
 2977 012c 00       		.byte	0
 2978 012d 0A       		.uleb128 0xa
 2979 012e 746D00   		.ascii	"tm\000"
 2980 0131 24       		.byte	0x24
 2981 0132 05       		.byte	0x5
 2982 0133 21       		.byte	0x21
 2983 0134 A5010000 		.4byte	0x1a5
 2984 0138 0B       		.uleb128 0xb
 2985 0139 76070000 		.4byte	.LASF25
 2986 013d 05       		.byte	0x5
 2987 013e 23       		.byte	0x23
 2988 013f 7E000000 		.4byte	0x7e
 2989 0143 00       		.byte	0
 2990 0144 0B       		.uleb128 0xb
 2991 0145 BA040000 		.4byte	.LASF26
 2992 0149 05       		.byte	0x5
 2993 014a 24       		.byte	0x24
 2994 014b 7E000000 		.4byte	0x7e
 2995 014f 04       		.byte	0x4
 2996 0150 0B       		.uleb128 0xb
 2997 0151 18000000 		.4byte	.LASF27
 2998 0155 05       		.byte	0x5
 2999 0156 25       		.byte	0x25
 3000 0157 7E000000 		.4byte	0x7e
 3001 015b 08       		.byte	0x8
 3002 015c 0B       		.uleb128 0xb
 3003 015d 58070000 		.4byte	.LASF28
 3004 0161 05       		.byte	0x5
 3005 0162 26       		.byte	0x26
 3006 0163 7E000000 		.4byte	0x7e
 3007 0167 0C       		.byte	0xc
 3008 0168 0B       		.uleb128 0xb
 3009 0169 BA020000 		.4byte	.LASF29
 3010 016d 05       		.byte	0x5
 3011 016e 27       		.byte	0x27
 3012 016f 7E000000 		.4byte	0x7e
 3013 0173 10       		.byte	0x10
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 73


 3014 0174 0B       		.uleb128 0xb
 3015 0175 21030000 		.4byte	.LASF30
 3016 0179 05       		.byte	0x5
 3017 017a 28       		.byte	0x28
 3018 017b 7E000000 		.4byte	0x7e
 3019 017f 14       		.byte	0x14
 3020 0180 0B       		.uleb128 0xb
 3021 0181 62060000 		.4byte	.LASF31
 3022 0185 05       		.byte	0x5
 3023 0186 29       		.byte	0x29
 3024 0187 7E000000 		.4byte	0x7e
 3025 018b 18       		.byte	0x18
 3026 018c 0B       		.uleb128 0xb
 3027 018d 20000000 		.4byte	.LASF32
 3028 0191 05       		.byte	0x5
 3029 0192 2A       		.byte	0x2a
 3030 0193 7E000000 		.4byte	0x7e
 3031 0197 1C       		.byte	0x1c
 3032 0198 0B       		.uleb128 0xb
 3033 0199 B9030000 		.4byte	.LASF33
 3034 019d 05       		.byte	0x5
 3035 019e 2B       		.byte	0x2b
 3036 019f 7E000000 		.4byte	0x7e
 3037 01a3 20       		.byte	0x20
 3038 01a4 00       		.byte	0
 3039 01a5 0C       		.uleb128 0xc
 3040 01a6 8101     		.2byte	0x181
 3041 01a8 06       		.byte	0x6
 3042 01a9 0A       		.byte	0xa
 3043 01aa D3010000 		.4byte	0x1d3
 3044 01ae 0B       		.uleb128 0xb
 3045 01af 0B050000 		.4byte	.LASF34
 3046 01b3 06       		.byte	0x6
 3047 01b4 0C       		.byte	0xc
 3048 01b5 D3010000 		.4byte	0x1d3
 3049 01b9 00       		.byte	0
 3050 01ba 0B       		.uleb128 0xb
 3051 01bb AE070000 		.4byte	.LASF35
 3052 01bf 06       		.byte	0x6
 3053 01c0 0D       		.byte	0xd
 3054 01c1 AD000000 		.4byte	0xad
 3055 01c5 80       		.byte	0x80
 3056 01c6 0B       		.uleb128 0xb
 3057 01c7 36060000 		.4byte	.LASF36
 3058 01cb 06       		.byte	0x6
 3059 01cc 0F       		.byte	0xf
 3060 01cd E3010000 		.4byte	0x1e3
 3061 01d1 81       		.byte	0x81
 3062 01d2 00       		.byte	0
 3063 01d3 08       		.uleb128 0x8
 3064 01d4 F7000000 		.4byte	0xf7
 3065 01d8 E3010000 		.4byte	0x1e3
 3066 01dc 09       		.uleb128 0x9
 3067 01dd 05010000 		.4byte	0x105
 3068 01e1 7F       		.byte	0x7f
 3069 01e2 00       		.byte	0
 3070 01e3 08       		.uleb128 0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 74


 3071 01e4 F7000000 		.4byte	0xf7
 3072 01e8 F3010000 		.4byte	0x1f3
 3073 01ec 09       		.uleb128 0x9
 3074 01ed 05010000 		.4byte	0x105
 3075 01f1 FF       		.byte	0xff
 3076 01f2 00       		.byte	0
 3077 01f3 03       		.uleb128 0x3
 3078 01f4 1E060000 		.4byte	.LASF37
 3079 01f8 06       		.byte	0x6
 3080 01f9 10       		.byte	0x10
 3081 01fa A5010000 		.4byte	0x1a5
 3082 01fe 0D       		.uleb128 0xd
 3083 01ff 2C       		.byte	0x2c
 3084 0200 07       		.byte	0x7
 3085 0201 14       		.byte	0x14
 3086 0202 2B020000 		.4byte	0x22b
 3087 0206 0E       		.uleb128 0xe
 3088 0207 6B657900 		.ascii	"key\000"
 3089 020b 07       		.byte	0x7
 3090 020c 15       		.byte	0x15
 3091 020d 2B020000 		.4byte	0x22b
 3092 0211 00       		.byte	0
 3093 0212 0B       		.uleb128 0xb
 3094 0213 12000000 		.4byte	.LASF38
 3095 0217 07       		.byte	0x7
 3096 0218 16       		.byte	0x16
 3097 0219 2B020000 		.4byte	0x22b
 3098 021d 14       		.byte	0x14
 3099 021e 0B       		.uleb128 0xb
 3100 021f 4F080000 		.4byte	.LASF39
 3101 0223 07       		.byte	0x7
 3102 0224 17       		.byte	0x17
 3103 0225 DD000000 		.4byte	0xdd
 3104 0229 28       		.byte	0x28
 3105 022a 00       		.byte	0
 3106 022b 08       		.uleb128 0x8
 3107 022c F7000000 		.4byte	0xf7
 3108 0230 3B020000 		.4byte	0x23b
 3109 0234 09       		.uleb128 0x9
 3110 0235 05010000 		.4byte	0x105
 3111 0239 13       		.byte	0x13
 3112 023a 00       		.byte	0
 3113 023b 03       		.uleb128 0x3
 3114 023c 49030000 		.4byte	.LASF40
 3115 0240 07       		.byte	0x7
 3116 0241 19       		.byte	0x19
 3117 0242 FE010000 		.4byte	0x1fe
 3118 0246 0D       		.uleb128 0xd
 3119 0247 3C       		.byte	0x3c
 3120 0248 08       		.byte	0x8
 3121 0249 35       		.byte	0x35
 3122 024a 73020000 		.4byte	0x273
 3123 024e 0B       		.uleb128 0xb
 3124 024f 51070000 		.4byte	.LASF41
 3125 0253 08       		.byte	0x8
 3126 0254 36       		.byte	0x36
 3127 0255 2B020000 		.4byte	0x22b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 75


 3128 0259 00       		.byte	0
 3129 025a 0B       		.uleb128 0xb
 3130 025b B8060000 		.4byte	.LASF42
 3131 025f 08       		.byte	0x8
 3132 0260 37       		.byte	0x37
 3133 0261 2B020000 		.4byte	0x22b
 3134 0265 14       		.byte	0x14
 3135 0266 0B       		.uleb128 0xb
 3136 0267 31060000 		.4byte	.LASF43
 3137 026b 08       		.byte	0x8
 3138 026c 38       		.byte	0x38
 3139 026d 2B020000 		.4byte	0x22b
 3140 0271 28       		.byte	0x28
 3141 0272 00       		.byte	0
 3142 0273 03       		.uleb128 0x3
 3143 0274 CC060000 		.4byte	.LASF44
 3144 0278 08       		.byte	0x8
 3145 0279 3A       		.byte	0x3a
 3146 027a 46020000 		.4byte	0x246
 3147 027e 0D       		.uleb128 0xd
 3148 027f 20       		.byte	0x20
 3149 0280 08       		.byte	0x8
 3150 0281 3C       		.byte	0x3c
 3151 0282 E7020000 		.4byte	0x2e7
 3152 0286 0B       		.uleb128 0xb
 3153 0287 E9010000 		.4byte	.LASF45
 3154 028b 08       		.byte	0x8
 3155 028c 3D       		.byte	0x3d
 3156 028d 7E000000 		.4byte	0x7e
 3157 0291 00       		.byte	0
 3158 0292 0E       		.uleb128 0xe
 3159 0293 62657200 		.ascii	"ber\000"
 3160 0297 08       		.byte	0x8
 3161 0298 3E       		.byte	0x3e
 3162 0299 7E000000 		.4byte	0x7e
 3163 029d 04       		.byte	0x4
 3164 029e 0B       		.uleb128 0xb
 3165 029f FF050000 		.4byte	.LASF46
 3166 02a3 08       		.byte	0x8
 3167 02a4 3F       		.byte	0x3f
 3168 02a5 7E000000 		.4byte	0x7e
 3169 02a9 08       		.byte	0x8
 3170 02aa 0B       		.uleb128 0xb
 3171 02ab 73010000 		.4byte	.LASF47
 3172 02af 08       		.byte	0x8
 3173 02b0 40       		.byte	0x40
 3174 02b1 7E000000 		.4byte	0x7e
 3175 02b5 0C       		.byte	0xc
 3176 02b6 0B       		.uleb128 0xb
 3177 02b7 E4050000 		.4byte	.LASF48
 3178 02bb 08       		.byte	0x8
 3179 02bc 41       		.byte	0x41
 3180 02bd 7E000000 		.4byte	0x7e
 3181 02c1 10       		.byte	0x10
 3182 02c2 0B       		.uleb128 0xb
 3183 02c3 3D060000 		.4byte	.LASF49
 3184 02c7 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 76


 3185 02c8 42       		.byte	0x42
 3186 02c9 7E000000 		.4byte	0x7e
 3187 02cd 14       		.byte	0x14
 3188 02ce 0B       		.uleb128 0xb
 3189 02cf 95010000 		.4byte	.LASF50
 3190 02d3 08       		.byte	0x8
 3191 02d4 43       		.byte	0x43
 3192 02d5 7E000000 		.4byte	0x7e
 3193 02d9 18       		.byte	0x18
 3194 02da 0B       		.uleb128 0xb
 3195 02db 0D040000 		.4byte	.LASF51
 3196 02df 08       		.byte	0x8
 3197 02e0 44       		.byte	0x44
 3198 02e1 7E000000 		.4byte	0x7e
 3199 02e5 1C       		.byte	0x1c
 3200 02e6 00       		.byte	0
 3201 02e7 03       		.uleb128 0x3
 3202 02e8 42060000 		.4byte	.LASF52
 3203 02ec 08       		.byte	0x8
 3204 02ed 46       		.byte	0x46
 3205 02ee 7E020000 		.4byte	0x27e
 3206 02f2 0D       		.uleb128 0xd
 3207 02f3 10       		.byte	0x10
 3208 02f4 08       		.byte	0x8
 3209 02f5 48       		.byte	0x48
 3210 02f6 37030000 		.4byte	0x337
 3211 02fa 0B       		.uleb128 0xb
 3212 02fb 02050000 		.4byte	.LASF53
 3213 02ff 08       		.byte	0x8
 3214 0300 49       		.byte	0x49
 3215 0301 E9000000 		.4byte	0xe9
 3216 0305 00       		.byte	0
 3217 0306 0B       		.uleb128 0xb
 3218 0307 5A000000 		.4byte	.LASF54
 3219 030b 08       		.byte	0x8
 3220 030c 4A       		.byte	0x4a
 3221 030d E9000000 		.4byte	0xe9
 3222 0311 04       		.byte	0x4
 3223 0312 0B       		.uleb128 0xb
 3224 0313 1E020000 		.4byte	.LASF55
 3225 0317 08       		.byte	0x8
 3226 0318 4B       		.byte	0x4b
 3227 0319 E9000000 		.4byte	0xe9
 3228 031d 08       		.byte	0x8
 3229 031e 0B       		.uleb128 0xb
 3230 031f 9F030000 		.4byte	.LASF56
 3231 0323 08       		.byte	0x8
 3232 0324 4C       		.byte	0x4c
 3233 0325 B9000000 		.4byte	0xb9
 3234 0329 0C       		.byte	0xc
 3235 032a 0B       		.uleb128 0xb
 3236 032b 60070000 		.4byte	.LASF57
 3237 032f 08       		.byte	0x8
 3238 0330 4D       		.byte	0x4d
 3239 0331 AD000000 		.4byte	0xad
 3240 0335 0E       		.byte	0xe
 3241 0336 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 77


 3242 0337 03       		.uleb128 0x3
 3243 0338 D9060000 		.4byte	.LASF58
 3244 033c 08       		.byte	0x8
 3245 033d 4F       		.byte	0x4f
 3246 033e F2020000 		.4byte	0x2f2
 3247 0342 0D       		.uleb128 0xd
 3248 0343 05       		.byte	0x5
 3249 0344 08       		.byte	0x8
 3250 0345 52       		.byte	0x52
 3251 0346 87030000 		.4byte	0x387
 3252 034a 0B       		.uleb128 0xb
 3253 034b 3A020000 		.4byte	.LASF59
 3254 034f 08       		.byte	0x8
 3255 0350 54       		.byte	0x54
 3256 0351 AD000000 		.4byte	0xad
 3257 0355 00       		.byte	0
 3258 0356 0B       		.uleb128 0xb
 3259 0357 96050000 		.4byte	.LASF60
 3260 035b 08       		.byte	0x8
 3261 035c 56       		.byte	0x56
 3262 035d 87030000 		.4byte	0x387
 3263 0361 01       		.byte	0x1
 3264 0362 0B       		.uleb128 0xb
 3265 0363 F1060000 		.4byte	.LASF61
 3266 0367 08       		.byte	0x8
 3267 0368 58       		.byte	0x58
 3268 0369 AD000000 		.4byte	0xad
 3269 036d 02       		.byte	0x2
 3270 036e 0B       		.uleb128 0xb
 3271 036f E9050000 		.4byte	.LASF62
 3272 0373 08       		.byte	0x8
 3273 0374 5A       		.byte	0x5a
 3274 0375 AD000000 		.4byte	0xad
 3275 0379 03       		.byte	0x3
 3276 037a 0B       		.uleb128 0xb
 3277 037b C1020000 		.4byte	.LASF63
 3278 037f 08       		.byte	0x8
 3279 0380 5D       		.byte	0x5d
 3280 0381 AD000000 		.4byte	0xad
 3281 0385 04       		.byte	0x4
 3282 0386 00       		.byte	0
 3283 0387 02       		.uleb128 0x2
 3284 0388 01       		.byte	0x1
 3285 0389 02       		.byte	0x2
 3286 038a B2050000 		.4byte	.LASF64
 3287 038e 03       		.uleb128 0x3
 3288 038f 85040000 		.4byte	.LASF65
 3289 0393 08       		.byte	0x8
 3290 0394 5F       		.byte	0x5f
 3291 0395 42030000 		.4byte	0x342
 3292 0399 0D       		.uleb128 0xd
 3293 039a 06       		.byte	0x6
 3294 039b 09       		.byte	0x9
 3295 039c 2D       		.byte	0x2d
 3296 039d D2030000 		.4byte	0x3d2
 3297 03a1 0B       		.uleb128 0xb
 3298 03a2 78010000 		.4byte	.LASF66
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 78


 3299 03a6 09       		.byte	0x9
 3300 03a7 2F       		.byte	0x2f
 3301 03a8 B9000000 		.4byte	0xb9
 3302 03ac 00       		.byte	0
 3303 03ad 0B       		.uleb128 0xb
 3304 03ae F8010000 		.4byte	.LASF67
 3305 03b2 09       		.byte	0x9
 3306 03b3 30       		.byte	0x30
 3307 03b4 D1000000 		.4byte	0xd1
 3308 03b8 02       		.byte	0x2
 3309 03b9 0B       		.uleb128 0xb
 3310 03ba FD070000 		.4byte	.LASF68
 3311 03be 09       		.byte	0x9
 3312 03bf 31       		.byte	0x31
 3313 03c0 AD000000 		.4byte	0xad
 3314 03c4 04       		.byte	0x4
 3315 03c5 0B       		.uleb128 0xb
 3316 03c6 42000000 		.4byte	.LASF69
 3317 03ca 09       		.byte	0x9
 3318 03cb 32       		.byte	0x32
 3319 03cc AD000000 		.4byte	0xad
 3320 03d0 05       		.byte	0x5
 3321 03d1 00       		.byte	0
 3322 03d2 03       		.uleb128 0x3
 3323 03d3 AC050000 		.4byte	.LASF70
 3324 03d7 09       		.byte	0x9
 3325 03d8 35       		.byte	0x35
 3326 03d9 DD030000 		.4byte	0x3dd
 3327 03dd 0F       		.uleb128 0xf
 3328 03de 99030000 		.4byte	0x399
 3329 03e2 0D       		.uleb128 0xd
 3330 03e3 1C       		.byte	0x1c
 3331 03e4 09       		.byte	0x9
 3332 03e5 38       		.byte	0x38
 3333 03e6 03040000 		.4byte	0x403
 3334 03ea 0B       		.uleb128 0xb
 3335 03eb C2030000 		.4byte	.LASF71
 3336 03ef 09       		.byte	0x9
 3337 03f0 3A       		.byte	0x3a
 3338 03f1 03040000 		.4byte	0x403
 3339 03f5 00       		.byte	0
 3340 03f6 0B       		.uleb128 0xb
 3341 03f7 D5030000 		.4byte	.LASF72
 3342 03fb 09       		.byte	0x9
 3343 03fc 3B       		.byte	0x3b
 3344 03fd 1D010000 		.4byte	0x11d
 3345 0401 04       		.byte	0x4
 3346 0402 00       		.byte	0
 3347 0403 06       		.uleb128 0x6
 3348 0404 04       		.byte	0x4
 3349 0405 73020000 		.4byte	0x273
 3350 0409 03       		.uleb128 0x3
 3351 040a 7A040000 		.4byte	.LASF73
 3352 040e 09       		.byte	0x9
 3353 040f 3D       		.byte	0x3d
 3354 0410 E2030000 		.4byte	0x3e2
 3355 0414 0D       		.uleb128 0xd
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 79


 3356 0415 68       		.byte	0x68
 3357 0416 09       		.byte	0x9
 3358 0417 43       		.byte	0x43
 3359 0418 35040000 		.4byte	0x435
 3360 041c 0B       		.uleb128 0xb
 3361 041d CD030000 		.4byte	.LASF74
 3362 0421 09       		.byte	0x9
 3363 0422 48       		.byte	0x48
 3364 0423 35040000 		.4byte	0x435
 3365 0427 00       		.byte	0
 3366 0428 0B       		.uleb128 0xb
 3367 0429 B1030000 		.4byte	.LASF75
 3368 042d 09       		.byte	0x9
 3369 042e 49       		.byte	0x49
 3370 042f 7E000000 		.4byte	0x7e
 3371 0433 64       		.byte	0x64
 3372 0434 00       		.byte	0
 3373 0435 08       		.uleb128 0x8
 3374 0436 F7000000 		.4byte	0xf7
 3375 043a 45040000 		.4byte	0x445
 3376 043e 09       		.uleb128 0x9
 3377 043f 05010000 		.4byte	0x105
 3378 0443 63       		.byte	0x63
 3379 0444 00       		.byte	0
 3380 0445 03       		.uleb128 0x3
 3381 0446 CE070000 		.4byte	.LASF76
 3382 044a 09       		.byte	0x9
 3383 044b 4F       		.byte	0x4f
 3384 044c 14040000 		.4byte	0x414
 3385 0450 10       		.uleb128 0x10
 3386 0451 9F050000 		.4byte	.LASF108
 3387 0455 01       		.byte	0x1
 3388 0456 12       		.byte	0x12
 3389 0457 00000000 		.4byte	.LFB64
 3390 045b 44000000 		.4byte	.LFE64-.LFB64
 3391 045f 01       		.uleb128 0x1
 3392 0460 9C       		.byte	0x9c
 3393 0461 11       		.uleb128 0x11
 3394 0462 77050000 		.4byte	.LASF77
 3395 0466 01       		.byte	0x1
 3396 0467 1C       		.byte	0x1c
 3397 0468 00000000 		.4byte	.LFB65
 3398 046c 6C000000 		.4byte	.LFE65-.LFB65
 3399 0470 01       		.uleb128 0x1
 3400 0471 9C       		.byte	0x9c
 3401 0472 11       		.uleb128 0x11
 3402 0473 39070000 		.4byte	.LASF78
 3403 0477 01       		.byte	0x1
 3404 0478 36       		.byte	0x36
 3405 0479 00000000 		.4byte	.LFB66
 3406 047d 32000000 		.4byte	.LFE66-.LFB66
 3407 0481 01       		.uleb128 0x1
 3408 0482 9C       		.byte	0x9c
 3409 0483 11       		.uleb128 0x11
 3410 0484 33030000 		.4byte	.LASF79
 3411 0488 01       		.byte	0x1
 3412 0489 46       		.byte	0x46
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 80


 3413 048a 00000000 		.4byte	.LFB67
 3414 048e 20000000 		.4byte	.LFE67-.LFB67
 3415 0492 01       		.uleb128 0x1
 3416 0493 9C       		.byte	0x9c
 3417 0494 11       		.uleb128 0x11
 3418 0495 3E080000 		.4byte	.LASF80
 3419 0499 01       		.byte	0x1
 3420 049a 4F       		.byte	0x4f
 3421 049b 00000000 		.4byte	.LFB68
 3422 049f 40000000 		.4byte	.LFE68-.LFB68
 3423 04a3 01       		.uleb128 0x1
 3424 04a4 9C       		.byte	0x9c
 3425 04a5 12       		.uleb128 0x12
 3426 04a6 E3030000 		.4byte	.LASF94
 3427 04aa 01       		.byte	0x1
 3428 04ab 61       		.byte	0x61
 3429 04ac AD000000 		.4byte	0xad
 3430 04b0 00000000 		.4byte	.LFB69
 3431 04b4 DC000000 		.4byte	.LFE69-.LFB69
 3432 04b8 01       		.uleb128 0x1
 3433 04b9 9C       		.byte	0x9c
 3434 04ba 19050000 		.4byte	0x519
 3435 04be 13       		.uleb128 0x13
 3436 04bf EB070000 		.4byte	.LASF81
 3437 04c3 01       		.byte	0x1
 3438 04c4 6A       		.byte	0x6a
 3439 04c5 AD000000 		.4byte	0xad
 3440 04c9 02       		.uleb128 0x2
 3441 04ca 91       		.byte	0x91
 3442 04cb 77       		.sleb128 -9
 3443 04cc 13       		.uleb128 0x13
 3444 04cd F4070000 		.4byte	.LASF82
 3445 04d1 01       		.byte	0x1
 3446 04d2 6B       		.byte	0x6b
 3447 04d3 AD000000 		.4byte	0xad
 3448 04d7 02       		.uleb128 0x2
 3449 04d8 91       		.byte	0x91
 3450 04d9 74       		.sleb128 -12
 3451 04da 13       		.uleb128 0x13
 3452 04db 0B080000 		.4byte	.LASF83
 3453 04df 01       		.byte	0x1
 3454 04e0 6D       		.byte	0x6d
 3455 04e1 57000000 		.4byte	0x57
 3456 04e5 02       		.uleb128 0x2
 3457 04e6 91       		.byte	0x91
 3458 04e7 70       		.sleb128 -16
 3459 04e8 14       		.uleb128 0x14
 3460 04e9 26000000 		.4byte	.LBB2
 3461 04ed 4A000000 		.4byte	.LBE2-.LBB2
 3462 04f1 13       		.uleb128 0x13
 3463 04f2 F4070000 		.4byte	.LASF82
 3464 04f6 01       		.byte	0x1
 3465 04f7 70       		.byte	0x70
 3466 04f8 AD000000 		.4byte	0xad
 3467 04fc 02       		.uleb128 0x2
 3468 04fd 91       		.byte	0x91
 3469 04fe 76       		.sleb128 -10
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 81


 3470 04ff 14       		.uleb128 0x14
 3471 0500 2C000000 		.4byte	.LBB3
 3472 0504 2A000000 		.4byte	.LBE3-.LBB3
 3473 0508 13       		.uleb128 0x13
 3474 0509 55030000 		.4byte	.LASF84
 3475 050d 01       		.byte	0x1
 3476 050e 72       		.byte	0x72
 3477 050f AD000000 		.4byte	0xad
 3478 0513 02       		.uleb128 0x2
 3479 0514 91       		.byte	0x91
 3480 0515 75       		.sleb128 -11
 3481 0516 00       		.byte	0
 3482 0517 00       		.byte	0
 3483 0518 00       		.byte	0
 3484 0519 11       		.uleb128 0x11
 3485 051a 6A060000 		.4byte	.LASF85
 3486 051e 01       		.byte	0x1
 3487 051f 93       		.byte	0x93
 3488 0520 00000000 		.4byte	.LFB70
 3489 0524 1C000000 		.4byte	.LFE70-.LFB70
 3490 0528 01       		.uleb128 0x1
 3491 0529 9C       		.byte	0x9c
 3492 052a 11       		.uleb128 0x11
 3493 052b 50060000 		.4byte	.LASF86
 3494 052f 01       		.byte	0x1
 3495 0530 9B       		.byte	0x9b
 3496 0531 00000000 		.4byte	.LFB71
 3497 0535 28000000 		.4byte	.LFE71-.LFB71
 3498 0539 01       		.uleb128 0x1
 3499 053a 9C       		.byte	0x9c
 3500 053b 15       		.uleb128 0x15
 3501 053c 69040000 		.4byte	.LASF98
 3502 0540 01       		.byte	0x1
 3503 0541 A6       		.byte	0xa6
 3504 0542 8C000000 		.4byte	0x8c
 3505 0546 00000000 		.4byte	.LFB72
 3506 054a C8000000 		.4byte	.LFE72-.LFB72
 3507 054e 01       		.uleb128 0x1
 3508 054f 9C       		.byte	0x9c
 3509 0550 CD050000 		.4byte	0x5cd
 3510 0554 16       		.uleb128 0x16
 3511 0555 57050000 		.4byte	.LASF87
 3512 0559 01       		.byte	0x1
 3513 055a A6       		.byte	0xa6
 3514 055b 0C010000 		.4byte	0x10c
 3515 055f 02       		.uleb128 0x2
 3516 0560 91       		.byte	0x91
 3517 0561 5C       		.sleb128 -36
 3518 0562 16       		.uleb128 0x16
 3519 0563 15080000 		.4byte	.LASF88
 3520 0567 01       		.byte	0x1
 3521 0568 A6       		.byte	0xa6
 3522 0569 0C010000 		.4byte	0x10c
 3523 056d 02       		.uleb128 0x2
 3524 056e 91       		.byte	0x91
 3525 056f 58       		.sleb128 -40
 3526 0570 16       		.uleb128 0x16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 82


 3527 0571 80030000 		.4byte	.LASF89
 3528 0575 01       		.byte	0x1
 3529 0576 A6       		.byte	0xa6
 3530 0577 A2000000 		.4byte	0xa2
 3531 057b 02       		.uleb128 0x2
 3532 057c 91       		.byte	0x91
 3533 057d 54       		.sleb128 -44
 3534 057e 13       		.uleb128 0x13
 3535 057f 5E040000 		.4byte	.LASF90
 3536 0583 01       		.byte	0x1
 3537 0584 A8       		.byte	0xa8
 3538 0585 C5000000 		.4byte	0xc5
 3539 0589 02       		.uleb128 0x2
 3540 058a 91       		.byte	0x91
 3541 058b 74       		.sleb128 -12
 3542 058c 14       		.uleb128 0x14
 3543 058d 16000000 		.4byte	.LBB4
 3544 0591 88000000 		.4byte	.LBE4-.LBB4
 3545 0595 13       		.uleb128 0x13
 3546 0596 60050000 		.4byte	.LASF91
 3547 059a 01       		.byte	0x1
 3548 059b AC       		.byte	0xac
 3549 059c 0C010000 		.4byte	0x10c
 3550 05a0 02       		.uleb128 0x2
 3551 05a1 91       		.byte	0x91
 3552 05a2 64       		.sleb128 -28
 3553 05a3 13       		.uleb128 0x13
 3554 05a4 DE050000 		.4byte	.LASF92
 3555 05a8 01       		.byte	0x1
 3556 05a9 AD       		.byte	0xad
 3557 05aa A2000000 		.4byte	0xa2
 3558 05ae 02       		.uleb128 0x2
 3559 05af 91       		.byte	0x91
 3560 05b0 6C       		.sleb128 -20
 3561 05b1 17       		.uleb128 0x17
 3562 05b2 6900     		.ascii	"i\000"
 3563 05b4 01       		.byte	0x1
 3564 05b5 AE       		.byte	0xae
 3565 05b6 A2000000 		.4byte	0xa2
 3566 05ba 02       		.uleb128 0x2
 3567 05bb 91       		.byte	0x91
 3568 05bc 70       		.sleb128 -16
 3569 05bd 13       		.uleb128 0x13
 3570 05be 8F020000 		.4byte	.LASF93
 3571 05c2 01       		.byte	0x1
 3572 05c3 AE       		.byte	0xae
 3573 05c4 A2000000 		.4byte	0xa2
 3574 05c8 02       		.uleb128 0x2
 3575 05c9 91       		.byte	0x91
 3576 05ca 68       		.sleb128 -24
 3577 05cb 00       		.byte	0
 3578 05cc 00       		.byte	0
 3579 05cd 12       		.uleb128 0x12
 3580 05ce 2C050000 		.4byte	.LASF95
 3581 05d2 01       		.byte	0x1
 3582 05d3 DA       		.byte	0xda
 3583 05d4 F3010000 		.4byte	0x1f3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 83


 3584 05d8 00000000 		.4byte	.LFB73
 3585 05dc 00010000 		.4byte	.LFE73-.LFB73
 3586 05e0 01       		.uleb128 0x1
 3587 05e1 9C       		.byte	0x9c
 3588 05e2 24060000 		.4byte	0x624
 3589 05e6 13       		.uleb128 0x13
 3590 05e7 2E010000 		.4byte	.LASF96
 3591 05eb 01       		.byte	0x1
 3592 05ec DC       		.byte	0xdc
 3593 05ed F3010000 		.4byte	0x1f3
 3594 05f1 03       		.uleb128 0x3
 3595 05f2 91       		.byte	0x91
 3596 05f3 E47C     		.sleb128 -412
 3597 05f5 14       		.uleb128 0x14
 3598 05f6 4A000000 		.4byte	.LBB5
 3599 05fa 86000000 		.4byte	.LBE5-.LBB5
 3600 05fe 17       		.uleb128 0x17
 3601 05ff 6900     		.ascii	"i\000"
 3602 0601 01       		.byte	0x1
 3603 0602 E3       		.byte	0xe3
 3604 0603 7E000000 		.4byte	0x7e
 3605 0607 02       		.uleb128 0x2
 3606 0608 91       		.byte	0x91
 3607 0609 6C       		.sleb128 -20
 3608 060a 14       		.uleb128 0x14
 3609 060b 70000000 		.4byte	.LBB6
 3610 060f 46000000 		.4byte	.LBE6-.LBB6
 3611 0613 13       		.uleb128 0x13
 3612 0614 68020000 		.4byte	.LASF97
 3613 0618 01       		.byte	0x1
 3614 0619 F0       		.byte	0xf0
 3615 061a 57000000 		.4byte	0x57
 3616 061e 02       		.uleb128 0x2
 3617 061f 91       		.byte	0x91
 3618 0620 68       		.sleb128 -24
 3619 0621 00       		.byte	0
 3620 0622 00       		.byte	0
 3621 0623 00       		.byte	0
 3622 0624 18       		.uleb128 0x18
 3623 0625 71030000 		.4byte	.LASF99
 3624 0629 01       		.byte	0x1
 3625 062a 0401     		.2byte	0x104
 3626 062c AD000000 		.4byte	0xad
 3627 0630 00000000 		.4byte	.LFB74
 3628 0634 78000000 		.4byte	.LFE74-.LFB74
 3629 0638 01       		.uleb128 0x1
 3630 0639 9C       		.byte	0x9c
 3631 063a 95060000 		.4byte	0x695
 3632 063e 19       		.uleb128 0x19
 3633 063f 49040000 		.4byte	.LASF100
 3634 0643 01       		.byte	0x1
 3635 0644 0401     		.2byte	0x104
 3636 0646 0C010000 		.4byte	0x10c
 3637 064a 02       		.uleb128 0x2
 3638 064b 91       		.byte	0x91
 3639 064c 6C       		.sleb128 -20
 3640 064d 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 84


 3641 064e FA030000 		.4byte	.LASF101
 3642 0652 01       		.byte	0x1
 3643 0653 0401     		.2byte	0x104
 3644 0655 12010000 		.4byte	0x112
 3645 0659 02       		.uleb128 0x2
 3646 065a 91       		.byte	0x91
 3647 065b 68       		.sleb128 -24
 3648 065c 19       		.uleb128 0x19
 3649 065d 20040000 		.4byte	.LASF102
 3650 0661 01       		.byte	0x1
 3651 0662 0401     		.2byte	0x104
 3652 0664 12010000 		.4byte	0x112
 3653 0668 02       		.uleb128 0x2
 3654 0669 91       		.byte	0x91
 3655 066a 64       		.sleb128 -28
 3656 066b 19       		.uleb128 0x19
 3657 066c 06040000 		.4byte	.LASF103
 3658 0670 01       		.byte	0x1
 3659 0671 0401     		.2byte	0x104
 3660 0673 0C010000 		.4byte	0x10c
 3661 0677 02       		.uleb128 0x2
 3662 0678 91       		.byte	0x91
 3663 0679 60       		.sleb128 -32
 3664 067a 1A       		.uleb128 0x1a
 3665 067b 6100     		.ascii	"a\000"
 3666 067d 01       		.byte	0x1
 3667 067e 0601     		.2byte	0x106
 3668 0680 0C010000 		.4byte	0x10c
 3669 0684 02       		.uleb128 0x2
 3670 0685 91       		.byte	0x91
 3671 0686 74       		.sleb128 -12
 3672 0687 1A       		.uleb128 0x1a
 3673 0688 6200     		.ascii	"b\000"
 3674 068a 01       		.byte	0x1
 3675 068b 0601     		.2byte	0x106
 3676 068d 0C010000 		.4byte	0x10c
 3677 0691 02       		.uleb128 0x2
 3678 0692 91       		.byte	0x91
 3679 0693 70       		.sleb128 -16
 3680 0694 00       		.byte	0
 3681 0695 1B       		.uleb128 0x1b
 3682 0696 92060000 		.4byte	.LASF104
 3683 069a 01       		.byte	0x1
 3684 069b 2301     		.2byte	0x123
 3685 069d AD000000 		.4byte	0xad
 3686 06a1 00000000 		.4byte	.LFB75
 3687 06a5 3C010000 		.4byte	.LFE75-.LFB75
 3688 06a9 01       		.uleb128 0x1
 3689 06aa 9C       		.byte	0x9c
 3690 06ab C7060000 		.4byte	0x6c7
 3691 06af 14       		.uleb128 0x14
 3692 06b0 2E000000 		.4byte	.LBB7
 3693 06b4 32000000 		.4byte	.LBE7-.LBB7
 3694 06b8 1A       		.uleb128 0x1a
 3695 06b9 6900     		.ascii	"i\000"
 3696 06bb 01       		.byte	0x1
 3697 06bc 3101     		.2byte	0x131
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 85


 3698 06be AD000000 		.4byte	0xad
 3699 06c2 02       		.uleb128 0x2
 3700 06c3 91       		.byte	0x91
 3701 06c4 77       		.sleb128 -9
 3702 06c5 00       		.byte	0
 3703 06c6 00       		.byte	0
 3704 06c7 1B       		.uleb128 0x1b
 3705 06c8 D0040000 		.4byte	.LASF105
 3706 06cc 01       		.byte	0x1
 3707 06cd 6A01     		.2byte	0x16a
 3708 06cf AD000000 		.4byte	0xad
 3709 06d3 00000000 		.4byte	.LFB76
 3710 06d7 B8000000 		.4byte	.LFE76-.LFB76
 3711 06db 01       		.uleb128 0x1
 3712 06dc 9C       		.byte	0x9c
 3713 06dd 0A070000 		.4byte	0x70a
 3714 06e1 1C       		.uleb128 0x1c
 3715 06e2 AE070000 		.4byte	.LASF35
 3716 06e6 01       		.byte	0x1
 3717 06e7 6E01     		.2byte	0x16e
 3718 06e9 AD000000 		.4byte	0xad
 3719 06ed 02       		.uleb128 0x2
 3720 06ee 91       		.byte	0x91
 3721 06ef 77       		.sleb128 -9
 3722 06f0 14       		.uleb128 0x14
 3723 06f1 36000000 		.4byte	.LBB8
 3724 06f5 48000000 		.4byte	.LBE8-.LBB8
 3725 06f9 1C       		.uleb128 0x1c
 3726 06fa 4E040000 		.4byte	.LASF106
 3727 06fe 01       		.byte	0x1
 3728 06ff 7601     		.2byte	0x176
 3729 0701 0A070000 		.4byte	0x70a
 3730 0705 02       		.uleb128 0x2
 3731 0706 91       		.byte	0x91
 3732 0707 6C       		.sleb128 -20
 3733 0708 00       		.byte	0
 3734 0709 00       		.byte	0
 3735 070a 08       		.uleb128 0x8
 3736 070b F7000000 		.4byte	0xf7
 3737 070f 1A070000 		.4byte	0x71a
 3738 0713 09       		.uleb128 0x9
 3739 0714 05010000 		.4byte	0x105
 3740 0718 09       		.byte	0x9
 3741 0719 00       		.byte	0
 3742 071a 1D       		.uleb128 0x1d
 3743 071b C2010000 		.4byte	.LASF107
 3744 071f 01       		.byte	0x1
 3745 0720 8801     		.2byte	0x188
 3746 0722 00000000 		.4byte	.LFB77
 3747 0726 1C000000 		.4byte	.LFE77-.LFB77
 3748 072a 01       		.uleb128 0x1
 3749 072b 9C       		.byte	0x9c
 3750 072c 1E       		.uleb128 0x1e
 3751 072d FE060000 		.4byte	.LASF109
 3752 0731 01       		.byte	0x1
 3753 0732 9801     		.2byte	0x198
 3754 0734 AD000000 		.4byte	0xad
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 86


 3755 0738 00000000 		.4byte	.LFB78
 3756 073c 28000000 		.4byte	.LFE78-.LFB78
 3757 0740 01       		.uleb128 0x1
 3758 0741 9C       		.byte	0x9c
 3759 0742 1F       		.uleb128 0x1f
 3760 0743 88030000 		.4byte	.LASF112
 3761 0747 01       		.byte	0x1
 3762 0748 A301     		.2byte	0x1a3
 3763 074a 00000000 		.4byte	.LFB79
 3764 074e 84000000 		.4byte	.LFE79-.LFB79
 3765 0752 01       		.uleb128 0x1
 3766 0753 9C       		.byte	0x9c
 3767 0754 68070000 		.4byte	0x768
 3768 0758 1C       		.uleb128 0x1c
 3769 0759 37050000 		.4byte	.LASF110
 3770 075d 01       		.byte	0x1
 3771 075e B001     		.2byte	0x1b0
 3772 0760 7E000000 		.4byte	0x7e
 3773 0764 02       		.uleb128 0x2
 3774 0765 91       		.byte	0x91
 3775 0766 74       		.sleb128 -12
 3776 0767 00       		.byte	0
 3777 0768 20       		.uleb128 0x20
 3778 0769 01030000 		.4byte	.LASF111
 3779 076d 01       		.byte	0x1
 3780 076e C201     		.2byte	0x1c2
 3781 0770 00000000 		.4byte	.LFB80
 3782 0774 30000000 		.4byte	.LFE80-.LFB80
 3783 0778 01       		.uleb128 0x1
 3784 0779 9C       		.byte	0x9c
 3785 077a 1F       		.uleb128 0x1f
 3786 077b 7D070000 		.4byte	.LASF113
 3787 077f 01       		.byte	0x1
 3788 0780 CB01     		.2byte	0x1cb
 3789 0782 00000000 		.4byte	.LFB81
 3790 0786 0C020000 		.4byte	.LFE81-.LFB81
 3791 078a 01       		.uleb128 0x1
 3792 078b 9C       		.byte	0x9c
 3793 078c 2D080000 		.4byte	0x82d
 3794 0790 1C       		.uleb128 0x1c
 3795 0791 F3050000 		.4byte	.LASF114
 3796 0795 01       		.byte	0x1
 3797 0796 CE01     		.2byte	0x1ce
 3798 0798 0A070000 		.4byte	0x70a
 3799 079c 02       		.uleb128 0x2
 3800 079d 91       		.byte	0x91
 3801 079e 64       		.sleb128 -28
 3802 079f 1C       		.uleb128 0x1c
 3803 07a0 5D020000 		.4byte	.LASF115
 3804 07a4 01       		.byte	0x1
 3805 07a5 CF01     		.2byte	0x1cf
 3806 07a7 0A070000 		.4byte	0x70a
 3807 07ab 02       		.uleb128 0x2
 3808 07ac 91       		.byte	0x91
 3809 07ad 58       		.sleb128 -40
 3810 07ae 1C       		.uleb128 0x1c
 3811 07af A0070000 		.4byte	.LASF116
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 87


 3812 07b3 01       		.byte	0x1
 3813 07b4 D001     		.2byte	0x1d0
 3814 07b6 0A070000 		.4byte	0x70a
 3815 07ba 02       		.uleb128 0x2
 3816 07bb 91       		.byte	0x91
 3817 07bc 4C       		.sleb128 -52
 3818 07bd 1C       		.uleb128 0x1c
 3819 07be 88050000 		.4byte	.LASF117
 3820 07c2 01       		.byte	0x1
 3821 07c3 D101     		.2byte	0x1d1
 3822 07c5 0A070000 		.4byte	0x70a
 3823 07c9 02       		.uleb128 0x2
 3824 07ca 91       		.byte	0x91
 3825 07cb 40       		.sleb128 -64
 3826 07cc 1C       		.uleb128 0x1c
 3827 07cd F4020000 		.4byte	.LASF118
 3828 07d1 01       		.byte	0x1
 3829 07d2 D201     		.2byte	0x1d2
 3830 07d4 0A070000 		.4byte	0x70a
 3831 07d8 03       		.uleb128 0x3
 3832 07d9 91       		.byte	0x91
 3833 07da B47F     		.sleb128 -76
 3834 07dc 1C       		.uleb128 0x1c
 3835 07dd 3A020000 		.4byte	.LASF59
 3836 07e1 01       		.byte	0x1
 3837 07e2 E201     		.2byte	0x1e2
 3838 07e4 7E000000 		.4byte	0x7e
 3839 07e8 03       		.uleb128 0x3
 3840 07e9 91       		.byte	0x91
 3841 07ea B07F     		.sleb128 -80
 3842 07ec 1C       		.uleb128 0x1c
 3843 07ed 96050000 		.4byte	.LASF60
 3844 07f1 01       		.byte	0x1
 3845 07f2 E201     		.2byte	0x1e2
 3846 07f4 7E000000 		.4byte	0x7e
 3847 07f8 03       		.uleb128 0x3
 3848 07f9 91       		.byte	0x91
 3849 07fa AC7F     		.sleb128 -84
 3850 07fc 1C       		.uleb128 0x1c
 3851 07fd 16010000 		.4byte	.LASF119
 3852 0801 01       		.byte	0x1
 3853 0802 E201     		.2byte	0x1e2
 3854 0804 7E000000 		.4byte	0x7e
 3855 0808 03       		.uleb128 0x3
 3856 0809 91       		.byte	0x91
 3857 080a A87F     		.sleb128 -88
 3858 080c 1C       		.uleb128 0x1c
 3859 080d 9C040000 		.4byte	.LASF120
 3860 0811 01       		.byte	0x1
 3861 0812 E201     		.2byte	0x1e2
 3862 0814 7E000000 		.4byte	0x7e
 3863 0818 03       		.uleb128 0x3
 3864 0819 91       		.byte	0x91
 3865 081a A47F     		.sleb128 -92
 3866 081c 1C       		.uleb128 0x1c
 3867 081d 53040000 		.4byte	.LASF121
 3868 0821 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 88


 3869 0822 E201     		.2byte	0x1e2
 3870 0824 7E000000 		.4byte	0x7e
 3871 0828 03       		.uleb128 0x3
 3872 0829 91       		.byte	0x91
 3873 082a A07F     		.sleb128 -96
 3874 082c 00       		.byte	0
 3875 082d 1F       		.uleb128 0x1f
 3876 082e 44020000 		.4byte	.LASF122
 3877 0832 01       		.byte	0x1
 3878 0833 0A02     		.2byte	0x20a
 3879 0835 00000000 		.4byte	.LFB82
 3880 0839 68010000 		.4byte	.LFE82-.LFB82
 3881 083d 01       		.uleb128 0x1
 3882 083e 9C       		.byte	0x9c
 3883 083f 5D080000 		.4byte	0x85d
 3884 0843 14       		.uleb128 0x14
 3885 0844 DA000000 		.4byte	.LBB9
 3886 0848 38000000 		.4byte	.LBE9-.LBB9
 3887 084c 1C       		.uleb128 0x1c
 3888 084d B3060000 		.4byte	.LASF123
 3889 0851 01       		.byte	0x1
 3890 0852 3802     		.2byte	0x238
 3891 0854 0A070000 		.4byte	0x70a
 3892 0858 02       		.uleb128 0x2
 3893 0859 91       		.byte	0x91
 3894 085a 6C       		.sleb128 -20
 3895 085b 00       		.byte	0
 3896 085c 00       		.byte	0
 3897 085d 1B       		.uleb128 0x1b
 3898 085e A3020000 		.4byte	.LASF124
 3899 0862 01       		.byte	0x1
 3900 0863 4B02     		.2byte	0x24b
 3901 0865 57000000 		.4byte	0x57
 3902 0869 00000000 		.4byte	.LFB83
 3903 086d 44010000 		.4byte	.LFE83-.LFB83
 3904 0871 01       		.uleb128 0x1
 3905 0872 9C       		.byte	0x9c
 3906 0873 19090000 		.4byte	0x919
 3907 0877 1C       		.uleb128 0x1c
 3908 0878 34040000 		.4byte	.LASF125
 3909 087c 01       		.byte	0x1
 3910 087d 5602     		.2byte	0x256
 3911 087f 57000000 		.4byte	0x57
 3912 0883 02       		.uleb128 0x2
 3913 0884 91       		.byte	0x91
 3914 0885 74       		.sleb128 -12
 3915 0886 14       		.uleb128 0x14
 3916 0887 30000000 		.4byte	.LBB10
 3917 088b DE000000 		.4byte	.LBE10-.LBB10
 3918 088f 1C       		.uleb128 0x1c
 3919 0890 68020000 		.4byte	.LASF97
 3920 0894 01       		.byte	0x1
 3921 0895 5B02     		.2byte	0x25b
 3922 0897 19090000 		.4byte	0x919
 3923 089b 02       		.uleb128 0x2
 3924 089c 91       		.byte	0x91
 3925 089d 54       		.sleb128 -44
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 89


 3926 089e 1A       		.uleb128 0x1a
 3927 089f 7400     		.ascii	"t\000"
 3928 08a1 01       		.byte	0x1
 3929 08a2 6102     		.2byte	0x261
 3930 08a4 2D010000 		.4byte	0x12d
 3931 08a8 03       		.uleb128 0x3
 3932 08a9 91       		.byte	0x91
 3933 08aa 947F     		.sleb128 -108
 3934 08ac 1C       		.uleb128 0x1c
 3935 08ad E4010000 		.4byte	.LASF126
 3936 08b1 01       		.byte	0x1
 3937 08b2 6402     		.2byte	0x264
 3938 08b4 7E000000 		.4byte	0x7e
 3939 08b8 02       		.uleb128 0x2
 3940 08b9 91       		.byte	0x91
 3941 08ba 50       		.sleb128 -48
 3942 08bb 1C       		.uleb128 0x1c
 3943 08bc CA040000 		.4byte	.LASF127
 3944 08c0 01       		.byte	0x1
 3945 08c1 6402     		.2byte	0x264
 3946 08c3 7E000000 		.4byte	0x7e
 3947 08c7 02       		.uleb128 0x2
 3948 08c8 91       		.byte	0x91
 3949 08c9 4C       		.sleb128 -52
 3950 08ca 1A       		.uleb128 0x1a
 3951 08cb 64617900 		.ascii	"day\000"
 3952 08cf 01       		.byte	0x1
 3953 08d0 6402     		.2byte	0x264
 3954 08d2 7E000000 		.4byte	0x7e
 3955 08d6 02       		.uleb128 0x2
 3956 08d7 91       		.byte	0x91
 3957 08d8 48       		.sleb128 -56
 3958 08d9 1C       		.uleb128 0x1c
 3959 08da 52050000 		.4byte	.LASF128
 3960 08de 01       		.byte	0x1
 3961 08df 6402     		.2byte	0x264
 3962 08e1 7E000000 		.4byte	0x7e
 3963 08e5 02       		.uleb128 0x2
 3964 08e6 91       		.byte	0x91
 3965 08e7 44       		.sleb128 -60
 3966 08e8 1C       		.uleb128 0x1c
 3967 08e9 66070000 		.4byte	.LASF129
 3968 08ed 01       		.byte	0x1
 3969 08ee 6402     		.2byte	0x264
 3970 08f0 7E000000 		.4byte	0x7e
 3971 08f4 02       		.uleb128 0x2
 3972 08f5 91       		.byte	0x91
 3973 08f6 40       		.sleb128 -64
 3974 08f7 1C       		.uleb128 0x1c
 3975 08f8 DD010000 		.4byte	.LASF130
 3976 08fc 01       		.byte	0x1
 3977 08fd 6402     		.2byte	0x264
 3978 08ff 7E000000 		.4byte	0x7e
 3979 0903 03       		.uleb128 0x3
 3980 0904 91       		.byte	0x91
 3981 0905 BC7F     		.sleb128 -68
 3982 0907 1C       		.uleb128 0x1c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 90


 3983 0908 00000000 		.4byte	.LASF131
 3984 090c 01       		.byte	0x1
 3985 090d 6402     		.2byte	0x264
 3986 090f 7E000000 		.4byte	0x7e
 3987 0913 03       		.uleb128 0x3
 3988 0914 91       		.byte	0x91
 3989 0915 B87F     		.sleb128 -72
 3990 0917 00       		.byte	0
 3991 0918 00       		.byte	0
 3992 0919 08       		.uleb128 0x8
 3993 091a F7000000 		.4byte	0xf7
 3994 091e 29090000 		.4byte	0x929
 3995 0922 09       		.uleb128 0x9
 3996 0923 05010000 		.4byte	0x105
 3997 0927 1D       		.byte	0x1d
 3998 0928 00       		.byte	0
 3999 0929 21       		.uleb128 0x21
 4000 092a 0E020000 		.4byte	.LASF132
 4001 092e 01       		.byte	0x1
 4002 092f 8402     		.2byte	0x284
 4003 0931 AD000000 		.4byte	0xad
 4004 0935 00000000 		.4byte	.LFB84
 4005 0939 14000000 		.4byte	.LFE84-.LFB84
 4006 093d 01       		.uleb128 0x1
 4007 093e 9C       		.byte	0x9c
 4008 093f 1D       		.uleb128 0x1d
 4009 0940 E8020000 		.4byte	.LASF133
 4010 0944 01       		.byte	0x1
 4011 0945 8902     		.2byte	0x289
 4012 0947 00000000 		.4byte	.LFB85
 4013 094b 1A000000 		.4byte	.LFE85-.LFB85
 4014 094f 01       		.uleb128 0x1
 4015 0950 9C       		.byte	0x9c
 4016 0951 1D       		.uleb128 0x1d
 4017 0952 F2000000 		.4byte	.LASF134
 4018 0956 01       		.byte	0x1
 4019 0957 9602     		.2byte	0x296
 4020 0959 00000000 		.4byte	.LFB86
 4021 095d 2A000000 		.4byte	.LFE86-.LFB86
 4022 0961 01       		.uleb128 0x1
 4023 0962 9C       		.byte	0x9c
 4024 0963 1B       		.uleb128 0x1b
 4025 0964 04060000 		.4byte	.LASF135
 4026 0968 01       		.byte	0x1
 4027 0969 A902     		.2byte	0x2a9
 4028 096b 37030000 		.4byte	0x337
 4029 096f 00000000 		.4byte	.LFB87
 4030 0973 7C020000 		.4byte	.LFE87-.LFB87
 4031 0977 01       		.uleb128 0x1
 4032 0978 9C       		.byte	0x9c
 4033 0979 0C0A0000 		.4byte	0xa0c
 4034 097d 1A       		.uleb128 0x1a
 4035 097e 67707300 		.ascii	"gps\000"
 4036 0982 01       		.byte	0x1
 4037 0983 AA02     		.2byte	0x2aa
 4038 0985 37030000 		.4byte	0x337
 4039 0989 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 91


 4040 098a 91       		.byte	0x91
 4041 098b 4C       		.sleb128 -52
 4042 098c 1C       		.uleb128 0x1c
 4043 098d 27080000 		.4byte	.LASF136
 4044 0991 01       		.byte	0x1
 4045 0992 B602     		.2byte	0x2b6
 4046 0994 57000000 		.4byte	0x57
 4047 0998 02       		.uleb128 0x2
 4048 0999 91       		.byte	0x91
 4049 099a 68       		.sleb128 -24
 4050 099b 1C       		.uleb128 0x1c
 4051 099c 2E070000 		.4byte	.LASF137
 4052 09a0 01       		.byte	0x1
 4053 09a1 DD02     		.2byte	0x2dd
 4054 09a3 AD000000 		.4byte	0xad
 4055 09a7 02       		.uleb128 0x2
 4056 09a8 91       		.byte	0x91
 4057 09a9 67       		.sleb128 -25
 4058 09aa 1A       		.uleb128 0x1a
 4059 09ab 6C617400 		.ascii	"lat\000"
 4060 09af 01       		.byte	0x1
 4061 09b0 E902     		.2byte	0x2e9
 4062 09b2 E9000000 		.4byte	0xe9
 4063 09b6 02       		.uleb128 0x2
 4064 09b7 91       		.byte	0x91
 4065 09b8 48       		.sleb128 -56
 4066 09b9 1A       		.uleb128 0x1a
 4067 09ba 6C6F6E00 		.ascii	"lon\000"
 4068 09be 01       		.byte	0x1
 4069 09bf EA02     		.2byte	0x2ea
 4070 09c1 E9000000 		.4byte	0xe9
 4071 09c5 02       		.uleb128 0x2
 4072 09c6 91       		.byte	0x91
 4073 09c7 44       		.sleb128 -60
 4074 09c8 1A       		.uleb128 0x1a
 4075 09c9 616C7400 		.ascii	"alt\000"
 4076 09cd 01       		.byte	0x1
 4077 09ce EB02     		.2byte	0x2eb
 4078 09d0 E9000000 		.4byte	0xe9
 4079 09d4 02       		.uleb128 0x2
 4080 09d5 91       		.byte	0x91
 4081 09d6 40       		.sleb128 -64
 4082 09d7 1A       		.uleb128 0x1a
 4083 09d8 733100   		.ascii	"s1\000"
 4084 09db 01       		.byte	0x1
 4085 09dc EF02     		.2byte	0x2ef
 4086 09de 0C010000 		.4byte	0x10c
 4087 09e2 02       		.uleb128 0x2
 4088 09e3 91       		.byte	0x91
 4089 09e4 60       		.sleb128 -32
 4090 09e5 1C       		.uleb128 0x1c
 4091 09e6 37050000 		.4byte	.LASF110
 4092 09ea 01       		.byte	0x1
 4093 09eb F202     		.2byte	0x2f2
 4094 09ed 7E000000 		.4byte	0x7e
 4095 09f1 02       		.uleb128 0x2
 4096 09f2 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 92


 4097 09f3 5C       		.sleb128 -36
 4098 09f4 14       		.uleb128 0x14
 4099 09f5 B4000000 		.4byte	.LBB11
 4100 09f9 38000000 		.4byte	.LBE11-.LBB11
 4101 09fd 1A       		.uleb128 0x1a
 4102 09fe 6900     		.ascii	"i\000"
 4103 0a00 01       		.byte	0x1
 4104 0a01 DE02     		.2byte	0x2de
 4105 0a03 B9000000 		.4byte	0xb9
 4106 0a07 02       		.uleb128 0x2
 4107 0a08 91       		.byte	0x91
 4108 0a09 6E       		.sleb128 -18
 4109 0a0a 00       		.byte	0
 4110 0a0b 00       		.byte	0
 4111 0a0c 22       		.uleb128 0x22
 4112 0a0d 40010000 		.4byte	.LASF138
 4113 0a11 0A       		.byte	0xa
 4114 0a12 1207     		.2byte	0x712
 4115 0a14 180A0000 		.4byte	0xa18
 4116 0a18 0F       		.uleb128 0xf
 4117 0a19 97000000 		.4byte	0x97
 4118 0a1d 23       		.uleb128 0x23
 4119 0a1e 28000000 		.4byte	.LASF139
 4120 0a22 07       		.byte	0x7
 4121 0a23 11       		.byte	0x11
 4122 0a24 87030000 		.4byte	0x387
 4123 0a28 05       		.uleb128 0x5
 4124 0a29 03       		.byte	0x3
 4125 0a2a 00000000 		.4byte	buffer_overflow
 4126 0a2e 23       		.uleb128 0x23
 4127 0a2f A8040000 		.4byte	.LASF140
 4128 0a33 07       		.byte	0x7
 4129 0a34 22       		.byte	0x22
 4130 0a35 B9000000 		.4byte	0xb9
 4131 0a39 05       		.uleb128 0x5
 4132 0a3a 03       		.byte	0x3
 4133 0a3b 00000000 		.4byte	dataPointsInStack
 4134 0a3f 23       		.uleb128 0x23
 4135 0a40 B5070000 		.4byte	.LASF141
 4136 0a44 07       		.byte	0x7
 4137 0a45 23       		.byte	0x23
 4138 0a46 B9000000 		.4byte	0xb9
 4139 0a4a 05       		.uleb128 0x5
 4140 0a4b 03       		.byte	0x3
 4141 0a4c 00000000 		.4byte	dataPointsInStackDesired
 4142 0a50 08       		.uleb128 0x8
 4143 0a51 3B020000 		.4byte	0x23b
 4144 0a55 600A0000 		.4byte	0xa60
 4145 0a59 09       		.uleb128 0x9
 4146 0a5a 05010000 		.4byte	0x105
 4147 0a5e 95       		.byte	0x95
 4148 0a5f 00       		.byte	0
 4149 0a60 23       		.uleb128 0x23
 4150 0a61 AC030000 		.4byte	.LASF142
 4151 0a65 07       		.byte	0x7
 4152 0a66 24       		.byte	0x24
 4153 0a67 500A0000 		.4byte	0xa50
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 93


 4154 0a6b 05       		.uleb128 0x5
 4155 0a6c 03       		.byte	0x3
 4156 0a6d 00000000 		.4byte	data
 4157 0a71 23       		.uleb128 0x23
 4158 0a72 22010000 		.4byte	.LASF143
 4159 0a76 08       		.byte	0x8
 4160 0a77 1F       		.byte	0x1f
 4161 0a78 AD000000 		.4byte	0xad
 4162 0a7c 05       		.uleb128 0x5
 4163 0a7d 03       		.byte	0x3
 4164 0a7e 00000000 		.4byte	modem_state
 4165 0a82 23       		.uleb128 0x23
 4166 0a83 17070000 		.4byte	.LASF144
 4167 0a87 08       		.byte	0x8
 4168 0a88 62       		.byte	0x62
 4169 0a89 DD000000 		.4byte	0xdd
 4170 0a8d 05       		.uleb128 0x5
 4171 0a8e 03       		.byte	0x3
 4172 0a8f 00000000 		.4byte	modem_start_time_stamp
 4173 0a93 23       		.uleb128 0x23
 4174 0a94 C2030000 		.4byte	.LASF71
 4175 0a98 08       		.byte	0x8
 4176 0a99 63       		.byte	0x63
 4177 0a9a 73020000 		.4byte	0x273
 4178 0a9e 05       		.uleb128 0x5
 4179 0a9f 03       		.byte	0x3
 4180 0aa0 00000000 		.4byte	modem_info
 4181 0aa4 23       		.uleb128 0x23
 4182 0aa5 4D010000 		.4byte	.LASF145
 4183 0aa9 08       		.byte	0x8
 4184 0aaa 64       		.byte	0x64
 4185 0aab E7020000 		.4byte	0x2e7
 4186 0aaf 05       		.uleb128 0x5
 4187 0ab0 03       		.byte	0x3
 4188 0ab1 00000000 		.4byte	modem_stats
 4189 0ab5 23       		.uleb128 0x23
 4190 0ab6 3D050000 		.4byte	.LASF146
 4191 0aba 08       		.byte	0x8
 4192 0abb 65       		.byte	0x65
 4193 0abc 8E030000 		.4byte	0x38e
 4194 0ac0 05       		.uleb128 0x5
 4195 0ac1 03       		.byte	0x3
 4196 0ac2 00000000 		.4byte	updatable_parameters
 4197 0ac6 08       		.uleb128 0x8
 4198 0ac7 F7000000 		.4byte	0xf7
 4199 0acb D70A0000 		.4byte	0xad7
 4200 0acf 24       		.uleb128 0x24
 4201 0ad0 05010000 		.4byte	0x105
 4202 0ad4 0F27     		.2byte	0x270f
 4203 0ad6 00       		.byte	0
 4204 0ad7 23       		.uleb128 0x23
 4205 0ad8 31080000 		.4byte	.LASF147
 4206 0adc 09       		.byte	0x9
 4207 0add 17       		.byte	0x17
 4208 0ade C60A0000 		.4byte	0xac6
 4209 0ae2 05       		.uleb128 0x5
 4210 0ae3 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 94


 4211 0ae4 00000000 		.4byte	http_request
 4212 0ae8 23       		.uleb128 0x23
 4213 0ae9 B8010000 		.4byte	.LASF148
 4214 0aed 09       		.byte	0x9
 4215 0aee 18       		.byte	0x18
 4216 0aef C60A0000 		.4byte	0xac6
 4217 0af3 05       		.uleb128 0x5
 4218 0af4 03       		.byte	0x3
 4219 0af5 00000000 		.4byte	http_body
 4220 0af9 08       		.uleb128 0x8
 4221 0afa F7000000 		.4byte	0xf7
 4222 0afe 090B0000 		.4byte	0xb09
 4223 0b02 09       		.uleb128 0x9
 4224 0b03 05010000 		.4byte	0x105
 4225 0b07 C7       		.byte	0xc7
 4226 0b08 00       		.byte	0
 4227 0b09 23       		.uleb128 0x23
 4228 0b0a C1060000 		.4byte	.LASF149
 4229 0b0e 09       		.byte	0x9
 4230 0b0f 19       		.byte	0x19
 4231 0b10 F90A0000 		.4byte	0xaf9
 4232 0b14 05       		.uleb128 0x5
 4233 0b15 03       		.byte	0x3
 4234 0b16 00000000 		.4byte	http_route
 4235 0b1a 23       		.uleb128 0x23
 4236 0b1b 25060000 		.4byte	.LASF150
 4237 0b1f 09       		.byte	0x9
 4238 0b20 40       		.byte	0x40
 4239 0b21 09040000 		.4byte	0x409
 4240 0b25 05       		.uleb128 0x5
 4241 0b26 03       		.byte	0x3
 4242 0b27 00000000 		.4byte	system_info
 4243 0b2b 23       		.uleb128 0x23
 4244 0b2c CE050000 		.4byte	.LASF151
 4245 0b30 09       		.byte	0x9
 4246 0b31 52       		.byte	0x52
 4247 0b32 45040000 		.4byte	0x445
 4248 0b36 05       		.uleb128 0x5
 4249 0b37 03       		.byte	0x3
 4250 0b38 00000000 		.4byte	system_settings
 4251 0b3c 23       		.uleb128 0x23
 4252 0b3d 33010000 		.4byte	.LASF152
 4253 0b41 09       		.byte	0x9
 4254 0b42 6E       		.byte	0x6e
 4255 0b43 D2030000 		.4byte	0x3d2
 4256 0b47 05       		.uleb128 0x5
 4257 0b48 03       		.byte	0x3
 4258 0b49 00000000 		.4byte	alarmMeasure
 4259 0b4d 23       		.uleb128 0x23
 4260 0b4e 87010000 		.4byte	.LASF153
 4261 0b52 09       		.byte	0x9
 4262 0b53 6F       		.byte	0x6f
 4263 0b54 AD000000 		.4byte	0xad
 4264 0b58 05       		.uleb128 0x5
 4265 0b59 03       		.byte	0x3
 4266 0b5a 00000000 		.4byte	timeToMeasure
 4267 0b5e 23       		.uleb128 0x23
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 95


 4268 0b5f 29030000 		.4byte	.LASF154
 4269 0b63 09       		.byte	0x9
 4270 0b64 70       		.byte	0x70
 4271 0b65 D2030000 		.4byte	0x3d2
 4272 0b69 05       		.uleb128 0x5
 4273 0b6a 03       		.byte	0x3
 4274 0b6b 00000000 		.4byte	alarmSync
 4275 0b6f 23       		.uleb128 0x23
 4276 0b70 AD010000 		.4byte	.LASF155
 4277 0b74 09       		.byte	0x9
 4278 0b75 71       		.byte	0x71
 4279 0b76 AD000000 		.4byte	0xad
 4280 0b7a 05       		.uleb128 0x5
 4281 0b7b 03       		.byte	0x3
 4282 0b7c 00000000 		.4byte	timeToSync
 4283 0b80 23       		.uleb128 0x23
 4284 0b81 15050000 		.4byte	.LASF156
 4285 0b85 09       		.byte	0x9
 4286 0b86 72       		.byte	0x72
 4287 0b87 AD000000 		.4byte	0xad
 4288 0b8b 05       		.uleb128 0x5
 4289 0b8c 03       		.byte	0x3
 4290 0b8d 00000000 		.4byte	timeToSycnRemoteParams
 4291 0b91 25       		.uleb128 0x25
 4292 0b92 68657900 		.ascii	"hey\000"
 4293 0b96 09       		.byte	0x9
 4294 0b97 73       		.byte	0x73
 4295 0b98 AD000000 		.4byte	0xad
 4296 0b9c 05       		.uleb128 0x5
 4297 0b9d 03       		.byte	0x3
 4298 0b9e 00000000 		.4byte	hey
 4299 0ba2 08       		.uleb128 0x8
 4300 0ba3 F7000000 		.4byte	0xf7
 4301 0ba7 B30B0000 		.4byte	0xbb3
 4302 0bab 24       		.uleb128 0x24
 4303 0bac 05010000 		.4byte	0x105
 4304 0bb0 FF03     		.2byte	0x3ff
 4305 0bb2 00       		.byte	0
 4306 0bb3 23       		.uleb128 0x23
 4307 0bb4 ED040000 		.4byte	.LASF157
 4308 0bb8 01       		.byte	0x1
 4309 0bb9 05       		.byte	0x5
 4310 0bba A20B0000 		.4byte	0xba2
 4311 0bbe 05       		.uleb128 0x5
 4312 0bbf 03       		.byte	0x3
 4313 0bc0 00000000 		.4byte	uart_received_string
 4314 0bc4 23       		.uleb128 0x23
 4315 0bc5 DF060000 		.4byte	.LASF158
 4316 0bc9 01       		.byte	0x1
 4317 0bca 06       		.byte	0x6
 4318 0bcb D1000000 		.4byte	0xd1
 4319 0bcf 05       		.uleb128 0x5
 4320 0bd0 03       		.byte	0x3
 4321 0bd1 00000000 		.4byte	uart_string_index
 4322 0bd5 00       		.byte	0
 4323              		.section	.debug_abbrev,"",%progbits
 4324              	.Ldebug_abbrev0:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 96


 4325 0000 01       		.uleb128 0x1
 4326 0001 11       		.uleb128 0x11
 4327 0002 01       		.byte	0x1
 4328 0003 25       		.uleb128 0x25
 4329 0004 0E       		.uleb128 0xe
 4330 0005 13       		.uleb128 0x13
 4331 0006 0B       		.uleb128 0xb
 4332 0007 03       		.uleb128 0x3
 4333 0008 0E       		.uleb128 0xe
 4334 0009 1B       		.uleb128 0x1b
 4335 000a 0E       		.uleb128 0xe
 4336 000b 55       		.uleb128 0x55
 4337 000c 17       		.uleb128 0x17
 4338 000d 11       		.uleb128 0x11
 4339 000e 01       		.uleb128 0x1
 4340 000f 10       		.uleb128 0x10
 4341 0010 17       		.uleb128 0x17
 4342 0011 00       		.byte	0
 4343 0012 00       		.byte	0
 4344 0013 02       		.uleb128 0x2
 4345 0014 24       		.uleb128 0x24
 4346 0015 00       		.byte	0
 4347 0016 0B       		.uleb128 0xb
 4348 0017 0B       		.uleb128 0xb
 4349 0018 3E       		.uleb128 0x3e
 4350 0019 0B       		.uleb128 0xb
 4351 001a 03       		.uleb128 0x3
 4352 001b 0E       		.uleb128 0xe
 4353 001c 00       		.byte	0
 4354 001d 00       		.byte	0
 4355 001e 03       		.uleb128 0x3
 4356 001f 16       		.uleb128 0x16
 4357 0020 00       		.byte	0
 4358 0021 03       		.uleb128 0x3
 4359 0022 0E       		.uleb128 0xe
 4360 0023 3A       		.uleb128 0x3a
 4361 0024 0B       		.uleb128 0xb
 4362 0025 3B       		.uleb128 0x3b
 4363 0026 0B       		.uleb128 0xb
 4364 0027 49       		.uleb128 0x49
 4365 0028 13       		.uleb128 0x13
 4366 0029 00       		.byte	0
 4367 002a 00       		.byte	0
 4368 002b 04       		.uleb128 0x4
 4369 002c 24       		.uleb128 0x24
 4370 002d 00       		.byte	0
 4371 002e 0B       		.uleb128 0xb
 4372 002f 0B       		.uleb128 0xb
 4373 0030 3E       		.uleb128 0x3e
 4374 0031 0B       		.uleb128 0xb
 4375 0032 03       		.uleb128 0x3
 4376 0033 08       		.uleb128 0x8
 4377 0034 00       		.byte	0
 4378 0035 00       		.byte	0
 4379 0036 05       		.uleb128 0x5
 4380 0037 16       		.uleb128 0x16
 4381 0038 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 97


 4382 0039 03       		.uleb128 0x3
 4383 003a 0E       		.uleb128 0xe
 4384 003b 3A       		.uleb128 0x3a
 4385 003c 0B       		.uleb128 0xb
 4386 003d 3B       		.uleb128 0x3b
 4387 003e 05       		.uleb128 0x5
 4388 003f 49       		.uleb128 0x49
 4389 0040 13       		.uleb128 0x13
 4390 0041 00       		.byte	0
 4391 0042 00       		.byte	0
 4392 0043 06       		.uleb128 0x6
 4393 0044 0F       		.uleb128 0xf
 4394 0045 00       		.byte	0
 4395 0046 0B       		.uleb128 0xb
 4396 0047 0B       		.uleb128 0xb
 4397 0048 49       		.uleb128 0x49
 4398 0049 13       		.uleb128 0x13
 4399 004a 00       		.byte	0
 4400 004b 00       		.byte	0
 4401 004c 07       		.uleb128 0x7
 4402 004d 26       		.uleb128 0x26
 4403 004e 00       		.byte	0
 4404 004f 49       		.uleb128 0x49
 4405 0050 13       		.uleb128 0x13
 4406 0051 00       		.byte	0
 4407 0052 00       		.byte	0
 4408 0053 08       		.uleb128 0x8
 4409 0054 01       		.uleb128 0x1
 4410 0055 01       		.byte	0x1
 4411 0056 49       		.uleb128 0x49
 4412 0057 13       		.uleb128 0x13
 4413 0058 01       		.uleb128 0x1
 4414 0059 13       		.uleb128 0x13
 4415 005a 00       		.byte	0
 4416 005b 00       		.byte	0
 4417 005c 09       		.uleb128 0x9
 4418 005d 21       		.uleb128 0x21
 4419 005e 00       		.byte	0
 4420 005f 49       		.uleb128 0x49
 4421 0060 13       		.uleb128 0x13
 4422 0061 2F       		.uleb128 0x2f
 4423 0062 0B       		.uleb128 0xb
 4424 0063 00       		.byte	0
 4425 0064 00       		.byte	0
 4426 0065 0A       		.uleb128 0xa
 4427 0066 13       		.uleb128 0x13
 4428 0067 01       		.byte	0x1
 4429 0068 03       		.uleb128 0x3
 4430 0069 08       		.uleb128 0x8
 4431 006a 0B       		.uleb128 0xb
 4432 006b 0B       		.uleb128 0xb
 4433 006c 3A       		.uleb128 0x3a
 4434 006d 0B       		.uleb128 0xb
 4435 006e 3B       		.uleb128 0x3b
 4436 006f 0B       		.uleb128 0xb
 4437 0070 01       		.uleb128 0x1
 4438 0071 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 98


 4439 0072 00       		.byte	0
 4440 0073 00       		.byte	0
 4441 0074 0B       		.uleb128 0xb
 4442 0075 0D       		.uleb128 0xd
 4443 0076 00       		.byte	0
 4444 0077 03       		.uleb128 0x3
 4445 0078 0E       		.uleb128 0xe
 4446 0079 3A       		.uleb128 0x3a
 4447 007a 0B       		.uleb128 0xb
 4448 007b 3B       		.uleb128 0x3b
 4449 007c 0B       		.uleb128 0xb
 4450 007d 49       		.uleb128 0x49
 4451 007e 13       		.uleb128 0x13
 4452 007f 38       		.uleb128 0x38
 4453 0080 0B       		.uleb128 0xb
 4454 0081 00       		.byte	0
 4455 0082 00       		.byte	0
 4456 0083 0C       		.uleb128 0xc
 4457 0084 13       		.uleb128 0x13
 4458 0085 01       		.byte	0x1
 4459 0086 0B       		.uleb128 0xb
 4460 0087 05       		.uleb128 0x5
 4461 0088 3A       		.uleb128 0x3a
 4462 0089 0B       		.uleb128 0xb
 4463 008a 3B       		.uleb128 0x3b
 4464 008b 0B       		.uleb128 0xb
 4465 008c 01       		.uleb128 0x1
 4466 008d 13       		.uleb128 0x13
 4467 008e 00       		.byte	0
 4468 008f 00       		.byte	0
 4469 0090 0D       		.uleb128 0xd
 4470 0091 13       		.uleb128 0x13
 4471 0092 01       		.byte	0x1
 4472 0093 0B       		.uleb128 0xb
 4473 0094 0B       		.uleb128 0xb
 4474 0095 3A       		.uleb128 0x3a
 4475 0096 0B       		.uleb128 0xb
 4476 0097 3B       		.uleb128 0x3b
 4477 0098 0B       		.uleb128 0xb
 4478 0099 01       		.uleb128 0x1
 4479 009a 13       		.uleb128 0x13
 4480 009b 00       		.byte	0
 4481 009c 00       		.byte	0
 4482 009d 0E       		.uleb128 0xe
 4483 009e 0D       		.uleb128 0xd
 4484 009f 00       		.byte	0
 4485 00a0 03       		.uleb128 0x3
 4486 00a1 08       		.uleb128 0x8
 4487 00a2 3A       		.uleb128 0x3a
 4488 00a3 0B       		.uleb128 0xb
 4489 00a4 3B       		.uleb128 0x3b
 4490 00a5 0B       		.uleb128 0xb
 4491 00a6 49       		.uleb128 0x49
 4492 00a7 13       		.uleb128 0x13
 4493 00a8 38       		.uleb128 0x38
 4494 00a9 0B       		.uleb128 0xb
 4495 00aa 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 99


 4496 00ab 00       		.byte	0
 4497 00ac 0F       		.uleb128 0xf
 4498 00ad 35       		.uleb128 0x35
 4499 00ae 00       		.byte	0
 4500 00af 49       		.uleb128 0x49
 4501 00b0 13       		.uleb128 0x13
 4502 00b1 00       		.byte	0
 4503 00b2 00       		.byte	0
 4504 00b3 10       		.uleb128 0x10
 4505 00b4 2E       		.uleb128 0x2e
 4506 00b5 00       		.byte	0
 4507 00b6 3F       		.uleb128 0x3f
 4508 00b7 19       		.uleb128 0x19
 4509 00b8 03       		.uleb128 0x3
 4510 00b9 0E       		.uleb128 0xe
 4511 00ba 3A       		.uleb128 0x3a
 4512 00bb 0B       		.uleb128 0xb
 4513 00bc 3B       		.uleb128 0x3b
 4514 00bd 0B       		.uleb128 0xb
 4515 00be 27       		.uleb128 0x27
 4516 00bf 19       		.uleb128 0x19
 4517 00c0 11       		.uleb128 0x11
 4518 00c1 01       		.uleb128 0x1
 4519 00c2 12       		.uleb128 0x12
 4520 00c3 06       		.uleb128 0x6
 4521 00c4 40       		.uleb128 0x40
 4522 00c5 18       		.uleb128 0x18
 4523 00c6 9642     		.uleb128 0x2116
 4524 00c8 19       		.uleb128 0x19
 4525 00c9 00       		.byte	0
 4526 00ca 00       		.byte	0
 4527 00cb 11       		.uleb128 0x11
 4528 00cc 2E       		.uleb128 0x2e
 4529 00cd 00       		.byte	0
 4530 00ce 3F       		.uleb128 0x3f
 4531 00cf 19       		.uleb128 0x19
 4532 00d0 03       		.uleb128 0x3
 4533 00d1 0E       		.uleb128 0xe
 4534 00d2 3A       		.uleb128 0x3a
 4535 00d3 0B       		.uleb128 0xb
 4536 00d4 3B       		.uleb128 0x3b
 4537 00d5 0B       		.uleb128 0xb
 4538 00d6 11       		.uleb128 0x11
 4539 00d7 01       		.uleb128 0x1
 4540 00d8 12       		.uleb128 0x12
 4541 00d9 06       		.uleb128 0x6
 4542 00da 40       		.uleb128 0x40
 4543 00db 18       		.uleb128 0x18
 4544 00dc 9642     		.uleb128 0x2116
 4545 00de 19       		.uleb128 0x19
 4546 00df 00       		.byte	0
 4547 00e0 00       		.byte	0
 4548 00e1 12       		.uleb128 0x12
 4549 00e2 2E       		.uleb128 0x2e
 4550 00e3 01       		.byte	0x1
 4551 00e4 3F       		.uleb128 0x3f
 4552 00e5 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 100


 4553 00e6 03       		.uleb128 0x3
 4554 00e7 0E       		.uleb128 0xe
 4555 00e8 3A       		.uleb128 0x3a
 4556 00e9 0B       		.uleb128 0xb
 4557 00ea 3B       		.uleb128 0x3b
 4558 00eb 0B       		.uleb128 0xb
 4559 00ec 49       		.uleb128 0x49
 4560 00ed 13       		.uleb128 0x13
 4561 00ee 11       		.uleb128 0x11
 4562 00ef 01       		.uleb128 0x1
 4563 00f0 12       		.uleb128 0x12
 4564 00f1 06       		.uleb128 0x6
 4565 00f2 40       		.uleb128 0x40
 4566 00f3 18       		.uleb128 0x18
 4567 00f4 9642     		.uleb128 0x2116
 4568 00f6 19       		.uleb128 0x19
 4569 00f7 01       		.uleb128 0x1
 4570 00f8 13       		.uleb128 0x13
 4571 00f9 00       		.byte	0
 4572 00fa 00       		.byte	0
 4573 00fb 13       		.uleb128 0x13
 4574 00fc 34       		.uleb128 0x34
 4575 00fd 00       		.byte	0
 4576 00fe 03       		.uleb128 0x3
 4577 00ff 0E       		.uleb128 0xe
 4578 0100 3A       		.uleb128 0x3a
 4579 0101 0B       		.uleb128 0xb
 4580 0102 3B       		.uleb128 0x3b
 4581 0103 0B       		.uleb128 0xb
 4582 0104 49       		.uleb128 0x49
 4583 0105 13       		.uleb128 0x13
 4584 0106 02       		.uleb128 0x2
 4585 0107 18       		.uleb128 0x18
 4586 0108 00       		.byte	0
 4587 0109 00       		.byte	0
 4588 010a 14       		.uleb128 0x14
 4589 010b 0B       		.uleb128 0xb
 4590 010c 01       		.byte	0x1
 4591 010d 11       		.uleb128 0x11
 4592 010e 01       		.uleb128 0x1
 4593 010f 12       		.uleb128 0x12
 4594 0110 06       		.uleb128 0x6
 4595 0111 00       		.byte	0
 4596 0112 00       		.byte	0
 4597 0113 15       		.uleb128 0x15
 4598 0114 2E       		.uleb128 0x2e
 4599 0115 01       		.byte	0x1
 4600 0116 3F       		.uleb128 0x3f
 4601 0117 19       		.uleb128 0x19
 4602 0118 03       		.uleb128 0x3
 4603 0119 0E       		.uleb128 0xe
 4604 011a 3A       		.uleb128 0x3a
 4605 011b 0B       		.uleb128 0xb
 4606 011c 3B       		.uleb128 0x3b
 4607 011d 0B       		.uleb128 0xb
 4608 011e 27       		.uleb128 0x27
 4609 011f 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 101


 4610 0120 49       		.uleb128 0x49
 4611 0121 13       		.uleb128 0x13
 4612 0122 11       		.uleb128 0x11
 4613 0123 01       		.uleb128 0x1
 4614 0124 12       		.uleb128 0x12
 4615 0125 06       		.uleb128 0x6
 4616 0126 40       		.uleb128 0x40
 4617 0127 18       		.uleb128 0x18
 4618 0128 9642     		.uleb128 0x2116
 4619 012a 19       		.uleb128 0x19
 4620 012b 01       		.uleb128 0x1
 4621 012c 13       		.uleb128 0x13
 4622 012d 00       		.byte	0
 4623 012e 00       		.byte	0
 4624 012f 16       		.uleb128 0x16
 4625 0130 05       		.uleb128 0x5
 4626 0131 00       		.byte	0
 4627 0132 03       		.uleb128 0x3
 4628 0133 0E       		.uleb128 0xe
 4629 0134 3A       		.uleb128 0x3a
 4630 0135 0B       		.uleb128 0xb
 4631 0136 3B       		.uleb128 0x3b
 4632 0137 0B       		.uleb128 0xb
 4633 0138 49       		.uleb128 0x49
 4634 0139 13       		.uleb128 0x13
 4635 013a 02       		.uleb128 0x2
 4636 013b 18       		.uleb128 0x18
 4637 013c 00       		.byte	0
 4638 013d 00       		.byte	0
 4639 013e 17       		.uleb128 0x17
 4640 013f 34       		.uleb128 0x34
 4641 0140 00       		.byte	0
 4642 0141 03       		.uleb128 0x3
 4643 0142 08       		.uleb128 0x8
 4644 0143 3A       		.uleb128 0x3a
 4645 0144 0B       		.uleb128 0xb
 4646 0145 3B       		.uleb128 0x3b
 4647 0146 0B       		.uleb128 0xb
 4648 0147 49       		.uleb128 0x49
 4649 0148 13       		.uleb128 0x13
 4650 0149 02       		.uleb128 0x2
 4651 014a 18       		.uleb128 0x18
 4652 014b 00       		.byte	0
 4653 014c 00       		.byte	0
 4654 014d 18       		.uleb128 0x18
 4655 014e 2E       		.uleb128 0x2e
 4656 014f 01       		.byte	0x1
 4657 0150 3F       		.uleb128 0x3f
 4658 0151 19       		.uleb128 0x19
 4659 0152 03       		.uleb128 0x3
 4660 0153 0E       		.uleb128 0xe
 4661 0154 3A       		.uleb128 0x3a
 4662 0155 0B       		.uleb128 0xb
 4663 0156 3B       		.uleb128 0x3b
 4664 0157 05       		.uleb128 0x5
 4665 0158 27       		.uleb128 0x27
 4666 0159 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 102


 4667 015a 49       		.uleb128 0x49
 4668 015b 13       		.uleb128 0x13
 4669 015c 11       		.uleb128 0x11
 4670 015d 01       		.uleb128 0x1
 4671 015e 12       		.uleb128 0x12
 4672 015f 06       		.uleb128 0x6
 4673 0160 40       		.uleb128 0x40
 4674 0161 18       		.uleb128 0x18
 4675 0162 9642     		.uleb128 0x2116
 4676 0164 19       		.uleb128 0x19
 4677 0165 01       		.uleb128 0x1
 4678 0166 13       		.uleb128 0x13
 4679 0167 00       		.byte	0
 4680 0168 00       		.byte	0
 4681 0169 19       		.uleb128 0x19
 4682 016a 05       		.uleb128 0x5
 4683 016b 00       		.byte	0
 4684 016c 03       		.uleb128 0x3
 4685 016d 0E       		.uleb128 0xe
 4686 016e 3A       		.uleb128 0x3a
 4687 016f 0B       		.uleb128 0xb
 4688 0170 3B       		.uleb128 0x3b
 4689 0171 05       		.uleb128 0x5
 4690 0172 49       		.uleb128 0x49
 4691 0173 13       		.uleb128 0x13
 4692 0174 02       		.uleb128 0x2
 4693 0175 18       		.uleb128 0x18
 4694 0176 00       		.byte	0
 4695 0177 00       		.byte	0
 4696 0178 1A       		.uleb128 0x1a
 4697 0179 34       		.uleb128 0x34
 4698 017a 00       		.byte	0
 4699 017b 03       		.uleb128 0x3
 4700 017c 08       		.uleb128 0x8
 4701 017d 3A       		.uleb128 0x3a
 4702 017e 0B       		.uleb128 0xb
 4703 017f 3B       		.uleb128 0x3b
 4704 0180 05       		.uleb128 0x5
 4705 0181 49       		.uleb128 0x49
 4706 0182 13       		.uleb128 0x13
 4707 0183 02       		.uleb128 0x2
 4708 0184 18       		.uleb128 0x18
 4709 0185 00       		.byte	0
 4710 0186 00       		.byte	0
 4711 0187 1B       		.uleb128 0x1b
 4712 0188 2E       		.uleb128 0x2e
 4713 0189 01       		.byte	0x1
 4714 018a 3F       		.uleb128 0x3f
 4715 018b 19       		.uleb128 0x19
 4716 018c 03       		.uleb128 0x3
 4717 018d 0E       		.uleb128 0xe
 4718 018e 3A       		.uleb128 0x3a
 4719 018f 0B       		.uleb128 0xb
 4720 0190 3B       		.uleb128 0x3b
 4721 0191 05       		.uleb128 0x5
 4722 0192 49       		.uleb128 0x49
 4723 0193 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 103


 4724 0194 11       		.uleb128 0x11
 4725 0195 01       		.uleb128 0x1
 4726 0196 12       		.uleb128 0x12
 4727 0197 06       		.uleb128 0x6
 4728 0198 40       		.uleb128 0x40
 4729 0199 18       		.uleb128 0x18
 4730 019a 9642     		.uleb128 0x2116
 4731 019c 19       		.uleb128 0x19
 4732 019d 01       		.uleb128 0x1
 4733 019e 13       		.uleb128 0x13
 4734 019f 00       		.byte	0
 4735 01a0 00       		.byte	0
 4736 01a1 1C       		.uleb128 0x1c
 4737 01a2 34       		.uleb128 0x34
 4738 01a3 00       		.byte	0
 4739 01a4 03       		.uleb128 0x3
 4740 01a5 0E       		.uleb128 0xe
 4741 01a6 3A       		.uleb128 0x3a
 4742 01a7 0B       		.uleb128 0xb
 4743 01a8 3B       		.uleb128 0x3b
 4744 01a9 05       		.uleb128 0x5
 4745 01aa 49       		.uleb128 0x49
 4746 01ab 13       		.uleb128 0x13
 4747 01ac 02       		.uleb128 0x2
 4748 01ad 18       		.uleb128 0x18
 4749 01ae 00       		.byte	0
 4750 01af 00       		.byte	0
 4751 01b0 1D       		.uleb128 0x1d
 4752 01b1 2E       		.uleb128 0x2e
 4753 01b2 00       		.byte	0
 4754 01b3 3F       		.uleb128 0x3f
 4755 01b4 19       		.uleb128 0x19
 4756 01b5 03       		.uleb128 0x3
 4757 01b6 0E       		.uleb128 0xe
 4758 01b7 3A       		.uleb128 0x3a
 4759 01b8 0B       		.uleb128 0xb
 4760 01b9 3B       		.uleb128 0x3b
 4761 01ba 05       		.uleb128 0x5
 4762 01bb 11       		.uleb128 0x11
 4763 01bc 01       		.uleb128 0x1
 4764 01bd 12       		.uleb128 0x12
 4765 01be 06       		.uleb128 0x6
 4766 01bf 40       		.uleb128 0x40
 4767 01c0 18       		.uleb128 0x18
 4768 01c1 9642     		.uleb128 0x2116
 4769 01c3 19       		.uleb128 0x19
 4770 01c4 00       		.byte	0
 4771 01c5 00       		.byte	0
 4772 01c6 1E       		.uleb128 0x1e
 4773 01c7 2E       		.uleb128 0x2e
 4774 01c8 00       		.byte	0
 4775 01c9 3F       		.uleb128 0x3f
 4776 01ca 19       		.uleb128 0x19
 4777 01cb 03       		.uleb128 0x3
 4778 01cc 0E       		.uleb128 0xe
 4779 01cd 3A       		.uleb128 0x3a
 4780 01ce 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 104


 4781 01cf 3B       		.uleb128 0x3b
 4782 01d0 05       		.uleb128 0x5
 4783 01d1 49       		.uleb128 0x49
 4784 01d2 13       		.uleb128 0x13
 4785 01d3 11       		.uleb128 0x11
 4786 01d4 01       		.uleb128 0x1
 4787 01d5 12       		.uleb128 0x12
 4788 01d6 06       		.uleb128 0x6
 4789 01d7 40       		.uleb128 0x40
 4790 01d8 18       		.uleb128 0x18
 4791 01d9 9642     		.uleb128 0x2116
 4792 01db 19       		.uleb128 0x19
 4793 01dc 00       		.byte	0
 4794 01dd 00       		.byte	0
 4795 01de 1F       		.uleb128 0x1f
 4796 01df 2E       		.uleb128 0x2e
 4797 01e0 01       		.byte	0x1
 4798 01e1 3F       		.uleb128 0x3f
 4799 01e2 19       		.uleb128 0x19
 4800 01e3 03       		.uleb128 0x3
 4801 01e4 0E       		.uleb128 0xe
 4802 01e5 3A       		.uleb128 0x3a
 4803 01e6 0B       		.uleb128 0xb
 4804 01e7 3B       		.uleb128 0x3b
 4805 01e8 05       		.uleb128 0x5
 4806 01e9 11       		.uleb128 0x11
 4807 01ea 01       		.uleb128 0x1
 4808 01eb 12       		.uleb128 0x12
 4809 01ec 06       		.uleb128 0x6
 4810 01ed 40       		.uleb128 0x40
 4811 01ee 18       		.uleb128 0x18
 4812 01ef 9642     		.uleb128 0x2116
 4813 01f1 19       		.uleb128 0x19
 4814 01f2 01       		.uleb128 0x1
 4815 01f3 13       		.uleb128 0x13
 4816 01f4 00       		.byte	0
 4817 01f5 00       		.byte	0
 4818 01f6 20       		.uleb128 0x20
 4819 01f7 2E       		.uleb128 0x2e
 4820 01f8 00       		.byte	0
 4821 01f9 3F       		.uleb128 0x3f
 4822 01fa 19       		.uleb128 0x19
 4823 01fb 03       		.uleb128 0x3
 4824 01fc 0E       		.uleb128 0xe
 4825 01fd 3A       		.uleb128 0x3a
 4826 01fe 0B       		.uleb128 0xb
 4827 01ff 3B       		.uleb128 0x3b
 4828 0200 05       		.uleb128 0x5
 4829 0201 11       		.uleb128 0x11
 4830 0202 01       		.uleb128 0x1
 4831 0203 12       		.uleb128 0x12
 4832 0204 06       		.uleb128 0x6
 4833 0205 40       		.uleb128 0x40
 4834 0206 18       		.uleb128 0x18
 4835 0207 9742     		.uleb128 0x2117
 4836 0209 19       		.uleb128 0x19
 4837 020a 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 105


 4838 020b 00       		.byte	0
 4839 020c 21       		.uleb128 0x21
 4840 020d 2E       		.uleb128 0x2e
 4841 020e 00       		.byte	0
 4842 020f 3F       		.uleb128 0x3f
 4843 0210 19       		.uleb128 0x19
 4844 0211 03       		.uleb128 0x3
 4845 0212 0E       		.uleb128 0xe
 4846 0213 3A       		.uleb128 0x3a
 4847 0214 0B       		.uleb128 0xb
 4848 0215 3B       		.uleb128 0x3b
 4849 0216 05       		.uleb128 0x5
 4850 0217 49       		.uleb128 0x49
 4851 0218 13       		.uleb128 0x13
 4852 0219 11       		.uleb128 0x11
 4853 021a 01       		.uleb128 0x1
 4854 021b 12       		.uleb128 0x12
 4855 021c 06       		.uleb128 0x6
 4856 021d 40       		.uleb128 0x40
 4857 021e 18       		.uleb128 0x18
 4858 021f 9742     		.uleb128 0x2117
 4859 0221 19       		.uleb128 0x19
 4860 0222 00       		.byte	0
 4861 0223 00       		.byte	0
 4862 0224 22       		.uleb128 0x22
 4863 0225 34       		.uleb128 0x34
 4864 0226 00       		.byte	0
 4865 0227 03       		.uleb128 0x3
 4866 0228 0E       		.uleb128 0xe
 4867 0229 3A       		.uleb128 0x3a
 4868 022a 0B       		.uleb128 0xb
 4869 022b 3B       		.uleb128 0x3b
 4870 022c 05       		.uleb128 0x5
 4871 022d 49       		.uleb128 0x49
 4872 022e 13       		.uleb128 0x13
 4873 022f 3F       		.uleb128 0x3f
 4874 0230 19       		.uleb128 0x19
 4875 0231 3C       		.uleb128 0x3c
 4876 0232 19       		.uleb128 0x19
 4877 0233 00       		.byte	0
 4878 0234 00       		.byte	0
 4879 0235 23       		.uleb128 0x23
 4880 0236 34       		.uleb128 0x34
 4881 0237 00       		.byte	0
 4882 0238 03       		.uleb128 0x3
 4883 0239 0E       		.uleb128 0xe
 4884 023a 3A       		.uleb128 0x3a
 4885 023b 0B       		.uleb128 0xb
 4886 023c 3B       		.uleb128 0x3b
 4887 023d 0B       		.uleb128 0xb
 4888 023e 49       		.uleb128 0x49
 4889 023f 13       		.uleb128 0x13
 4890 0240 3F       		.uleb128 0x3f
 4891 0241 19       		.uleb128 0x19
 4892 0242 02       		.uleb128 0x2
 4893 0243 18       		.uleb128 0x18
 4894 0244 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 106


 4895 0245 00       		.byte	0
 4896 0246 24       		.uleb128 0x24
 4897 0247 21       		.uleb128 0x21
 4898 0248 00       		.byte	0
 4899 0249 49       		.uleb128 0x49
 4900 024a 13       		.uleb128 0x13
 4901 024b 2F       		.uleb128 0x2f
 4902 024c 05       		.uleb128 0x5
 4903 024d 00       		.byte	0
 4904 024e 00       		.byte	0
 4905 024f 25       		.uleb128 0x25
 4906 0250 34       		.uleb128 0x34
 4907 0251 00       		.byte	0
 4908 0252 03       		.uleb128 0x3
 4909 0253 08       		.uleb128 0x8
 4910 0254 3A       		.uleb128 0x3a
 4911 0255 0B       		.uleb128 0xb
 4912 0256 3B       		.uleb128 0x3b
 4913 0257 0B       		.uleb128 0xb
 4914 0258 49       		.uleb128 0x49
 4915 0259 13       		.uleb128 0x13
 4916 025a 3F       		.uleb128 0x3f
 4917 025b 19       		.uleb128 0x19
 4918 025c 02       		.uleb128 0x2
 4919 025d 18       		.uleb128 0x18
 4920 025e 00       		.byte	0
 4921 025f 00       		.byte	0
 4922 0260 00       		.byte	0
 4923              		.section	.debug_aranges,"",%progbits
 4924 0000 D4000000 		.4byte	0xd4
 4925 0004 0200     		.2byte	0x2
 4926 0006 00000000 		.4byte	.Ldebug_info0
 4927 000a 04       		.byte	0x4
 4928 000b 00       		.byte	0
 4929 000c 0000     		.2byte	0
 4930 000e 0000     		.2byte	0
 4931 0010 00000000 		.4byte	.LFB64
 4932 0014 44000000 		.4byte	.LFE64-.LFB64
 4933 0018 00000000 		.4byte	.LFB65
 4934 001c 6C000000 		.4byte	.LFE65-.LFB65
 4935 0020 00000000 		.4byte	.LFB66
 4936 0024 32000000 		.4byte	.LFE66-.LFB66
 4937 0028 00000000 		.4byte	.LFB67
 4938 002c 20000000 		.4byte	.LFE67-.LFB67
 4939 0030 00000000 		.4byte	.LFB68
 4940 0034 40000000 		.4byte	.LFE68-.LFB68
 4941 0038 00000000 		.4byte	.LFB69
 4942 003c DC000000 		.4byte	.LFE69-.LFB69
 4943 0040 00000000 		.4byte	.LFB70
 4944 0044 1C000000 		.4byte	.LFE70-.LFB70
 4945 0048 00000000 		.4byte	.LFB71
 4946 004c 28000000 		.4byte	.LFE71-.LFB71
 4947 0050 00000000 		.4byte	.LFB72
 4948 0054 C8000000 		.4byte	.LFE72-.LFB72
 4949 0058 00000000 		.4byte	.LFB73
 4950 005c 00010000 		.4byte	.LFE73-.LFB73
 4951 0060 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 107


 4952 0064 78000000 		.4byte	.LFE74-.LFB74
 4953 0068 00000000 		.4byte	.LFB75
 4954 006c 3C010000 		.4byte	.LFE75-.LFB75
 4955 0070 00000000 		.4byte	.LFB76
 4956 0074 B8000000 		.4byte	.LFE76-.LFB76
 4957 0078 00000000 		.4byte	.LFB77
 4958 007c 1C000000 		.4byte	.LFE77-.LFB77
 4959 0080 00000000 		.4byte	.LFB78
 4960 0084 28000000 		.4byte	.LFE78-.LFB78
 4961 0088 00000000 		.4byte	.LFB79
 4962 008c 84000000 		.4byte	.LFE79-.LFB79
 4963 0090 00000000 		.4byte	.LFB80
 4964 0094 30000000 		.4byte	.LFE80-.LFB80
 4965 0098 00000000 		.4byte	.LFB81
 4966 009c 0C020000 		.4byte	.LFE81-.LFB81
 4967 00a0 00000000 		.4byte	.LFB82
 4968 00a4 68010000 		.4byte	.LFE82-.LFB82
 4969 00a8 00000000 		.4byte	.LFB83
 4970 00ac 44010000 		.4byte	.LFE83-.LFB83
 4971 00b0 00000000 		.4byte	.LFB84
 4972 00b4 14000000 		.4byte	.LFE84-.LFB84
 4973 00b8 00000000 		.4byte	.LFB85
 4974 00bc 1A000000 		.4byte	.LFE85-.LFB85
 4975 00c0 00000000 		.4byte	.LFB86
 4976 00c4 2A000000 		.4byte	.LFE86-.LFB86
 4977 00c8 00000000 		.4byte	.LFB87
 4978 00cc 7C020000 		.4byte	.LFE87-.LFB87
 4979 00d0 00000000 		.4byte	0
 4980 00d4 00000000 		.4byte	0
 4981              		.section	.debug_ranges,"",%progbits
 4982              	.Ldebug_ranges0:
 4983 0000 00000000 		.4byte	.LFB64
 4984 0004 44000000 		.4byte	.LFE64
 4985 0008 00000000 		.4byte	.LFB65
 4986 000c 6C000000 		.4byte	.LFE65
 4987 0010 00000000 		.4byte	.LFB66
 4988 0014 32000000 		.4byte	.LFE66
 4989 0018 00000000 		.4byte	.LFB67
 4990 001c 20000000 		.4byte	.LFE67
 4991 0020 00000000 		.4byte	.LFB68
 4992 0024 40000000 		.4byte	.LFE68
 4993 0028 00000000 		.4byte	.LFB69
 4994 002c DC000000 		.4byte	.LFE69
 4995 0030 00000000 		.4byte	.LFB70
 4996 0034 1C000000 		.4byte	.LFE70
 4997 0038 00000000 		.4byte	.LFB71
 4998 003c 28000000 		.4byte	.LFE71
 4999 0040 00000000 		.4byte	.LFB72
 5000 0044 C8000000 		.4byte	.LFE72
 5001 0048 00000000 		.4byte	.LFB73
 5002 004c 00010000 		.4byte	.LFE73
 5003 0050 00000000 		.4byte	.LFB74
 5004 0054 78000000 		.4byte	.LFE74
 5005 0058 00000000 		.4byte	.LFB75
 5006 005c 3C010000 		.4byte	.LFE75
 5007 0060 00000000 		.4byte	.LFB76
 5008 0064 B8000000 		.4byte	.LFE76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 108


 5009 0068 00000000 		.4byte	.LFB77
 5010 006c 1C000000 		.4byte	.LFE77
 5011 0070 00000000 		.4byte	.LFB78
 5012 0074 28000000 		.4byte	.LFE78
 5013 0078 00000000 		.4byte	.LFB79
 5014 007c 84000000 		.4byte	.LFE79
 5015 0080 00000000 		.4byte	.LFB80
 5016 0084 30000000 		.4byte	.LFE80
 5017 0088 00000000 		.4byte	.LFB81
 5018 008c 0C020000 		.4byte	.LFE81
 5019 0090 00000000 		.4byte	.LFB82
 5020 0094 68010000 		.4byte	.LFE82
 5021 0098 00000000 		.4byte	.LFB83
 5022 009c 44010000 		.4byte	.LFE83
 5023 00a0 00000000 		.4byte	.LFB84
 5024 00a4 14000000 		.4byte	.LFE84
 5025 00a8 00000000 		.4byte	.LFB85
 5026 00ac 1A000000 		.4byte	.LFE85
 5027 00b0 00000000 		.4byte	.LFB86
 5028 00b4 2A000000 		.4byte	.LFE86
 5029 00b8 00000000 		.4byte	.LFB87
 5030 00bc 7C020000 		.4byte	.LFE87
 5031 00c0 00000000 		.4byte	0
 5032 00c4 00000000 		.4byte	0
 5033              		.section	.debug_line,"",%progbits
 5034              	.Ldebug_line0:
 5035 0000 52050000 		.section	.debug_str,"MS",%progbits,1
 5035      0200EF01 
 5035      00000201 
 5035      FB0E0D00 
 5035      01010101 
 5036              	.LASF131:
 5037 0000 676D745F 		.ascii	"gmt_offset\000"
 5037      6F666673 
 5037      657400
 5038              	.LASF16:
 5039 000b 75696E74 		.ascii	"uint16\000"
 5039      313600
 5040              	.LASF38:
 5041 0012 76616C75 		.ascii	"value\000"
 5041      6500
 5042              	.LASF27:
 5043 0018 746D5F68 		.ascii	"tm_hour\000"
 5043      6F757200 
 5044              	.LASF32:
 5045 0020 746D5F79 		.ascii	"tm_yday\000"
 5045      64617900 
 5046              	.LASF139:
 5047 0028 62756666 		.ascii	"buffer_overflow\000"
 5047      65725F6F 
 5047      76657266 
 5047      6C6F7700 
 5048              	.LASF4:
 5049 0038 5F5F7569 		.ascii	"__uint8_t\000"
 5049      6E74385F 
 5049      7400
 5050              	.LASF69:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 109


 5051 0042 636F756E 		.ascii	"countDownResetCondition\000"
 5051      74446F77 
 5051      6E526573 
 5051      6574436F 
 5051      6E646974 
 5052              	.LASF54:
 5053 005a 6C6F6E67 		.ascii	"longitude\000"
 5053      69747564 
 5053      6500
 5054              	.LASF159:
 5055 0064 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5055      43313120 
 5055      352E342E 
 5055      31203230 
 5055      31363036 
 5056 0097 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5056      20726576 
 5056      6973696F 
 5056      6E203233 
 5056      37373135 
 5057 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5057      66756E63 
 5057      74696F6E 
 5057      2D736563 
 5057      74696F6E 
 5058              	.LASF134:
 5059 00f2 6D6F6465 		.ascii	"modem_wakeup\000"
 5059      6D5F7761 
 5059      6B657570 
 5059      00
 5060              	.LASF10:
 5061 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 5061      206C6F6E 
 5061      6720756E 
 5061      7369676E 
 5061      65642069 
 5062              	.LASF119:
 5063 0116 73616D70 		.ascii	"sample_freq\000"
 5063      6C655F66 
 5063      72657100 
 5064              	.LASF143:
 5065 0122 6D6F6465 		.ascii	"modem_state\000"
 5065      6D5F7374 
 5065      61746500 
 5066              	.LASF96:
 5067 012e 74657374 		.ascii	"test\000"
 5067      00
 5068              	.LASF152:
 5069 0133 616C6172 		.ascii	"alarmMeasure\000"
 5069      6D4D6561 
 5069      73757265 
 5069      00
 5070              	.LASF138:
 5071 0140 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5071      52784275 
 5071      66666572 
 5071      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 110


 5072              	.LASF145:
 5073 014d 6D6F6465 		.ascii	"modem_stats\000"
 5073      6D5F7374 
 5073      61747300 
 5074              	.LASF9:
 5075 0159 6C6F6E67 		.ascii	"long long int\000"
 5075      206C6F6E 
 5075      6720696E 
 5075      7400
 5076              	.LASF0:
 5077 0167 7369676E 		.ascii	"signed char\000"
 5077      65642063 
 5077      68617200 
 5078              	.LASF47:
 5079 0173 65636E6F 		.ascii	"ecno\000"
 5079      00
 5080              	.LASF66:
 5081 0178 636F756E 		.ascii	"countDownValue\000"
 5081      74446F77 
 5081      6E56616C 
 5081      756500
 5082              	.LASF153:
 5083 0187 74696D65 		.ascii	"timeToMeasure\000"
 5083      546F4D65 
 5083      61737572 
 5083      6500
 5084              	.LASF50:
 5085 0195 74696D65 		.ascii	"time_to_network_connect\000"
 5085      5F746F5F 
 5085      6E657477 
 5085      6F726B5F 
 5085      636F6E6E 
 5086              	.LASF155:
 5087 01ad 74696D65 		.ascii	"timeToSync\000"
 5087      546F5379 
 5087      6E6300
 5088              	.LASF148:
 5089 01b8 68747470 		.ascii	"http_body\000"
 5089      5F626F64 
 5089      7900
 5090              	.LASF107:
 5091 01c2 7365745F 		.ascii	"set_up_internet_connection\000"
 5091      75705F69 
 5091      6E746572 
 5091      6E65745F 
 5091      636F6E6E 
 5092              	.LASF130:
 5093 01dd 7365636F 		.ascii	"second\000"
 5093      6E6400
 5094              	.LASF126:
 5095 01e4 79656172 		.ascii	"year\000"
 5095      00
 5096              	.LASF45:
 5097 01e9 72786C65 		.ascii	"rxlev\000"
 5097      7600
 5098              	.LASF6:
 5099 01ef 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 111


 5099      20696E74 
 5099      00
 5100              	.LASF67:
 5101 01f8 63757272 		.ascii	"currentCountDownValue\000"
 5101      656E7443 
 5101      6F756E74 
 5101      446F776E 
 5101      56616C75 
 5102              	.LASF132:
 5103 020e 6D6F6465 		.ascii	"modem_get_state\000"
 5103      6D5F6765 
 5103      745F7374 
 5103      61746500 
 5104              	.LASF55:
 5105 021e 616C7469 		.ascii	"altitude\000"
 5105      74756465 
 5105      00
 5106              	.LASF15:
 5107 0227 75696E74 		.ascii	"uint8\000"
 5107      3800
 5108              	.LASF21:
 5109 022d 646F7562 		.ascii	"double\000"
 5109      6C6500
 5110              	.LASF19:
 5111 0234 696E7433 		.ascii	"int32\000"
 5111      3200
 5112              	.LASF59:
 5113 023a 6E6F6465 		.ascii	"node_type\000"
 5113      5F747970 
 5113      6500
 5114              	.LASF122:
 5115 0244 6D6F6465 		.ascii	"modem_configure_settings\000"
 5115      6D5F636F 
 5115      6E666967 
 5115      7572655F 
 5115      73657474 
 5116              	.LASF115:
 5117 025d 735F7369 		.ascii	"s_sim_type\000"
 5117      6D5F7479 
 5117      706500
 5118              	.LASF97:
 5119 0268 6E657477 		.ascii	"network_time\000"
 5119      6F726B5F 
 5119      74696D65 
 5119      00
 5120              	.LASF3:
 5121 0275 73686F72 		.ascii	"short unsigned int\000"
 5121      7420756E 
 5121      7369676E 
 5121      65642069 
 5121      6E7400
 5122              	.LASF17:
 5123 0288 75696E74 		.ascii	"uint32\000"
 5123      333200
 5124              	.LASF93:
 5125 028f 696E7465 		.ascii	"interval\000"
 5125      7276616C 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 112


 5125      00
 5126              	.LASF7:
 5127 0298 5F5F7569 		.ascii	"__uint32_t\000"
 5127      6E743332 
 5127      5F7400
 5128              	.LASF124:
 5129 02a3 6D6F6465 		.ascii	"modem_get_network_time\000"
 5129      6D5F6765 
 5129      745F6E65 
 5129      74776F72 
 5129      6B5F7469 
 5130              	.LASF29:
 5131 02ba 746D5F6D 		.ascii	"tm_mon\000"
 5131      6F6E00
 5132              	.LASF63:
 5133 02c1 64656275 		.ascii	"debug_level\000"
 5133      675F6C65 
 5133      76656C00 
 5134              	.LASF161:
 5135 02cd 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 5135      6F746F72 
 5135      694F535C 
 5135      6E6F746F 
 5135      72694F53 
 5136              	.LASF133:
 5137 02e8 6D6F6465 		.ascii	"modem_sleep\000"
 5137      6D5F736C 
 5137      65657000 
 5138              	.LASF118:
 5139 02f4 735F6465 		.ascii	"s_debug_freq\000"
 5139      6275675F 
 5139      66726571 
 5139      00
 5140              	.LASF111:
 5141 0301 75706461 		.ascii	"updatable_parameters_initialize\000"
 5141      7461626C 
 5141      655F7061 
 5141      72616D65 
 5141      74657273 
 5142              	.LASF30:
 5143 0321 746D5F79 		.ascii	"tm_year\000"
 5143      65617200 
 5144              	.LASF154:
 5145 0329 616C6172 		.ascii	"alarmSync\000"
 5145      6D53796E 
 5145      6300
 5146              	.LASF79:
 5147 0333 70696E73 		.ascii	"pins_configure_active\000"
 5147      5F636F6E 
 5147      66696775 
 5147      72655F61 
 5147      63746976 
 5148              	.LASF40:
 5149 0349 6B65795F 		.ascii	"key_value_t\000"
 5149      76616C75 
 5149      655F7400 
 5150              	.LASF84:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 113


 5151 0355 7077725F 		.ascii	"pwr_check\000"
 5151      63686563 
 5151      6B00
 5152              	.LASF8:
 5153 035f 6C6F6E67 		.ascii	"long unsigned int\000"
 5153      20756E73 
 5153      69676E65 
 5153      6420696E 
 5153      7400
 5154              	.LASF99:
 5155 0371 65787472 		.ascii	"extract_string\000"
 5155      6163745F 
 5155      73747269 
 5155      6E6700
 5156              	.LASF89:
 5157 0380 74696D65 		.ascii	"timeout\000"
 5157      6F757400 
 5158              	.LASF112:
 5159 0388 6765745F 		.ascii	"get_cell_network_stats\000"
 5159      63656C6C 
 5159      5F6E6574 
 5159      776F726B 
 5159      5F737461 
 5160              	.LASF56:
 5161 039f 74696D65 		.ascii	"time_to_lock\000"
 5161      5F746F5F 
 5161      6C6F636B 
 5161      00
 5162              	.LASF142:
 5163 03ac 64617461 		.ascii	"data\000"
 5163      00
 5164              	.LASF75:
 5165 03b1 65705F70 		.ascii	"ep_port\000"
 5165      6F727400 
 5166              	.LASF33:
 5167 03b9 746D5F69 		.ascii	"tm_isdst\000"
 5167      73647374 
 5167      00
 5168              	.LASF71:
 5169 03c2 6D6F6465 		.ascii	"modem_info\000"
 5169      6D5F696E 
 5169      666F00
 5170              	.LASF74:
 5171 03cd 65705F68 		.ascii	"ep_host\000"
 5171      6F737400 
 5172              	.LASF72:
 5173 03d5 63686970 		.ascii	"chip_uniqueId\000"
 5173      5F756E69 
 5173      71756549 
 5173      6400
 5174              	.LASF94:
 5175 03e3 6D6F6465 		.ascii	"modem_power_up\000"
 5175      6D5F706F 
 5175      7765725F 
 5175      757000
 5176              	.LASF160:
 5177 03f2 6D6F6465 		.ascii	"modem.c\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 114


 5177      6D2E6300 
 5178              	.LASF101:
 5179 03fa 62656769 		.ascii	"beginMarker\000"
 5179      6E4D6172 
 5179      6B657200 
 5180              	.LASF103:
 5181 0406 74617267 		.ascii	"target\000"
 5181      657400
 5182              	.LASF51:
 5183 040d 74696D65 		.ascii	"time_to_acquire_ip\000"
 5183      5F746F5F 
 5183      61637175 
 5183      6972655F 
 5183      697000
 5184              	.LASF102:
 5185 0420 656E644D 		.ascii	"endMarker\000"
 5185      61726B65 
 5185      7200
 5186              	.LASF2:
 5187 042a 73686F72 		.ascii	"short int\000"
 5187      7420696E 
 5187      7400
 5188              	.LASF125:
 5189 0434 65706F63 		.ascii	"epoch_time\000"
 5189      685F7469 
 5189      6D6500
 5190              	.LASF5:
 5191 043f 5F5F696E 		.ascii	"__int32_t\000"
 5191      7433325F 
 5191      7400
 5192              	.LASF100:
 5193 0449 66726F6D 		.ascii	"from\000"
 5193      00
 5194              	.LASF106:
 5195 044e 63726567 		.ascii	"creg\000"
 5195      00
 5196              	.LASF121:
 5197 0453 64656275 		.ascii	"debug_freq\000"
 5197      675F6672 
 5197      657100
 5198              	.LASF90:
 5199 045e 61745F61 		.ascii	"at_attempt\000"
 5199      7474656D 
 5199      707400
 5200              	.LASF98:
 5201 0469 61745F77 		.ascii	"at_write_command\000"
 5201      72697465 
 5201      5F636F6D 
 5201      6D616E64 
 5201      00
 5202              	.LASF73:
 5203 047a 7379735F 		.ascii	"sys_info_t\000"
 5203      696E666F 
 5203      5F7400
 5204              	.LASF65:
 5205 0485 75706461 		.ascii	"updatable_parameters_t\000"
 5205      7461626C 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 115


 5205      655F7061 
 5205      72616D65 
 5205      74657273 
 5206              	.LASF120:
 5207 049c 7265706F 		.ascii	"report_freq\000"
 5207      72745F66 
 5207      72657100 
 5208              	.LASF140:
 5209 04a8 64617461 		.ascii	"dataPointsInStack\000"
 5209      506F696E 
 5209      7473496E 
 5209      53746163 
 5209      6B00
 5210              	.LASF26:
 5211 04ba 746D5F6D 		.ascii	"tm_min\000"
 5211      696E00
 5212              	.LASF24:
 5213 04c1 73697A65 		.ascii	"sizetype\000"
 5213      74797065 
 5213      00
 5214              	.LASF127:
 5215 04ca 6D6F6E74 		.ascii	"month\000"
 5215      6800
 5216              	.LASF105:
 5217 04d0 69735F63 		.ascii	"is_connected_to_cell_network\000"
 5217      6F6E6E65 
 5217      63746564 
 5217      5F746F5F 
 5217      63656C6C 
 5218              	.LASF157:
 5219 04ed 75617274 		.ascii	"uart_received_string\000"
 5219      5F726563 
 5219      65697665 
 5219      645F7374 
 5219      72696E67 
 5220              	.LASF53:
 5221 0502 6C617469 		.ascii	"latitude\000"
 5221      74756465 
 5221      00
 5222              	.LASF34:
 5223 050b 74657374 		.ascii	"test_name\000"
 5223      5F6E616D 
 5223      6500
 5224              	.LASF156:
 5225 0515 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5225      546F5379 
 5225      636E5265 
 5225      6D6F7465 
 5225      50617261 
 5226              	.LASF95:
 5227 052c 6D6F6465 		.ascii	"modem_test\000"
 5227      6D5F7465 
 5227      737400
 5228              	.LASF110:
 5229 0537 6D617463 		.ascii	"match\000"
 5229      6800
 5230              	.LASF146:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 116


 5231 053d 75706461 		.ascii	"updatable_parameters\000"
 5231      7461626C 
 5231      655F7061 
 5231      72616D65 
 5231      74657273 
 5232              	.LASF128:
 5233 0552 686F7572 		.ascii	"hour\000"
 5233      00
 5234              	.LASF87:
 5235 0557 636F6D6D 		.ascii	"commands\000"
 5235      616E6473 
 5235      00
 5236              	.LASF91:
 5237 0560 636F6D70 		.ascii	"compare_location\000"
 5237      6172655F 
 5237      6C6F6361 
 5237      74696F6E 
 5237      00
 5238              	.LASF20:
 5239 0571 666C6F61 		.ascii	"float\000"
 5239      7400
 5240              	.LASF77:
 5241 0577 6D6F6465 		.ascii	"modem_initialize\000"
 5241      6D5F696E 
 5241      69746961 
 5241      6C697A65 
 5241      00
 5242              	.LASF117:
 5243 0588 735F7265 		.ascii	"s_report_freq\000"
 5243      706F7274 
 5243      5F667265 
 5243      7100
 5244              	.LASF60:
 5245 0596 73696D5F 		.ascii	"sim_type\000"
 5245      74797065 
 5245      00
 5246              	.LASF108:
 5247 059f 6973725F 		.ascii	"isr_telit_rx\000"
 5247      74656C69 
 5247      745F7278 
 5247      00
 5248              	.LASF70:
 5249 05ac 616C6172 		.ascii	"alarm\000"
 5249      6D00
 5250              	.LASF64:
 5251 05b2 5F426F6F 		.ascii	"_Bool\000"
 5251      6C00
 5252              	.LASF13:
 5253 05b8 696E7433 		.ascii	"int32_t\000"
 5253      325F7400 
 5254              	.LASF1:
 5255 05c0 756E7369 		.ascii	"unsigned char\000"
 5255      676E6564 
 5255      20636861 
 5255      7200
 5256              	.LASF151:
 5257 05ce 73797374 		.ascii	"system_settings\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 117


 5257      656D5F73 
 5257      65747469 
 5257      6E677300 
 5258              	.LASF92:
 5259 05de 64656C61 		.ascii	"delay\000"
 5259      7900
 5260              	.LASF48:
 5261 05e4 72737271 		.ascii	"rsrq\000"
 5261      00
 5262              	.LASF62:
 5263 05e9 73796E63 		.ascii	"sync_time\000"
 5263      5F74696D 
 5263      6500
 5264              	.LASF114:
 5265 05f3 735F6E6F 		.ascii	"s_node_type\000"
 5265      64655F74 
 5265      79706500 
 5266              	.LASF46:
 5267 05ff 72736370 		.ascii	"rscp\000"
 5267      00
 5268              	.LASF135:
 5269 0604 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 5269      6D5F6765 
 5269      745F6770 
 5269      735F636F 
 5269      6F726469 
 5270              	.LASF37:
 5271 061e 74657374 		.ascii	"test_t\000"
 5271      5F7400
 5272              	.LASF150:
 5273 0625 73797374 		.ascii	"system_info\000"
 5273      656D5F69 
 5273      6E666F00 
 5274              	.LASF43:
 5275 0631 696D6569 		.ascii	"imei\000"
 5275      00
 5276              	.LASF36:
 5277 0636 72656173 		.ascii	"reason\000"
 5277      6F6E00
 5278              	.LASF49:
 5279 063d 72737270 		.ascii	"rsrp\000"
 5279      00
 5280              	.LASF52:
 5281 0642 6D6F6465 		.ascii	"modem_stats_t\000"
 5281      6D5F7374 
 5281      6174735F 
 5281      7400
 5282              	.LASF86:
 5283 0650 75617274 		.ascii	"uart_string_reset\000"
 5283      5F737472 
 5283      696E675F 
 5283      72657365 
 5283      7400
 5284              	.LASF31:
 5285 0662 746D5F77 		.ascii	"tm_wday\000"
 5285      64617900 
 5286              	.LASF85:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 118


 5287 066a 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 5287      6D5F736F 
 5287      66745F70 
 5287      6F776572 
 5287      5F637963 
 5288              	.LASF23:
 5289 0681 6C6F6E67 		.ascii	"long double\000"
 5289      20646F75 
 5289      626C6500 
 5290              	.LASF22:
 5291 068d 63686172 		.ascii	"char\000"
 5291      00
 5292              	.LASF104:
 5293 0692 6D6F6465 		.ascii	"modem_process_tasks\000"
 5293      6D5F7072 
 5293      6F636573 
 5293      735F7461 
 5293      736B7300 
 5294              	.LASF11:
 5295 06a6 756E7369 		.ascii	"unsigned int\000"
 5295      676E6564 
 5295      20696E74 
 5295      00
 5296              	.LASF123:
 5297 06b3 4346554E 		.ascii	"CFUN\000"
 5297      00
 5298              	.LASF42:
 5299 06b8 6D6F6465 		.ascii	"model_id\000"
 5299      6C5F6964 
 5299      00
 5300              	.LASF149:
 5301 06c1 68747470 		.ascii	"http_route\000"
 5301      5F726F75 
 5301      746500
 5302              	.LASF44:
 5303 06cc 6D6F6465 		.ascii	"modem_info_t\000"
 5303      6D5F696E 
 5303      666F5F74 
 5303      00
 5304              	.LASF58:
 5305 06d9 6770735F 		.ascii	"gps_t\000"
 5305      7400
 5306              	.LASF158:
 5307 06df 75617274 		.ascii	"uart_string_index\000"
 5307      5F737472 
 5307      696E675F 
 5307      696E6465 
 5307      7800
 5308              	.LASF61:
 5309 06f1 6D656173 		.ascii	"measure_time\000"
 5309      7572655F 
 5309      74696D65 
 5309      00
 5310              	.LASF109:
 5311 06fe 69735F63 		.ascii	"is_connected_to_internet\000"
 5311      6F6E6E65 
 5311      63746564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 119


 5311      5F746F5F 
 5311      696E7465 
 5312              	.LASF144:
 5313 0717 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5313      6D5F7374 
 5313      6172745F 
 5313      74696D65 
 5313      5F737461 
 5314              	.LASF137:
 5315 072e 6770735F 		.ascii	"gps_status\000"
 5315      73746174 
 5315      757300
 5316              	.LASF78:
 5317 0739 70696E73 		.ascii	"pins_configure_inactive\000"
 5317      5F636F6E 
 5317      66696775 
 5317      72655F69 
 5317      6E616374 
 5318              	.LASF41:
 5319 0751 73696D5F 		.ascii	"sim_id\000"
 5319      696400
 5320              	.LASF28:
 5321 0758 746D5F6D 		.ascii	"tm_mday\000"
 5321      64617900 
 5322              	.LASF57:
 5323 0760 76616C69 		.ascii	"valid\000"
 5323      6400
 5324              	.LASF129:
 5325 0766 6D696E75 		.ascii	"minute\000"
 5325      746500
 5326              	.LASF14:
 5327 076d 75696E74 		.ascii	"uint32_t\000"
 5327      33325F74 
 5327      00
 5328              	.LASF25:
 5329 0776 746D5F73 		.ascii	"tm_sec\000"
 5329      656300
 5330              	.LASF113:
 5331 077d 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 5331      75706461 
 5331      7465645F 
 5331      70617261 
 5331      6D657465 
 5332              	.LASF116:
 5333 07a0 735F7361 		.ascii	"s_sample_freq\000"
 5333      6D706C65 
 5333      5F667265 
 5333      7100
 5334              	.LASF35:
 5335 07ae 73746174 		.ascii	"status\000"
 5335      757300
 5336              	.LASF141:
 5337 07b5 64617461 		.ascii	"dataPointsInStackDesired\000"
 5337      506F696E 
 5337      7473496E 
 5337      53746163 
 5337      6B446573 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccJKc7W2.s 			page 120


 5338              	.LASF76:
 5339 07ce 7379735F 		.ascii	"sys_settings_t\000"
 5339      73657474 
 5339      696E6773 
 5339      5F7400
 5340              	.LASF12:
 5341 07dd 75696E74 		.ascii	"uint8_t\000"
 5341      385F7400 
 5342              	.LASF18:
 5343 07e5 696E7431 		.ascii	"int16\000"
 5343      3600
 5344              	.LASF81:
 5345 07eb 61745F72 		.ascii	"at_ready\000"
 5345      65616479 
 5345      00
 5346              	.LASF82:
 5347 07f4 61747465 		.ascii	"attempts\000"
 5347      6D707473 
 5347      00
 5348              	.LASF68:
 5349 07fd 636F756E 		.ascii	"countDownType\000"
 5349      74446F77 
 5349      6E547970 
 5349      6500
 5350              	.LASF83:
 5351 080b 626F6F74 		.ascii	"boot_time\000"
 5351      5F74696D 
 5351      6500
 5352              	.LASF88:
 5353 0815 65787065 		.ascii	"expected_response\000"
 5353      63746564 
 5353      5F726573 
 5353      706F6E73 
 5353      6500
 5354              	.LASF136:
 5355 0827 6C6F636B 		.ascii	"lock_time\000"
 5355      5F74696D 
 5355      6500
 5356              	.LASF147:
 5357 0831 68747470 		.ascii	"http_request\000"
 5357      5F726571 
 5357      75657374 
 5357      00
 5358              	.LASF80:
 5359 083e 6D6F6465 		.ascii	"modem_power_down\000"
 5359      6D5F706F 
 5359      7765725F 
 5359      646F776E 
 5359      00
 5360              	.LASF39:
 5361 084f 74696D65 		.ascii	"timeStamp\000"
 5361      5374616D 
 5361      7000
 5362              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

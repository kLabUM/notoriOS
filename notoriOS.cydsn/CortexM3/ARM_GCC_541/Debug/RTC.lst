ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	RTC_initVar
  20              		.bss
  21              		.type	RTC_initVar, %object
  22              		.size	RTC_initVar, 1
  23              	RTC_initVar:
  24 0000 00       		.space	1
  25              		.global	RTC_currentTimeDate
  26              		.data
  27              		.align	2
  28              		.type	RTC_currentTimeDate, %object
  29              		.size	RTC_currentTimeDate, 12
  30              	RTC_currentTimeDate:
  31 0000 00       		.byte	0
  32 0001 00       		.byte	0
  33 0002 00       		.byte	0
  34 0003 01       		.byte	1
  35 0004 01       		.byte	1
  36 0005 00       		.space	1
  37 0006 0100     		.short	1
  38 0008 01       		.byte	1
  39 0009 00       		.space	1
  40 000a 6C07     		.short	1900
  41              		.global	RTC_alarmCfgTimeDate
  42              		.align	2
  43              		.type	RTC_alarmCfgTimeDate, %object
  44              		.size	RTC_alarmCfgTimeDate, 12
  45              	RTC_alarmCfgTimeDate:
  46 000c 00       		.byte	0
  47 000d 00       		.byte	0
  48 000e 00       		.byte	0
  49 000f 01       		.byte	1
  50 0010 01       		.byte	1
  51 0011 00       		.space	1
  52 0012 0100     		.short	1
  53 0014 01       		.byte	1
  54 0015 00       		.space	1
  55 0016 6C07     		.short	1900
  56              		.global	RTC_alarmCfgMask
  57              		.bss
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 2


  58              		.type	RTC_alarmCfgMask, %object
  59              		.size	RTC_alarmCfgMask, 1
  60              	RTC_alarmCfgMask:
  61 0001 00       		.space	1
  62              		.global	RTC_alarmCurStatus
  63              		.type	RTC_alarmCurStatus, %object
  64              		.size	RTC_alarmCurStatus, 1
  65              	RTC_alarmCurStatus:
  66 0002 00       		.space	1
  67              		.global	RTC_intervalCfgMask
  68              		.type	RTC_intervalCfgMask, %object
  69              		.size	RTC_intervalCfgMask, 1
  70              	RTC_intervalCfgMask:
  71 0003 00       		.space	1
  72              		.global	RTC_statusDateTime
  73              		.type	RTC_statusDateTime, %object
  74              		.size	RTC_statusDateTime, 1
  75              	RTC_statusDateTime:
  76 0004 00       		.space	1
  77              		.global	RTC_daysInMonths
  78              		.section	.rodata
  79              		.align	2
  80              		.type	RTC_daysInMonths, %object
  81              		.size	RTC_daysInMonths, 12
  82              	RTC_daysInMonths:
  83 0000 1F       		.byte	31
  84 0001 1C       		.byte	28
  85 0002 1F       		.byte	31
  86 0003 1E       		.byte	30
  87 0004 1F       		.byte	31
  88 0005 1E       		.byte	30
  89 0006 1F       		.byte	31
  90 0007 1F       		.byte	31
  91 0008 1E       		.byte	30
  92 0009 1F       		.byte	31
  93 000a 1E       		.byte	30
  94 000b 1F       		.byte	31
  95              		.section	.text.RTC_Start,"ax",%progbits
  96              		.align	2
  97              		.global	RTC_Start
  98              		.thumb
  99              		.thumb_func
 100              		.type	RTC_Start, %function
 101              	RTC_Start:
 102              	.LFB0:
 103              		.file 1 "Generated_Source\\PSoC5\\RTC.c"
   1:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC.c **** * File Name: RTC.c
   3:Generated_Source\PSoC5/RTC.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC.c **** *
   5:Generated_Source\PSoC5/RTC.c **** * Description:
   6:Generated_Source\PSoC5/RTC.c **** *  This file provides the source code to the API for the RTC Component.
   7:Generated_Source\PSoC5/RTC.c **** *
   8:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
   9:Generated_Source\PSoC5/RTC.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/RTC.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/RTC.c **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 3


  12:Generated_Source\PSoC5/RTC.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/RTC.c **** 
  15:Generated_Source\PSoC5/RTC.c **** #include "RTC.h"
  16:Generated_Source\PSoC5/RTC.c **** #include "CyLib.h"
  17:Generated_Source\PSoC5/RTC.c **** 
  18:Generated_Source\PSoC5/RTC.c **** /* Function Prototypes */
  19:Generated_Source\PSoC5/RTC.c **** static void  RTC_SetInitValues(void)     ;
  20:Generated_Source\PSoC5/RTC.c **** static uint8 RTC_DayOfWeek(uint8 dayOfMonth, uint8 month, uint16 year)
  21:Generated_Source\PSoC5/RTC.c ****                                                       ;
  22:Generated_Source\PSoC5/RTC.c **** #if (1u == RTC_DST_FUNC_ENABLE)
  23:Generated_Source\PSoC5/RTC.c ****     static void  RTC_DSTDateConversion(void) ;
  24:Generated_Source\PSoC5/RTC.c **** #endif /* 1u == RTC_DST_FUNC_ENABLE */
  25:Generated_Source\PSoC5/RTC.c **** 
  26:Generated_Source\PSoC5/RTC.c **** 
  27:Generated_Source\PSoC5/RTC.c **** /* Variables were not initialized */
  28:Generated_Source\PSoC5/RTC.c **** uint8 RTC_initVar = 0u;
  29:Generated_Source\PSoC5/RTC.c **** 
  30:Generated_Source\PSoC5/RTC.c **** /* Time and date variables
  31:Generated_Source\PSoC5/RTC.c **** * Initial value are: Second = 0-59, Minute = 0-59, Hour = 0-23, DayOfWeek = 1-7,
  32:Generated_Source\PSoC5/RTC.c **** * DayOfMonth = 1-31, DayOfYear = 1-366, Month = 1-12, Year = 1900-2200.
  33:Generated_Source\PSoC5/RTC.c **** */
  34:Generated_Source\PSoC5/RTC.c **** RTC_TIME_DATE RTC_currentTimeDate = {0u, 0u, 0u, 1u, 1u, 1u, 1u, 1900u};
  35:Generated_Source\PSoC5/RTC.c **** 
  36:Generated_Source\PSoC5/RTC.c **** /* Alarm time and date variables
  37:Generated_Source\PSoC5/RTC.c **** * Initial value are: Second = 0-59, Minute = 0-59, Hour = 0-23, DayOfWeek = 1-7,
  38:Generated_Source\PSoC5/RTC.c **** * DayOfMonth = 1-31, DayOfYear = 1-366, Month = 1-12, Year = 1900-2200.
  39:Generated_Source\PSoC5/RTC.c **** */
  40:Generated_Source\PSoC5/RTC.c **** RTC_TIME_DATE RTC_alarmCfgTimeDate = {0u, 0u, 0u, 1u, 1u, 1u, 1u, 1900u};
  41:Generated_Source\PSoC5/RTC.c **** 
  42:Generated_Source\PSoC5/RTC.c **** #if (1u == RTC_DST_FUNC_ENABLE) /* DST enabled */
  43:Generated_Source\PSoC5/RTC.c **** 
  44:Generated_Source\PSoC5/RTC.c ****     /* Define DST format: '0' - fixed, '1' - relative */
  45:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstModeType = 0u;
  46:Generated_Source\PSoC5/RTC.c **** 
  47:Generated_Source\PSoC5/RTC.c ****     /* Hour 0-23, DayOfWeek 1-7, Week 1-5, DayOfMonth 1-31, Month 1-12 */
  48:Generated_Source\PSoC5/RTC.c ****     RTC_DSTIME RTC_dstTimeDateStart = {0u, 1u, 1u, 1u, 1u};
  49:Generated_Source\PSoC5/RTC.c ****     RTC_DSTIME RTC_dstTimeDateStop = {0u, 1u, 1u, 1u, 1u};
  50:Generated_Source\PSoC5/RTC.c **** 
  51:Generated_Source\PSoC5/RTC.c ****     /* Number of Hours to add/dec to time */
  52:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstOffsetMin = 0u;
  53:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstStartStatus = 0u;
  54:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstStopStatus = 0u;
  55:Generated_Source\PSoC5/RTC.c **** 
  56:Generated_Source\PSoC5/RTC.c **** #endif /* 1u == RTC_DST_FUNC_ENABLE*/
  57:Generated_Source\PSoC5/RTC.c **** 
  58:Generated_Source\PSoC5/RTC.c **** /* Mask Registers */
  59:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_alarmCfgMask = 0u;
  60:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_alarmCurStatus = 0u;
  61:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_intervalCfgMask = 0u;
  62:Generated_Source\PSoC5/RTC.c **** 
  63:Generated_Source\PSoC5/RTC.c **** /* Status & Control Variables */
  64:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_statusDateTime = 0u;
  65:Generated_Source\PSoC5/RTC.c **** 
  66:Generated_Source\PSoC5/RTC.c **** /* Month Day Array - number of days in the months */
  67:Generated_Source\PSoC5/RTC.c **** const uint8 CYCODE RTC_daysInMonths[RTC_MONTHS_IN_YEAR] = {
  68:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_JANUARY,
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 4


  69:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_FEBRUARY,
  70:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_MARCH,
  71:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_APRIL,
  72:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_MAY,
  73:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_JUNE,
  74:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_JULY,
  75:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_AUGUST,
  76:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_SEPTEMBER,
  77:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_OCTOBER,
  78:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_NOVEMBER,
  79:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_DECEMBER};
  80:Generated_Source\PSoC5/RTC.c **** 
  81:Generated_Source\PSoC5/RTC.c **** 
  82:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
  83:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_Start
  84:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
  85:Generated_Source\PSoC5/RTC.c **** *
  86:Generated_Source\PSoC5/RTC.c **** * Summary:
  87:Generated_Source\PSoC5/RTC.c **** *  Enables RTC component: configures counter, setup interrupts, done all
  88:Generated_Source\PSoC5/RTC.c **** *  required calculation and starts counter.
  89:Generated_Source\PSoC5/RTC.c **** *
  90:Generated_Source\PSoC5/RTC.c **** * Parameters:
  91:Generated_Source\PSoC5/RTC.c **** *  None.
  92:Generated_Source\PSoC5/RTC.c **** *
  93:Generated_Source\PSoC5/RTC.c **** * Return:
  94:Generated_Source\PSoC5/RTC.c **** *  None.
  95:Generated_Source\PSoC5/RTC.c **** *
  96:Generated_Source\PSoC5/RTC.c **** * Global variables:
  97:Generated_Source\PSoC5/RTC.c **** *  RTC_initVar: global variable is used to indicate initial
  98:Generated_Source\PSoC5/RTC.c **** *  configuration of this component.  The variable is initialized to zero and set
  99:Generated_Source\PSoC5/RTC.c **** *  to 1 the first time RTC_Start() is called. This allows for
 100:Generated_Source\PSoC5/RTC.c **** *  component initialization without re-initialization in all subsequent calls
 101:Generated_Source\PSoC5/RTC.c **** *  to the RTC_Start() routine.
 102:Generated_Source\PSoC5/RTC.c **** *
 103:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate, RTC_dstTimeDateStart,
 104:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 105:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 106:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 107:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: global variables are modified by the
 108:Generated_Source\PSoC5/RTC.c **** *  functions called from RTC_Init().
 109:Generated_Source\PSoC5/RTC.c **** *
 110:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 111:Generated_Source\PSoC5/RTC.c **** *  No.
 112:Generated_Source\PSoC5/RTC.c **** *
 113:Generated_Source\PSoC5/RTC.c **** * Side Effects:
 114:Generated_Source\PSoC5/RTC.c **** *  Enables for the one pulse per second (for the RTC component) and
 115:Generated_Source\PSoC5/RTC.c **** *  Central Time Wheel (for the Sleep Timer component) signals to wake up device
 116:Generated_Source\PSoC5/RTC.c **** *  from the low power (Sleep and Alternate Active) modes and leaves them
 117:Generated_Source\PSoC5/RTC.c **** *  enabled.
 118:Generated_Source\PSoC5/RTC.c **** *
 119:Generated_Source\PSoC5/RTC.c **** *  The Power Manager API has the higher priority on resource usage: it is NOT
 120:Generated_Source\PSoC5/RTC.c **** *  guaranteed that the Sleep Timer's configuration will be the same on exit
 121:Generated_Source\PSoC5/RTC.c **** *  from the Power Manager APIs as on the entry. To prevent this use the Sleep
 122:Generated_Source\PSoC5/RTC.c **** *  Timer's Sleep() - to save configuration and stop the component and Wakeup()
 123:Generated_Source\PSoC5/RTC.c **** *  function to restore configuration and enable the component.
 124:Generated_Source\PSoC5/RTC.c **** *
 125:Generated_Source\PSoC5/RTC.c **** *  The Sleep Timer and Real Time Clock (RTC) components could be configured as
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 5


 126:Generated_Source\PSoC5/RTC.c **** *  a wake up source from the low power modes only both at once.
 127:Generated_Source\PSoC5/RTC.c **** *
 128:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 129:Generated_Source\PSoC5/RTC.c **** void RTC_Start(void) 
 130:Generated_Source\PSoC5/RTC.c **** {
 104              		.loc 1 130 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 131:Generated_Source\PSoC5/RTC.c ****     /* Execute once in normal flow */
 132:Generated_Source\PSoC5/RTC.c ****     if(0u == RTC_initVar)
 114              		.loc 1 132 0
 115 0004 064B     		ldr	r3, .L3
 116 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 117 0008 002B     		cmp	r3, #0
 118 000a 04D1     		bne	.L2
 133:Generated_Source\PSoC5/RTC.c ****     {
 134:Generated_Source\PSoC5/RTC.c ****         RTC_Init();
 119              		.loc 1 134 0
 120 000c FFF7FEFF 		bl	RTC_Init
 135:Generated_Source\PSoC5/RTC.c ****         RTC_initVar = 1u;
 121              		.loc 1 135 0
 122 0010 034B     		ldr	r3, .L3
 123 0012 0122     		movs	r2, #1
 124 0014 1A70     		strb	r2, [r3]
 125              	.L2:
 136:Generated_Source\PSoC5/RTC.c ****     }
 137:Generated_Source\PSoC5/RTC.c **** 
 138:Generated_Source\PSoC5/RTC.c ****     /* Enable component's operation */
 139:Generated_Source\PSoC5/RTC.c ****     RTC_Enable();
 126              		.loc 1 139 0
 127 0016 FFF7FEFF 		bl	RTC_Enable
 140:Generated_Source\PSoC5/RTC.c **** }
 128              		.loc 1 140 0
 129 001a 00BF     		nop
 130 001c 80BD     		pop	{r7, pc}
 131              	.L4:
 132 001e 00BF     		.align	2
 133              	.L3:
 134 0020 00000000 		.word	RTC_initVar
 135              		.cfi_endproc
 136              	.LFE0:
 137              		.size	RTC_Start, .-RTC_Start
 138              		.section	.text.RTC_Stop,"ax",%progbits
 139              		.align	2
 140              		.global	RTC_Stop
 141              		.thumb
 142              		.thumb_func
 143              		.type	RTC_Stop, %function
 144              	RTC_Stop:
 145              	.LFB1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 6


 141:Generated_Source\PSoC5/RTC.c **** 
 142:Generated_Source\PSoC5/RTC.c **** 
 143:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/RTC.c **** * Function Name: RTC_Stop
 145:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 146:Generated_Source\PSoC5/RTC.c **** *
 147:Generated_Source\PSoC5/RTC.c **** * Summary:
 148:Generated_Source\PSoC5/RTC.c **** *  Stops the RTC component.
 149:Generated_Source\PSoC5/RTC.c **** *
 150:Generated_Source\PSoC5/RTC.c **** * Parameters:
 151:Generated_Source\PSoC5/RTC.c **** *  None.
 152:Generated_Source\PSoC5/RTC.c **** *
 153:Generated_Source\PSoC5/RTC.c **** * Return:
 154:Generated_Source\PSoC5/RTC.c **** *  None.
 155:Generated_Source\PSoC5/RTC.c **** *
 156:Generated_Source\PSoC5/RTC.c **** * Side Effects:
 157:Generated_Source\PSoC5/RTC.c **** *  Leaves the one pulse per second (for the RTC component) and the Central Time
 158:Generated_Source\PSoC5/RTC.c **** *  Wheel (for the Sleep Timer component) signals to wake up device from the low
 159:Generated_Source\PSoC5/RTC.c **** *  power (Sleep and Alternate Active) modes enabled after Sleep Time component
 160:Generated_Source\PSoC5/RTC.c **** *  is stopped.
 161:Generated_Source\PSoC5/RTC.c **** *
 162:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/RTC.c **** void RTC_Stop(void) 
 164:Generated_Source\PSoC5/RTC.c **** {
 146              		.loc 1 164 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              		.cfi_def_cfa_offset 16
 156 0004 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/RTC.c ****     uint8 interruptState;
 166:Generated_Source\PSoC5/RTC.c **** 
 167:Generated_Source\PSoC5/RTC.c ****     /* Disable the interrupt. */
 168:Generated_Source\PSoC5/RTC.c ****     CyIntDisable(RTC_ISR_NUMBER);
 158              		.loc 1 168 0
 159 0006 0B4B     		ldr	r3, .L6
 160 0008 0222     		movs	r2, #2
 161 000a 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC5/RTC.c **** 
 170:Generated_Source\PSoC5/RTC.c ****     /* Enter critical section */
 171:Generated_Source\PSoC5/RTC.c ****     interruptState = CyEnterCriticalSection();
 162              		.loc 1 171 0
 163 000c FFF7FEFF 		bl	CyEnterCriticalSection
 164 0010 0346     		mov	r3, r0
 165 0012 FB71     		strb	r3, [r7, #7]
 172:Generated_Source\PSoC5/RTC.c **** 
 173:Generated_Source\PSoC5/RTC.c ****     /* Stop one pulse per second counter and interrupt */
 174:Generated_Source\PSoC5/RTC.c ****     RTC_OPPS_CFG_REG &= (uint8)(~(RTC_OPPSIE_EN_MASK | RTC_OPPS_EN_MASK));
 166              		.loc 1 174 0
 167 0014 084A     		ldr	r2, .L6+4
 168 0016 084B     		ldr	r3, .L6+4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 7


 169 0018 1B78     		ldrb	r3, [r3]
 170 001a DBB2     		uxtb	r3, r3
 171 001c 23F03003 		bic	r3, r3, #48
 172 0020 DBB2     		uxtb	r3, r3
 173 0022 1370     		strb	r3, [r2]
 175:Generated_Source\PSoC5/RTC.c **** 
 176:Generated_Source\PSoC5/RTC.c ****     /* Exit critical section */
 177:Generated_Source\PSoC5/RTC.c ****     CyExitCriticalSection(interruptState);
 174              		.loc 1 177 0
 175 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 176 0026 1846     		mov	r0, r3
 177 0028 FFF7FEFF 		bl	CyExitCriticalSection
 178:Generated_Source\PSoC5/RTC.c **** }
 178              		.loc 1 178 0
 179 002c 00BF     		nop
 180 002e 0837     		adds	r7, r7, #8
 181              		.cfi_def_cfa_offset 8
 182 0030 BD46     		mov	sp, r7
 183              		.cfi_def_cfa_register 13
 184              		@ sp needed
 185 0032 80BD     		pop	{r7, pc}
 186              	.L7:
 187              		.align	2
 188              	.L6:
 189 0034 80E100E0 		.word	-536813184
 190 0038 82430040 		.word	1073759106
 191              		.cfi_endproc
 192              	.LFE1:
 193              		.size	RTC_Stop, .-RTC_Stop
 194              		.section	.text.RTC_EnableInt,"ax",%progbits
 195              		.align	2
 196              		.global	RTC_EnableInt
 197              		.thumb
 198              		.thumb_func
 199              		.type	RTC_EnableInt, %function
 200              	RTC_EnableInt:
 201              	.LFB2:
 179:Generated_Source\PSoC5/RTC.c **** 
 180:Generated_Source\PSoC5/RTC.c **** 
 181:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 182:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_EnableInt
 183:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 184:Generated_Source\PSoC5/RTC.c **** *
 185:Generated_Source\PSoC5/RTC.c **** * Summary:
 186:Generated_Source\PSoC5/RTC.c **** *  Enables interrupts of RTC Component.
 187:Generated_Source\PSoC5/RTC.c **** *
 188:Generated_Source\PSoC5/RTC.c **** * Parameters:
 189:Generated_Source\PSoC5/RTC.c **** *  None.
 190:Generated_Source\PSoC5/RTC.c **** *
 191:Generated_Source\PSoC5/RTC.c **** * Return:
 192:Generated_Source\PSoC5/RTC.c **** *  None.
 193:Generated_Source\PSoC5/RTC.c **** *
 194:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 195:Generated_Source\PSoC5/RTC.c **** void RTC_EnableInt(void) 
 196:Generated_Source\PSoC5/RTC.c **** {
 202              		.loc 1 196 0
 203              		.cfi_startproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 8


 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 80B4     		push	{r7}
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 7, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 197:Generated_Source\PSoC5/RTC.c ****     /* Enable the interrupt */
 198:Generated_Source\PSoC5/RTC.c ****     CyIntEnable(RTC_ISR_NUMBER);
 212              		.loc 1 198 0
 213 0004 034B     		ldr	r3, .L9
 214 0006 0222     		movs	r2, #2
 215 0008 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC5/RTC.c **** }
 216              		.loc 1 199 0
 217 000a 00BF     		nop
 218 000c BD46     		mov	sp, r7
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 000e 80BC     		pop	{r7}
 222              		.cfi_restore 7
 223              		.cfi_def_cfa_offset 0
 224 0010 7047     		bx	lr
 225              	.L10:
 226 0012 00BF     		.align	2
 227              	.L9:
 228 0014 00E100E0 		.word	-536813312
 229              		.cfi_endproc
 230              	.LFE2:
 231              		.size	RTC_EnableInt, .-RTC_EnableInt
 232              		.section	.text.RTC_DisableInt,"ax",%progbits
 233              		.align	2
 234              		.global	RTC_DisableInt
 235              		.thumb
 236              		.thumb_func
 237              		.type	RTC_DisableInt, %function
 238              	RTC_DisableInt:
 239              	.LFB3:
 200:Generated_Source\PSoC5/RTC.c **** 
 201:Generated_Source\PSoC5/RTC.c **** 
 202:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_DisableInt
 204:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC.c **** *
 206:Generated_Source\PSoC5/RTC.c **** * Summary:
 207:Generated_Source\PSoC5/RTC.c **** *  Disables interrupts of RTC Component, time and date stop running.
 208:Generated_Source\PSoC5/RTC.c **** *
 209:Generated_Source\PSoC5/RTC.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC.c **** *  None.
 211:Generated_Source\PSoC5/RTC.c **** *
 212:Generated_Source\PSoC5/RTC.c **** * Return:
 213:Generated_Source\PSoC5/RTC.c **** *  None.
 214:Generated_Source\PSoC5/RTC.c **** *
 215:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC.c **** void RTC_DisableInt(void) 
 217:Generated_Source\PSoC5/RTC.c **** {
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 9


 240              		.loc 1 217 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245 0000 80B4     		push	{r7}
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 7, -4
 248 0002 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC.c ****     /* Disable the interrupt. */
 219:Generated_Source\PSoC5/RTC.c ****     CyIntDisable(RTC_ISR_NUMBER);
 250              		.loc 1 219 0
 251 0004 034B     		ldr	r3, .L12
 252 0006 0222     		movs	r2, #2
 253 0008 1A60     		str	r2, [r3]
 220:Generated_Source\PSoC5/RTC.c **** }
 254              		.loc 1 220 0
 255 000a 00BF     		nop
 256 000c BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 000e 80BC     		pop	{r7}
 260              		.cfi_restore 7
 261              		.cfi_def_cfa_offset 0
 262 0010 7047     		bx	lr
 263              	.L13:
 264 0012 00BF     		.align	2
 265              	.L12:
 266 0014 80E100E0 		.word	-536813184
 267              		.cfi_endproc
 268              	.LFE3:
 269              		.size	RTC_DisableInt, .-RTC_DisableInt
 270              		.section	.text.RTC_Init,"ax",%progbits
 271              		.align	2
 272              		.global	RTC_Init
 273              		.thumb
 274              		.thumb_func
 275              		.type	RTC_Init, %function
 276              	RTC_Init:
 277              	.LFB4:
 221:Generated_Source\PSoC5/RTC.c **** 
 222:Generated_Source\PSoC5/RTC.c **** 
 223:Generated_Source\PSoC5/RTC.c **** #if (1u == RTC_DST_FUNC_ENABLE)
 224:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
 225:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_DSTDateConversion
 226:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
 227:Generated_Source\PSoC5/RTC.c ****     *
 228:Generated_Source\PSoC5/RTC.c ****     * Summary:
 229:Generated_Source\PSoC5/RTC.c ****     * Converts relative to absolute date.
 230:Generated_Source\PSoC5/RTC.c ****     *
 231:Generated_Source\PSoC5/RTC.c ****     * Parameters:
 232:Generated_Source\PSoC5/RTC.c ****     *  None.
 233:Generated_Source\PSoC5/RTC.c ****     *
 234:Generated_Source\PSoC5/RTC.c ****     * Return:
 235:Generated_Source\PSoC5/RTC.c ****     *  None.
 236:Generated_Source\PSoC5/RTC.c ****     *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 10


 237:Generated_Source\PSoC5/RTC.c ****     * Global variables:
 238:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month,
 239:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek,
 240:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week,
 241:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month,
 242:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek,
 243:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week,
 244:Generated_Source\PSoC5/RTC.c ****     *  RTC_currentTimeDate.Year: these global variables are
 245:Generated_Source\PSoC5/RTC.c ****     *  used to correct day of week.
 246:Generated_Source\PSoC5/RTC.c ****     *
 247:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth,
 248:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth: these global variables are
 249:Generated_Source\PSoC5/RTC.c ****     *  modified after convertion.
 250:Generated_Source\PSoC5/RTC.c ****     *
 251:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
 252:Generated_Source\PSoC5/RTC.c ****     *  No.
 253:Generated_Source\PSoC5/RTC.c ****     *
 254:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
 255:Generated_Source\PSoC5/RTC.c ****     static void RTC_DSTDateConversion(void) 
 256:Generated_Source\PSoC5/RTC.c ****     {
 257:Generated_Source\PSoC5/RTC.c ****         uint8 week = 1u;
 258:Generated_Source\PSoC5/RTC.c ****         uint8 day = 1u;
 259:Generated_Source\PSoC5/RTC.c ****         uint8 dayOfWeek;
 260:Generated_Source\PSoC5/RTC.c **** 
 261:Generated_Source\PSoC5/RTC.c ****         /* Get day of week */
 262:Generated_Source\PSoC5/RTC.c ****         dayOfWeek = RTC_DayOfWeek(day, RTC_dstTimeDateStart.Month,
 263:Generated_Source\PSoC5/RTC.c ****                                                     RTC_currentTimeDate.Year) + 1u;
 264:Generated_Source\PSoC5/RTC.c **** 
 265:Generated_Source\PSoC5/RTC.c ****         #if (0u != RTC_START_OF_WEEK)
 266:Generated_Source\PSoC5/RTC.c ****         /* Normalize day of week if Start of week is not Sunday */
 267:Generated_Source\PSoC5/RTC.c ****         if(dayOfWeek > RTC_START_OF_WEEK)
 268:Generated_Source\PSoC5/RTC.c ****         {
 269:Generated_Source\PSoC5/RTC.c ****             #if (6u != RTC_START_OF_WEEK)
 270:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Saturday  */
 271:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek -= RTC_START_OF_WEEK;
 272:Generated_Source\PSoC5/RTC.c ****             #else /* 6u == RTC_START_OF_WEEK */
 273:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Saturday  */
 274:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u; /* Set day of week to Monday */
 275:Generated_Source\PSoC5/RTC.c ****             #endif /* 6u != RTC_START_OF_WEEK */
 276:Generated_Source\PSoC5/RTC.c ****         }
 277:Generated_Source\PSoC5/RTC.c ****         else
 278:Generated_Source\PSoC5/RTC.c ****         {
 279:Generated_Source\PSoC5/RTC.c ****             #if (1u != RTC_START_OF_WEEK)
 280:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Monday  */
 281:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = (RTC_DAYS_IN_WEEK - RTC_START_OF_WEEK) - dayOfWeek;
 282:Generated_Source\PSoC5/RTC.c ****             #else /* 1u == RTC_START_OF_WEEK */
 283:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Monday  */
 284:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 5u; /* Set day of week to Friday */
 285:Generated_Source\PSoC5/RTC.c ****             #endif /* 1u != RTC_START_OF_WEEK */
 286:Generated_Source\PSoC5/RTC.c ****         }
 287:Generated_Source\PSoC5/RTC.c ****         #endif /* 0u != RTC_START_OF_WEEK */
 288:Generated_Source\PSoC5/RTC.c **** 
 289:Generated_Source\PSoC5/RTC.c ****         /* Correct if out of DST range */
 290:Generated_Source\PSoC5/RTC.c ****         while(dayOfWeek != RTC_dstTimeDateStart.DayOfWeek)
 291:Generated_Source\PSoC5/RTC.c ****         {
 292:Generated_Source\PSoC5/RTC.c ****             day++;
 293:Generated_Source\PSoC5/RTC.c ****             dayOfWeek++;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 11


 294:Generated_Source\PSoC5/RTC.c ****             if(dayOfWeek > RTC_WEEK_ELAPSED)
 295:Generated_Source\PSoC5/RTC.c ****             {
 296:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u;
 297:Generated_Source\PSoC5/RTC.c ****                 week++;
 298:Generated_Source\PSoC5/RTC.c ****             }
 299:Generated_Source\PSoC5/RTC.c ****         }
 300:Generated_Source\PSoC5/RTC.c **** 
 301:Generated_Source\PSoC5/RTC.c ****         while(week != RTC_dstTimeDateStart.Week)
 302:Generated_Source\PSoC5/RTC.c ****         {
 303:Generated_Source\PSoC5/RTC.c ****             day += RTC_DAYS_IN_WEEK;
 304:Generated_Source\PSoC5/RTC.c ****             week++;
 305:Generated_Source\PSoC5/RTC.c ****         }
 306:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStart.DayOfMonth = day;
 307:Generated_Source\PSoC5/RTC.c **** 
 308:Generated_Source\PSoC5/RTC.c ****         /* Stop of DST time */
 309:Generated_Source\PSoC5/RTC.c ****         week = 1u;
 310:Generated_Source\PSoC5/RTC.c ****         day = 1u;
 311:Generated_Source\PSoC5/RTC.c **** 
 312:Generated_Source\PSoC5/RTC.c ****         dayOfWeek = RTC_DayOfWeek(day, RTC_dstTimeDateStop.Month,
 313:Generated_Source\PSoC5/RTC.c ****                                                     RTC_currentTimeDate.Year) + 1u;
 314:Generated_Source\PSoC5/RTC.c ****         #if (0u != RTC_START_OF_WEEK)
 315:Generated_Source\PSoC5/RTC.c ****         /* Normalize day of week if Start of week is not Sunday */
 316:Generated_Source\PSoC5/RTC.c ****         if(dayOfWeek > RTC_START_OF_WEEK)
 317:Generated_Source\PSoC5/RTC.c ****         {
 318:Generated_Source\PSoC5/RTC.c ****             #if (6u != RTC_START_OF_WEEK)
 319:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Saturday  */
 320:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek -= RTC_START_OF_WEEK;
 321:Generated_Source\PSoC5/RTC.c ****             #else /* 6u == RTC_START_OF_WEEK */
 322:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Saturday  */
 323:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u; /* Set day of week to Monday */
 324:Generated_Source\PSoC5/RTC.c ****             #endif /* 6u != RTC_START_OF_WEEK */
 325:Generated_Source\PSoC5/RTC.c ****         }
 326:Generated_Source\PSoC5/RTC.c ****         else
 327:Generated_Source\PSoC5/RTC.c ****         {
 328:Generated_Source\PSoC5/RTC.c ****             #if (1u != RTC_START_OF_WEEK)
 329:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Monday  */
 330:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = (RTC_DAYS_IN_WEEK - RTC_START_OF_WEEK) - dayOfWeek;
 331:Generated_Source\PSoC5/RTC.c ****             #else /* 1u == RTC_START_OF_WEEK */
 332:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Monday  */
 333:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 5u; /* Set day of week to Friday */
 334:Generated_Source\PSoC5/RTC.c ****             #endif /* 1u != RTC_START_OF_WEEK */
 335:Generated_Source\PSoC5/RTC.c ****         }
 336:Generated_Source\PSoC5/RTC.c ****         #endif /* 0u != RTC_START_OF_WEEK */
 337:Generated_Source\PSoC5/RTC.c **** 
 338:Generated_Source\PSoC5/RTC.c ****         while(dayOfWeek != RTC_dstTimeDateStop.DayOfWeek)
 339:Generated_Source\PSoC5/RTC.c ****         {
 340:Generated_Source\PSoC5/RTC.c ****             day++;
 341:Generated_Source\PSoC5/RTC.c ****             dayOfWeek++;
 342:Generated_Source\PSoC5/RTC.c ****             if(dayOfWeek > RTC_WEEK_ELAPSED)
 343:Generated_Source\PSoC5/RTC.c ****             {
 344:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u;
 345:Generated_Source\PSoC5/RTC.c ****                 week++;
 346:Generated_Source\PSoC5/RTC.c ****             }
 347:Generated_Source\PSoC5/RTC.c ****         }
 348:Generated_Source\PSoC5/RTC.c **** 
 349:Generated_Source\PSoC5/RTC.c ****         while(week != RTC_dstTimeDateStop.Week)
 350:Generated_Source\PSoC5/RTC.c ****         {
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 12


 351:Generated_Source\PSoC5/RTC.c ****             day += RTC_DAYS_IN_WEEK;
 352:Generated_Source\PSoC5/RTC.c ****             week++;
 353:Generated_Source\PSoC5/RTC.c ****         }
 354:Generated_Source\PSoC5/RTC.c **** 
 355:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStop.DayOfMonth = day;
 356:Generated_Source\PSoC5/RTC.c ****     }
 357:Generated_Source\PSoC5/RTC.c **** #endif /* 1u == RTC_DST_FUNC_ENABLE */
 358:Generated_Source\PSoC5/RTC.c **** 
 359:Generated_Source\PSoC5/RTC.c **** 
 360:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 361:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_Init
 362:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 363:Generated_Source\PSoC5/RTC.c **** *
 364:Generated_Source\PSoC5/RTC.c **** * Summary:
 365:Generated_Source\PSoC5/RTC.c **** *  Calculates required date and flags, sets interrupt vector and priority.
 366:Generated_Source\PSoC5/RTC.c **** *
 367:Generated_Source\PSoC5/RTC.c **** * Parameters:
 368:Generated_Source\PSoC5/RTC.c **** *  None.
 369:Generated_Source\PSoC5/RTC.c **** *
 370:Generated_Source\PSoC5/RTC.c **** * Return:
 371:Generated_Source\PSoC5/RTC.c **** *  None.
 372:Generated_Source\PSoC5/RTC.c **** *
 373:Generated_Source\PSoC5/RTC.c **** * Global variables:
 374:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate, RTC_dstTimeDateStart,
 375:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 376:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 377:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 378:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus:
 379:Generated_Source\PSoC5/RTC.c **** *  global variables are used by the RTC_SetInitValues().
 380:Generated_Source\PSoC5/RTC.c **** *
 381:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStart, RTC_currentTimeDate:
 382:Generated_Source\PSoC5/RTC.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 383:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 384:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: are modified by the
 385:Generated_Source\PSoC5/RTC.c **** *  RTC_SetInitValues() function.
 386:Generated_Source\PSoC5/RTC.c **** *
 387:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 388:Generated_Source\PSoC5/RTC.c **** *  No.
 389:Generated_Source\PSoC5/RTC.c **** *
 390:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 391:Generated_Source\PSoC5/RTC.c **** void RTC_Init(void) 
 392:Generated_Source\PSoC5/RTC.c **** {
 278              		.loc 1 392 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC5/RTC.c ****     /* Start calculation of required date and flags */
 394:Generated_Source\PSoC5/RTC.c ****     RTC_SetInitValues();
 288              		.loc 1 394 0
 289 0004 FFF7FEFF 		bl	RTC_SetInitValues
 395:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 13


 396:Generated_Source\PSoC5/RTC.c ****     /* Disable Interrupt. */
 397:Generated_Source\PSoC5/RTC.c ****     CyIntDisable(RTC_ISR_NUMBER);
 290              		.loc 1 397 0
 291 0008 064B     		ldr	r3, .L15
 292 000a 0222     		movs	r2, #2
 293 000c 1A60     		str	r2, [r3]
 398:Generated_Source\PSoC5/RTC.c **** 
 399:Generated_Source\PSoC5/RTC.c ****     /* Set the ISR to point to the RTC_SUT_isr Interrupt. */
 400:Generated_Source\PSoC5/RTC.c ****     (void) CyIntSetVector(RTC_ISR_NUMBER, & RTC_ISR);
 294              		.loc 1 400 0
 295 000e 0649     		ldr	r1, .L15+4
 296 0010 0120     		movs	r0, #1
 297 0012 FFF7FEFF 		bl	CyIntSetVector
 401:Generated_Source\PSoC5/RTC.c **** 
 402:Generated_Source\PSoC5/RTC.c ****     /* Set the priority. */
 403:Generated_Source\PSoC5/RTC.c ****     CyIntSetPriority(RTC_ISR_NUMBER, RTC_ISR_PRIORITY);
 298              		.loc 1 403 0
 299 0016 0721     		movs	r1, #7
 300 0018 0120     		movs	r0, #1
 301 001a FFF7FEFF 		bl	CyIntSetPriority
 404:Generated_Source\PSoC5/RTC.c **** }
 302              		.loc 1 404 0
 303 001e 00BF     		nop
 304 0020 80BD     		pop	{r7, pc}
 305              	.L16:
 306 0022 00BF     		.align	2
 307              	.L15:
 308 0024 80E100E0 		.word	-536813184
 309 0028 00000000 		.word	RTC_ISR
 310              		.cfi_endproc
 311              	.LFE4:
 312              		.size	RTC_Init, .-RTC_Init
 313              		.section	.text.RTC_Enable,"ax",%progbits
 314              		.align	2
 315              		.global	RTC_Enable
 316              		.thumb
 317              		.thumb_func
 318              		.type	RTC_Enable, %function
 319              	RTC_Enable:
 320              	.LFB5:
 405:Generated_Source\PSoC5/RTC.c **** 
 406:Generated_Source\PSoC5/RTC.c **** 
 407:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 408:Generated_Source\PSoC5/RTC.c **** * Function Name: RTC_Enable
 409:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 410:Generated_Source\PSoC5/RTC.c **** *
 411:Generated_Source\PSoC5/RTC.c **** * Summary:
 412:Generated_Source\PSoC5/RTC.c **** *  Enables the interrupts, one pulse per second and interrupt generation on OPPS
 413:Generated_Source\PSoC5/RTC.c **** *  event.
 414:Generated_Source\PSoC5/RTC.c **** *
 415:Generated_Source\PSoC5/RTC.c **** * Parameters:
 416:Generated_Source\PSoC5/RTC.c **** *  None.
 417:Generated_Source\PSoC5/RTC.c **** *
 418:Generated_Source\PSoC5/RTC.c **** * Return:
 419:Generated_Source\PSoC5/RTC.c **** *  None.
 420:Generated_Source\PSoC5/RTC.c **** *
 421:Generated_Source\PSoC5/RTC.c **** * Side Effects:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 14


 422:Generated_Source\PSoC5/RTC.c **** *  Enables for the one pulse per second and central time wheel signals to wake
 423:Generated_Source\PSoC5/RTC.c **** *  up device from the low power (Sleep and Alternate Active) modes and leaves
 424:Generated_Source\PSoC5/RTC.c **** *  them enabled.
 425:Generated_Source\PSoC5/RTC.c **** *
 426:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 427:Generated_Source\PSoC5/RTC.c **** void RTC_Enable(void) 
 428:Generated_Source\PSoC5/RTC.c **** {
 321              		.loc 1 428 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 8
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325 0000 80B5     		push	{r7, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 82B0     		sub	sp, sp, #8
 330              		.cfi_def_cfa_offset 16
 331 0004 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 429:Generated_Source\PSoC5/RTC.c ****     uint8 interruptState;
 430:Generated_Source\PSoC5/RTC.c **** 
 431:Generated_Source\PSoC5/RTC.c ****     /* Enter critical section */
 432:Generated_Source\PSoC5/RTC.c ****     interruptState = CyEnterCriticalSection();
 333              		.loc 1 432 0
 334 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 335 000a 0346     		mov	r3, r0
 336 000c FB71     		strb	r3, [r7, #7]
 433:Generated_Source\PSoC5/RTC.c **** 
 434:Generated_Source\PSoC5/RTC.c ****     /* Enable one pulse per second event and interrupt */
 435:Generated_Source\PSoC5/RTC.c ****     RTC_OPPS_CFG_REG |= (RTC_OPPS_EN_MASK | RTC_OPPSIE_EN_MASK);
 337              		.loc 1 435 0
 338 000e 094A     		ldr	r2, .L18
 339 0010 084B     		ldr	r3, .L18
 340 0012 1B78     		ldrb	r3, [r3]
 341 0014 DBB2     		uxtb	r3, r3
 342 0016 43F03003 		orr	r3, r3, #48
 343 001a DBB2     		uxtb	r3, r3
 344 001c 1370     		strb	r3, [r2]
 436:Generated_Source\PSoC5/RTC.c **** 
 437:Generated_Source\PSoC5/RTC.c ****     /* Exit critical section */
 438:Generated_Source\PSoC5/RTC.c ****     CyExitCriticalSection(interruptState);
 345              		.loc 1 438 0
 346 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 347 0020 1846     		mov	r0, r3
 348 0022 FFF7FEFF 		bl	CyExitCriticalSection
 439:Generated_Source\PSoC5/RTC.c **** 
 440:Generated_Source\PSoC5/RTC.c ****     /* Enable interrupt */
 441:Generated_Source\PSoC5/RTC.c ****     CyIntEnable(RTC_ISR_NUMBER);
 349              		.loc 1 441 0
 350 0026 044B     		ldr	r3, .L18+4
 351 0028 0222     		movs	r2, #2
 352 002a 1A60     		str	r2, [r3]
 442:Generated_Source\PSoC5/RTC.c **** }
 353              		.loc 1 442 0
 354 002c 00BF     		nop
 355 002e 0837     		adds	r7, r7, #8
 356              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 15


 357 0030 BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 0032 80BD     		pop	{r7, pc}
 361              	.L19:
 362              		.align	2
 363              	.L18:
 364 0034 82430040 		.word	1073759106
 365 0038 00E100E0 		.word	-536813312
 366              		.cfi_endproc
 367              	.LFE5:
 368              		.size	RTC_Enable, .-RTC_Enable
 369              		.section	.text.RTC_ReadTime,"ax",%progbits
 370              		.align	2
 371              		.global	RTC_ReadTime
 372              		.thumb
 373              		.thumb_func
 374              		.type	RTC_ReadTime, %function
 375              	RTC_ReadTime:
 376              	.LFB6:
 443:Generated_Source\PSoC5/RTC.c **** 
 444:Generated_Source\PSoC5/RTC.c **** 
 445:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 446:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadTime
 447:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 448:Generated_Source\PSoC5/RTC.c **** *
 449:Generated_Source\PSoC5/RTC.c **** * Summary:
 450:Generated_Source\PSoC5/RTC.c **** *  Returns a pointer to the current time and date structure.
 451:Generated_Source\PSoC5/RTC.c **** *
 452:Generated_Source\PSoC5/RTC.c **** * Parameters:
 453:Generated_Source\PSoC5/RTC.c **** *  None.
 454:Generated_Source\PSoC5/RTC.c **** *
 455:Generated_Source\PSoC5/RTC.c **** * Return:
 456:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate: pointer to the global structure with the
 457:Generated_Source\PSoC5/RTC.c **** *  current date and time values.
 458:Generated_Source\PSoC5/RTC.c **** *
 459:Generated_Source\PSoC5/RTC.c **** * Global variables:
 460:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate: global variable with current date and
 461:Generated_Source\PSoC5/RTC.c **** *   time is used.
 462:Generated_Source\PSoC5/RTC.c **** *
 463:Generated_Source\PSoC5/RTC.c **** * Side Effects:
 464:Generated_Source\PSoC5/RTC.c **** *  You should disable the interrupt for the RTC component before calling any
 465:Generated_Source\PSoC5/RTC.c **** *  read API to avoid an RTC Counter increment in the middle of a time or date
 466:Generated_Source\PSoC5/RTC.c **** *  read operation. Re-enable the interrupts after the data is read.
 467:Generated_Source\PSoC5/RTC.c **** *
 468:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 469:Generated_Source\PSoC5/RTC.c **** RTC_TIME_DATE * RTC_ReadTime(void) 
 470:Generated_Source\PSoC5/RTC.c **** {
 377              		.loc 1 470 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382 0000 80B4     		push	{r7}
 383              		.cfi_def_cfa_offset 4
 384              		.cfi_offset 7, -4
 385 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 16


 386              		.cfi_def_cfa_register 7
 471:Generated_Source\PSoC5/RTC.c ****     /* Returns a pointer to the current time and date structure */
 472:Generated_Source\PSoC5/RTC.c ****     return (&RTC_currentTimeDate);
 387              		.loc 1 472 0
 388 0004 024B     		ldr	r3, .L22
 473:Generated_Source\PSoC5/RTC.c **** }
 389              		.loc 1 473 0
 390 0006 1846     		mov	r0, r3
 391 0008 BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 000a 80BC     		pop	{r7}
 395              		.cfi_restore 7
 396              		.cfi_def_cfa_offset 0
 397 000c 7047     		bx	lr
 398              	.L23:
 399 000e 00BF     		.align	2
 400              	.L22:
 401 0010 00000000 		.word	RTC_currentTimeDate
 402              		.cfi_endproc
 403              	.LFE6:
 404              		.size	RTC_ReadTime, .-RTC_ReadTime
 405              		.section	.text.RTC_WriteTime,"ax",%progbits
 406              		.align	2
 407              		.global	RTC_WriteTime
 408              		.thumb
 409              		.thumb_func
 410              		.type	RTC_WriteTime, %function
 411              	RTC_WriteTime:
 412              	.LFB7:
 474:Generated_Source\PSoC5/RTC.c **** 
 475:Generated_Source\PSoC5/RTC.c **** 
 476:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 477:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteTime
 478:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 479:Generated_Source\PSoC5/RTC.c **** *
 480:Generated_Source\PSoC5/RTC.c **** * Summary:
 481:Generated_Source\PSoC5/RTC.c **** *  Writes time and date values as current time and date. Only
 482:Generated_Source\PSoC5/RTC.c **** *  passes Milliseconds(optionally), Seconds, Minutes, Hours, Month,
 483:Generated_Source\PSoC5/RTC.c **** *  Day Of Month and Year.
 484:Generated_Source\PSoC5/RTC.c **** *
 485:Generated_Source\PSoC5/RTC.c **** * Parameters:
 486:Generated_Source\PSoC5/RTC.c **** *  timeDate: Pointer to RTC_TIME_DATE global structure where new
 487:Generated_Source\PSoC5/RTC.c **** *  values of time and date are stored.
 488:Generated_Source\PSoC5/RTC.c **** *
 489:Generated_Source\PSoC5/RTC.c **** * Return:
 490:Generated_Source\PSoC5/RTC.c **** *  None.
 491:Generated_Source\PSoC5/RTC.c **** *
 492:Generated_Source\PSoC5/RTC.c **** * Global variables:
 493:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate: global structure is modified with the new
 494:Generated_Source\PSoC5/RTC.c **** *  values of current date and time.
 495:Generated_Source\PSoC5/RTC.c **** *
 496:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 497:Generated_Source\PSoC5/RTC.c **** *  No.
 498:Generated_Source\PSoC5/RTC.c **** *
 499:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 500:Generated_Source\PSoC5/RTC.c **** void RTC_WriteTime(const RTC_TIME_DATE * timeDate)
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 17


 501:Generated_Source\PSoC5/RTC.c ****      
 502:Generated_Source\PSoC5/RTC.c **** {
 413              		.loc 1 502 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 82B0     		sub	sp, sp, #8
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 0006 7860     		str	r0, [r7, #4]
 503:Generated_Source\PSoC5/RTC.c ****     /* Disable Interrupt of RTC Component */
 504:Generated_Source\PSoC5/RTC.c ****     RTC_DisableInt();
 426              		.loc 1 504 0
 427 0008 FFF7FEFF 		bl	RTC_DisableInt
 505:Generated_Source\PSoC5/RTC.c **** 
 506:Generated_Source\PSoC5/RTC.c ****     /* Write current time and date */
 507:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Sec = timeDate->Sec;
 428              		.loc 1 507 0
 429 000c 7B68     		ldr	r3, [r7, #4]
 430 000e 1B78     		ldrb	r3, [r3]
 431 0010 DAB2     		uxtb	r2, r3
 432 0012 104B     		ldr	r3, .L25
 433 0014 1A70     		strb	r2, [r3]
 508:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Min = timeDate->Min;
 434              		.loc 1 508 0
 435 0016 7B68     		ldr	r3, [r7, #4]
 436 0018 5B78     		ldrb	r3, [r3, #1]
 437 001a DAB2     		uxtb	r2, r3
 438 001c 0D4B     		ldr	r3, .L25
 439 001e 5A70     		strb	r2, [r3, #1]
 509:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Hour = timeDate->Hour;
 440              		.loc 1 509 0
 441 0020 7B68     		ldr	r3, [r7, #4]
 442 0022 9B78     		ldrb	r3, [r3, #2]
 443 0024 DAB2     		uxtb	r2, r3
 444 0026 0B4B     		ldr	r3, .L25
 445 0028 9A70     		strb	r2, [r3, #2]
 510:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfMonth = timeDate->DayOfMonth;
 446              		.loc 1 510 0
 447 002a 7B68     		ldr	r3, [r7, #4]
 448 002c 1B79     		ldrb	r3, [r3, #4]
 449 002e DAB2     		uxtb	r2, r3
 450 0030 084B     		ldr	r3, .L25
 451 0032 1A71     		strb	r2, [r3, #4]
 511:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Month = timeDate->Month;
 452              		.loc 1 511 0
 453 0034 7B68     		ldr	r3, [r7, #4]
 454 0036 1B7A     		ldrb	r3, [r3, #8]
 455 0038 DAB2     		uxtb	r2, r3
 456 003a 064B     		ldr	r3, .L25
 457 003c 1A72     		strb	r2, [r3, #8]
 512:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Year = timeDate->Year;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 18


 458              		.loc 1 512 0
 459 003e 7B68     		ldr	r3, [r7, #4]
 460 0040 5B89     		ldrh	r3, [r3, #10]	@ movhi
 461 0042 9AB2     		uxth	r2, r3
 462 0044 034B     		ldr	r3, .L25
 463 0046 5A81     		strh	r2, [r3, #10]	@ movhi
 513:Generated_Source\PSoC5/RTC.c **** 
 514:Generated_Source\PSoC5/RTC.c ****     /* Enable Interrupt of RTC Component */
 515:Generated_Source\PSoC5/RTC.c ****     RTC_EnableInt();
 464              		.loc 1 515 0
 465 0048 FFF7FEFF 		bl	RTC_EnableInt
 516:Generated_Source\PSoC5/RTC.c **** }
 466              		.loc 1 516 0
 467 004c 00BF     		nop
 468 004e 0837     		adds	r7, r7, #8
 469              		.cfi_def_cfa_offset 8
 470 0050 BD46     		mov	sp, r7
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 0052 80BD     		pop	{r7, pc}
 474              	.L26:
 475              		.align	2
 476              	.L25:
 477 0054 00000000 		.word	RTC_currentTimeDate
 478              		.cfi_endproc
 479              	.LFE7:
 480              		.size	RTC_WriteTime, .-RTC_WriteTime
 481              		.section	.text.RTC_WriteSecond,"ax",%progbits
 482              		.align	2
 483              		.global	RTC_WriteSecond
 484              		.thumb
 485              		.thumb_func
 486              		.type	RTC_WriteSecond, %function
 487              	RTC_WriteSecond:
 488              	.LFB8:
 517:Generated_Source\PSoC5/RTC.c **** 
 518:Generated_Source\PSoC5/RTC.c **** 
 519:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 520:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteSecond
 521:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 522:Generated_Source\PSoC5/RTC.c **** *
 523:Generated_Source\PSoC5/RTC.c **** * Summary:
 524:Generated_Source\PSoC5/RTC.c **** *  Writes Sec software register value.
 525:Generated_Source\PSoC5/RTC.c **** *
 526:Generated_Source\PSoC5/RTC.c **** * Parameters:
 527:Generated_Source\PSoC5/RTC.c **** *  second: Seconds value.
 528:Generated_Source\PSoC5/RTC.c **** *
 529:Generated_Source\PSoC5/RTC.c **** * Return:
 530:Generated_Source\PSoC5/RTC.c **** *  None.
 531:Generated_Source\PSoC5/RTC.c **** *
 532:Generated_Source\PSoC5/RTC.c **** * Global variables:
 533:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Sec: global structure's field where current
 534:Generated_Source\PSoC5/RTC.c **** *  second's value is modified.
 535:Generated_Source\PSoC5/RTC.c **** *
 536:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 537:Generated_Source\PSoC5/RTC.c **** *  No.
 538:Generated_Source\PSoC5/RTC.c **** *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 19


 539:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 540:Generated_Source\PSoC5/RTC.c **** void RTC_WriteSecond(uint8 second) 
 541:Generated_Source\PSoC5/RTC.c **** {
 489              		.loc 1 541 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 8
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 80B4     		push	{r7}
 495              		.cfi_def_cfa_offset 4
 496              		.cfi_offset 7, -4
 497 0002 83B0     		sub	sp, sp, #12
 498              		.cfi_def_cfa_offset 16
 499 0004 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 501 0006 0346     		mov	r3, r0
 502 0008 FB71     		strb	r3, [r7, #7]
 542:Generated_Source\PSoC5/RTC.c ****     /* Save seconds to the current time and date structure */
 543:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Sec = second;
 503              		.loc 1 543 0
 504 000a 044A     		ldr	r2, .L28
 505 000c FB79     		ldrb	r3, [r7, #7]
 506 000e 1370     		strb	r3, [r2]
 544:Generated_Source\PSoC5/RTC.c **** }
 507              		.loc 1 544 0
 508 0010 00BF     		nop
 509 0012 0C37     		adds	r7, r7, #12
 510              		.cfi_def_cfa_offset 4
 511 0014 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0016 80BC     		pop	{r7}
 515              		.cfi_restore 7
 516              		.cfi_def_cfa_offset 0
 517 0018 7047     		bx	lr
 518              	.L29:
 519 001a 00BF     		.align	2
 520              	.L28:
 521 001c 00000000 		.word	RTC_currentTimeDate
 522              		.cfi_endproc
 523              	.LFE8:
 524              		.size	RTC_WriteSecond, .-RTC_WriteSecond
 525              		.section	.text.RTC_WriteMinute,"ax",%progbits
 526              		.align	2
 527              		.global	RTC_WriteMinute
 528              		.thumb
 529              		.thumb_func
 530              		.type	RTC_WriteMinute, %function
 531              	RTC_WriteMinute:
 532              	.LFB9:
 545:Generated_Source\PSoC5/RTC.c **** 
 546:Generated_Source\PSoC5/RTC.c **** 
 547:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 548:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteMinute
 549:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 550:Generated_Source\PSoC5/RTC.c **** *
 551:Generated_Source\PSoC5/RTC.c **** * Summary:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 20


 552:Generated_Source\PSoC5/RTC.c **** *  Writes Minute value in minutes counter register.
 553:Generated_Source\PSoC5/RTC.c **** *
 554:Generated_Source\PSoC5/RTC.c **** * Parameters:
 555:Generated_Source\PSoC5/RTC.c **** *  minute: Minutes value.
 556:Generated_Source\PSoC5/RTC.c **** *
 557:Generated_Source\PSoC5/RTC.c **** * Return:
 558:Generated_Source\PSoC5/RTC.c **** *  None.
 559:Generated_Source\PSoC5/RTC.c **** *
 560:Generated_Source\PSoC5/RTC.c **** * Global variables:
 561:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Min: global structure's field where
 562:Generated_Source\PSoC5/RTC.c **** *  current minute's value is modified.
 563:Generated_Source\PSoC5/RTC.c **** *
 564:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 565:Generated_Source\PSoC5/RTC.c **** *  No.
 566:Generated_Source\PSoC5/RTC.c **** *
 567:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 568:Generated_Source\PSoC5/RTC.c **** void RTC_WriteMinute(uint8 minute) 
 569:Generated_Source\PSoC5/RTC.c **** {
 533              		.loc 1 569 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 8
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 83B0     		sub	sp, sp, #12
 542              		.cfi_def_cfa_offset 16
 543 0004 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 545 0006 0346     		mov	r3, r0
 546 0008 FB71     		strb	r3, [r7, #7]
 570:Generated_Source\PSoC5/RTC.c ****     /* Save minutes to the current time and date structure */
 571:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Min = minute;
 547              		.loc 1 571 0
 548 000a 044A     		ldr	r2, .L31
 549 000c FB79     		ldrb	r3, [r7, #7]
 550 000e 5370     		strb	r3, [r2, #1]
 572:Generated_Source\PSoC5/RTC.c **** }
 551              		.loc 1 572 0
 552 0010 00BF     		nop
 553 0012 0C37     		adds	r7, r7, #12
 554              		.cfi_def_cfa_offset 4
 555 0014 BD46     		mov	sp, r7
 556              		.cfi_def_cfa_register 13
 557              		@ sp needed
 558 0016 80BC     		pop	{r7}
 559              		.cfi_restore 7
 560              		.cfi_def_cfa_offset 0
 561 0018 7047     		bx	lr
 562              	.L32:
 563 001a 00BF     		.align	2
 564              	.L31:
 565 001c 00000000 		.word	RTC_currentTimeDate
 566              		.cfi_endproc
 567              	.LFE9:
 568              		.size	RTC_WriteMinute, .-RTC_WriteMinute
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 21


 569              		.section	.text.RTC_WriteHour,"ax",%progbits
 570              		.align	2
 571              		.global	RTC_WriteHour
 572              		.thumb
 573              		.thumb_func
 574              		.type	RTC_WriteHour, %function
 575              	RTC_WriteHour:
 576              	.LFB10:
 573:Generated_Source\PSoC5/RTC.c **** 
 574:Generated_Source\PSoC5/RTC.c **** 
 575:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 576:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteHour
 577:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 578:Generated_Source\PSoC5/RTC.c **** *
 579:Generated_Source\PSoC5/RTC.c **** * Summary:
 580:Generated_Source\PSoC5/RTC.c **** *  Writes Hour software register value.
 581:Generated_Source\PSoC5/RTC.c **** *
 582:Generated_Source\PSoC5/RTC.c **** * Parameters:
 583:Generated_Source\PSoC5/RTC.c **** *  hour: Hours value.
 584:Generated_Source\PSoC5/RTC.c **** *
 585:Generated_Source\PSoC5/RTC.c **** * Return:
 586:Generated_Source\PSoC5/RTC.c **** *  None.
 587:Generated_Source\PSoC5/RTC.c **** *
 588:Generated_Source\PSoC5/RTC.c **** * Global variables:
 589:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Hour: global structure's field where
 590:Generated_Source\PSoC5/RTC.c **** *  current hour's value is modified.
 591:Generated_Source\PSoC5/RTC.c **** *
 592:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 593:Generated_Source\PSoC5/RTC.c **** *  No.
 594:Generated_Source\PSoC5/RTC.c **** *
 595:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 596:Generated_Source\PSoC5/RTC.c **** void RTC_WriteHour(uint8 hour) 
 597:Generated_Source\PSoC5/RTC.c **** {
 577              		.loc 1 597 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582 0000 80B4     		push	{r7}
 583              		.cfi_def_cfa_offset 4
 584              		.cfi_offset 7, -4
 585 0002 83B0     		sub	sp, sp, #12
 586              		.cfi_def_cfa_offset 16
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 0006 0346     		mov	r3, r0
 590 0008 FB71     		strb	r3, [r7, #7]
 598:Generated_Source\PSoC5/RTC.c ****     /* Save hours to the current time and date structure */
 599:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Hour = hour;
 591              		.loc 1 599 0
 592 000a 044A     		ldr	r2, .L34
 593 000c FB79     		ldrb	r3, [r7, #7]
 594 000e 9370     		strb	r3, [r2, #2]
 600:Generated_Source\PSoC5/RTC.c **** }
 595              		.loc 1 600 0
 596 0010 00BF     		nop
 597 0012 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 22


 598              		.cfi_def_cfa_offset 4
 599 0014 BD46     		mov	sp, r7
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 0016 80BC     		pop	{r7}
 603              		.cfi_restore 7
 604              		.cfi_def_cfa_offset 0
 605 0018 7047     		bx	lr
 606              	.L35:
 607 001a 00BF     		.align	2
 608              	.L34:
 609 001c 00000000 		.word	RTC_currentTimeDate
 610              		.cfi_endproc
 611              	.LFE10:
 612              		.size	RTC_WriteHour, .-RTC_WriteHour
 613              		.section	.text.RTC_WriteDayOfMonth,"ax",%progbits
 614              		.align	2
 615              		.global	RTC_WriteDayOfMonth
 616              		.thumb
 617              		.thumb_func
 618              		.type	RTC_WriteDayOfMonth, %function
 619              	RTC_WriteDayOfMonth:
 620              	.LFB11:
 601:Generated_Source\PSoC5/RTC.c **** 
 602:Generated_Source\PSoC5/RTC.c **** 
 603:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 604:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteDayOfMonth
 605:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 606:Generated_Source\PSoC5/RTC.c **** *
 607:Generated_Source\PSoC5/RTC.c **** * Summary:
 608:Generated_Source\PSoC5/RTC.c **** *  Writes DayOfMonth software register value.
 609:Generated_Source\PSoC5/RTC.c **** *
 610:Generated_Source\PSoC5/RTC.c **** * Parameters:
 611:Generated_Source\PSoC5/RTC.c **** *  dayOfMonth: Day Of Month value.
 612:Generated_Source\PSoC5/RTC.c **** *
 613:Generated_Source\PSoC5/RTC.c **** * Return:
 614:Generated_Source\PSoC5/RTC.c **** *  None.
 615:Generated_Source\PSoC5/RTC.c **** *
 616:Generated_Source\PSoC5/RTC.c **** * Global variables:
 617:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfMonth: global structure's field where
 618:Generated_Source\PSoC5/RTC.c **** *  current day of month's value is modified.
 619:Generated_Source\PSoC5/RTC.c **** *
 620:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 621:Generated_Source\PSoC5/RTC.c **** *  No.
 622:Generated_Source\PSoC5/RTC.c **** *
 623:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 624:Generated_Source\PSoC5/RTC.c **** void RTC_WriteDayOfMonth(uint8 dayOfMonth) 
 625:Generated_Source\PSoC5/RTC.c **** {
 621              		.loc 1 625 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0000 80B4     		push	{r7}
 627              		.cfi_def_cfa_offset 4
 628              		.cfi_offset 7, -4
 629 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 23


 630              		.cfi_def_cfa_offset 16
 631 0004 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 633 0006 0346     		mov	r3, r0
 634 0008 FB71     		strb	r3, [r7, #7]
 626:Generated_Source\PSoC5/RTC.c ****     /* Save day of month to the current time and date structure */
 627:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfMonth = dayOfMonth;
 635              		.loc 1 627 0
 636 000a 044A     		ldr	r2, .L37
 637 000c FB79     		ldrb	r3, [r7, #7]
 638 000e 1371     		strb	r3, [r2, #4]
 628:Generated_Source\PSoC5/RTC.c **** }
 639              		.loc 1 628 0
 640 0010 00BF     		nop
 641 0012 0C37     		adds	r7, r7, #12
 642              		.cfi_def_cfa_offset 4
 643 0014 BD46     		mov	sp, r7
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 0016 80BC     		pop	{r7}
 647              		.cfi_restore 7
 648              		.cfi_def_cfa_offset 0
 649 0018 7047     		bx	lr
 650              	.L38:
 651 001a 00BF     		.align	2
 652              	.L37:
 653 001c 00000000 		.word	RTC_currentTimeDate
 654              		.cfi_endproc
 655              	.LFE11:
 656              		.size	RTC_WriteDayOfMonth, .-RTC_WriteDayOfMonth
 657              		.section	.text.RTC_WriteMonth,"ax",%progbits
 658              		.align	2
 659              		.global	RTC_WriteMonth
 660              		.thumb
 661              		.thumb_func
 662              		.type	RTC_WriteMonth, %function
 663              	RTC_WriteMonth:
 664              	.LFB12:
 629:Generated_Source\PSoC5/RTC.c **** 
 630:Generated_Source\PSoC5/RTC.c **** 
 631:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 632:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteMonth
 633:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 634:Generated_Source\PSoC5/RTC.c **** *
 635:Generated_Source\PSoC5/RTC.c **** * Summary:
 636:Generated_Source\PSoC5/RTC.c **** *  Writes Month software register value.
 637:Generated_Source\PSoC5/RTC.c **** *
 638:Generated_Source\PSoC5/RTC.c **** * Parameters:
 639:Generated_Source\PSoC5/RTC.c **** *  month: Month value.
 640:Generated_Source\PSoC5/RTC.c **** *
 641:Generated_Source\PSoC5/RTC.c **** * Return:
 642:Generated_Source\PSoC5/RTC.c **** *  None.
 643:Generated_Source\PSoC5/RTC.c **** *
 644:Generated_Source\PSoC5/RTC.c **** * Global variables:
 645:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Month: global structure's field where
 646:Generated_Source\PSoC5/RTC.c **** *  current day of month's value is modified.
 647:Generated_Source\PSoC5/RTC.c **** *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 24


 648:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 649:Generated_Source\PSoC5/RTC.c **** *  No.
 650:Generated_Source\PSoC5/RTC.c **** *
 651:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 652:Generated_Source\PSoC5/RTC.c **** void RTC_WriteMonth(uint8 month) 
 653:Generated_Source\PSoC5/RTC.c **** {
 665              		.loc 1 653 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 8
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670 0000 80B4     		push	{r7}
 671              		.cfi_def_cfa_offset 4
 672              		.cfi_offset 7, -4
 673 0002 83B0     		sub	sp, sp, #12
 674              		.cfi_def_cfa_offset 16
 675 0004 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 677 0006 0346     		mov	r3, r0
 678 0008 FB71     		strb	r3, [r7, #7]
 654:Generated_Source\PSoC5/RTC.c ****     /* Save months to the current time and date structure */
 655:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Month = month;
 679              		.loc 1 655 0
 680 000a 044A     		ldr	r2, .L40
 681 000c FB79     		ldrb	r3, [r7, #7]
 682 000e 1372     		strb	r3, [r2, #8]
 656:Generated_Source\PSoC5/RTC.c **** }
 683              		.loc 1 656 0
 684 0010 00BF     		nop
 685 0012 0C37     		adds	r7, r7, #12
 686              		.cfi_def_cfa_offset 4
 687 0014 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 0016 80BC     		pop	{r7}
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0018 7047     		bx	lr
 694              	.L41:
 695 001a 00BF     		.align	2
 696              	.L40:
 697 001c 00000000 		.word	RTC_currentTimeDate
 698              		.cfi_endproc
 699              	.LFE12:
 700              		.size	RTC_WriteMonth, .-RTC_WriteMonth
 701              		.section	.text.RTC_WriteYear,"ax",%progbits
 702              		.align	2
 703              		.global	RTC_WriteYear
 704              		.thumb
 705              		.thumb_func
 706              		.type	RTC_WriteYear, %function
 707              	RTC_WriteYear:
 708              	.LFB13:
 657:Generated_Source\PSoC5/RTC.c **** 
 658:Generated_Source\PSoC5/RTC.c **** 
 659:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 660:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteYear
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 25


 661:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 662:Generated_Source\PSoC5/RTC.c **** *
 663:Generated_Source\PSoC5/RTC.c **** * Summary:
 664:Generated_Source\PSoC5/RTC.c **** *  Writes Year software register value.
 665:Generated_Source\PSoC5/RTC.c **** *
 666:Generated_Source\PSoC5/RTC.c **** * Parameters:
 667:Generated_Source\PSoC5/RTC.c **** *  year: Years value.
 668:Generated_Source\PSoC5/RTC.c **** *
 669:Generated_Source\PSoC5/RTC.c **** * Return:
 670:Generated_Source\PSoC5/RTC.c **** *  None.
 671:Generated_Source\PSoC5/RTC.c **** *
 672:Generated_Source\PSoC5/RTC.c **** * Global variables:
 673:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Year: global structure's field where
 674:Generated_Source\PSoC5/RTC.c **** *  current year's value is modified.
 675:Generated_Source\PSoC5/RTC.c **** *
 676:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 677:Generated_Source\PSoC5/RTC.c **** *  No.
 678:Generated_Source\PSoC5/RTC.c **** *
 679:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 680:Generated_Source\PSoC5/RTC.c **** void RTC_WriteYear(uint16 year) 
 681:Generated_Source\PSoC5/RTC.c **** {
 709              		.loc 1 681 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 8
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 80B4     		push	{r7}
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 7, -4
 717 0002 83B0     		sub	sp, sp, #12
 718              		.cfi_def_cfa_offset 16
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 0346     		mov	r3, r0
 722 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 682:Generated_Source\PSoC5/RTC.c ****     /* Save years to the current time and date structure */
 683:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Year = year;
 723              		.loc 1 683 0
 724 000a 044A     		ldr	r2, .L43
 725 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 726 000e 5381     		strh	r3, [r2, #10]	@ movhi
 684:Generated_Source\PSoC5/RTC.c **** }
 727              		.loc 1 684 0
 728 0010 00BF     		nop
 729 0012 0C37     		adds	r7, r7, #12
 730              		.cfi_def_cfa_offset 4
 731 0014 BD46     		mov	sp, r7
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 0016 80BC     		pop	{r7}
 735              		.cfi_restore 7
 736              		.cfi_def_cfa_offset 0
 737 0018 7047     		bx	lr
 738              	.L44:
 739 001a 00BF     		.align	2
 740              	.L43:
 741 001c 00000000 		.word	RTC_currentTimeDate
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 26


 742              		.cfi_endproc
 743              	.LFE13:
 744              		.size	RTC_WriteYear, .-RTC_WriteYear
 745              		.section	.text.RTC_WriteAlarmSecond,"ax",%progbits
 746              		.align	2
 747              		.global	RTC_WriteAlarmSecond
 748              		.thumb
 749              		.thumb_func
 750              		.type	RTC_WriteAlarmSecond, %function
 751              	RTC_WriteAlarmSecond:
 752              	.LFB14:
 685:Generated_Source\PSoC5/RTC.c **** 
 686:Generated_Source\PSoC5/RTC.c **** 
 687:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 688:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmSecond
 689:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 690:Generated_Source\PSoC5/RTC.c **** *
 691:Generated_Source\PSoC5/RTC.c **** * Summary:
 692:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Sec software register value.
 693:Generated_Source\PSoC5/RTC.c **** *
 694:Generated_Source\PSoC5/RTC.c **** * Parameters:
 695:Generated_Source\PSoC5/RTC.c **** *  second: Alarm Seconds value.
 696:Generated_Source\PSoC5/RTC.c **** *
 697:Generated_Source\PSoC5/RTC.c **** * Return:
 698:Generated_Source\PSoC5/RTC.c **** *  None.
 699:Generated_Source\PSoC5/RTC.c **** *
 700:Generated_Source\PSoC5/RTC.c **** * Global variables:
 701:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Sec: this global variable is used for
 702:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing seconds alarm status variable.
 703:Generated_Source\PSoC5/RTC.c **** *
 704:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Sec: this global variable is modified to
 705:Generated_Source\PSoC5/RTC.c **** *  store of the new seconds alarm.
 706:Generated_Source\PSoC5/RTC.c **** *
 707:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 708:Generated_Source\PSoC5/RTC.c **** *  second's alarm will be raised.
 709:Generated_Source\PSoC5/RTC.c **** *
 710:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 711:Generated_Source\PSoC5/RTC.c **** *  No.
 712:Generated_Source\PSoC5/RTC.c **** *
 713:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 714:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmSecond(uint8 second) 
 715:Generated_Source\PSoC5/RTC.c **** {
 753              		.loc 1 715 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0000 80B4     		push	{r7}
 759              		.cfi_def_cfa_offset 4
 760              		.cfi_offset 7, -4
 761 0002 83B0     		sub	sp, sp, #12
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 765 0006 0346     		mov	r3, r0
 766 0008 FB71     		strb	r3, [r7, #7]
 716:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Sec = second;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 27


 767              		.loc 1 716 0
 768 000a 104A     		ldr	r2, .L49
 769 000c FB79     		ldrb	r3, [r7, #7]
 770 000e 1370     		strb	r3, [r2]
 717:Generated_Source\PSoC5/RTC.c **** 
 718:Generated_Source\PSoC5/RTC.c ****     /* Check second alarm */
 719:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 771              		.loc 1 719 0
 772 0010 0E4B     		ldr	r3, .L49
 773 0012 1B78     		ldrb	r3, [r3]
 774 0014 DAB2     		uxtb	r2, r3
 775 0016 0E4B     		ldr	r3, .L49+4
 776 0018 1B78     		ldrb	r3, [r3]
 777 001a DBB2     		uxtb	r3, r3
 778 001c 9A42     		cmp	r2, r3
 779 001e 08D1     		bne	.L46
 720:Generated_Source\PSoC5/RTC.c ****     {
 721:Generated_Source\PSoC5/RTC.c ****         /* Set second alarm */
 722:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 780              		.loc 1 722 0
 781 0020 0C4B     		ldr	r3, .L49+8
 782 0022 1B78     		ldrb	r3, [r3]
 783 0024 DBB2     		uxtb	r3, r3
 784 0026 43F00103 		orr	r3, r3, #1
 785 002a DAB2     		uxtb	r2, r3
 786 002c 094B     		ldr	r3, .L49+8
 787 002e 1A70     		strb	r2, [r3]
 723:Generated_Source\PSoC5/RTC.c ****     }
 724:Generated_Source\PSoC5/RTC.c ****     else /* no second alarm */
 725:Generated_Source\PSoC5/RTC.c ****     {
 726:Generated_Source\PSoC5/RTC.c ****         /* Clear second alarm */
 727:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 728:Generated_Source\PSoC5/RTC.c ****     }
 729:Generated_Source\PSoC5/RTC.c **** }
 788              		.loc 1 729 0
 789 0030 07E0     		b	.L48
 790              	.L46:
 727:Generated_Source\PSoC5/RTC.c ****     }
 791              		.loc 1 727 0
 792 0032 084B     		ldr	r3, .L49+8
 793 0034 1B78     		ldrb	r3, [r3]
 794 0036 DBB2     		uxtb	r3, r3
 795 0038 23F00103 		bic	r3, r3, #1
 796 003c DAB2     		uxtb	r2, r3
 797 003e 054B     		ldr	r3, .L49+8
 798 0040 1A70     		strb	r2, [r3]
 799              	.L48:
 800              		.loc 1 729 0
 801 0042 00BF     		nop
 802 0044 0C37     		adds	r7, r7, #12
 803              		.cfi_def_cfa_offset 4
 804 0046 BD46     		mov	sp, r7
 805              		.cfi_def_cfa_register 13
 806              		@ sp needed
 807 0048 80BC     		pop	{r7}
 808              		.cfi_restore 7
 809              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 28


 810 004a 7047     		bx	lr
 811              	.L50:
 812              		.align	2
 813              	.L49:
 814 004c 00000000 		.word	RTC_alarmCfgTimeDate
 815 0050 00000000 		.word	RTC_currentTimeDate
 816 0054 00000000 		.word	RTC_alarmCurStatus
 817              		.cfi_endproc
 818              	.LFE14:
 819              		.size	RTC_WriteAlarmSecond, .-RTC_WriteAlarmSecond
 820              		.section	.text.RTC_WriteAlarmMinute,"ax",%progbits
 821              		.align	2
 822              		.global	RTC_WriteAlarmMinute
 823              		.thumb
 824              		.thumb_func
 825              		.type	RTC_WriteAlarmMinute, %function
 826              	RTC_WriteAlarmMinute:
 827              	.LFB15:
 730:Generated_Source\PSoC5/RTC.c **** 
 731:Generated_Source\PSoC5/RTC.c **** 
 732:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 733:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmMinute
 734:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 735:Generated_Source\PSoC5/RTC.c **** *
 736:Generated_Source\PSoC5/RTC.c **** * Summary:
 737:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Min software register value.
 738:Generated_Source\PSoC5/RTC.c **** *
 739:Generated_Source\PSoC5/RTC.c **** * Parameters:
 740:Generated_Source\PSoC5/RTC.c **** *  minute: Alarm minutes value.
 741:Generated_Source\PSoC5/RTC.c **** *
 742:Generated_Source\PSoC5/RTC.c **** * Return:
 743:Generated_Source\PSoC5/RTC.c **** *  None.
 744:Generated_Source\PSoC5/RTC.c **** *
 745:Generated_Source\PSoC5/RTC.c **** * Global variables:
 746:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Min: this global variable is used for
 747:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing minutes alarm status variable.
 748:Generated_Source\PSoC5/RTC.c **** *
 749:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Min: this global variable is modified to
 750:Generated_Source\PSoC5/RTC.c **** *  store of the new minutes alarm.
 751:Generated_Source\PSoC5/RTC.c **** *
 752:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 753:Generated_Source\PSoC5/RTC.c **** *  minute's alarm will be raised.
 754:Generated_Source\PSoC5/RTC.c **** *
 755:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 756:Generated_Source\PSoC5/RTC.c **** *  No.
 757:Generated_Source\PSoC5/RTC.c **** *
 758:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 759:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmMinute(uint8 minute) 
 760:Generated_Source\PSoC5/RTC.c **** {
 828              		.loc 1 760 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 8
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 7, -4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 29


 836 0002 83B0     		sub	sp, sp, #12
 837              		.cfi_def_cfa_offset 16
 838 0004 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
 840 0006 0346     		mov	r3, r0
 841 0008 FB71     		strb	r3, [r7, #7]
 761:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Min = minute;
 842              		.loc 1 761 0
 843 000a 104A     		ldr	r2, .L55
 844 000c FB79     		ldrb	r3, [r7, #7]
 845 000e 5370     		strb	r3, [r2, #1]
 762:Generated_Source\PSoC5/RTC.c **** 
 763:Generated_Source\PSoC5/RTC.c ****     /* Check minute alarm */
 764:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 846              		.loc 1 764 0
 847 0010 0E4B     		ldr	r3, .L55
 848 0012 5B78     		ldrb	r3, [r3, #1]
 849 0014 DAB2     		uxtb	r2, r3
 850 0016 0E4B     		ldr	r3, .L55+4
 851 0018 5B78     		ldrb	r3, [r3, #1]
 852 001a DBB2     		uxtb	r3, r3
 853 001c 9A42     		cmp	r2, r3
 854 001e 08D1     		bne	.L52
 765:Generated_Source\PSoC5/RTC.c ****     {
 766:Generated_Source\PSoC5/RTC.c ****         /* Set minute alarm */
 767:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 855              		.loc 1 767 0
 856 0020 0C4B     		ldr	r3, .L55+8
 857 0022 1B78     		ldrb	r3, [r3]
 858 0024 DBB2     		uxtb	r3, r3
 859 0026 43F00203 		orr	r3, r3, #2
 860 002a DAB2     		uxtb	r2, r3
 861 002c 094B     		ldr	r3, .L55+8
 862 002e 1A70     		strb	r2, [r3]
 768:Generated_Source\PSoC5/RTC.c ****     }
 769:Generated_Source\PSoC5/RTC.c ****     else /* no minute alarm */
 770:Generated_Source\PSoC5/RTC.c ****     {
 771:Generated_Source\PSoC5/RTC.c ****         /* Clear minute alarm */
 772:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 773:Generated_Source\PSoC5/RTC.c ****     }
 774:Generated_Source\PSoC5/RTC.c **** }
 863              		.loc 1 774 0
 864 0030 07E0     		b	.L54
 865              	.L52:
 772:Generated_Source\PSoC5/RTC.c ****     }
 866              		.loc 1 772 0
 867 0032 084B     		ldr	r3, .L55+8
 868 0034 1B78     		ldrb	r3, [r3]
 869 0036 DBB2     		uxtb	r3, r3
 870 0038 23F00203 		bic	r3, r3, #2
 871 003c DAB2     		uxtb	r2, r3
 872 003e 054B     		ldr	r3, .L55+8
 873 0040 1A70     		strb	r2, [r3]
 874              	.L54:
 875              		.loc 1 774 0
 876 0042 00BF     		nop
 877 0044 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 30


 878              		.cfi_def_cfa_offset 4
 879 0046 BD46     		mov	sp, r7
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 0048 80BC     		pop	{r7}
 883              		.cfi_restore 7
 884              		.cfi_def_cfa_offset 0
 885 004a 7047     		bx	lr
 886              	.L56:
 887              		.align	2
 888              	.L55:
 889 004c 00000000 		.word	RTC_alarmCfgTimeDate
 890 0050 00000000 		.word	RTC_currentTimeDate
 891 0054 00000000 		.word	RTC_alarmCurStatus
 892              		.cfi_endproc
 893              	.LFE15:
 894              		.size	RTC_WriteAlarmMinute, .-RTC_WriteAlarmMinute
 895              		.section	.text.RTC_WriteAlarmHour,"ax",%progbits
 896              		.align	2
 897              		.global	RTC_WriteAlarmHour
 898              		.thumb
 899              		.thumb_func
 900              		.type	RTC_WriteAlarmHour, %function
 901              	RTC_WriteAlarmHour:
 902              	.LFB16:
 775:Generated_Source\PSoC5/RTC.c **** 
 776:Generated_Source\PSoC5/RTC.c **** 
 777:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 778:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmHour
 779:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 780:Generated_Source\PSoC5/RTC.c **** *
 781:Generated_Source\PSoC5/RTC.c **** * Summary:
 782:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Hour software register value.
 783:Generated_Source\PSoC5/RTC.c **** *
 784:Generated_Source\PSoC5/RTC.c **** * Parameters:
 785:Generated_Source\PSoC5/RTC.c **** *  hour: Alarm hours value.
 786:Generated_Source\PSoC5/RTC.c **** *
 787:Generated_Source\PSoC5/RTC.c **** * Return:
 788:Generated_Source\PSoC5/RTC.c **** *  None.
 789:Generated_Source\PSoC5/RTC.c **** *
 790:Generated_Source\PSoC5/RTC.c **** * Global variables:
 791:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Hour: this global variable is used for
 792:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing hours alarm status variable.
 793:Generated_Source\PSoC5/RTC.c **** *
 794:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Hour: this global variable is modified to
 795:Generated_Source\PSoC5/RTC.c **** *  store of the new hours alarm.
 796:Generated_Source\PSoC5/RTC.c **** *
 797:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 798:Generated_Source\PSoC5/RTC.c **** *  hours alarm will be raised.
 799:Generated_Source\PSoC5/RTC.c **** *
 800:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 801:Generated_Source\PSoC5/RTC.c **** *  No.
 802:Generated_Source\PSoC5/RTC.c **** *
 803:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 804:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmHour(uint8 hour) 
 805:Generated_Source\PSoC5/RTC.c **** {
 903              		.loc 1 805 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 31


 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908 0000 80B4     		push	{r7}
 909              		.cfi_def_cfa_offset 4
 910              		.cfi_offset 7, -4
 911 0002 83B0     		sub	sp, sp, #12
 912              		.cfi_def_cfa_offset 16
 913 0004 00AF     		add	r7, sp, #0
 914              		.cfi_def_cfa_register 7
 915 0006 0346     		mov	r3, r0
 916 0008 FB71     		strb	r3, [r7, #7]
 806:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Hour = hour;
 917              		.loc 1 806 0
 918 000a 104A     		ldr	r2, .L61
 919 000c FB79     		ldrb	r3, [r7, #7]
 920 000e 9370     		strb	r3, [r2, #2]
 807:Generated_Source\PSoC5/RTC.c **** 
 808:Generated_Source\PSoC5/RTC.c ****     /* Check hour alarm */
 809:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 921              		.loc 1 809 0
 922 0010 0E4B     		ldr	r3, .L61
 923 0012 9B78     		ldrb	r3, [r3, #2]
 924 0014 DAB2     		uxtb	r2, r3
 925 0016 0E4B     		ldr	r3, .L61+4
 926 0018 9B78     		ldrb	r3, [r3, #2]
 927 001a DBB2     		uxtb	r3, r3
 928 001c 9A42     		cmp	r2, r3
 929 001e 08D1     		bne	.L58
 810:Generated_Source\PSoC5/RTC.c ****     {
 811:Generated_Source\PSoC5/RTC.c ****         /* Set hour alarm */
 812:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 930              		.loc 1 812 0
 931 0020 0C4B     		ldr	r3, .L61+8
 932 0022 1B78     		ldrb	r3, [r3]
 933 0024 DBB2     		uxtb	r3, r3
 934 0026 43F00403 		orr	r3, r3, #4
 935 002a DAB2     		uxtb	r2, r3
 936 002c 094B     		ldr	r3, .L61+8
 937 002e 1A70     		strb	r2, [r3]
 813:Generated_Source\PSoC5/RTC.c ****     }
 814:Generated_Source\PSoC5/RTC.c ****     else /* no hour alarm */
 815:Generated_Source\PSoC5/RTC.c ****     {
 816:Generated_Source\PSoC5/RTC.c ****         /* Clear hour alarm */
 817:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 818:Generated_Source\PSoC5/RTC.c ****     }
 819:Generated_Source\PSoC5/RTC.c **** }
 938              		.loc 1 819 0
 939 0030 07E0     		b	.L60
 940              	.L58:
 817:Generated_Source\PSoC5/RTC.c ****     }
 941              		.loc 1 817 0
 942 0032 084B     		ldr	r3, .L61+8
 943 0034 1B78     		ldrb	r3, [r3]
 944 0036 DBB2     		uxtb	r3, r3
 945 0038 23F00403 		bic	r3, r3, #4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 32


 946 003c DAB2     		uxtb	r2, r3
 947 003e 054B     		ldr	r3, .L61+8
 948 0040 1A70     		strb	r2, [r3]
 949              	.L60:
 950              		.loc 1 819 0
 951 0042 00BF     		nop
 952 0044 0C37     		adds	r7, r7, #12
 953              		.cfi_def_cfa_offset 4
 954 0046 BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 0048 80BC     		pop	{r7}
 958              		.cfi_restore 7
 959              		.cfi_def_cfa_offset 0
 960 004a 7047     		bx	lr
 961              	.L62:
 962              		.align	2
 963              	.L61:
 964 004c 00000000 		.word	RTC_alarmCfgTimeDate
 965 0050 00000000 		.word	RTC_currentTimeDate
 966 0054 00000000 		.word	RTC_alarmCurStatus
 967              		.cfi_endproc
 968              	.LFE16:
 969              		.size	RTC_WriteAlarmHour, .-RTC_WriteAlarmHour
 970              		.section	.text.RTC_WriteAlarmDayOfMonth,"ax",%progbits
 971              		.align	2
 972              		.global	RTC_WriteAlarmDayOfMonth
 973              		.thumb
 974              		.thumb_func
 975              		.type	RTC_WriteAlarmDayOfMonth, %function
 976              	RTC_WriteAlarmDayOfMonth:
 977              	.LFB17:
 820:Generated_Source\PSoC5/RTC.c **** 
 821:Generated_Source\PSoC5/RTC.c **** 
 822:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 823:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmDayOfMonth
 824:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 825:Generated_Source\PSoC5/RTC.c **** *
 826:Generated_Source\PSoC5/RTC.c **** * Summary:
 827:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm DayOfMonth software register value.
 828:Generated_Source\PSoC5/RTC.c **** *
 829:Generated_Source\PSoC5/RTC.c **** * Parameters:
 830:Generated_Source\PSoC5/RTC.c **** *  dayOfMonth: Alarm day of month value.
 831:Generated_Source\PSoC5/RTC.c **** *
 832:Generated_Source\PSoC5/RTC.c **** * Return:
 833:Generated_Source\PSoC5/RTC.c **** *  None.
 834:Generated_Source\PSoC5/RTC.c **** *
 835:Generated_Source\PSoC5/RTC.c **** * Global variables:
 836:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfMonth: this global variable is used for
 837:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing day of month alarm status variable.
 838:Generated_Source\PSoC5/RTC.c **** *
 839:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfMonth: this global variable is
 840:Generated_Source\PSoC5/RTC.c **** *  modified to store of the new day of month alarm.
 841:Generated_Source\PSoC5/RTC.c **** *
 842:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 843:Generated_Source\PSoC5/RTC.c **** *  day of month alarm will be raised.
 844:Generated_Source\PSoC5/RTC.c **** *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 33


 845:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 846:Generated_Source\PSoC5/RTC.c **** *  No.
 847:Generated_Source\PSoC5/RTC.c **** *
 848:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmDayOfMonth(uint8 dayOfMonth) 
 850:Generated_Source\PSoC5/RTC.c **** {
 978              		.loc 1 850 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983 0000 80B4     		push	{r7}
 984              		.cfi_def_cfa_offset 4
 985              		.cfi_offset 7, -4
 986 0002 83B0     		sub	sp, sp, #12
 987              		.cfi_def_cfa_offset 16
 988 0004 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
 990 0006 0346     		mov	r3, r0
 991 0008 FB71     		strb	r3, [r7, #7]
 851:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.DayOfMonth = dayOfMonth;
 992              		.loc 1 851 0
 993 000a 104A     		ldr	r2, .L67
 994 000c FB79     		ldrb	r3, [r7, #7]
 995 000e 1371     		strb	r3, [r2, #4]
 852:Generated_Source\PSoC5/RTC.c **** 
 853:Generated_Source\PSoC5/RTC.c ****     /* Check day of month alarm */
 854:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 996              		.loc 1 854 0
 997 0010 0E4B     		ldr	r3, .L67
 998 0012 1B79     		ldrb	r3, [r3, #4]
 999 0014 DAB2     		uxtb	r2, r3
 1000 0016 0E4B     		ldr	r3, .L67+4
 1001 0018 1B79     		ldrb	r3, [r3, #4]
 1002 001a DBB2     		uxtb	r3, r3
 1003 001c 9A42     		cmp	r2, r3
 1004 001e 08D1     		bne	.L64
 855:Generated_Source\PSoC5/RTC.c ****     {
 856:Generated_Source\PSoC5/RTC.c ****         /* Set day of month alarm */
 857:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 1005              		.loc 1 857 0
 1006 0020 0C4B     		ldr	r3, .L67+8
 1007 0022 1B78     		ldrb	r3, [r3]
 1008 0024 DBB2     		uxtb	r3, r3
 1009 0026 43F01003 		orr	r3, r3, #16
 1010 002a DAB2     		uxtb	r2, r3
 1011 002c 094B     		ldr	r3, .L67+8
 1012 002e 1A70     		strb	r2, [r3]
 858:Generated_Source\PSoC5/RTC.c ****     }
 859:Generated_Source\PSoC5/RTC.c ****     else /* no day of month alarm */
 860:Generated_Source\PSoC5/RTC.c ****     {
 861:Generated_Source\PSoC5/RTC.c ****         /* Clear day of month alarm */
 862:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 863:Generated_Source\PSoC5/RTC.c ****     }
 864:Generated_Source\PSoC5/RTC.c **** }
 1013              		.loc 1 864 0
 1014 0030 07E0     		b	.L66
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 34


 1015              	.L64:
 862:Generated_Source\PSoC5/RTC.c ****     }
 1016              		.loc 1 862 0
 1017 0032 084B     		ldr	r3, .L67+8
 1018 0034 1B78     		ldrb	r3, [r3]
 1019 0036 DBB2     		uxtb	r3, r3
 1020 0038 23F01003 		bic	r3, r3, #16
 1021 003c DAB2     		uxtb	r2, r3
 1022 003e 054B     		ldr	r3, .L67+8
 1023 0040 1A70     		strb	r2, [r3]
 1024              	.L66:
 1025              		.loc 1 864 0
 1026 0042 00BF     		nop
 1027 0044 0C37     		adds	r7, r7, #12
 1028              		.cfi_def_cfa_offset 4
 1029 0046 BD46     		mov	sp, r7
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 0048 80BC     		pop	{r7}
 1033              		.cfi_restore 7
 1034              		.cfi_def_cfa_offset 0
 1035 004a 7047     		bx	lr
 1036              	.L68:
 1037              		.align	2
 1038              	.L67:
 1039 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1040 0050 00000000 		.word	RTC_currentTimeDate
 1041 0054 00000000 		.word	RTC_alarmCurStatus
 1042              		.cfi_endproc
 1043              	.LFE17:
 1044              		.size	RTC_WriteAlarmDayOfMonth, .-RTC_WriteAlarmDayOfMonth
 1045              		.section	.text.RTC_WriteAlarmMonth,"ax",%progbits
 1046              		.align	2
 1047              		.global	RTC_WriteAlarmMonth
 1048              		.thumb
 1049              		.thumb_func
 1050              		.type	RTC_WriteAlarmMonth, %function
 1051              	RTC_WriteAlarmMonth:
 1052              	.LFB18:
 865:Generated_Source\PSoC5/RTC.c **** 
 866:Generated_Source\PSoC5/RTC.c **** 
 867:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 868:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmMonth
 869:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 870:Generated_Source\PSoC5/RTC.c **** *
 871:Generated_Source\PSoC5/RTC.c **** * Summary:
 872:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Month software register value.
 873:Generated_Source\PSoC5/RTC.c **** *
 874:Generated_Source\PSoC5/RTC.c **** * Parameters:
 875:Generated_Source\PSoC5/RTC.c **** *  month: Alarm month value.
 876:Generated_Source\PSoC5/RTC.c **** *
 877:Generated_Source\PSoC5/RTC.c **** * Return:
 878:Generated_Source\PSoC5/RTC.c **** *  None.
 879:Generated_Source\PSoC5/RTC.c **** *
 880:Generated_Source\PSoC5/RTC.c **** * Global variables:
 881:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Month: this global variable is used for
 882:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing month alarm status variable.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 35


 883:Generated_Source\PSoC5/RTC.c **** *
 884:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Month: this global variable is modified
 885:Generated_Source\PSoC5/RTC.c **** *  to store of the new month alarm.
 886:Generated_Source\PSoC5/RTC.c **** *
 887:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 888:Generated_Source\PSoC5/RTC.c **** *  month alarm will be raised.
 889:Generated_Source\PSoC5/RTC.c **** *
 890:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 891:Generated_Source\PSoC5/RTC.c **** *  No.
 892:Generated_Source\PSoC5/RTC.c **** *
 893:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 894:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmMonth(uint8 month) 
 895:Generated_Source\PSoC5/RTC.c **** {
 1053              		.loc 1 895 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 8
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058 0000 80B4     		push	{r7}
 1059              		.cfi_def_cfa_offset 4
 1060              		.cfi_offset 7, -4
 1061 0002 83B0     		sub	sp, sp, #12
 1062              		.cfi_def_cfa_offset 16
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 0346     		mov	r3, r0
 1066 0008 FB71     		strb	r3, [r7, #7]
 896:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Month = month;
 1067              		.loc 1 896 0
 1068 000a 104A     		ldr	r2, .L73
 1069 000c FB79     		ldrb	r3, [r7, #7]
 1070 000e 1372     		strb	r3, [r2, #8]
 897:Generated_Source\PSoC5/RTC.c **** 
 898:Generated_Source\PSoC5/RTC.c ****     /* Check month alarm */
 899:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 1071              		.loc 1 899 0
 1072 0010 0E4B     		ldr	r3, .L73
 1073 0012 1B7A     		ldrb	r3, [r3, #8]
 1074 0014 DAB2     		uxtb	r2, r3
 1075 0016 0E4B     		ldr	r3, .L73+4
 1076 0018 1B7A     		ldrb	r3, [r3, #8]
 1077 001a DBB2     		uxtb	r3, r3
 1078 001c 9A42     		cmp	r2, r3
 1079 001e 08D1     		bne	.L70
 900:Generated_Source\PSoC5/RTC.c ****     {
 901:Generated_Source\PSoC5/RTC.c ****         /* Set month alarm */
 902:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 1080              		.loc 1 902 0
 1081 0020 0C4B     		ldr	r3, .L73+8
 1082 0022 1B78     		ldrb	r3, [r3]
 1083 0024 DBB2     		uxtb	r3, r3
 1084 0026 43F04003 		orr	r3, r3, #64
 1085 002a DAB2     		uxtb	r2, r3
 1086 002c 094B     		ldr	r3, .L73+8
 1087 002e 1A70     		strb	r2, [r3]
 903:Generated_Source\PSoC5/RTC.c ****     }
 904:Generated_Source\PSoC5/RTC.c ****     else /* no month alarm */
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 36


 905:Generated_Source\PSoC5/RTC.c ****     {
 906:Generated_Source\PSoC5/RTC.c ****         /* Clear month alarm */
 907:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 908:Generated_Source\PSoC5/RTC.c ****     }
 909:Generated_Source\PSoC5/RTC.c **** }
 1088              		.loc 1 909 0
 1089 0030 07E0     		b	.L72
 1090              	.L70:
 907:Generated_Source\PSoC5/RTC.c ****     }
 1091              		.loc 1 907 0
 1092 0032 084B     		ldr	r3, .L73+8
 1093 0034 1B78     		ldrb	r3, [r3]
 1094 0036 DBB2     		uxtb	r3, r3
 1095 0038 23F04003 		bic	r3, r3, #64
 1096 003c DAB2     		uxtb	r2, r3
 1097 003e 054B     		ldr	r3, .L73+8
 1098 0040 1A70     		strb	r2, [r3]
 1099              	.L72:
 1100              		.loc 1 909 0
 1101 0042 00BF     		nop
 1102 0044 0C37     		adds	r7, r7, #12
 1103              		.cfi_def_cfa_offset 4
 1104 0046 BD46     		mov	sp, r7
 1105              		.cfi_def_cfa_register 13
 1106              		@ sp needed
 1107 0048 80BC     		pop	{r7}
 1108              		.cfi_restore 7
 1109              		.cfi_def_cfa_offset 0
 1110 004a 7047     		bx	lr
 1111              	.L74:
 1112              		.align	2
 1113              	.L73:
 1114 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1115 0050 00000000 		.word	RTC_currentTimeDate
 1116 0054 00000000 		.word	RTC_alarmCurStatus
 1117              		.cfi_endproc
 1118              	.LFE18:
 1119              		.size	RTC_WriteAlarmMonth, .-RTC_WriteAlarmMonth
 1120              		.section	.text.RTC_WriteAlarmYear,"ax",%progbits
 1121              		.align	2
 1122              		.global	RTC_WriteAlarmYear
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	RTC_WriteAlarmYear, %function
 1126              	RTC_WriteAlarmYear:
 1127              	.LFB19:
 910:Generated_Source\PSoC5/RTC.c **** 
 911:Generated_Source\PSoC5/RTC.c **** 
 912:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmYear
 914:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 915:Generated_Source\PSoC5/RTC.c **** *
 916:Generated_Source\PSoC5/RTC.c **** * Summary:
 917:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Year software register value.
 918:Generated_Source\PSoC5/RTC.c **** *
 919:Generated_Source\PSoC5/RTC.c **** * Parameters:
 920:Generated_Source\PSoC5/RTC.c **** *  year: Alarm year value.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 37


 921:Generated_Source\PSoC5/RTC.c **** *
 922:Generated_Source\PSoC5/RTC.c **** * Return:
 923:Generated_Source\PSoC5/RTC.c **** *  None.
 924:Generated_Source\PSoC5/RTC.c **** *
 925:Generated_Source\PSoC5/RTC.c **** * Global variables:
 926:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Year: this global variable is used for
 927:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing year alarm status variable.
 928:Generated_Source\PSoC5/RTC.c **** *
 929:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Year: this global variable is modified
 930:Generated_Source\PSoC5/RTC.c **** *  to store of the new year alarm.
 931:Generated_Source\PSoC5/RTC.c **** *
 932:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 933:Generated_Source\PSoC5/RTC.c **** *  year alarm will be raised.
 934:Generated_Source\PSoC5/RTC.c **** *
 935:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 936:Generated_Source\PSoC5/RTC.c **** *  No.
 937:Generated_Source\PSoC5/RTC.c **** *
 938:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 939:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmYear(uint16 year) 
 940:Generated_Source\PSoC5/RTC.c **** {
 1128              		.loc 1 940 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 8
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133 0000 80B4     		push	{r7}
 1134              		.cfi_def_cfa_offset 4
 1135              		.cfi_offset 7, -4
 1136 0002 83B0     		sub	sp, sp, #12
 1137              		.cfi_def_cfa_offset 16
 1138 0004 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 1140 0006 0346     		mov	r3, r0
 1141 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 941:Generated_Source\PSoC5/RTC.c ****    RTC_alarmCfgTimeDate.Year = year;
 1142              		.loc 1 941 0
 1143 000a 104A     		ldr	r2, .L79
 1144 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 1145 000e 5381     		strh	r3, [r2, #10]	@ movhi
 942:Generated_Source\PSoC5/RTC.c **** 
 943:Generated_Source\PSoC5/RTC.c ****     /* Check year alarm */
 944:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 1146              		.loc 1 944 0
 1147 0010 0E4B     		ldr	r3, .L79
 1148 0012 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1149 0014 9AB2     		uxth	r2, r3
 1150 0016 0E4B     		ldr	r3, .L79+4
 1151 0018 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1152 001a 9BB2     		uxth	r3, r3
 1153 001c 9A42     		cmp	r2, r3
 1154 001e 08D1     		bne	.L76
 945:Generated_Source\PSoC5/RTC.c ****     {
 946:Generated_Source\PSoC5/RTC.c ****         /* Set year alarm */
 947:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 1155              		.loc 1 947 0
 1156 0020 0C4B     		ldr	r3, .L79+8
 1157 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 38


 1158 0024 DBB2     		uxtb	r3, r3
 1159 0026 63F07F03 		orn	r3, r3, #127
 1160 002a DAB2     		uxtb	r2, r3
 1161 002c 094B     		ldr	r3, .L79+8
 1162 002e 1A70     		strb	r2, [r3]
 948:Generated_Source\PSoC5/RTC.c ****     }
 949:Generated_Source\PSoC5/RTC.c ****     else /* no year alarm */
 950:Generated_Source\PSoC5/RTC.c ****     {
 951:Generated_Source\PSoC5/RTC.c ****         /* Set year alarm */
 952:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 953:Generated_Source\PSoC5/RTC.c ****     }
 954:Generated_Source\PSoC5/RTC.c **** }
 1163              		.loc 1 954 0
 1164 0030 07E0     		b	.L78
 1165              	.L76:
 952:Generated_Source\PSoC5/RTC.c ****     }
 1166              		.loc 1 952 0
 1167 0032 084B     		ldr	r3, .L79+8
 1168 0034 1B78     		ldrb	r3, [r3]
 1169 0036 DBB2     		uxtb	r3, r3
 1170 0038 03F07F03 		and	r3, r3, #127
 1171 003c DAB2     		uxtb	r2, r3
 1172 003e 054B     		ldr	r3, .L79+8
 1173 0040 1A70     		strb	r2, [r3]
 1174              	.L78:
 1175              		.loc 1 954 0
 1176 0042 00BF     		nop
 1177 0044 0C37     		adds	r7, r7, #12
 1178              		.cfi_def_cfa_offset 4
 1179 0046 BD46     		mov	sp, r7
 1180              		.cfi_def_cfa_register 13
 1181              		@ sp needed
 1182 0048 80BC     		pop	{r7}
 1183              		.cfi_restore 7
 1184              		.cfi_def_cfa_offset 0
 1185 004a 7047     		bx	lr
 1186              	.L80:
 1187              		.align	2
 1188              	.L79:
 1189 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1190 0050 00000000 		.word	RTC_currentTimeDate
 1191 0054 00000000 		.word	RTC_alarmCurStatus
 1192              		.cfi_endproc
 1193              	.LFE19:
 1194              		.size	RTC_WriteAlarmYear, .-RTC_WriteAlarmYear
 1195              		.section	.text.RTC_WriteAlarmDayOfWeek,"ax",%progbits
 1196              		.align	2
 1197              		.global	RTC_WriteAlarmDayOfWeek
 1198              		.thumb
 1199              		.thumb_func
 1200              		.type	RTC_WriteAlarmDayOfWeek, %function
 1201              	RTC_WriteAlarmDayOfWeek:
 1202              	.LFB20:
 955:Generated_Source\PSoC5/RTC.c **** 
 956:Generated_Source\PSoC5/RTC.c **** 
 957:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 958:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmDayOfWeek
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 39


 959:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 960:Generated_Source\PSoC5/RTC.c **** *
 961:Generated_Source\PSoC5/RTC.c **** * Summary:
 962:Generated_Source\PSoC5/RTC.c **** *   Writes Alarm DayOfWeek software register value.
 963:Generated_Source\PSoC5/RTC.c **** *   Days values {Sun = 1, Mon = 2, Tue = 3, Wen = 4, Thu = 5, Fri = 6, Sat = 7}
 964:Generated_Source\PSoC5/RTC.c **** *
 965:Generated_Source\PSoC5/RTC.c **** * Parameters:
 966:Generated_Source\PSoC5/RTC.c **** *  dayOfWeek: Alarm day of week value.
 967:Generated_Source\PSoC5/RTC.c **** *
 968:Generated_Source\PSoC5/RTC.c **** * Return:
 969:Generated_Source\PSoC5/RTC.c **** *  None.
 970:Generated_Source\PSoC5/RTC.c **** *
 971:Generated_Source\PSoC5/RTC.c **** * Global variables:
 972:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfWeek: this global variable is used for
 973:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing day of week alarm status variable.
 974:Generated_Source\PSoC5/RTC.c **** *
 975:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfWeek: this global variable is modified
 976:Generated_Source\PSoC5/RTC.c **** *  to store of the new day of week alarm.
 977:Generated_Source\PSoC5/RTC.c **** *
 978:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 979:Generated_Source\PSoC5/RTC.c **** *  day of week alarm will be raised.
 980:Generated_Source\PSoC5/RTC.c **** *
 981:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 982:Generated_Source\PSoC5/RTC.c **** *  No.
 983:Generated_Source\PSoC5/RTC.c **** *
 984:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 985:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmDayOfWeek(uint8 dayOfWeek) 
 986:Generated_Source\PSoC5/RTC.c **** {
 1203              		.loc 1 986 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 8
 1206              		@ frame_needed = 1, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
 1208 0000 80B4     		push	{r7}
 1209              		.cfi_def_cfa_offset 4
 1210              		.cfi_offset 7, -4
 1211 0002 83B0     		sub	sp, sp, #12
 1212              		.cfi_def_cfa_offset 16
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 1215 0006 0346     		mov	r3, r0
 1216 0008 FB71     		strb	r3, [r7, #7]
 987:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.DayOfWeek = dayOfWeek;
 1217              		.loc 1 987 0
 1218 000a 104A     		ldr	r2, .L85
 1219 000c FB79     		ldrb	r3, [r7, #7]
 1220 000e D370     		strb	r3, [r2, #3]
 988:Generated_Source\PSoC5/RTC.c **** 
 989:Generated_Source\PSoC5/RTC.c ****     /* Check day of week alarm */
 990:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 1221              		.loc 1 990 0
 1222 0010 0E4B     		ldr	r3, .L85
 1223 0012 DB78     		ldrb	r3, [r3, #3]
 1224 0014 DAB2     		uxtb	r2, r3
 1225 0016 0E4B     		ldr	r3, .L85+4
 1226 0018 DB78     		ldrb	r3, [r3, #3]
 1227 001a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 40


 1228 001c 9A42     		cmp	r2, r3
 1229 001e 08D1     		bne	.L82
 991:Generated_Source\PSoC5/RTC.c ****     {
 992:Generated_Source\PSoC5/RTC.c ****         /* Set day of week alarm */
 993:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 1230              		.loc 1 993 0
 1231 0020 0C4B     		ldr	r3, .L85+8
 1232 0022 1B78     		ldrb	r3, [r3]
 1233 0024 DBB2     		uxtb	r3, r3
 1234 0026 43F00803 		orr	r3, r3, #8
 1235 002a DAB2     		uxtb	r2, r3
 1236 002c 094B     		ldr	r3, .L85+8
 1237 002e 1A70     		strb	r2, [r3]
 994:Generated_Source\PSoC5/RTC.c ****     }
 995:Generated_Source\PSoC5/RTC.c ****     else /* no day of week alarm */
 996:Generated_Source\PSoC5/RTC.c ****     {
 997:Generated_Source\PSoC5/RTC.c ****         /* Set day of week alarm */
 998:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 999:Generated_Source\PSoC5/RTC.c ****     }
1000:Generated_Source\PSoC5/RTC.c **** }
 1238              		.loc 1 1000 0
 1239 0030 07E0     		b	.L84
 1240              	.L82:
 998:Generated_Source\PSoC5/RTC.c ****     }
 1241              		.loc 1 998 0
 1242 0032 084B     		ldr	r3, .L85+8
 1243 0034 1B78     		ldrb	r3, [r3]
 1244 0036 DBB2     		uxtb	r3, r3
 1245 0038 23F00803 		bic	r3, r3, #8
 1246 003c DAB2     		uxtb	r2, r3
 1247 003e 054B     		ldr	r3, .L85+8
 1248 0040 1A70     		strb	r2, [r3]
 1249              	.L84:
 1250              		.loc 1 1000 0
 1251 0042 00BF     		nop
 1252 0044 0C37     		adds	r7, r7, #12
 1253              		.cfi_def_cfa_offset 4
 1254 0046 BD46     		mov	sp, r7
 1255              		.cfi_def_cfa_register 13
 1256              		@ sp needed
 1257 0048 80BC     		pop	{r7}
 1258              		.cfi_restore 7
 1259              		.cfi_def_cfa_offset 0
 1260 004a 7047     		bx	lr
 1261              	.L86:
 1262              		.align	2
 1263              	.L85:
 1264 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1265 0050 00000000 		.word	RTC_currentTimeDate
 1266 0054 00000000 		.word	RTC_alarmCurStatus
 1267              		.cfi_endproc
 1268              	.LFE20:
 1269              		.size	RTC_WriteAlarmDayOfWeek, .-RTC_WriteAlarmDayOfWeek
 1270              		.section	.text.RTC_WriteAlarmDayOfYear,"ax",%progbits
 1271              		.align	2
 1272              		.global	RTC_WriteAlarmDayOfYear
 1273              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 41


 1274              		.thumb_func
 1275              		.type	RTC_WriteAlarmDayOfYear, %function
 1276              	RTC_WriteAlarmDayOfYear:
 1277              	.LFB21:
1001:Generated_Source\PSoC5/RTC.c **** 
1002:Generated_Source\PSoC5/RTC.c **** 
1003:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1004:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmDayOfYear
1005:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1006:Generated_Source\PSoC5/RTC.c **** *
1007:Generated_Source\PSoC5/RTC.c **** * Summary:
1008:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm DayOfYear software register value.
1009:Generated_Source\PSoC5/RTC.c **** *
1010:Generated_Source\PSoC5/RTC.c **** * Parameters:
1011:Generated_Source\PSoC5/RTC.c **** *  dayOfYear: Alarm day of year value.
1012:Generated_Source\PSoC5/RTC.c **** *
1013:Generated_Source\PSoC5/RTC.c **** * Return:
1014:Generated_Source\PSoC5/RTC.c **** *  None.
1015:Generated_Source\PSoC5/RTC.c **** *
1016:Generated_Source\PSoC5/RTC.c **** * Global variables:
1017:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfYear: this global variable is used for
1018:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing day of year alarm status variable.
1019:Generated_Source\PSoC5/RTC.c **** *
1020:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfYear: this global variable is modified
1021:Generated_Source\PSoC5/RTC.c **** *  to store of the new day of year alarm.
1022:Generated_Source\PSoC5/RTC.c **** *
1023:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
1024:Generated_Source\PSoC5/RTC.c **** *  day of year alarm will be raised.
1025:Generated_Source\PSoC5/RTC.c **** *
1026:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1027:Generated_Source\PSoC5/RTC.c **** *  No.
1028:Generated_Source\PSoC5/RTC.c **** *
1029:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1030:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmDayOfYear(uint16 dayOfYear) 
1031:Generated_Source\PSoC5/RTC.c **** {
 1278              		.loc 1 1031 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 8
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282              		@ link register save eliminated.
 1283 0000 80B4     		push	{r7}
 1284              		.cfi_def_cfa_offset 4
 1285              		.cfi_offset 7, -4
 1286 0002 83B0     		sub	sp, sp, #12
 1287              		.cfi_def_cfa_offset 16
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_def_cfa_register 7
 1290 0006 0346     		mov	r3, r0
 1291 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1032:Generated_Source\PSoC5/RTC.c ****   RTC_alarmCfgTimeDate.DayOfYear = dayOfYear;
 1292              		.loc 1 1032 0
 1293 000a 104A     		ldr	r2, .L91
 1294 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 1295 000e D380     		strh	r3, [r2, #6]	@ movhi
1033:Generated_Source\PSoC5/RTC.c **** 
1034:Generated_Source\PSoC5/RTC.c ****     /* Check day of year alarm */
1035:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 42


 1296              		.loc 1 1035 0
 1297 0010 0E4B     		ldr	r3, .L91
 1298 0012 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1299 0014 9AB2     		uxth	r2, r3
 1300 0016 0E4B     		ldr	r3, .L91+4
 1301 0018 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1302 001a 9BB2     		uxth	r3, r3
 1303 001c 9A42     		cmp	r2, r3
 1304 001e 08D1     		bne	.L88
1036:Generated_Source\PSoC5/RTC.c ****     {
1037:Generated_Source\PSoC5/RTC.c ****         /* Set day of year alarm */
1038:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 1305              		.loc 1 1038 0
 1306 0020 0C4B     		ldr	r3, .L91+8
 1307 0022 1B78     		ldrb	r3, [r3]
 1308 0024 DBB2     		uxtb	r3, r3
 1309 0026 43F02003 		orr	r3, r3, #32
 1310 002a DAB2     		uxtb	r2, r3
 1311 002c 094B     		ldr	r3, .L91+8
 1312 002e 1A70     		strb	r2, [r3]
1039:Generated_Source\PSoC5/RTC.c ****     }
1040:Generated_Source\PSoC5/RTC.c ****     else /* no day of year alarm */
1041:Generated_Source\PSoC5/RTC.c ****     {
1042:Generated_Source\PSoC5/RTC.c ****         /* Set day of year alarm */
1043:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
1044:Generated_Source\PSoC5/RTC.c ****     }
1045:Generated_Source\PSoC5/RTC.c **** }
 1313              		.loc 1 1045 0
 1314 0030 07E0     		b	.L90
 1315              	.L88:
1043:Generated_Source\PSoC5/RTC.c ****     }
 1316              		.loc 1 1043 0
 1317 0032 084B     		ldr	r3, .L91+8
 1318 0034 1B78     		ldrb	r3, [r3]
 1319 0036 DBB2     		uxtb	r3, r3
 1320 0038 23F02003 		bic	r3, r3, #32
 1321 003c DAB2     		uxtb	r2, r3
 1322 003e 054B     		ldr	r3, .L91+8
 1323 0040 1A70     		strb	r2, [r3]
 1324              	.L90:
 1325              		.loc 1 1045 0
 1326 0042 00BF     		nop
 1327 0044 0C37     		adds	r7, r7, #12
 1328              		.cfi_def_cfa_offset 4
 1329 0046 BD46     		mov	sp, r7
 1330              		.cfi_def_cfa_register 13
 1331              		@ sp needed
 1332 0048 80BC     		pop	{r7}
 1333              		.cfi_restore 7
 1334              		.cfi_def_cfa_offset 0
 1335 004a 7047     		bx	lr
 1336              	.L92:
 1337              		.align	2
 1338              	.L91:
 1339 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1340 0050 00000000 		.word	RTC_currentTimeDate
 1341 0054 00000000 		.word	RTC_alarmCurStatus
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 43


 1342              		.cfi_endproc
 1343              	.LFE21:
 1344              		.size	RTC_WriteAlarmDayOfYear, .-RTC_WriteAlarmDayOfYear
 1345              		.section	.text.RTC_ReadSecond,"ax",%progbits
 1346              		.align	2
 1347              		.global	RTC_ReadSecond
 1348              		.thumb
 1349              		.thumb_func
 1350              		.type	RTC_ReadSecond, %function
 1351              	RTC_ReadSecond:
 1352              	.LFB22:
1046:Generated_Source\PSoC5/RTC.c **** 
1047:Generated_Source\PSoC5/RTC.c **** 
1048:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadSecond
1050:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1051:Generated_Source\PSoC5/RTC.c **** *
1052:Generated_Source\PSoC5/RTC.c **** * Summary:
1053:Generated_Source\PSoC5/RTC.c **** *  Reads Sec software register value.
1054:Generated_Source\PSoC5/RTC.c **** *
1055:Generated_Source\PSoC5/RTC.c **** * Parameters:
1056:Generated_Source\PSoC5/RTC.c **** *  None.
1057:Generated_Source\PSoC5/RTC.c **** *
1058:Generated_Source\PSoC5/RTC.c **** * Return:
1059:Generated_Source\PSoC5/RTC.c **** *  Current seconds value.
1060:Generated_Source\PSoC5/RTC.c **** *
1061:Generated_Source\PSoC5/RTC.c **** * Global variables:
1062:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Sec: the current second's value is used.
1063:Generated_Source\PSoC5/RTC.c **** *
1064:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadSecond(void) 
1066:Generated_Source\PSoC5/RTC.c **** {
 1353              		.loc 1 1066 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 1, uses_anonymous_args = 0
 1357              		@ link register save eliminated.
 1358 0000 80B4     		push	{r7}
 1359              		.cfi_def_cfa_offset 4
 1360              		.cfi_offset 7, -4
 1361 0002 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/RTC.c ****     /* Return current second */
1068:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Sec);
 1363              		.loc 1 1068 0
 1364 0004 034B     		ldr	r3, .L95
 1365 0006 1B78     		ldrb	r3, [r3]
 1366 0008 DBB2     		uxtb	r3, r3
1069:Generated_Source\PSoC5/RTC.c **** }
 1367              		.loc 1 1069 0
 1368 000a 1846     		mov	r0, r3
 1369 000c BD46     		mov	sp, r7
 1370              		.cfi_def_cfa_register 13
 1371              		@ sp needed
 1372 000e 80BC     		pop	{r7}
 1373              		.cfi_restore 7
 1374              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 44


 1375 0010 7047     		bx	lr
 1376              	.L96:
 1377 0012 00BF     		.align	2
 1378              	.L95:
 1379 0014 00000000 		.word	RTC_currentTimeDate
 1380              		.cfi_endproc
 1381              	.LFE22:
 1382              		.size	RTC_ReadSecond, .-RTC_ReadSecond
 1383              		.section	.text.RTC_ReadMinute,"ax",%progbits
 1384              		.align	2
 1385              		.global	RTC_ReadMinute
 1386              		.thumb
 1387              		.thumb_func
 1388              		.type	RTC_ReadMinute, %function
 1389              	RTC_ReadMinute:
 1390              	.LFB23:
1070:Generated_Source\PSoC5/RTC.c **** 
1071:Generated_Source\PSoC5/RTC.c **** 
1072:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadMinute
1074:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1075:Generated_Source\PSoC5/RTC.c **** *
1076:Generated_Source\PSoC5/RTC.c **** * Summary:
1077:Generated_Source\PSoC5/RTC.c **** *  Reads Min software register value.
1078:Generated_Source\PSoC5/RTC.c **** *
1079:Generated_Source\PSoC5/RTC.c **** * Parameters:
1080:Generated_Source\PSoC5/RTC.c **** *  None.
1081:Generated_Source\PSoC5/RTC.c **** *
1082:Generated_Source\PSoC5/RTC.c **** * Return:
1083:Generated_Source\PSoC5/RTC.c **** *  Current field's value is returned.
1084:Generated_Source\PSoC5/RTC.c **** *
1085:Generated_Source\PSoC5/RTC.c **** * Global variables:
1086:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Min: the current field's value is used.
1087:Generated_Source\PSoC5/RTC.c **** *
1088:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1089:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadMinute(void) 
1090:Generated_Source\PSoC5/RTC.c **** {
 1391              		.loc 1 1090 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 1, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 1396 0000 80B4     		push	{r7}
 1397              		.cfi_def_cfa_offset 4
 1398              		.cfi_offset 7, -4
 1399 0002 00AF     		add	r7, sp, #0
 1400              		.cfi_def_cfa_register 7
1091:Generated_Source\PSoC5/RTC.c ****     /* Return current minute */
1092:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Min);
 1401              		.loc 1 1092 0
 1402 0004 034B     		ldr	r3, .L99
 1403 0006 5B78     		ldrb	r3, [r3, #1]
 1404 0008 DBB2     		uxtb	r3, r3
1093:Generated_Source\PSoC5/RTC.c **** }
 1405              		.loc 1 1093 0
 1406 000a 1846     		mov	r0, r3
 1407 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 45


 1408              		.cfi_def_cfa_register 13
 1409              		@ sp needed
 1410 000e 80BC     		pop	{r7}
 1411              		.cfi_restore 7
 1412              		.cfi_def_cfa_offset 0
 1413 0010 7047     		bx	lr
 1414              	.L100:
 1415 0012 00BF     		.align	2
 1416              	.L99:
 1417 0014 00000000 		.word	RTC_currentTimeDate
 1418              		.cfi_endproc
 1419              	.LFE23:
 1420              		.size	RTC_ReadMinute, .-RTC_ReadMinute
 1421              		.section	.text.RTC_ReadHour,"ax",%progbits
 1422              		.align	2
 1423              		.global	RTC_ReadHour
 1424              		.thumb
 1425              		.thumb_func
 1426              		.type	RTC_ReadHour, %function
 1427              	RTC_ReadHour:
 1428              	.LFB24:
1094:Generated_Source\PSoC5/RTC.c **** 
1095:Generated_Source\PSoC5/RTC.c **** 
1096:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1097:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadHour
1098:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1099:Generated_Source\PSoC5/RTC.c **** *
1100:Generated_Source\PSoC5/RTC.c **** * Summary:
1101:Generated_Source\PSoC5/RTC.c **** *  Reads Hour software register value.
1102:Generated_Source\PSoC5/RTC.c **** *
1103:Generated_Source\PSoC5/RTC.c **** * Parameters:
1104:Generated_Source\PSoC5/RTC.c **** *  None.
1105:Generated_Source\PSoC5/RTC.c **** *
1106:Generated_Source\PSoC5/RTC.c **** * Return:
1107:Generated_Source\PSoC5/RTC.c **** *  Current hour's value.
1108:Generated_Source\PSoC5/RTC.c **** *
1109:Generated_Source\PSoC5/RTC.c **** * Global variables:
1110:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Hour: the current field's value is used.
1111:Generated_Source\PSoC5/RTC.c **** *
1112:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1113:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadHour(void) 
1114:Generated_Source\PSoC5/RTC.c **** {
 1429              		.loc 1 1114 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 1, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434 0000 80B4     		push	{r7}
 1435              		.cfi_def_cfa_offset 4
 1436              		.cfi_offset 7, -4
 1437 0002 00AF     		add	r7, sp, #0
 1438              		.cfi_def_cfa_register 7
1115:Generated_Source\PSoC5/RTC.c ****     /* Return current hour */
1116:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Hour);
 1439              		.loc 1 1116 0
 1440 0004 034B     		ldr	r3, .L103
 1441 0006 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 46


 1442 0008 DBB2     		uxtb	r3, r3
1117:Generated_Source\PSoC5/RTC.c **** }
 1443              		.loc 1 1117 0
 1444 000a 1846     		mov	r0, r3
 1445 000c BD46     		mov	sp, r7
 1446              		.cfi_def_cfa_register 13
 1447              		@ sp needed
 1448 000e 80BC     		pop	{r7}
 1449              		.cfi_restore 7
 1450              		.cfi_def_cfa_offset 0
 1451 0010 7047     		bx	lr
 1452              	.L104:
 1453 0012 00BF     		.align	2
 1454              	.L103:
 1455 0014 00000000 		.word	RTC_currentTimeDate
 1456              		.cfi_endproc
 1457              	.LFE24:
 1458              		.size	RTC_ReadHour, .-RTC_ReadHour
 1459              		.section	.text.RTC_ReadDayOfMonth,"ax",%progbits
 1460              		.align	2
 1461              		.global	RTC_ReadDayOfMonth
 1462              		.thumb
 1463              		.thumb_func
 1464              		.type	RTC_ReadDayOfMonth, %function
 1465              	RTC_ReadDayOfMonth:
 1466              	.LFB25:
1118:Generated_Source\PSoC5/RTC.c **** 
1119:Generated_Source\PSoC5/RTC.c **** 
1120:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1121:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadDayOfMonth
1122:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1123:Generated_Source\PSoC5/RTC.c **** *
1124:Generated_Source\PSoC5/RTC.c **** * Summary:
1125:Generated_Source\PSoC5/RTC.c **** *  Reads DayOfMonth software register value.
1126:Generated_Source\PSoC5/RTC.c **** *
1127:Generated_Source\PSoC5/RTC.c **** * Parameters:
1128:Generated_Source\PSoC5/RTC.c **** *  None.
1129:Generated_Source\PSoC5/RTC.c **** *
1130:Generated_Source\PSoC5/RTC.c **** * Return:
1131:Generated_Source\PSoC5/RTC.c **** *  Current value of the day of month.
1132:Generated_Source\PSoC5/RTC.c **** *  returned.
1133:Generated_Source\PSoC5/RTC.c **** *
1134:Generated_Source\PSoC5/RTC.c **** * Global variables:
1135:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfMonth: the current day of month's
1136:Generated_Source\PSoC5/RTC.c **** *  value is used.
1137:Generated_Source\PSoC5/RTC.c **** *
1138:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1139:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadDayOfMonth(void) 
1140:Generated_Source\PSoC5/RTC.c **** {
 1467              		.loc 1 1140 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 1, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
 1472 0000 80B4     		push	{r7}
 1473              		.cfi_def_cfa_offset 4
 1474              		.cfi_offset 7, -4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 47


 1475 0002 00AF     		add	r7, sp, #0
 1476              		.cfi_def_cfa_register 7
1141:Generated_Source\PSoC5/RTC.c ****     /* Return current day of the month */
1142:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.DayOfMonth);
 1477              		.loc 1 1142 0
 1478 0004 034B     		ldr	r3, .L107
 1479 0006 1B79     		ldrb	r3, [r3, #4]
 1480 0008 DBB2     		uxtb	r3, r3
1143:Generated_Source\PSoC5/RTC.c **** }
 1481              		.loc 1 1143 0
 1482 000a 1846     		mov	r0, r3
 1483 000c BD46     		mov	sp, r7
 1484              		.cfi_def_cfa_register 13
 1485              		@ sp needed
 1486 000e 80BC     		pop	{r7}
 1487              		.cfi_restore 7
 1488              		.cfi_def_cfa_offset 0
 1489 0010 7047     		bx	lr
 1490              	.L108:
 1491 0012 00BF     		.align	2
 1492              	.L107:
 1493 0014 00000000 		.word	RTC_currentTimeDate
 1494              		.cfi_endproc
 1495              	.LFE25:
 1496              		.size	RTC_ReadDayOfMonth, .-RTC_ReadDayOfMonth
 1497              		.section	.text.RTC_ReadMonth,"ax",%progbits
 1498              		.align	2
 1499              		.global	RTC_ReadMonth
 1500              		.thumb
 1501              		.thumb_func
 1502              		.type	RTC_ReadMonth, %function
 1503              	RTC_ReadMonth:
 1504              	.LFB26:
1144:Generated_Source\PSoC5/RTC.c **** 
1145:Generated_Source\PSoC5/RTC.c **** 
1146:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1147:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadMonth
1148:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1149:Generated_Source\PSoC5/RTC.c **** *
1150:Generated_Source\PSoC5/RTC.c **** * Summary:
1151:Generated_Source\PSoC5/RTC.c **** *  Reads Month software register value.
1152:Generated_Source\PSoC5/RTC.c **** *
1153:Generated_Source\PSoC5/RTC.c **** * Parameters:
1154:Generated_Source\PSoC5/RTC.c **** *  None.
1155:Generated_Source\PSoC5/RTC.c **** *
1156:Generated_Source\PSoC5/RTC.c **** * Return:
1157:Generated_Source\PSoC5/RTC.c **** *  Current value of the month.
1158:Generated_Source\PSoC5/RTC.c **** *
1159:Generated_Source\PSoC5/RTC.c **** * Global variables:
1160:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Month: the current month's value is used.
1161:Generated_Source\PSoC5/RTC.c **** *
1162:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1163:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadMonth(void) 
1164:Generated_Source\PSoC5/RTC.c **** {
 1505              		.loc 1 1164 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 48


 1508              		@ frame_needed = 1, uses_anonymous_args = 0
 1509              		@ link register save eliminated.
 1510 0000 80B4     		push	{r7}
 1511              		.cfi_def_cfa_offset 4
 1512              		.cfi_offset 7, -4
 1513 0002 00AF     		add	r7, sp, #0
 1514              		.cfi_def_cfa_register 7
1165:Generated_Source\PSoC5/RTC.c ****     /* Return current month */
1166:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Month);
 1515              		.loc 1 1166 0
 1516 0004 034B     		ldr	r3, .L111
 1517 0006 1B7A     		ldrb	r3, [r3, #8]
 1518 0008 DBB2     		uxtb	r3, r3
1167:Generated_Source\PSoC5/RTC.c **** }
 1519              		.loc 1 1167 0
 1520 000a 1846     		mov	r0, r3
 1521 000c BD46     		mov	sp, r7
 1522              		.cfi_def_cfa_register 13
 1523              		@ sp needed
 1524 000e 80BC     		pop	{r7}
 1525              		.cfi_restore 7
 1526              		.cfi_def_cfa_offset 0
 1527 0010 7047     		bx	lr
 1528              	.L112:
 1529 0012 00BF     		.align	2
 1530              	.L111:
 1531 0014 00000000 		.word	RTC_currentTimeDate
 1532              		.cfi_endproc
 1533              	.LFE26:
 1534              		.size	RTC_ReadMonth, .-RTC_ReadMonth
 1535              		.section	.text.RTC_ReadYear,"ax",%progbits
 1536              		.align	2
 1537              		.global	RTC_ReadYear
 1538              		.thumb
 1539              		.thumb_func
 1540              		.type	RTC_ReadYear, %function
 1541              	RTC_ReadYear:
 1542              	.LFB27:
1168:Generated_Source\PSoC5/RTC.c **** 
1169:Generated_Source\PSoC5/RTC.c **** 
1170:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1171:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadYear
1172:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1173:Generated_Source\PSoC5/RTC.c **** *
1174:Generated_Source\PSoC5/RTC.c **** * Summary:
1175:Generated_Source\PSoC5/RTC.c **** *  Reads Year software register value.
1176:Generated_Source\PSoC5/RTC.c **** *
1177:Generated_Source\PSoC5/RTC.c **** * Parameters:
1178:Generated_Source\PSoC5/RTC.c **** *  None.
1179:Generated_Source\PSoC5/RTC.c **** *
1180:Generated_Source\PSoC5/RTC.c **** * Return:
1181:Generated_Source\PSoC5/RTC.c **** *  Current value of the year.
1182:Generated_Source\PSoC5/RTC.c **** *
1183:Generated_Source\PSoC5/RTC.c **** * Global variables:
1184:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Year: the current year's value is used.
1185:Generated_Source\PSoC5/RTC.c **** *
1186:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 49


1187:Generated_Source\PSoC5/RTC.c **** uint16 RTC_ReadYear(void) 
1188:Generated_Source\PSoC5/RTC.c **** {
 1543              		.loc 1 1188 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 1, uses_anonymous_args = 0
 1547              		@ link register save eliminated.
 1548 0000 80B4     		push	{r7}
 1549              		.cfi_def_cfa_offset 4
 1550              		.cfi_offset 7, -4
 1551 0002 00AF     		add	r7, sp, #0
 1552              		.cfi_def_cfa_register 7
1189:Generated_Source\PSoC5/RTC.c ****     /* Return current year */
1190:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Year);
 1553              		.loc 1 1190 0
 1554 0004 034B     		ldr	r3, .L115
 1555 0006 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1556 0008 9BB2     		uxth	r3, r3
1191:Generated_Source\PSoC5/RTC.c **** }
 1557              		.loc 1 1191 0
 1558 000a 1846     		mov	r0, r3
 1559 000c BD46     		mov	sp, r7
 1560              		.cfi_def_cfa_register 13
 1561              		@ sp needed
 1562 000e 80BC     		pop	{r7}
 1563              		.cfi_restore 7
 1564              		.cfi_def_cfa_offset 0
 1565 0010 7047     		bx	lr
 1566              	.L116:
 1567 0012 00BF     		.align	2
 1568              	.L115:
 1569 0014 00000000 		.word	RTC_currentTimeDate
 1570              		.cfi_endproc
 1571              	.LFE27:
 1572              		.size	RTC_ReadYear, .-RTC_ReadYear
 1573              		.section	.text.RTC_ReadAlarmSecond,"ax",%progbits
 1574              		.align	2
 1575              		.global	RTC_ReadAlarmSecond
 1576              		.thumb
 1577              		.thumb_func
 1578              		.type	RTC_ReadAlarmSecond, %function
 1579              	RTC_ReadAlarmSecond:
 1580              	.LFB28:
1192:Generated_Source\PSoC5/RTC.c **** 
1193:Generated_Source\PSoC5/RTC.c **** 
1194:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1195:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmSecond
1196:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1197:Generated_Source\PSoC5/RTC.c **** *
1198:Generated_Source\PSoC5/RTC.c **** * Summary:
1199:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Sec software register value.
1200:Generated_Source\PSoC5/RTC.c **** *
1201:Generated_Source\PSoC5/RTC.c **** * Parameters:
1202:Generated_Source\PSoC5/RTC.c **** *  None.
1203:Generated_Source\PSoC5/RTC.c **** *
1204:Generated_Source\PSoC5/RTC.c **** * Return:
1205:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the seconds.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 50


1206:Generated_Source\PSoC5/RTC.c **** *
1207:Generated_Source\PSoC5/RTC.c **** * Global variables:
1208:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Sec: the current second alarm value is
1209:Generated_Source\PSoC5/RTC.c **** *  used.
1210:Generated_Source\PSoC5/RTC.c **** *
1211:Generated_Source\PSoC5/RTC.c **** ********************************************************************************/
1212:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmSecond(void) 
1213:Generated_Source\PSoC5/RTC.c **** {
 1581              		.loc 1 1213 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 1, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
 1586 0000 80B4     		push	{r7}
 1587              		.cfi_def_cfa_offset 4
 1588              		.cfi_offset 7, -4
 1589 0002 00AF     		add	r7, sp, #0
 1590              		.cfi_def_cfa_register 7
1214:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm second */
1215:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Sec);
 1591              		.loc 1 1215 0
 1592 0004 034B     		ldr	r3, .L119
 1593 0006 1B78     		ldrb	r3, [r3]
 1594 0008 DBB2     		uxtb	r3, r3
1216:Generated_Source\PSoC5/RTC.c **** }
 1595              		.loc 1 1216 0
 1596 000a 1846     		mov	r0, r3
 1597 000c BD46     		mov	sp, r7
 1598              		.cfi_def_cfa_register 13
 1599              		@ sp needed
 1600 000e 80BC     		pop	{r7}
 1601              		.cfi_restore 7
 1602              		.cfi_def_cfa_offset 0
 1603 0010 7047     		bx	lr
 1604              	.L120:
 1605 0012 00BF     		.align	2
 1606              	.L119:
 1607 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1608              		.cfi_endproc
 1609              	.LFE28:
 1610              		.size	RTC_ReadAlarmSecond, .-RTC_ReadAlarmSecond
 1611              		.section	.text.RTC_ReadAlarmMinute,"ax",%progbits
 1612              		.align	2
 1613              		.global	RTC_ReadAlarmMinute
 1614              		.thumb
 1615              		.thumb_func
 1616              		.type	RTC_ReadAlarmMinute, %function
 1617              	RTC_ReadAlarmMinute:
 1618              	.LFB29:
1217:Generated_Source\PSoC5/RTC.c **** 
1218:Generated_Source\PSoC5/RTC.c **** 
1219:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1220:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmMinute
1221:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1222:Generated_Source\PSoC5/RTC.c **** *
1223:Generated_Source\PSoC5/RTC.c **** * Summary:
1224:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Min software register value.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 51


1225:Generated_Source\PSoC5/RTC.c **** *
1226:Generated_Source\PSoC5/RTC.c **** * Parameters:
1227:Generated_Source\PSoC5/RTC.c **** *  None.
1228:Generated_Source\PSoC5/RTC.c **** *
1229:Generated_Source\PSoC5/RTC.c **** * Return:
1230:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the minutes.
1231:Generated_Source\PSoC5/RTC.c **** *
1232:Generated_Source\PSoC5/RTC.c **** * Global variables:
1233:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Min: the current minute alarm is used.
1234:Generated_Source\PSoC5/RTC.c **** *
1235:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1236:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmMinute(void) 
1237:Generated_Source\PSoC5/RTC.c **** {
 1619              		.loc 1 1237 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 0
 1622              		@ frame_needed = 1, uses_anonymous_args = 0
 1623              		@ link register save eliminated.
 1624 0000 80B4     		push	{r7}
 1625              		.cfi_def_cfa_offset 4
 1626              		.cfi_offset 7, -4
 1627 0002 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
1238:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm minute */
1239:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Min);
 1629              		.loc 1 1239 0
 1630 0004 034B     		ldr	r3, .L123
 1631 0006 5B78     		ldrb	r3, [r3, #1]
 1632 0008 DBB2     		uxtb	r3, r3
1240:Generated_Source\PSoC5/RTC.c **** }
 1633              		.loc 1 1240 0
 1634 000a 1846     		mov	r0, r3
 1635 000c BD46     		mov	sp, r7
 1636              		.cfi_def_cfa_register 13
 1637              		@ sp needed
 1638 000e 80BC     		pop	{r7}
 1639              		.cfi_restore 7
 1640              		.cfi_def_cfa_offset 0
 1641 0010 7047     		bx	lr
 1642              	.L124:
 1643 0012 00BF     		.align	2
 1644              	.L123:
 1645 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1646              		.cfi_endproc
 1647              	.LFE29:
 1648              		.size	RTC_ReadAlarmMinute, .-RTC_ReadAlarmMinute
 1649              		.section	.text.RTC_ReadAlarmHour,"ax",%progbits
 1650              		.align	2
 1651              		.global	RTC_ReadAlarmHour
 1652              		.thumb
 1653              		.thumb_func
 1654              		.type	RTC_ReadAlarmHour, %function
 1655              	RTC_ReadAlarmHour:
 1656              	.LFB30:
1241:Generated_Source\PSoC5/RTC.c **** 
1242:Generated_Source\PSoC5/RTC.c **** 
1243:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 52


1244:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmHour
1245:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1246:Generated_Source\PSoC5/RTC.c **** *
1247:Generated_Source\PSoC5/RTC.c **** * Summary:
1248:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Hour software register value.
1249:Generated_Source\PSoC5/RTC.c **** *
1250:Generated_Source\PSoC5/RTC.c **** * Parameters:
1251:Generated_Source\PSoC5/RTC.c **** *  None.
1252:Generated_Source\PSoC5/RTC.c **** *
1253:Generated_Source\PSoC5/RTC.c **** * Return:
1254:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the hours.
1255:Generated_Source\PSoC5/RTC.c **** *
1256:Generated_Source\PSoC5/RTC.c **** * Global variables:
1257:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Hour: the current hour alarm value is used.
1258:Generated_Source\PSoC5/RTC.c **** *
1259:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1260:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmHour(void) 
1261:Generated_Source\PSoC5/RTC.c **** {
 1657              		.loc 1 1261 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 1, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
 1662 0000 80B4     		push	{r7}
 1663              		.cfi_def_cfa_offset 4
 1664              		.cfi_offset 7, -4
 1665 0002 00AF     		add	r7, sp, #0
 1666              		.cfi_def_cfa_register 7
1262:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm hour */
1263:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Hour);
 1667              		.loc 1 1263 0
 1668 0004 034B     		ldr	r3, .L127
 1669 0006 9B78     		ldrb	r3, [r3, #2]
 1670 0008 DBB2     		uxtb	r3, r3
1264:Generated_Source\PSoC5/RTC.c **** }
 1671              		.loc 1 1264 0
 1672 000a 1846     		mov	r0, r3
 1673 000c BD46     		mov	sp, r7
 1674              		.cfi_def_cfa_register 13
 1675              		@ sp needed
 1676 000e 80BC     		pop	{r7}
 1677              		.cfi_restore 7
 1678              		.cfi_def_cfa_offset 0
 1679 0010 7047     		bx	lr
 1680              	.L128:
 1681 0012 00BF     		.align	2
 1682              	.L127:
 1683 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1684              		.cfi_endproc
 1685              	.LFE30:
 1686              		.size	RTC_ReadAlarmHour, .-RTC_ReadAlarmHour
 1687              		.section	.text.RTC_ReadAlarmDayOfMonth,"ax",%progbits
 1688              		.align	2
 1689              		.global	RTC_ReadAlarmDayOfMonth
 1690              		.thumb
 1691              		.thumb_func
 1692              		.type	RTC_ReadAlarmDayOfMonth, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 53


 1693              	RTC_ReadAlarmDayOfMonth:
 1694              	.LFB31:
1265:Generated_Source\PSoC5/RTC.c **** 
1266:Generated_Source\PSoC5/RTC.c **** 
1267:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1268:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmDayOfMonth
1269:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1270:Generated_Source\PSoC5/RTC.c **** *
1271:Generated_Source\PSoC5/RTC.c **** * Summary:
1272:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm DayOfMonth software register value.
1273:Generated_Source\PSoC5/RTC.c **** *
1274:Generated_Source\PSoC5/RTC.c **** * Parameters:
1275:Generated_Source\PSoC5/RTC.c **** *  None.
1276:Generated_Source\PSoC5/RTC.c **** *
1277:Generated_Source\PSoC5/RTC.c **** * Return:
1278:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the day of month.
1279:Generated_Source\PSoC5/RTC.c **** *
1280:Generated_Source\PSoC5/RTC.c **** * Global variables:
1281:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfMonth: the current day of month alarm
1282:Generated_Source\PSoC5/RTC.c **** *  value is used.
1283:Generated_Source\PSoC5/RTC.c **** *
1284:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1285:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmDayOfMonth(void) 
1286:Generated_Source\PSoC5/RTC.c **** {
 1695              		.loc 1 1286 0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 0
 1698              		@ frame_needed = 1, uses_anonymous_args = 0
 1699              		@ link register save eliminated.
 1700 0000 80B4     		push	{r7}
 1701              		.cfi_def_cfa_offset 4
 1702              		.cfi_offset 7, -4
 1703 0002 00AF     		add	r7, sp, #0
 1704              		.cfi_def_cfa_register 7
1287:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm day of month */
1288:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.DayOfMonth);
 1705              		.loc 1 1288 0
 1706 0004 034B     		ldr	r3, .L131
 1707 0006 1B79     		ldrb	r3, [r3, #4]
 1708 0008 DBB2     		uxtb	r3, r3
1289:Generated_Source\PSoC5/RTC.c **** }
 1709              		.loc 1 1289 0
 1710 000a 1846     		mov	r0, r3
 1711 000c BD46     		mov	sp, r7
 1712              		.cfi_def_cfa_register 13
 1713              		@ sp needed
 1714 000e 80BC     		pop	{r7}
 1715              		.cfi_restore 7
 1716              		.cfi_def_cfa_offset 0
 1717 0010 7047     		bx	lr
 1718              	.L132:
 1719 0012 00BF     		.align	2
 1720              	.L131:
 1721 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1722              		.cfi_endproc
 1723              	.LFE31:
 1724              		.size	RTC_ReadAlarmDayOfMonth, .-RTC_ReadAlarmDayOfMonth
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 54


 1725              		.section	.text.RTC_ReadAlarmMonth,"ax",%progbits
 1726              		.align	2
 1727              		.global	RTC_ReadAlarmMonth
 1728              		.thumb
 1729              		.thumb_func
 1730              		.type	RTC_ReadAlarmMonth, %function
 1731              	RTC_ReadAlarmMonth:
 1732              	.LFB32:
1290:Generated_Source\PSoC5/RTC.c **** 
1291:Generated_Source\PSoC5/RTC.c **** 
1292:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1293:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmMonth
1294:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1295:Generated_Source\PSoC5/RTC.c **** *
1296:Generated_Source\PSoC5/RTC.c **** * Summary:
1297:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Month software register value.
1298:Generated_Source\PSoC5/RTC.c **** *
1299:Generated_Source\PSoC5/RTC.c **** * Parameters:
1300:Generated_Source\PSoC5/RTC.c **** *  None.
1301:Generated_Source\PSoC5/RTC.c **** *
1302:Generated_Source\PSoC5/RTC.c **** * Return:
1303:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the month.
1304:Generated_Source\PSoC5/RTC.c **** *
1305:Generated_Source\PSoC5/RTC.c **** * Global variables:
1306:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Month: the current month alarm value is
1307:Generated_Source\PSoC5/RTC.c **** *  used.
1308:Generated_Source\PSoC5/RTC.c **** *
1309:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1310:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmMonth(void) 
1311:Generated_Source\PSoC5/RTC.c **** {
 1733              		.loc 1 1311 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 0
 1736              		@ frame_needed = 1, uses_anonymous_args = 0
 1737              		@ link register save eliminated.
 1738 0000 80B4     		push	{r7}
 1739              		.cfi_def_cfa_offset 4
 1740              		.cfi_offset 7, -4
 1741 0002 00AF     		add	r7, sp, #0
 1742              		.cfi_def_cfa_register 7
1312:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm month */
1313:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Month);
 1743              		.loc 1 1313 0
 1744 0004 034B     		ldr	r3, .L135
 1745 0006 1B7A     		ldrb	r3, [r3, #8]
 1746 0008 DBB2     		uxtb	r3, r3
1314:Generated_Source\PSoC5/RTC.c **** }
 1747              		.loc 1 1314 0
 1748 000a 1846     		mov	r0, r3
 1749 000c BD46     		mov	sp, r7
 1750              		.cfi_def_cfa_register 13
 1751              		@ sp needed
 1752 000e 80BC     		pop	{r7}
 1753              		.cfi_restore 7
 1754              		.cfi_def_cfa_offset 0
 1755 0010 7047     		bx	lr
 1756              	.L136:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 55


 1757 0012 00BF     		.align	2
 1758              	.L135:
 1759 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1760              		.cfi_endproc
 1761              	.LFE32:
 1762              		.size	RTC_ReadAlarmMonth, .-RTC_ReadAlarmMonth
 1763              		.section	.text.RTC_ReadAlarmYear,"ax",%progbits
 1764              		.align	2
 1765              		.global	RTC_ReadAlarmYear
 1766              		.thumb
 1767              		.thumb_func
 1768              		.type	RTC_ReadAlarmYear, %function
 1769              	RTC_ReadAlarmYear:
 1770              	.LFB33:
1315:Generated_Source\PSoC5/RTC.c **** 
1316:Generated_Source\PSoC5/RTC.c **** 
1317:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1318:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmYear
1319:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1320:Generated_Source\PSoC5/RTC.c **** *
1321:Generated_Source\PSoC5/RTC.c **** * Summary:
1322:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Year software register value.
1323:Generated_Source\PSoC5/RTC.c **** *
1324:Generated_Source\PSoC5/RTC.c **** * Parameters:
1325:Generated_Source\PSoC5/RTC.c **** *  None.
1326:Generated_Source\PSoC5/RTC.c **** *
1327:Generated_Source\PSoC5/RTC.c **** * Return:
1328:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the years.
1329:Generated_Source\PSoC5/RTC.c **** *
1330:Generated_Source\PSoC5/RTC.c **** * Global variables:
1331:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Year: the current year alarm value is used.
1332:Generated_Source\PSoC5/RTC.c **** *
1333:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1334:Generated_Source\PSoC5/RTC.c **** uint16 RTC_ReadAlarmYear(void) 
1335:Generated_Source\PSoC5/RTC.c **** {
 1771              		.loc 1 1335 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 1, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 1776 0000 80B4     		push	{r7}
 1777              		.cfi_def_cfa_offset 4
 1778              		.cfi_offset 7, -4
 1779 0002 00AF     		add	r7, sp, #0
 1780              		.cfi_def_cfa_register 7
1336:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm year */
1337:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Year);
 1781              		.loc 1 1337 0
 1782 0004 034B     		ldr	r3, .L139
 1783 0006 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1784 0008 9BB2     		uxth	r3, r3
1338:Generated_Source\PSoC5/RTC.c **** }
 1785              		.loc 1 1338 0
 1786 000a 1846     		mov	r0, r3
 1787 000c BD46     		mov	sp, r7
 1788              		.cfi_def_cfa_register 13
 1789              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 56


 1790 000e 80BC     		pop	{r7}
 1791              		.cfi_restore 7
 1792              		.cfi_def_cfa_offset 0
 1793 0010 7047     		bx	lr
 1794              	.L140:
 1795 0012 00BF     		.align	2
 1796              	.L139:
 1797 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1798              		.cfi_endproc
 1799              	.LFE33:
 1800              		.size	RTC_ReadAlarmYear, .-RTC_ReadAlarmYear
 1801              		.section	.text.RTC_ReadAlarmDayOfWeek,"ax",%progbits
 1802              		.align	2
 1803              		.global	RTC_ReadAlarmDayOfWeek
 1804              		.thumb
 1805              		.thumb_func
 1806              		.type	RTC_ReadAlarmDayOfWeek, %function
 1807              	RTC_ReadAlarmDayOfWeek:
 1808              	.LFB34:
1339:Generated_Source\PSoC5/RTC.c **** 
1340:Generated_Source\PSoC5/RTC.c **** 
1341:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1342:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmDayOfWeek
1343:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1344:Generated_Source\PSoC5/RTC.c **** *
1345:Generated_Source\PSoC5/RTC.c **** * Summary:
1346:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm DayOfWeek software register value.
1347:Generated_Source\PSoC5/RTC.c **** *
1348:Generated_Source\PSoC5/RTC.c **** * Parameters:
1349:Generated_Source\PSoC5/RTC.c **** *  None.
1350:Generated_Source\PSoC5/RTC.c **** *
1351:Generated_Source\PSoC5/RTC.c **** * Return:
1352:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the day of week.
1353:Generated_Source\PSoC5/RTC.c **** *
1354:Generated_Source\PSoC5/RTC.c **** * Global variables:
1355:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfWeek: the current day of week alarm
1356:Generated_Source\PSoC5/RTC.c **** *  value is used.
1357:Generated_Source\PSoC5/RTC.c **** *
1358:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1359:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmDayOfWeek(void) 
1360:Generated_Source\PSoC5/RTC.c **** {
 1809              		.loc 1 1360 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 1, uses_anonymous_args = 0
 1813              		@ link register save eliminated.
 1814 0000 80B4     		push	{r7}
 1815              		.cfi_def_cfa_offset 4
 1816              		.cfi_offset 7, -4
 1817 0002 00AF     		add	r7, sp, #0
 1818              		.cfi_def_cfa_register 7
1361:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm day of the week */
1362:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.DayOfWeek);
 1819              		.loc 1 1362 0
 1820 0004 034B     		ldr	r3, .L143
 1821 0006 DB78     		ldrb	r3, [r3, #3]
 1822 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 57


1363:Generated_Source\PSoC5/RTC.c **** }
 1823              		.loc 1 1363 0
 1824 000a 1846     		mov	r0, r3
 1825 000c BD46     		mov	sp, r7
 1826              		.cfi_def_cfa_register 13
 1827              		@ sp needed
 1828 000e 80BC     		pop	{r7}
 1829              		.cfi_restore 7
 1830              		.cfi_def_cfa_offset 0
 1831 0010 7047     		bx	lr
 1832              	.L144:
 1833 0012 00BF     		.align	2
 1834              	.L143:
 1835 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1836              		.cfi_endproc
 1837              	.LFE34:
 1838              		.size	RTC_ReadAlarmDayOfWeek, .-RTC_ReadAlarmDayOfWeek
 1839              		.section	.text.RTC_ReadAlarmDayOfYear,"ax",%progbits
 1840              		.align	2
 1841              		.global	RTC_ReadAlarmDayOfYear
 1842              		.thumb
 1843              		.thumb_func
 1844              		.type	RTC_ReadAlarmDayOfYear, %function
 1845              	RTC_ReadAlarmDayOfYear:
 1846              	.LFB35:
1364:Generated_Source\PSoC5/RTC.c **** 
1365:Generated_Source\PSoC5/RTC.c **** 
1366:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1367:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmDayOfYear
1368:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1369:Generated_Source\PSoC5/RTC.c **** *
1370:Generated_Source\PSoC5/RTC.c **** * Summary:
1371:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm DayOfYear software register value.
1372:Generated_Source\PSoC5/RTC.c **** *
1373:Generated_Source\PSoC5/RTC.c **** * Parameters:
1374:Generated_Source\PSoC5/RTC.c **** *  None.
1375:Generated_Source\PSoC5/RTC.c **** *
1376:Generated_Source\PSoC5/RTC.c **** * Return:
1377:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the day of year.
1378:Generated_Source\PSoC5/RTC.c **** *
1379:Generated_Source\PSoC5/RTC.c **** * Global variables:
1380:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfYear: the current day of year alarm
1381:Generated_Source\PSoC5/RTC.c **** *  value is used.
1382:Generated_Source\PSoC5/RTC.c **** *
1383:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1384:Generated_Source\PSoC5/RTC.c **** uint16 RTC_ReadAlarmDayOfYear(void) 
1385:Generated_Source\PSoC5/RTC.c **** {
 1847              		.loc 1 1385 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 1, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
 1852 0000 80B4     		push	{r7}
 1853              		.cfi_def_cfa_offset 4
 1854              		.cfi_offset 7, -4
 1855 0002 00AF     		add	r7, sp, #0
 1856              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 58


1386:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm day of the year */
1387:Generated_Source\PSoC5/RTC.c ****     return  (RTC_alarmCfgTimeDate.DayOfYear);
 1857              		.loc 1 1387 0
 1858 0004 034B     		ldr	r3, .L147
 1859 0006 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1860 0008 9BB2     		uxth	r3, r3
1388:Generated_Source\PSoC5/RTC.c **** }
 1861              		.loc 1 1388 0
 1862 000a 1846     		mov	r0, r3
 1863 000c BD46     		mov	sp, r7
 1864              		.cfi_def_cfa_register 13
 1865              		@ sp needed
 1866 000e 80BC     		pop	{r7}
 1867              		.cfi_restore 7
 1868              		.cfi_def_cfa_offset 0
 1869 0010 7047     		bx	lr
 1870              	.L148:
 1871 0012 00BF     		.align	2
 1872              	.L147:
 1873 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1874              		.cfi_endproc
 1875              	.LFE35:
 1876              		.size	RTC_ReadAlarmDayOfYear, .-RTC_ReadAlarmDayOfYear
 1877              		.section	.text.RTC_WriteAlarmMask,"ax",%progbits
 1878              		.align	2
 1879              		.global	RTC_WriteAlarmMask
 1880              		.thumb
 1881              		.thumb_func
 1882              		.type	RTC_WriteAlarmMask, %function
 1883              	RTC_WriteAlarmMask:
 1884              	.LFB36:
1389:Generated_Source\PSoC5/RTC.c **** 
1390:Generated_Source\PSoC5/RTC.c **** 
1391:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1392:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmMask
1393:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1394:Generated_Source\PSoC5/RTC.c **** *
1395:Generated_Source\PSoC5/RTC.c **** * Summary:
1396:Generated_Source\PSoC5/RTC.c **** *  Writes the Alarm Mask software register with 1 bit per time/date entry. Alarm
1397:Generated_Source\PSoC5/RTC.c **** *  true when all masked time/date values match Alarm values.
1398:Generated_Source\PSoC5/RTC.c **** *
1399:Generated_Source\PSoC5/RTC.c **** * Parameters:
1400:Generated_Source\PSoC5/RTC.c **** *  mask: Alarm Mask software register value.
1401:Generated_Source\PSoC5/RTC.c **** *
1402:Generated_Source\PSoC5/RTC.c **** * Return:
1403:Generated_Source\PSoC5/RTC.c **** *  None.
1404:Generated_Source\PSoC5/RTC.c **** *
1405:Generated_Source\PSoC5/RTC.c **** * Global variables:
1406:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgMask: global variable which stores masks for
1407:Generated_Source\PSoC5/RTC.c **** *  time/date alarm configuration is modified.
1408:Generated_Source\PSoC5/RTC.c **** *
1409:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1410:Generated_Source\PSoC5/RTC.c **** *  No.
1411:Generated_Source\PSoC5/RTC.c **** *
1412:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1413:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmMask(uint8 mask) 
1414:Generated_Source\PSoC5/RTC.c **** {
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 59


 1885              		.loc 1 1414 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 8
 1888              		@ frame_needed = 1, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
 1890 0000 80B4     		push	{r7}
 1891              		.cfi_def_cfa_offset 4
 1892              		.cfi_offset 7, -4
 1893 0002 83B0     		sub	sp, sp, #12
 1894              		.cfi_def_cfa_offset 16
 1895 0004 00AF     		add	r7, sp, #0
 1896              		.cfi_def_cfa_register 7
 1897 0006 0346     		mov	r3, r0
 1898 0008 FB71     		strb	r3, [r7, #7]
1415:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgMask = mask;
 1899              		.loc 1 1415 0
 1900 000a 044A     		ldr	r2, .L150
 1901 000c FB79     		ldrb	r3, [r7, #7]
 1902 000e 1370     		strb	r3, [r2]
1416:Generated_Source\PSoC5/RTC.c **** }
 1903              		.loc 1 1416 0
 1904 0010 00BF     		nop
 1905 0012 0C37     		adds	r7, r7, #12
 1906              		.cfi_def_cfa_offset 4
 1907 0014 BD46     		mov	sp, r7
 1908              		.cfi_def_cfa_register 13
 1909              		@ sp needed
 1910 0016 80BC     		pop	{r7}
 1911              		.cfi_restore 7
 1912              		.cfi_def_cfa_offset 0
 1913 0018 7047     		bx	lr
 1914              	.L151:
 1915 001a 00BF     		.align	2
 1916              	.L150:
 1917 001c 00000000 		.word	RTC_alarmCfgMask
 1918              		.cfi_endproc
 1919              	.LFE36:
 1920              		.size	RTC_WriteAlarmMask, .-RTC_WriteAlarmMask
 1921              		.section	.text.RTC_WriteIntervalMask,"ax",%progbits
 1922              		.align	2
 1923              		.global	RTC_WriteIntervalMask
 1924              		.thumb
 1925              		.thumb_func
 1926              		.type	RTC_WriteIntervalMask, %function
 1927              	RTC_WriteIntervalMask:
 1928              	.LFB37:
1417:Generated_Source\PSoC5/RTC.c **** 
1418:Generated_Source\PSoC5/RTC.c **** 
1419:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1420:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteIntervalMask
1421:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1422:Generated_Source\PSoC5/RTC.c **** *
1423:Generated_Source\PSoC5/RTC.c **** * Summary:
1424:Generated_Source\PSoC5/RTC.c **** *  Writes the Interval Mask software register with 1 bit per time/date entry.
1425:Generated_Source\PSoC5/RTC.c **** *  Interrupt true when any masked time/date overflow occur.
1426:Generated_Source\PSoC5/RTC.c **** *
1427:Generated_Source\PSoC5/RTC.c **** * Parameters:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 60


1428:Generated_Source\PSoC5/RTC.c **** *  mask: Alarm Mask software register value.
1429:Generated_Source\PSoC5/RTC.c **** *
1430:Generated_Source\PSoC5/RTC.c **** * Return:
1431:Generated_Source\PSoC5/RTC.c **** *  None.
1432:Generated_Source\PSoC5/RTC.c **** *
1433:Generated_Source\PSoC5/RTC.c **** * Global variables:
1434:Generated_Source\PSoC5/RTC.c **** *  RTC_intervalCfgMask: this global variable is modified - the new
1435:Generated_Source\PSoC5/RTC.c **** *  value of interval mask is stored here.
1436:Generated_Source\PSoC5/RTC.c **** *
1437:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1438:Generated_Source\PSoC5/RTC.c **** *  No.
1439:Generated_Source\PSoC5/RTC.c **** *
1440:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1441:Generated_Source\PSoC5/RTC.c **** void RTC_WriteIntervalMask(uint8 mask) 
1442:Generated_Source\PSoC5/RTC.c **** {
 1929              		.loc 1 1442 0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 8
 1932              		@ frame_needed = 1, uses_anonymous_args = 0
 1933              		@ link register save eliminated.
 1934 0000 80B4     		push	{r7}
 1935              		.cfi_def_cfa_offset 4
 1936              		.cfi_offset 7, -4
 1937 0002 83B0     		sub	sp, sp, #12
 1938              		.cfi_def_cfa_offset 16
 1939 0004 00AF     		add	r7, sp, #0
 1940              		.cfi_def_cfa_register 7
 1941 0006 0346     		mov	r3, r0
 1942 0008 FB71     		strb	r3, [r7, #7]
1443:Generated_Source\PSoC5/RTC.c ****     RTC_intervalCfgMask = mask;
 1943              		.loc 1 1443 0
 1944 000a 044A     		ldr	r2, .L153
 1945 000c FB79     		ldrb	r3, [r7, #7]
 1946 000e 1370     		strb	r3, [r2]
1444:Generated_Source\PSoC5/RTC.c **** }
 1947              		.loc 1 1444 0
 1948 0010 00BF     		nop
 1949 0012 0C37     		adds	r7, r7, #12
 1950              		.cfi_def_cfa_offset 4
 1951 0014 BD46     		mov	sp, r7
 1952              		.cfi_def_cfa_register 13
 1953              		@ sp needed
 1954 0016 80BC     		pop	{r7}
 1955              		.cfi_restore 7
 1956              		.cfi_def_cfa_offset 0
 1957 0018 7047     		bx	lr
 1958              	.L154:
 1959 001a 00BF     		.align	2
 1960              	.L153:
 1961 001c 00000000 		.word	RTC_intervalCfgMask
 1962              		.cfi_endproc
 1963              	.LFE37:
 1964              		.size	RTC_WriteIntervalMask, .-RTC_WriteIntervalMask
 1965              		.section	.text.RTC_ReadStatus,"ax",%progbits
 1966              		.align	2
 1967              		.global	RTC_ReadStatus
 1968              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 61


 1969              		.thumb_func
 1970              		.type	RTC_ReadStatus, %function
 1971              	RTC_ReadStatus:
 1972              	.LFB38:
1445:Generated_Source\PSoC5/RTC.c **** 
1446:Generated_Source\PSoC5/RTC.c **** 
1447:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1448:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadStatus
1449:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1450:Generated_Source\PSoC5/RTC.c **** *
1451:Generated_Source\PSoC5/RTC.c **** * Summary:
1452:Generated_Source\PSoC5/RTC.c **** *  Reads the Status software register which has flags for DST
1453:Generated_Source\PSoC5/RTC.c **** *  (DST), Leap Year (LY) and AM/PM (AM_PM), Alarm active (AA).
1454:Generated_Source\PSoC5/RTC.c **** *
1455:Generated_Source\PSoC5/RTC.c **** * Parameters:
1456:Generated_Source\PSoC5/RTC.c **** *  None.
1457:Generated_Source\PSoC5/RTC.c **** *
1458:Generated_Source\PSoC5/RTC.c **** * Return:
1459:Generated_Source\PSoC5/RTC.c **** *  None.
1460:Generated_Source\PSoC5/RTC.c **** *
1461:Generated_Source\PSoC5/RTC.c **** * Global variables:
1462:Generated_Source\PSoC5/RTC.c **** *  RTC_statusDateTime: global variable is modified - active alarm
1463:Generated_Source\PSoC5/RTC.c **** *  status bit is cleared.
1464:Generated_Source\PSoC5/RTC.c **** *
1465:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1466:Generated_Source\PSoC5/RTC.c **** *  No.
1467:Generated_Source\PSoC5/RTC.c **** *
1468:Generated_Source\PSoC5/RTC.c **** * Side Effects:
1469:Generated_Source\PSoC5/RTC.c **** *  Alarm active(AA) flag clear after read.
1470:Generated_Source\PSoC5/RTC.c **** *
1471:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1472:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadStatus(void) 
1473:Generated_Source\PSoC5/RTC.c **** {
 1973              		.loc 1 1473 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 8
 1976              		@ frame_needed = 1, uses_anonymous_args = 0
 1977              		@ link register save eliminated.
 1978 0000 80B4     		push	{r7}
 1979              		.cfi_def_cfa_offset 4
 1980              		.cfi_offset 7, -4
 1981 0002 83B0     		sub	sp, sp, #12
 1982              		.cfi_def_cfa_offset 16
 1983 0004 00AF     		add	r7, sp, #0
 1984              		.cfi_def_cfa_register 7
1474:Generated_Source\PSoC5/RTC.c ****     uint8 status;
1475:Generated_Source\PSoC5/RTC.c **** 
1476:Generated_Source\PSoC5/RTC.c ****     /* Save status */
1477:Generated_Source\PSoC5/RTC.c ****     status = (uint8)RTC_statusDateTime;
 1985              		.loc 1 1477 0
 1986 0006 084B     		ldr	r3, .L157
 1987 0008 1B78     		ldrb	r3, [r3]
 1988 000a FB71     		strb	r3, [r7, #7]
1478:Generated_Source\PSoC5/RTC.c **** 
1479:Generated_Source\PSoC5/RTC.c ****     /* Clean AA flag after read of Status Register */
1480:Generated_Source\PSoC5/RTC.c ****     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AA);
 1989              		.loc 1 1480 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 62


 1990 000c 064B     		ldr	r3, .L157
 1991 000e 1B78     		ldrb	r3, [r3]
 1992 0010 DBB2     		uxtb	r3, r3
 1993 0012 23F00803 		bic	r3, r3, #8
 1994 0016 DAB2     		uxtb	r2, r3
 1995 0018 034B     		ldr	r3, .L157
 1996 001a 1A70     		strb	r2, [r3]
1481:Generated_Source\PSoC5/RTC.c **** 
1482:Generated_Source\PSoC5/RTC.c ****     return (status);
 1997              		.loc 1 1482 0
 1998 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1483:Generated_Source\PSoC5/RTC.c **** }
 1999              		.loc 1 1483 0
 2000 001e 1846     		mov	r0, r3
 2001 0020 0C37     		adds	r7, r7, #12
 2002              		.cfi_def_cfa_offset 4
 2003 0022 BD46     		mov	sp, r7
 2004              		.cfi_def_cfa_register 13
 2005              		@ sp needed
 2006 0024 80BC     		pop	{r7}
 2007              		.cfi_restore 7
 2008              		.cfi_def_cfa_offset 0
 2009 0026 7047     		bx	lr
 2010              	.L158:
 2011              		.align	2
 2012              	.L157:
 2013 0028 00000000 		.word	RTC_statusDateTime
 2014              		.cfi_endproc
 2015              	.LFE38:
 2016              		.size	RTC_ReadStatus, .-RTC_ReadStatus
 2017              		.section	.text.RTC_DayOfWeek,"ax",%progbits
 2018              		.align	2
 2019              		.thumb
 2020              		.thumb_func
 2021              		.type	RTC_DayOfWeek, %function
 2022              	RTC_DayOfWeek:
 2023              	.LFB39:
1484:Generated_Source\PSoC5/RTC.c **** 
1485:Generated_Source\PSoC5/RTC.c **** 
1486:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1487:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_DayOfWeek
1488:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1489:Generated_Source\PSoC5/RTC.c **** *
1490:Generated_Source\PSoC5/RTC.c **** * Summary:
1491:Generated_Source\PSoC5/RTC.c **** *  Calculates Day Of Week value use Zeller's congruence.
1492:Generated_Source\PSoC5/RTC.c **** *
1493:Generated_Source\PSoC5/RTC.c **** * Parameters:
1494:Generated_Source\PSoC5/RTC.c **** *  dayOfMonth: Day Of Month value.
1495:Generated_Source\PSoC5/RTC.c **** *  month: Month value.
1496:Generated_Source\PSoC5/RTC.c **** *  year: Year value.
1497:Generated_Source\PSoC5/RTC.c **** *
1498:Generated_Source\PSoC5/RTC.c **** * Return:
1499:Generated_Source\PSoC5/RTC.c **** *  Day Of Week value.
1500:Generated_Source\PSoC5/RTC.c **** *
1501:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1502:Generated_Source\PSoC5/RTC.c **** static uint8 RTC_DayOfWeek(uint8 dayOfMonth, uint8 month, uint16 year)
1503:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 63


1504:Generated_Source\PSoC5/RTC.c **** {
 2024              		.loc 1 1504 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 8
 2027              		@ frame_needed = 1, uses_anonymous_args = 0
 2028              		@ link register save eliminated.
 2029 0000 90B4     		push	{r4, r7}
 2030              		.cfi_def_cfa_offset 8
 2031              		.cfi_offset 4, -8
 2032              		.cfi_offset 7, -4
 2033 0002 82B0     		sub	sp, sp, #8
 2034              		.cfi_def_cfa_offset 16
 2035 0004 00AF     		add	r7, sp, #0
 2036              		.cfi_def_cfa_register 7
 2037 0006 0346     		mov	r3, r0
 2038 0008 FB71     		strb	r3, [r7, #7]
 2039 000a 0B46     		mov	r3, r1
 2040 000c BB71     		strb	r3, [r7, #6]
 2041 000e 1346     		mov	r3, r2	@ movhi
 2042 0010 BB80     		strh	r3, [r7, #4]	@ movhi
1505:Generated_Source\PSoC5/RTC.c ****     /* Calculated sequence ((31 * month) / 12) mod 7 from the Zeller's congruence */
1506:Generated_Source\PSoC5/RTC.c ****     static const uint8 CYCODE RTC_monthTemplate[RTC_MONTHS_IN_YEAR] =
1507:Generated_Source\PSoC5/RTC.c ****                                                             {0u, 3u, 2u, 5u, 0u, 3u, 5u, 1u, 4u, 6u
1508:Generated_Source\PSoC5/RTC.c **** 
1509:Generated_Source\PSoC5/RTC.c ****     /* It is simpler to handle the modified year, which is year - 1 during
1510:Generated_Source\PSoC5/RTC.c ****     * January and February
1511:Generated_Source\PSoC5/RTC.c ****     */
1512:Generated_Source\PSoC5/RTC.c ****     if(month < RTC_MARCH)
 2043              		.loc 1 1512 0
 2044 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2045 0014 022B     		cmp	r3, #2
 2046 0016 02D8     		bhi	.L160
1513:Generated_Source\PSoC5/RTC.c ****     {
1514:Generated_Source\PSoC5/RTC.c ****         year = year - 1u;
 2047              		.loc 1 1514 0
 2048 0018 BB88     		ldrh	r3, [r7, #4]	@ movhi
 2049 001a 013B     		subs	r3, r3, #1
 2050 001c BB80     		strh	r3, [r7, #4]	@ movhi
 2051              	.L160:
1515:Generated_Source\PSoC5/RTC.c ****     }
1516:Generated_Source\PSoC5/RTC.c **** 
1517:Generated_Source\PSoC5/RTC.c ****     /* For Gregorian calendar: d = (day + y + y/4 - y/100 + y/400 + (31*m)/12) mod 7 */
1518:Generated_Source\PSoC5/RTC.c ****     return ((uint8)(((year + (((year/4u) - (year/100u)) + (year/400u))) +
 2052              		.loc 1 1518 0
 2053 001e BA88     		ldrh	r2, [r7, #4]
 2054 0020 BB88     		ldrh	r3, [r7, #4]
 2055 0022 9B08     		lsrs	r3, r3, #2
 2056 0024 9BB2     		uxth	r3, r3
 2057 0026 1846     		mov	r0, r3
 2058 0028 BB88     		ldrh	r3, [r7, #4]
 2059 002a 1349     		ldr	r1, .L162
 2060 002c A1FB0313 		umull	r1, r3, r1, r3
 2061 0030 5B09     		lsrs	r3, r3, #5
 2062 0032 9BB2     		uxth	r3, r3
 2063 0034 C31A     		subs	r3, r0, r3
 2064 0036 B988     		ldrh	r1, [r7, #4]
 2065 0038 0F48     		ldr	r0, .L162
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 64


 2066 003a A0FB0101 		umull	r0, r1, r0, r1
 2067 003e C909     		lsrs	r1, r1, #7
 2068 0040 89B2     		uxth	r1, r1
 2069 0042 0B44     		add	r3, r3, r1
 2070 0044 1344     		add	r3, r3, r2
1519:Generated_Source\PSoC5/RTC.c ****     (((uint16)RTC_monthTemplate[month - 1u]) + ((uint16) dayOfMonth))) % RTC_DAYS_IN_WEEK));
 2071              		.loc 1 1519 0
 2072 0046 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2073 0048 013A     		subs	r2, r2, #1
 2074 004a 0C49     		ldr	r1, .L162+4
 2075 004c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2076 004e 1146     		mov	r1, r2
 2077 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2078 0052 0A44     		add	r2, r2, r1
1518:Generated_Source\PSoC5/RTC.c ****     (((uint16)RTC_monthTemplate[month - 1u]) + ((uint16) dayOfMonth))) % RTC_DAYS_IN_WEEK));
 2079              		.loc 1 1518 0
 2080 0054 1A44     		add	r2, r2, r3
 2081              		.loc 1 1519 0
 2082 0056 0A4B     		ldr	r3, .L162+8
 2083 0058 A2FB0334 		umull	r3, r4, r2, r3
 2084 005c 111B     		subs	r1, r2, r4
 2085 005e 4908     		lsrs	r1, r1, #1
 2086 0060 0B19     		adds	r3, r1, r4
 2087 0062 9908     		lsrs	r1, r3, #2
 2088 0064 0B46     		mov	r3, r1
 2089 0066 DB00     		lsls	r3, r3, #3
 2090 0068 5B1A     		subs	r3, r3, r1
 2091 006a D11A     		subs	r1, r2, r3
1518:Generated_Source\PSoC5/RTC.c ****     (((uint16)RTC_monthTemplate[month - 1u]) + ((uint16) dayOfMonth))) % RTC_DAYS_IN_WEEK));
 2092              		.loc 1 1518 0
 2093 006c CBB2     		uxtb	r3, r1
1520:Generated_Source\PSoC5/RTC.c **** }
 2094              		.loc 1 1520 0
 2095 006e 1846     		mov	r0, r3
 2096 0070 0837     		adds	r7, r7, #8
 2097              		.cfi_def_cfa_offset 8
 2098 0072 BD46     		mov	sp, r7
 2099              		.cfi_def_cfa_register 13
 2100              		@ sp needed
 2101 0074 90BC     		pop	{r4, r7}
 2102              		.cfi_restore 7
 2103              		.cfi_restore 4
 2104              		.cfi_def_cfa_offset 0
 2105 0076 7047     		bx	lr
 2106              	.L163:
 2107              		.align	2
 2108              	.L162:
 2109 0078 1F85EB51 		.word	1374389535
 2110 007c 0C000000 		.word	RTC_monthTemplate.5164
 2111 0080 25499224 		.word	613566757
 2112              		.cfi_endproc
 2113              	.LFE39:
 2114              		.size	RTC_DayOfWeek, .-RTC_DayOfWeek
 2115              		.section	.text.RTC_SetInitValues,"ax",%progbits
 2116              		.align	2
 2117              		.thumb
 2118              		.thumb_func
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 65


 2119              		.type	RTC_SetInitValues, %function
 2120              	RTC_SetInitValues:
 2121              	.LFB40:
1521:Generated_Source\PSoC5/RTC.c **** 
1522:Generated_Source\PSoC5/RTC.c **** 
1523:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1524:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_SetInitValues
1525:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1526:Generated_Source\PSoC5/RTC.c **** *
1527:Generated_Source\PSoC5/RTC.c **** * Summary:
1528:Generated_Source\PSoC5/RTC.c **** *    Does all initial calculation.
1529:Generated_Source\PSoC5/RTC.c **** *    - Set LP Year flag;
1530:Generated_Source\PSoC5/RTC.c **** *    - Set AM/PM flag;
1531:Generated_Source\PSoC5/RTC.c **** *    - DayOfWeek;
1532:Generated_Source\PSoC5/RTC.c **** *    - DayOfYear;
1533:Generated_Source\PSoC5/RTC.c **** *    - Set DST flag;
1534:Generated_Source\PSoC5/RTC.c **** *    - Convert relative to absolute date.
1535:Generated_Source\PSoC5/RTC.c **** *
1536:Generated_Source\PSoC5/RTC.c **** * Parameters:
1537:Generated_Source\PSoC5/RTC.c **** *  None.
1538:Generated_Source\PSoC5/RTC.c **** *
1539:Generated_Source\PSoC5/RTC.c **** * Return:
1540:Generated_Source\PSoC5/RTC.c **** *  None.
1541:Generated_Source\PSoC5/RTC.c **** *
1542:Generated_Source\PSoC5/RTC.c **** * Global variables:
1543:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate, RTC_dstTimeDateStart,
1544:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
1545:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
1546:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
1547:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus:
1548:Generated_Source\PSoC5/RTC.c **** *  global variables are used while the initial calculation.
1549:Generated_Source\PSoC5/RTC.c **** *
1550:Generated_Source\PSoC5/RTC.c **** * RTC_dstTimeDateStart, RTC_currentTimeDate,
1551:Generated_Source\PSoC5/RTC.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
1552:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
1553:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: global variables are modified with the
1554:Generated_Source\PSoC5/RTC.c **** *  initial calculated data.
1555:Generated_Source\PSoC5/RTC.c **** *
1556:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1557:Generated_Source\PSoC5/RTC.c **** *  No.
1558:Generated_Source\PSoC5/RTC.c **** *
1559:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1560:Generated_Source\PSoC5/RTC.c **** static void RTC_SetInitValues(void) 
1561:Generated_Source\PSoC5/RTC.c **** {
 2122              		.loc 1 1561 0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 8
 2125              		@ frame_needed = 1, uses_anonymous_args = 0
 2126 0000 80B5     		push	{r7, lr}
 2127              		.cfi_def_cfa_offset 8
 2128              		.cfi_offset 7, -8
 2129              		.cfi_offset 14, -4
 2130 0002 82B0     		sub	sp, sp, #8
 2131              		.cfi_def_cfa_offset 16
 2132 0004 00AF     		add	r7, sp, #0
 2133              		.cfi_def_cfa_register 7
1562:Generated_Source\PSoC5/RTC.c ****     uint8 i;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 66


1563:Generated_Source\PSoC5/RTC.c ****     uint8 RTC_alarmCfgMaskTemp;
1564:Generated_Source\PSoC5/RTC.c **** 
1565:Generated_Source\PSoC5/RTC.c ****     /* Clears day of month counter */
1566:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfYear = 0u;
 2134              		.loc 1 1566 0
 2135 0006 A04B     		ldr	r3, .L193
 2136 0008 0022     		movs	r2, #0
 2137 000a DA80     		strh	r2, [r3, #6]	@ movhi
1567:Generated_Source\PSoC5/RTC.c **** 
1568:Generated_Source\PSoC5/RTC.c ****     /* Increments day of year value with day in current month */
1569:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfYear += RTC_currentTimeDate.DayOfMonth;
 2138              		.loc 1 1569 0
 2139 000c 9E4B     		ldr	r3, .L193
 2140 000e 1B79     		ldrb	r3, [r3, #4]
 2141 0010 D9B2     		uxtb	r1, r3
 2142 0012 9D4B     		ldr	r3, .L193
 2143 0014 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2144 0016 9AB2     		uxth	r2, r3
 2145 0018 8BB2     		uxth	r3, r1
 2146 001a 1344     		add	r3, r3, r2
 2147 001c 9AB2     		uxth	r2, r3
 2148 001e 9A4B     		ldr	r3, .L193
 2149 0020 DA80     		strh	r2, [r3, #6]	@ movhi
1570:Generated_Source\PSoC5/RTC.c **** 
1571:Generated_Source\PSoC5/RTC.c ****     /* Check leap year */
1572:Generated_Source\PSoC5/RTC.c ****     if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 2150              		.loc 1 1572 0
 2151 0022 994B     		ldr	r3, .L193
 2152 0024 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2153 0026 9BB2     		uxth	r3, r3
 2154 0028 984A     		ldr	r2, .L193+4
 2155 002a A2FB0312 		umull	r1, r2, r2, r3
 2156 002e D209     		lsrs	r2, r2, #7
 2157 0030 4FF4C871 		mov	r1, #400
 2158 0034 01FB02F2 		mul	r2, r1, r2
 2159 0038 9B1A     		subs	r3, r3, r2
 2160 003a 9BB2     		uxth	r3, r3
 2161 003c 002B     		cmp	r3, #0
 2162 003e 15D0     		beq	.L165
 2163              		.loc 1 1572 0 is_stmt 0 discriminator 1
 2164 0040 914B     		ldr	r3, .L193
 2165 0042 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2166 0044 9BB2     		uxth	r3, r3
 2167 0046 03F00303 		and	r3, r3, #3
 2168 004a 9BB2     		uxth	r3, r3
 2169 004c 002B     		cmp	r3, #0
 2170 004e 16D1     		bne	.L166
 2171              		.loc 1 1572 0 discriminator 2
 2172 0050 8D4B     		ldr	r3, .L193
 2173 0052 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2174 0054 9BB2     		uxth	r3, r3
 2175 0056 8D4A     		ldr	r2, .L193+4
 2176 0058 A2FB0312 		umull	r1, r2, r2, r3
 2177 005c 5209     		lsrs	r2, r2, #5
 2178 005e 6421     		movs	r1, #100
 2179 0060 01FB02F2 		mul	r2, r1, r2
 2180 0064 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 67


 2181 0066 9BB2     		uxth	r3, r3
 2182 0068 002B     		cmp	r3, #0
 2183 006a 08D0     		beq	.L166
 2184              	.L165:
1573:Generated_Source\PSoC5/RTC.c ****     {
1574:Generated_Source\PSoC5/RTC.c ****         /* Set LP Year flag */
1575:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime |= RTC_STATUS_LY;
 2185              		.loc 1 1575 0 is_stmt 1
 2186 006c 884B     		ldr	r3, .L193+8
 2187 006e 1B78     		ldrb	r3, [r3]
 2188 0070 DBB2     		uxtb	r3, r3
 2189 0072 43F00203 		orr	r3, r3, #2
 2190 0076 DAB2     		uxtb	r2, r3
 2191 0078 854B     		ldr	r3, .L193+8
 2192 007a 1A70     		strb	r2, [r3]
 2193 007c 07E0     		b	.L167
 2194              	.L166:
1576:Generated_Source\PSoC5/RTC.c ****     }   /* leap year flag was set */
1577:Generated_Source\PSoC5/RTC.c ****     else
1578:Generated_Source\PSoC5/RTC.c ****     {
1579:Generated_Source\PSoC5/RTC.c ****         /* Clear LP Year flag */
1580:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 2195              		.loc 1 1580 0
 2196 007e 844B     		ldr	r3, .L193+8
 2197 0080 1B78     		ldrb	r3, [r3]
 2198 0082 DBB2     		uxtb	r3, r3
 2199 0084 23F00203 		bic	r3, r3, #2
 2200 0088 DAB2     		uxtb	r2, r3
 2201 008a 814B     		ldr	r3, .L193+8
 2202 008c 1A70     		strb	r2, [r3]
 2203              	.L167:
1581:Generated_Source\PSoC5/RTC.c ****     }   /* leap year flag was cleared */
1582:Generated_Source\PSoC5/RTC.c **** 
1583:Generated_Source\PSoC5/RTC.c ****     /* Day of Year */
1584:Generated_Source\PSoC5/RTC.c ****     for(i = 0u; i < (RTC_currentTimeDate.Month - 1u); i++)
 2204              		.loc 1 1584 0
 2205 008e 0023     		movs	r3, #0
 2206 0090 FB71     		strb	r3, [r7, #7]
 2207 0092 0DE0     		b	.L168
 2208              	.L169:
1585:Generated_Source\PSoC5/RTC.c ****     {
1586:Generated_Source\PSoC5/RTC.c ****         /* Increment on days in passed months */
1587:Generated_Source\PSoC5/RTC.c ****         RTC_currentTimeDate.DayOfYear += RTC_daysInMonths[i];
 2209              		.loc 1 1587 0 discriminator 3
 2210 0094 7C4B     		ldr	r3, .L193
 2211 0096 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2212 0098 9AB2     		uxth	r2, r3
 2213 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2214 009c 7D49     		ldr	r1, .L193+12
 2215 009e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2216 00a0 9BB2     		uxth	r3, r3
 2217 00a2 1344     		add	r3, r3, r2
 2218 00a4 9AB2     		uxth	r2, r3
 2219 00a6 784B     		ldr	r3, .L193
 2220 00a8 DA80     		strh	r2, [r3, #6]	@ movhi
1584:Generated_Source\PSoC5/RTC.c ****     {
 2221              		.loc 1 1584 0 discriminator 3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 68


 2222 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2223 00ac 0133     		adds	r3, r3, #1
 2224 00ae FB71     		strb	r3, [r7, #7]
 2225              	.L168:
1584:Generated_Source\PSoC5/RTC.c ****     {
 2226              		.loc 1 1584 0 is_stmt 0 discriminator 1
 2227 00b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2228 00b2 754B     		ldr	r3, .L193
 2229 00b4 1B7A     		ldrb	r3, [r3, #8]
 2230 00b6 DBB2     		uxtb	r3, r3
 2231 00b8 013B     		subs	r3, r3, #1
 2232 00ba 9A42     		cmp	r2, r3
 2233 00bc EAD3     		bcc	.L169
1588:Generated_Source\PSoC5/RTC.c ****     }   /* day of year is calculated */
1589:Generated_Source\PSoC5/RTC.c **** 
1590:Generated_Source\PSoC5/RTC.c ****     /* Leap year check */
1591:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_LY))
 2234              		.loc 1 1591 0 is_stmt 1
 2235 00be 744B     		ldr	r3, .L193+8
 2236 00c0 1B78     		ldrb	r3, [r3]
 2237 00c2 DBB2     		uxtb	r3, r3
 2238 00c4 03F00203 		and	r3, r3, #2
 2239 00c8 002B     		cmp	r3, #0
 2240 00ca 0BD0     		beq	.L170
1592:Generated_Source\PSoC5/RTC.c ****     {
1593:Generated_Source\PSoC5/RTC.c ****         /* Leap day check */
1594:Generated_Source\PSoC5/RTC.c ****         if(RTC_currentTimeDate.Month > RTC_FEBRUARY)
 2241              		.loc 1 1594 0
 2242 00cc 6E4B     		ldr	r3, .L193
 2243 00ce 1B7A     		ldrb	r3, [r3, #8]
 2244 00d0 DBB2     		uxtb	r3, r3
 2245 00d2 022B     		cmp	r3, #2
 2246 00d4 06D9     		bls	.L170
1595:Generated_Source\PSoC5/RTC.c ****         {
1596:Generated_Source\PSoC5/RTC.c ****             /* Add leap day */
1597:Generated_Source\PSoC5/RTC.c ****             RTC_currentTimeDate.DayOfYear++;
 2247              		.loc 1 1597 0
 2248 00d6 6C4B     		ldr	r3, .L193
 2249 00d8 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2250 00da 9BB2     		uxth	r3, r3
 2251 00dc 0133     		adds	r3, r3, #1
 2252 00de 9AB2     		uxth	r2, r3
 2253 00e0 694B     		ldr	r3, .L193
 2254 00e2 DA80     		strh	r2, [r3, #6]	@ movhi
 2255              	.L170:
1598:Generated_Source\PSoC5/RTC.c ****         }   /* Do nothing for non leap day */
1599:Generated_Source\PSoC5/RTC.c ****     }   /* Do nothing for not leap year */
1600:Generated_Source\PSoC5/RTC.c **** 
1601:Generated_Source\PSoC5/RTC.c ****     /* DayOfWeek */
1602:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfWeek = RTC_DayOfWeek(
 2256              		.loc 1 1602 0
 2257 00e4 684B     		ldr	r3, .L193
 2258 00e6 1B79     		ldrb	r3, [r3, #4]
 2259 00e8 D8B2     		uxtb	r0, r3
 2260 00ea 674B     		ldr	r3, .L193
 2261 00ec 1B7A     		ldrb	r3, [r3, #8]
 2262 00ee D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 69


 2263 00f0 654B     		ldr	r3, .L193
 2264 00f2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2265 00f4 9BB2     		uxth	r3, r3
 2266 00f6 1A46     		mov	r2, r3
 2267 00f8 FFF7FEFF 		bl	RTC_DayOfWeek
 2268 00fc 0346     		mov	r3, r0
 2269 00fe 0133     		adds	r3, r3, #1
 2270 0100 DAB2     		uxtb	r2, r3
 2271 0102 614B     		ldr	r3, .L193
 2272 0104 DA70     		strb	r2, [r3, #3]
1603:Generated_Source\PSoC5/RTC.c ****                                                                         RTC_currentTimeDate.DayOfMo
1604:Generated_Source\PSoC5/RTC.c ****                                                                         RTC_currentTimeDate.Month,
1605:Generated_Source\PSoC5/RTC.c ****                                                                         RTC_currentTimeDate.Year) +
1606:Generated_Source\PSoC5/RTC.c **** 
1607:Generated_Source\PSoC5/RTC.c ****     if(RTC_currentTimeDate.DayOfWeek > RTC_START_OF_WEEK)
 2273              		.loc 1 1607 0
 2274 0106 604B     		ldr	r3, .L193
 2275 0108 DB78     		ldrb	r3, [r3, #3]
 2276 010a DBB2     		uxtb	r3, r3
 2277 010c 002B     		cmp	r3, #0
 2278 010e 05D0     		beq	.L171
1608:Generated_Source\PSoC5/RTC.c ****     {
1609:Generated_Source\PSoC5/RTC.c ****         RTC_currentTimeDate.DayOfWeek -= RTC_START_OF_WEEK;
 2279              		.loc 1 1609 0
 2280 0110 5D4B     		ldr	r3, .L193
 2281 0112 DB78     		ldrb	r3, [r3, #3]
 2282 0114 DAB2     		uxtb	r2, r3
 2283 0116 5C4B     		ldr	r3, .L193
 2284 0118 DA70     		strb	r2, [r3, #3]
 2285 011a 06E0     		b	.L172
 2286              	.L171:
1610:Generated_Source\PSoC5/RTC.c ****     }
1611:Generated_Source\PSoC5/RTC.c ****     else
1612:Generated_Source\PSoC5/RTC.c ****     {
1613:Generated_Source\PSoC5/RTC.c ****         RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK -
1614:Generated_Source\PSoC5/RTC.c ****                                         (RTC_START_OF_WEEK - RTC_currentTimeDate.DayOfWeek);
 2287              		.loc 1 1614 0
 2288 011c 5A4B     		ldr	r3, .L193
 2289 011e DB78     		ldrb	r3, [r3, #3]
 2290 0120 DBB2     		uxtb	r3, r3
1613:Generated_Source\PSoC5/RTC.c ****                                         (RTC_START_OF_WEEK - RTC_currentTimeDate.DayOfWeek);
 2291              		.loc 1 1613 0
 2292 0122 0733     		adds	r3, r3, #7
 2293 0124 DAB2     		uxtb	r2, r3
 2294 0126 584B     		ldr	r3, .L193
 2295 0128 DA70     		strb	r2, [r3, #3]
 2296              	.L172:
1615:Generated_Source\PSoC5/RTC.c ****     }
1616:Generated_Source\PSoC5/RTC.c **** 
1617:Generated_Source\PSoC5/RTC.c ****     #if (1u == RTC_DST_FUNC_ENABLE)
1618:Generated_Source\PSoC5/RTC.c **** 
1619:Generated_Source\PSoC5/RTC.c ****         /* If DST values is given in a relative manner, converts to the absolute values */
1620:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_RELDATE))
1621:Generated_Source\PSoC5/RTC.c ****         {
1622:Generated_Source\PSoC5/RTC.c ****             RTC_DSTDateConversion();
1623:Generated_Source\PSoC5/RTC.c ****         }
1624:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 70


1625:Generated_Source\PSoC5/RTC.c ****         /* Sets DST status respect to the DST start date and time */
1626:Generated_Source\PSoC5/RTC.c ****         if(RTC_currentTimeDate.Month > RTC_dstTimeDateStart.Month)
1627:Generated_Source\PSoC5/RTC.c ****         {
1628:Generated_Source\PSoC5/RTC.c ****             RTC_statusDateTime |= RTC_STATUS_DST;
1629:Generated_Source\PSoC5/RTC.c ****         }
1630:Generated_Source\PSoC5/RTC.c ****         else if(RTC_currentTimeDate.Month == RTC_dstTimeDateStart.Month)
1631:Generated_Source\PSoC5/RTC.c ****         {
1632:Generated_Source\PSoC5/RTC.c ****             if(RTC_currentTimeDate.DayOfMonth > RTC_dstTimeDateStart.DayOfMonth)
1633:Generated_Source\PSoC5/RTC.c ****             {
1634:Generated_Source\PSoC5/RTC.c ****                 RTC_statusDateTime |= RTC_STATUS_DST;
1635:Generated_Source\PSoC5/RTC.c ****             }
1636:Generated_Source\PSoC5/RTC.c ****             else if(RTC_currentTimeDate.DayOfMonth == RTC_dstTimeDateStart.DayOfMonth)
1637:Generated_Source\PSoC5/RTC.c ****             {
1638:Generated_Source\PSoC5/RTC.c ****                 if(RTC_currentTimeDate.Hour > RTC_dstTimeDateStart.Hour)
1639:Generated_Source\PSoC5/RTC.c ****                 {
1640:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime |= RTC_STATUS_DST;
1641:Generated_Source\PSoC5/RTC.c ****                 }
1642:Generated_Source\PSoC5/RTC.c ****             }
1643:Generated_Source\PSoC5/RTC.c ****             else
1644:Generated_Source\PSoC5/RTC.c ****             {
1645:Generated_Source\PSoC5/RTC.c ****                 /* Do nothing if current day of month is less than DST stop day of month */
1646:Generated_Source\PSoC5/RTC.c ****             }
1647:Generated_Source\PSoC5/RTC.c ****         }
1648:Generated_Source\PSoC5/RTC.c ****         else
1649:Generated_Source\PSoC5/RTC.c ****         {
1650:Generated_Source\PSoC5/RTC.c ****             /* Do nothing if current month is before than DST stop month */
1651:Generated_Source\PSoC5/RTC.c ****         }
1652:Generated_Source\PSoC5/RTC.c **** 
1653:Generated_Source\PSoC5/RTC.c ****         /* Clears DST status respect to the DST start date and time */
1654:Generated_Source\PSoC5/RTC.c ****         if(RTC_currentTimeDate.Month > RTC_dstTimeDateStop.Month)
1655:Generated_Source\PSoC5/RTC.c ****         {
1656:Generated_Source\PSoC5/RTC.c ****             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
1657:Generated_Source\PSoC5/RTC.c ****         }
1658:Generated_Source\PSoC5/RTC.c ****         else if(RTC_currentTimeDate.Month == RTC_dstTimeDateStop.Month)
1659:Generated_Source\PSoC5/RTC.c ****         {
1660:Generated_Source\PSoC5/RTC.c ****             if(RTC_currentTimeDate.DayOfMonth > RTC_dstTimeDateStop.DayOfMonth)
1661:Generated_Source\PSoC5/RTC.c ****             {
1662:Generated_Source\PSoC5/RTC.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
1663:Generated_Source\PSoC5/RTC.c ****             }
1664:Generated_Source\PSoC5/RTC.c ****             else if(RTC_currentTimeDate.DayOfMonth == RTC_dstTimeDateStop.DayOfMonth)
1665:Generated_Source\PSoC5/RTC.c ****             {
1666:Generated_Source\PSoC5/RTC.c ****                 if(RTC_currentTimeDate.Hour > RTC_dstTimeDateStop.Hour)
1667:Generated_Source\PSoC5/RTC.c ****                 {
1668:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
1669:Generated_Source\PSoC5/RTC.c ****                 }
1670:Generated_Source\PSoC5/RTC.c ****             }
1671:Generated_Source\PSoC5/RTC.c ****             else
1672:Generated_Source\PSoC5/RTC.c ****             {
1673:Generated_Source\PSoC5/RTC.c ****                 /* Do nothing if current day of month is less than DST stop day of month */
1674:Generated_Source\PSoC5/RTC.c ****             }
1675:Generated_Source\PSoC5/RTC.c ****         }
1676:Generated_Source\PSoC5/RTC.c ****         else
1677:Generated_Source\PSoC5/RTC.c ****         {
1678:Generated_Source\PSoC5/RTC.c ****             /* Do nothing if current month is before than DST stop month */
1679:Generated_Source\PSoC5/RTC.c ****         }
1680:Generated_Source\PSoC5/RTC.c **** 
1681:Generated_Source\PSoC5/RTC.c ****         /* Clear DST start/stop statuses */
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 71


1682:Generated_Source\PSoC5/RTC.c ****         RTC_dstStartStatus = 0u;
1683:Generated_Source\PSoC5/RTC.c ****         RTC_dstStopStatus = 0u;
1684:Generated_Source\PSoC5/RTC.c **** 
1685:Generated_Source\PSoC5/RTC.c ****         /* Sets DST stop status month flag if DST stop month is equal to the
1686:Generated_Source\PSoC5/RTC.c ****         * current month, otherwise clears that flag.
1687:Generated_Source\PSoC5/RTC.c ****         */
1688:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
1689:Generated_Source\PSoC5/RTC.c ****         {
1690:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus |= RTC_DST_MONTH;
1691:Generated_Source\PSoC5/RTC.c ****         }
1692:Generated_Source\PSoC5/RTC.c ****         else
1693:Generated_Source\PSoC5/RTC.c ****         {
1694:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
1695:Generated_Source\PSoC5/RTC.c ****         }
1696:Generated_Source\PSoC5/RTC.c **** 
1697:Generated_Source\PSoC5/RTC.c ****         /* Sets DST start status month flag if DST start month is equal to the
1698:Generated_Source\PSoC5/RTC.c ****         * current month, otherwise clears that flag.
1699:Generated_Source\PSoC5/RTC.c ****         */
1700:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
1701:Generated_Source\PSoC5/RTC.c ****         {
1702:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus |= RTC_DST_MONTH;
1703:Generated_Source\PSoC5/RTC.c ****         }
1704:Generated_Source\PSoC5/RTC.c ****         else
1705:Generated_Source\PSoC5/RTC.c ****         {
1706:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
1707:Generated_Source\PSoC5/RTC.c ****         }
1708:Generated_Source\PSoC5/RTC.c **** 
1709:Generated_Source\PSoC5/RTC.c ****         /* Sets DST stop status day of month flag if DST stop day of month is
1710:Generated_Source\PSoC5/RTC.c ****         * equal to the current day of month, otherwise clears that flag.
1711:Generated_Source\PSoC5/RTC.c ****         */
1712:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
1713:Generated_Source\PSoC5/RTC.c ****         {
1714:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
1715:Generated_Source\PSoC5/RTC.c ****         }
1716:Generated_Source\PSoC5/RTC.c ****         else
1717:Generated_Source\PSoC5/RTC.c ****         {
1718:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
1719:Generated_Source\PSoC5/RTC.c ****         }
1720:Generated_Source\PSoC5/RTC.c **** 
1721:Generated_Source\PSoC5/RTC.c ****         /* Sets DST start status day of month flag if DST start day of month is
1722:Generated_Source\PSoC5/RTC.c ****         * equal to the current day of month, otherwise clears that flag.
1723:Generated_Source\PSoC5/RTC.c ****         */
1724:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
1725:Generated_Source\PSoC5/RTC.c ****         {
1726:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
1727:Generated_Source\PSoC5/RTC.c ****         }
1728:Generated_Source\PSoC5/RTC.c ****         else
1729:Generated_Source\PSoC5/RTC.c ****         {
1730:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
1731:Generated_Source\PSoC5/RTC.c ****         }
1732:Generated_Source\PSoC5/RTC.c **** 
1733:Generated_Source\PSoC5/RTC.c ****         /* Sets DST stop status hour flag if DST stop hour is equal to the
1734:Generated_Source\PSoC5/RTC.c ****         * current hour, otherwise clears that flag.
1735:Generated_Source\PSoC5/RTC.c ****         */
1736:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
1737:Generated_Source\PSoC5/RTC.c ****         {
1738:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus |= RTC_DST_HOUR;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 72


1739:Generated_Source\PSoC5/RTC.c ****         }
1740:Generated_Source\PSoC5/RTC.c ****         else
1741:Generated_Source\PSoC5/RTC.c ****         {
1742:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
1743:Generated_Source\PSoC5/RTC.c ****         }
1744:Generated_Source\PSoC5/RTC.c **** 
1745:Generated_Source\PSoC5/RTC.c ****         /* Sets DST start status hour flag if DST start hour is equal to the
1746:Generated_Source\PSoC5/RTC.c ****         * current hour, otherwise clears that flag.
1747:Generated_Source\PSoC5/RTC.c ****         */
1748:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
1749:Generated_Source\PSoC5/RTC.c ****         {
1750:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus |= RTC_DST_HOUR;
1751:Generated_Source\PSoC5/RTC.c ****         }
1752:Generated_Source\PSoC5/RTC.c ****         else
1753:Generated_Source\PSoC5/RTC.c ****         {
1754:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
1755:Generated_Source\PSoC5/RTC.c ****         }
1756:Generated_Source\PSoC5/RTC.c **** 
1757:Generated_Source\PSoC5/RTC.c ****         /* DST Enable ? */
1758:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
1759:Generated_Source\PSoC5/RTC.c ****         {
1760:Generated_Source\PSoC5/RTC.c ****             if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
1761:Generated_Source\PSoC5/RTC.c ****             {
1762:Generated_Source\PSoC5/RTC.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
1763:Generated_Source\PSoC5/RTC.c ****                         (RTC_DST_HOUR | RTC_DST_DAYOFMONTH | RTC_DST_MONTH)))
1764:Generated_Source\PSoC5/RTC.c ****                 {
1765:Generated_Source\PSoC5/RTC.c ****                     /* Subtract current minutes value with minutes value, what
1766:Generated_Source\PSoC5/RTC.c ****                     *  are out of full hour in DST offset.
1767:Generated_Source\PSoC5/RTC.c ****                     */
1768:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Min -= RTC_dstOffsetMin %
1769:Generated_Source\PSoC5/RTC.c ****                                                             (RTC_HOUR_ELAPSED + 1u);
1770:Generated_Source\PSoC5/RTC.c **** 
1771:Generated_Source\PSoC5/RTC.c ****                     /* If current minutes value is greater than number of
1772:Generated_Source\PSoC5/RTC.c ****                     * minutes in hour - could be only if hour's value is negative
1773:Generated_Source\PSoC5/RTC.c ****                     */
1774:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
1775:Generated_Source\PSoC5/RTC.c ****                     {
1776:Generated_Source\PSoC5/RTC.c ****                         /* Adjust current minutes value. Convert to the positive. */
1777:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
1778:Generated_Source\PSoC5/RTC.c ****                                                                ((uint8)(~RTC_currentTimeDate.Min));
1779:Generated_Source\PSoC5/RTC.c **** 
1780:Generated_Source\PSoC5/RTC.c ****                         /* Decrement current hours value. */
1781:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour--;
1782:Generated_Source\PSoC5/RTC.c ****                     }
1783:Generated_Source\PSoC5/RTC.c **** 
1784:Generated_Source\PSoC5/RTC.c ****                     /* Subtract current hours value with hours value, what
1785:Generated_Source\PSoC5/RTC.c ****                     *  are full part of hours in DST offset.
1786:Generated_Source\PSoC5/RTC.c ****                     */
1787:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
1788:Generated_Source\PSoC5/RTC.c ****                                                              (RTC_HOUR_ELAPSED + 1u);
1789:Generated_Source\PSoC5/RTC.c **** 
1790:Generated_Source\PSoC5/RTC.c ****                     /* Check if current hour's value is negative */
1791:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
1792:Generated_Source\PSoC5/RTC.c ****                     {
1793:Generated_Source\PSoC5/RTC.c ****                         /* Adjust hour */
1794:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
1795:Generated_Source\PSoC5/RTC.c ****                                                                 ((uint8)(~RTC_currentTimeDate.Hour)
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 73


1796:Generated_Source\PSoC5/RTC.c **** 
1797:Generated_Source\PSoC5/RTC.c ****                         /* Decrement day of month, year and week */
1798:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfMonth--;
1799:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfYear--;
1800:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfWeek--;
1801:Generated_Source\PSoC5/RTC.c **** 
1802:Generated_Source\PSoC5/RTC.c ****                         if(0u == RTC_currentTimeDate.DayOfWeek)
1803:Generated_Source\PSoC5/RTC.c ****                         {
1804:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
1805:Generated_Source\PSoC5/RTC.c ****                         }
1806:Generated_Source\PSoC5/RTC.c **** 
1807:Generated_Source\PSoC5/RTC.c ****                         if(0u == RTC_currentTimeDate.DayOfMonth)
1808:Generated_Source\PSoC5/RTC.c ****                         {
1809:Generated_Source\PSoC5/RTC.c ****                             /* Decrement months value */
1810:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.Month--;
1811:Generated_Source\PSoC5/RTC.c **** 
1812:Generated_Source\PSoC5/RTC.c ****                             /* The current month is month before 1st one. */
1813:Generated_Source\PSoC5/RTC.c ****                             if(0u == RTC_currentTimeDate.Month)
1814:Generated_Source\PSoC5/RTC.c ****                             {
1815:Generated_Source\PSoC5/RTC.c ****                                 /* December is the month before January */
1816:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Month = RTC_DECEMBER;
1817:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.DayOfMonth =
1818:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
1819:Generated_Source\PSoC5/RTC.c **** 
1820:Generated_Source\PSoC5/RTC.c ****                                 /* Decrement years value */
1821:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Year--;
1822:Generated_Source\PSoC5/RTC.c ****                                 if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
1823:Generated_Source\PSoC5/RTC.c ****                                 {
1824:Generated_Source\PSoC5/RTC.c ****                                     /* Set leap year status flag */
1825:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime |= RTC_STATUS_LY;
1826:Generated_Source\PSoC5/RTC.c ****                                     RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_LEAP_YEAR;
1827:Generated_Source\PSoC5/RTC.c ****                                 }
1828:Generated_Source\PSoC5/RTC.c ****                                 else
1829:Generated_Source\PSoC5/RTC.c ****                                 {
1830:Generated_Source\PSoC5/RTC.c ****                                     /* Clear leap year status flag */
1831:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
1832:Generated_Source\PSoC5/RTC.c ****                                     RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
1833:Generated_Source\PSoC5/RTC.c ****                                 }
1834:Generated_Source\PSoC5/RTC.c ****                             }   /* 0u == RTC_currentTimeDate.Month */
1835:Generated_Source\PSoC5/RTC.c ****                             else
1836:Generated_Source\PSoC5/RTC.c ****                             {
1837:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.DayOfMonth =
1838:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
1839:Generated_Source\PSoC5/RTC.c ****                             }   /* 0u != End of RTC_currentTimeDate.Month */
1840:Generated_Source\PSoC5/RTC.c ****                         }   /* 0u == End of RTC_currentTimeDate.DayOfMonth */
1841:Generated_Source\PSoC5/RTC.c ****                     }   /* End of RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED */
1842:Generated_Source\PSoC5/RTC.c **** 
1843:Generated_Source\PSoC5/RTC.c ****                     /* Clear DST status flag */
1844:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
1845:Generated_Source\PSoC5/RTC.c ****                     /* Clear DST stop status */
1846:Generated_Source\PSoC5/RTC.c ****                     RTC_dstStopStatus = 0u;
1847:Generated_Source\PSoC5/RTC.c ****                 }
1848:Generated_Source\PSoC5/RTC.c ****             }
1849:Generated_Source\PSoC5/RTC.c ****             else    /* Current time and date DO NOT match DST time and date */
1850:Generated_Source\PSoC5/RTC.c ****             {
1851:Generated_Source\PSoC5/RTC.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus, RTC_DST_HOUR |
1852:Generated_Source\PSoC5/RTC.c ****                                                      RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 74


1853:Generated_Source\PSoC5/RTC.c ****                 {
1854:Generated_Source\PSoC5/RTC.c ****                     /* Add Hour and Min */
1855:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Min +=
1856:Generated_Source\PSoC5/RTC.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
1857:Generated_Source\PSoC5/RTC.c **** 
1858:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
1859:Generated_Source\PSoC5/RTC.c ****                     {
1860:Generated_Source\PSoC5/RTC.c ****                         /* Adjust Min */
1861:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
1862:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour++;
1863:Generated_Source\PSoC5/RTC.c ****                     }
1864:Generated_Source\PSoC5/RTC.c **** 
1865:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Hour +=
1866:Generated_Source\PSoC5/RTC.c ****                                                 RTC_dstOffsetMin / (RTC_HOUR_ELAPSED + 1u);
1867:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
1868:Generated_Source\PSoC5/RTC.c ****                     {
1869:Generated_Source\PSoC5/RTC.c ****                         /* Adjust hour, add day */
1870:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
1871:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfMonth++;
1872:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfYear++;
1873:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfWeek++;
1874:Generated_Source\PSoC5/RTC.c **** 
1875:Generated_Source\PSoC5/RTC.c ****                         if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
1876:Generated_Source\PSoC5/RTC.c ****                         {
1877:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.DayOfWeek = 1u;
1878:Generated_Source\PSoC5/RTC.c ****                         }
1879:Generated_Source\PSoC5/RTC.c **** 
1880:Generated_Source\PSoC5/RTC.c ****                         if(RTC_currentTimeDate.DayOfMonth >
1881:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])
1882:Generated_Source\PSoC5/RTC.c ****                         {
1883:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.Month++;
1884:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.DayOfMonth = 1u;
1885:Generated_Source\PSoC5/RTC.c **** 
1886:Generated_Source\PSoC5/RTC.c ****                             /* Has new year come? */
1887:Generated_Source\PSoC5/RTC.c ****                             if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
1888:Generated_Source\PSoC5/RTC.c ****                             {
1889:Generated_Source\PSoC5/RTC.c ****                                 /* Set first month of the year */
1890:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Month = RTC_JANUARY;
1891:Generated_Source\PSoC5/RTC.c **** 
1892:Generated_Source\PSoC5/RTC.c ****                                 /* Increment year */
1893:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Year++;
1894:Generated_Source\PSoC5/RTC.c **** 
1895:Generated_Source\PSoC5/RTC.c ****                                 /* Update leap year status */
1896:Generated_Source\PSoC5/RTC.c ****                                 if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
1897:Generated_Source\PSoC5/RTC.c ****                                 {
1898:Generated_Source\PSoC5/RTC.c ****                                     /* LP - true, else - false */
1899:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime |= RTC_STATUS_LY;
1900:Generated_Source\PSoC5/RTC.c ****                                 }
1901:Generated_Source\PSoC5/RTC.c ****                                 else
1902:Generated_Source\PSoC5/RTC.c ****                                 {
1903:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
1904:Generated_Source\PSoC5/RTC.c ****                                 }
1905:Generated_Source\PSoC5/RTC.c **** 
1906:Generated_Source\PSoC5/RTC.c ****                                 /* Set day of year to the first one */
1907:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.DayOfYear = 1u;
1908:Generated_Source\PSoC5/RTC.c ****                             }
1909:Generated_Source\PSoC5/RTC.c ****                         }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 75


1910:Generated_Source\PSoC5/RTC.c ****                     }
1911:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime |= RTC_STATUS_DST;
1912:Generated_Source\PSoC5/RTC.c ****                     RTC_dstStartStatus = 0u;
1913:Generated_Source\PSoC5/RTC.c ****                 }
1914:Generated_Source\PSoC5/RTC.c ****             }
1915:Generated_Source\PSoC5/RTC.c ****         }
1916:Generated_Source\PSoC5/RTC.c ****     #endif /* 1u == RTC_DST_FUNC_ENABLE */
1917:Generated_Source\PSoC5/RTC.c **** 
1918:Generated_Source\PSoC5/RTC.c ****     /* Set AM/PM flag */
1919:Generated_Source\PSoC5/RTC.c ****     if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 2297              		.loc 1 1919 0
 2298 012a 574B     		ldr	r3, .L193
 2299 012c 9B78     		ldrb	r3, [r3, #2]
 2300 012e DBB2     		uxtb	r3, r3
 2301 0130 0B2B     		cmp	r3, #11
 2302 0132 08D8     		bhi	.L173
1920:Generated_Source\PSoC5/RTC.c ****     {
1921:Generated_Source\PSoC5/RTC.c ****         /* AM Hour 00:00-11:59, flag zero */
1922:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 2303              		.loc 1 1922 0
 2304 0134 564B     		ldr	r3, .L193+8
 2305 0136 1B78     		ldrb	r3, [r3]
 2306 0138 DBB2     		uxtb	r3, r3
 2307 013a 23F00403 		bic	r3, r3, #4
 2308 013e DAB2     		uxtb	r2, r3
 2309 0140 534B     		ldr	r3, .L193+8
 2310 0142 1A70     		strb	r2, [r3]
 2311 0144 07E0     		b	.L174
 2312              	.L173:
1923:Generated_Source\PSoC5/RTC.c ****     }
1924:Generated_Source\PSoC5/RTC.c ****     else
1925:Generated_Source\PSoC5/RTC.c ****     {
1926:Generated_Source\PSoC5/RTC.c ****         /* PM Hour 12:00 - 23:59, flag set */
1927:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime |= RTC_STATUS_AM_PM;
 2313              		.loc 1 1927 0
 2314 0146 524B     		ldr	r3, .L193+8
 2315 0148 1B78     		ldrb	r3, [r3]
 2316 014a DBB2     		uxtb	r3, r3
 2317 014c 43F00403 		orr	r3, r3, #4
 2318 0150 DAB2     		uxtb	r2, r3
 2319 0152 4F4B     		ldr	r3, .L193+8
 2320 0154 1A70     		strb	r2, [r3]
 2321              	.L174:
1928:Generated_Source\PSoC5/RTC.c ****     }
1929:Generated_Source\PSoC5/RTC.c **** 
1930:Generated_Source\PSoC5/RTC.c ****     /* Alarm calculation */
1931:Generated_Source\PSoC5/RTC.c **** 
1932:Generated_Source\PSoC5/RTC.c ****     /* Alarm SEC */
1933:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 2322              		.loc 1 1933 0
 2323 0156 504B     		ldr	r3, .L193+16
 2324 0158 1B78     		ldrb	r3, [r3]
 2325 015a DBB2     		uxtb	r3, r3
 2326 015c 03F00103 		and	r3, r3, #1
 2327 0160 002B     		cmp	r3, #0
 2328 0162 18D0     		beq	.L175
1934:Generated_Source\PSoC5/RTC.c ****     {
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 76


1935:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 2329              		.loc 1 1935 0
 2330 0164 4D4B     		ldr	r3, .L193+20
 2331 0166 1B78     		ldrb	r3, [r3]
 2332 0168 DAB2     		uxtb	r2, r3
 2333 016a 474B     		ldr	r3, .L193
 2334 016c 1B78     		ldrb	r3, [r3]
 2335 016e DBB2     		uxtb	r3, r3
 2336 0170 9A42     		cmp	r2, r3
 2337 0172 08D1     		bne	.L176
1936:Generated_Source\PSoC5/RTC.c ****         {
1937:Generated_Source\PSoC5/RTC.c ****             /* Set second alarm */
1938:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 2338              		.loc 1 1938 0
 2339 0174 4A4B     		ldr	r3, .L193+24
 2340 0176 1B78     		ldrb	r3, [r3]
 2341 0178 DBB2     		uxtb	r3, r3
 2342 017a 43F00103 		orr	r3, r3, #1
 2343 017e DAB2     		uxtb	r2, r3
 2344 0180 474B     		ldr	r3, .L193+24
 2345 0182 1A70     		strb	r2, [r3]
 2346 0184 07E0     		b	.L175
 2347              	.L176:
1939:Generated_Source\PSoC5/RTC.c ****         }
1940:Generated_Source\PSoC5/RTC.c ****         else
1941:Generated_Source\PSoC5/RTC.c ****         {
1942:Generated_Source\PSoC5/RTC.c ****             /* Clear second alarm */
1943:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 2348              		.loc 1 1943 0
 2349 0186 464B     		ldr	r3, .L193+24
 2350 0188 1B78     		ldrb	r3, [r3]
 2351 018a DBB2     		uxtb	r3, r3
 2352 018c 23F00103 		bic	r3, r3, #1
 2353 0190 DAB2     		uxtb	r2, r3
 2354 0192 434B     		ldr	r3, .L193+24
 2355 0194 1A70     		strb	r2, [r3]
 2356              	.L175:
1944:Generated_Source\PSoC5/RTC.c ****         }
1945:Generated_Source\PSoC5/RTC.c ****     }
1946:Generated_Source\PSoC5/RTC.c **** 
1947:Generated_Source\PSoC5/RTC.c ****     /* Alarm MIN */
1948:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 2357              		.loc 1 1948 0
 2358 0196 404B     		ldr	r3, .L193+16
 2359 0198 1B78     		ldrb	r3, [r3]
 2360 019a DBB2     		uxtb	r3, r3
 2361 019c 03F00203 		and	r3, r3, #2
 2362 01a0 002B     		cmp	r3, #0
 2363 01a2 18D0     		beq	.L177
1949:Generated_Source\PSoC5/RTC.c ****     {
1950:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 2364              		.loc 1 1950 0
 2365 01a4 3D4B     		ldr	r3, .L193+20
 2366 01a6 5B78     		ldrb	r3, [r3, #1]
 2367 01a8 DAB2     		uxtb	r2, r3
 2368 01aa 374B     		ldr	r3, .L193
 2369 01ac 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 77


 2370 01ae DBB2     		uxtb	r3, r3
 2371 01b0 9A42     		cmp	r2, r3
 2372 01b2 08D1     		bne	.L178
1951:Generated_Source\PSoC5/RTC.c ****         {
1952:Generated_Source\PSoC5/RTC.c ****             /* Set minute alarm */
1953:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 2373              		.loc 1 1953 0
 2374 01b4 3A4B     		ldr	r3, .L193+24
 2375 01b6 1B78     		ldrb	r3, [r3]
 2376 01b8 DBB2     		uxtb	r3, r3
 2377 01ba 43F00203 		orr	r3, r3, #2
 2378 01be DAB2     		uxtb	r2, r3
 2379 01c0 374B     		ldr	r3, .L193+24
 2380 01c2 1A70     		strb	r2, [r3]
 2381 01c4 07E0     		b	.L177
 2382              	.L178:
1954:Generated_Source\PSoC5/RTC.c ****         }
1955:Generated_Source\PSoC5/RTC.c ****         else
1956:Generated_Source\PSoC5/RTC.c ****         {
1957:Generated_Source\PSoC5/RTC.c ****             /* Clear minute alarm */
1958:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 2383              		.loc 1 1958 0
 2384 01c6 364B     		ldr	r3, .L193+24
 2385 01c8 1B78     		ldrb	r3, [r3]
 2386 01ca DBB2     		uxtb	r3, r3
 2387 01cc 23F00203 		bic	r3, r3, #2
 2388 01d0 DAB2     		uxtb	r2, r3
 2389 01d2 334B     		ldr	r3, .L193+24
 2390 01d4 1A70     		strb	r2, [r3]
 2391              	.L177:
1959:Generated_Source\PSoC5/RTC.c ****         }
1960:Generated_Source\PSoC5/RTC.c ****     }
1961:Generated_Source\PSoC5/RTC.c **** 
1962:Generated_Source\PSoC5/RTC.c ****     /* Alarm HOUR */
1963:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 2392              		.loc 1 1963 0
 2393 01d6 304B     		ldr	r3, .L193+16
 2394 01d8 1B78     		ldrb	r3, [r3]
 2395 01da DBB2     		uxtb	r3, r3
 2396 01dc 03F00403 		and	r3, r3, #4
 2397 01e0 002B     		cmp	r3, #0
 2398 01e2 18D0     		beq	.L179
1964:Generated_Source\PSoC5/RTC.c ****     {
1965:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 2399              		.loc 1 1965 0
 2400 01e4 2D4B     		ldr	r3, .L193+20
 2401 01e6 9B78     		ldrb	r3, [r3, #2]
 2402 01e8 DAB2     		uxtb	r2, r3
 2403 01ea 274B     		ldr	r3, .L193
 2404 01ec 9B78     		ldrb	r3, [r3, #2]
 2405 01ee DBB2     		uxtb	r3, r3
 2406 01f0 9A42     		cmp	r2, r3
 2407 01f2 08D1     		bne	.L180
1966:Generated_Source\PSoC5/RTC.c ****         {
1967:Generated_Source\PSoC5/RTC.c ****             /* Set hour alarm */
1968:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 2408              		.loc 1 1968 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 78


 2409 01f4 2A4B     		ldr	r3, .L193+24
 2410 01f6 1B78     		ldrb	r3, [r3]
 2411 01f8 DBB2     		uxtb	r3, r3
 2412 01fa 43F00403 		orr	r3, r3, #4
 2413 01fe DAB2     		uxtb	r2, r3
 2414 0200 274B     		ldr	r3, .L193+24
 2415 0202 1A70     		strb	r2, [r3]
 2416 0204 07E0     		b	.L179
 2417              	.L180:
1969:Generated_Source\PSoC5/RTC.c ****         }
1970:Generated_Source\PSoC5/RTC.c ****         else
1971:Generated_Source\PSoC5/RTC.c ****         {
1972:Generated_Source\PSoC5/RTC.c ****             /* Clear hour alarm */
1973:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 2418              		.loc 1 1973 0
 2419 0206 264B     		ldr	r3, .L193+24
 2420 0208 1B78     		ldrb	r3, [r3]
 2421 020a DBB2     		uxtb	r3, r3
 2422 020c 23F00403 		bic	r3, r3, #4
 2423 0210 DAB2     		uxtb	r2, r3
 2424 0212 234B     		ldr	r3, .L193+24
 2425 0214 1A70     		strb	r2, [r3]
 2426              	.L179:
1974:Generated_Source\PSoC5/RTC.c ****         }
1975:Generated_Source\PSoC5/RTC.c ****     }
1976:Generated_Source\PSoC5/RTC.c **** 
1977:Generated_Source\PSoC5/RTC.c ****     /* Alarm DAYOFWEEK */
1978:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_DAYOFWEEK_MASK))
 2427              		.loc 1 1978 0
 2428 0216 204B     		ldr	r3, .L193+16
 2429 0218 1B78     		ldrb	r3, [r3]
 2430 021a DBB2     		uxtb	r3, r3
 2431 021c 03F00803 		and	r3, r3, #8
 2432 0220 002B     		cmp	r3, #0
 2433 0222 18D0     		beq	.L181
1979:Generated_Source\PSoC5/RTC.c ****     {
1980:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 2434              		.loc 1 1980 0
 2435 0224 1D4B     		ldr	r3, .L193+20
 2436 0226 DB78     		ldrb	r3, [r3, #3]
 2437 0228 DAB2     		uxtb	r2, r3
 2438 022a 174B     		ldr	r3, .L193
 2439 022c DB78     		ldrb	r3, [r3, #3]
 2440 022e DBB2     		uxtb	r3, r3
 2441 0230 9A42     		cmp	r2, r3
 2442 0232 08D1     		bne	.L182
1981:Generated_Source\PSoC5/RTC.c ****         {
1982:Generated_Source\PSoC5/RTC.c ****             /* Set day of week alarm */
1983:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 2443              		.loc 1 1983 0
 2444 0234 1A4B     		ldr	r3, .L193+24
 2445 0236 1B78     		ldrb	r3, [r3]
 2446 0238 DBB2     		uxtb	r3, r3
 2447 023a 43F00803 		orr	r3, r3, #8
 2448 023e DAB2     		uxtb	r2, r3
 2449 0240 174B     		ldr	r3, .L193+24
 2450 0242 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 79


 2451 0244 07E0     		b	.L181
 2452              	.L182:
1984:Generated_Source\PSoC5/RTC.c ****         }
1985:Generated_Source\PSoC5/RTC.c ****         else
1986:Generated_Source\PSoC5/RTC.c ****         {
1987:Generated_Source\PSoC5/RTC.c ****             /* Clear day of week alarm */
1988:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 2453              		.loc 1 1988 0
 2454 0246 164B     		ldr	r3, .L193+24
 2455 0248 1B78     		ldrb	r3, [r3]
 2456 024a DBB2     		uxtb	r3, r3
 2457 024c 23F00803 		bic	r3, r3, #8
 2458 0250 DAB2     		uxtb	r2, r3
 2459 0252 134B     		ldr	r3, .L193+24
 2460 0254 1A70     		strb	r2, [r3]
 2461              	.L181:
1989:Generated_Source\PSoC5/RTC.c ****         }
1990:Generated_Source\PSoC5/RTC.c ****     }
1991:Generated_Source\PSoC5/RTC.c **** 
1992:Generated_Source\PSoC5/RTC.c ****     /* Alarm DAYOFYEAR */
1993:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_DAYOFYEAR_MASK))
 2462              		.loc 1 1993 0
 2463 0256 104B     		ldr	r3, .L193+16
 2464 0258 1B78     		ldrb	r3, [r3]
 2465 025a DBB2     		uxtb	r3, r3
 2466 025c 03F02003 		and	r3, r3, #32
 2467 0260 002B     		cmp	r3, #0
 2468 0262 27D0     		beq	.L183
1994:Generated_Source\PSoC5/RTC.c ****     {
1995:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 2469              		.loc 1 1995 0
 2470 0264 0D4B     		ldr	r3, .L193+20
 2471 0266 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2472 0268 9AB2     		uxth	r2, r3
 2473 026a 074B     		ldr	r3, .L193
 2474 026c DB88     		ldrh	r3, [r3, #6]	@ movhi
 2475 026e 9BB2     		uxth	r3, r3
 2476 0270 9A42     		cmp	r2, r3
 2477 0272 17D1     		bne	.L184
1996:Generated_Source\PSoC5/RTC.c ****         {
1997:Generated_Source\PSoC5/RTC.c ****             /* Set day of year alarm */
1998:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 2478              		.loc 1 1998 0
 2479 0274 0A4B     		ldr	r3, .L193+24
 2480 0276 1B78     		ldrb	r3, [r3]
 2481 0278 DBB2     		uxtb	r3, r3
 2482 027a 43F02003 		orr	r3, r3, #32
 2483 027e DAB2     		uxtb	r2, r3
 2484 0280 074B     		ldr	r3, .L193+24
 2485 0282 1A70     		strb	r2, [r3]
 2486 0284 16E0     		b	.L183
 2487              	.L194:
 2488 0286 00BF     		.align	2
 2489              	.L193:
 2490 0288 00000000 		.word	RTC_currentTimeDate
 2491 028c 1F85EB51 		.word	1374389535
 2492 0290 00000000 		.word	RTC_statusDateTime
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 80


 2493 0294 00000000 		.word	RTC_daysInMonths
 2494 0298 00000000 		.word	RTC_alarmCfgMask
 2495 029c 00000000 		.word	RTC_alarmCfgTimeDate
 2496 02a0 00000000 		.word	RTC_alarmCurStatus
 2497              	.L184:
1999:Generated_Source\PSoC5/RTC.c ****         }
2000:Generated_Source\PSoC5/RTC.c ****         else
2001:Generated_Source\PSoC5/RTC.c ****         {
2002:Generated_Source\PSoC5/RTC.c ****             /* Clear day of year alarm */
2003:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 2498              		.loc 1 2003 0
 2499 02a4 424B     		ldr	r3, .L195
 2500 02a6 1B78     		ldrb	r3, [r3]
 2501 02a8 DBB2     		uxtb	r3, r3
 2502 02aa 23F02003 		bic	r3, r3, #32
 2503 02ae DAB2     		uxtb	r2, r3
 2504 02b0 3F4B     		ldr	r3, .L195
 2505 02b2 1A70     		strb	r2, [r3]
 2506              	.L183:
2004:Generated_Source\PSoC5/RTC.c ****         }
2005:Generated_Source\PSoC5/RTC.c ****     }
2006:Generated_Source\PSoC5/RTC.c **** 
2007:Generated_Source\PSoC5/RTC.c ****     /* Alarm DAYOFMONTH */
2008:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_DAYOFMONTH_MASK))
 2507              		.loc 1 2008 0
 2508 02b4 3F4B     		ldr	r3, .L195+4
 2509 02b6 1B78     		ldrb	r3, [r3]
 2510 02b8 DBB2     		uxtb	r3, r3
 2511 02ba 03F01003 		and	r3, r3, #16
 2512 02be 002B     		cmp	r3, #0
 2513 02c0 18D0     		beq	.L185
2009:Generated_Source\PSoC5/RTC.c ****     {
2010:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 2514              		.loc 1 2010 0
 2515 02c2 3D4B     		ldr	r3, .L195+8
 2516 02c4 1B79     		ldrb	r3, [r3, #4]
 2517 02c6 DAB2     		uxtb	r2, r3
 2518 02c8 3C4B     		ldr	r3, .L195+12
 2519 02ca 1B79     		ldrb	r3, [r3, #4]
 2520 02cc DBB2     		uxtb	r3, r3
 2521 02ce 9A42     		cmp	r2, r3
 2522 02d0 08D1     		bne	.L186
2011:Generated_Source\PSoC5/RTC.c ****         {
2012:Generated_Source\PSoC5/RTC.c ****             /* Set day of month alarm */
2013:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 2523              		.loc 1 2013 0
 2524 02d2 374B     		ldr	r3, .L195
 2525 02d4 1B78     		ldrb	r3, [r3]
 2526 02d6 DBB2     		uxtb	r3, r3
 2527 02d8 43F01003 		orr	r3, r3, #16
 2528 02dc DAB2     		uxtb	r2, r3
 2529 02de 344B     		ldr	r3, .L195
 2530 02e0 1A70     		strb	r2, [r3]
 2531 02e2 07E0     		b	.L185
 2532              	.L186:
2014:Generated_Source\PSoC5/RTC.c ****         }
2015:Generated_Source\PSoC5/RTC.c ****            else
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 81


2016:Generated_Source\PSoC5/RTC.c ****         {
2017:Generated_Source\PSoC5/RTC.c ****             /* Clear day of month alarm */
2018:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 2533              		.loc 1 2018 0
 2534 02e4 324B     		ldr	r3, .L195
 2535 02e6 1B78     		ldrb	r3, [r3]
 2536 02e8 DBB2     		uxtb	r3, r3
 2537 02ea 23F01003 		bic	r3, r3, #16
 2538 02ee DAB2     		uxtb	r2, r3
 2539 02f0 2F4B     		ldr	r3, .L195
 2540 02f2 1A70     		strb	r2, [r3]
 2541              	.L185:
2019:Generated_Source\PSoC5/RTC.c ****         }
2020:Generated_Source\PSoC5/RTC.c ****     }
2021:Generated_Source\PSoC5/RTC.c **** 
2022:Generated_Source\PSoC5/RTC.c ****     /* Alarm MONTH */
2023:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MONTH_MASK))
 2542              		.loc 1 2023 0
 2543 02f4 2F4B     		ldr	r3, .L195+4
 2544 02f6 1B78     		ldrb	r3, [r3]
 2545 02f8 DBB2     		uxtb	r3, r3
 2546 02fa 03F04003 		and	r3, r3, #64
 2547 02fe 002B     		cmp	r3, #0
 2548 0300 18D0     		beq	.L187
2024:Generated_Source\PSoC5/RTC.c ****     {
2025:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 2549              		.loc 1 2025 0
 2550 0302 2D4B     		ldr	r3, .L195+8
 2551 0304 1B7A     		ldrb	r3, [r3, #8]
 2552 0306 DAB2     		uxtb	r2, r3
 2553 0308 2C4B     		ldr	r3, .L195+12
 2554 030a 1B7A     		ldrb	r3, [r3, #8]
 2555 030c DBB2     		uxtb	r3, r3
 2556 030e 9A42     		cmp	r2, r3
 2557 0310 08D1     		bne	.L188
2026:Generated_Source\PSoC5/RTC.c ****         {
2027:Generated_Source\PSoC5/RTC.c ****             /* Set month alarm */
2028:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 2558              		.loc 1 2028 0
 2559 0312 274B     		ldr	r3, .L195
 2560 0314 1B78     		ldrb	r3, [r3]
 2561 0316 DBB2     		uxtb	r3, r3
 2562 0318 43F04003 		orr	r3, r3, #64
 2563 031c DAB2     		uxtb	r2, r3
 2564 031e 244B     		ldr	r3, .L195
 2565 0320 1A70     		strb	r2, [r3]
 2566 0322 07E0     		b	.L187
 2567              	.L188:
2029:Generated_Source\PSoC5/RTC.c ****         }
2030:Generated_Source\PSoC5/RTC.c ****         else
2031:Generated_Source\PSoC5/RTC.c ****         {
2032:Generated_Source\PSoC5/RTC.c ****             /* Clear month alarm */
2033:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 2568              		.loc 1 2033 0
 2569 0324 224B     		ldr	r3, .L195
 2570 0326 1B78     		ldrb	r3, [r3]
 2571 0328 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 82


 2572 032a 23F04003 		bic	r3, r3, #64
 2573 032e DAB2     		uxtb	r2, r3
 2574 0330 1F4B     		ldr	r3, .L195
 2575 0332 1A70     		strb	r2, [r3]
 2576              	.L187:
2034:Generated_Source\PSoC5/RTC.c ****         }
2035:Generated_Source\PSoC5/RTC.c ****     }
2036:Generated_Source\PSoC5/RTC.c **** 
2037:Generated_Source\PSoC5/RTC.c ****     /* Alarm YEAR */
2038:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_YEAR_MASK))
 2577              		.loc 1 2038 0
 2578 0334 1F4B     		ldr	r3, .L195+4
 2579 0336 1B78     		ldrb	r3, [r3]
 2580 0338 DBB2     		uxtb	r3, r3
 2581 033a 5BB2     		sxtb	r3, r3
 2582 033c 002B     		cmp	r3, #0
 2583 033e 18DA     		bge	.L189
2039:Generated_Source\PSoC5/RTC.c ****     {
2040:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 2584              		.loc 1 2040 0
 2585 0340 1D4B     		ldr	r3, .L195+8
 2586 0342 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2587 0344 9AB2     		uxth	r2, r3
 2588 0346 1D4B     		ldr	r3, .L195+12
 2589 0348 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2590 034a 9BB2     		uxth	r3, r3
 2591 034c 9A42     		cmp	r2, r3
 2592 034e 08D1     		bne	.L190
2041:Generated_Source\PSoC5/RTC.c ****         {
2042:Generated_Source\PSoC5/RTC.c ****             /* Set year alarm */
2043:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 2593              		.loc 1 2043 0
 2594 0350 174B     		ldr	r3, .L195
 2595 0352 1B78     		ldrb	r3, [r3]
 2596 0354 DBB2     		uxtb	r3, r3
 2597 0356 63F07F03 		orn	r3, r3, #127
 2598 035a DAB2     		uxtb	r2, r3
 2599 035c 144B     		ldr	r3, .L195
 2600 035e 1A70     		strb	r2, [r3]
 2601 0360 07E0     		b	.L189
 2602              	.L190:
2044:Generated_Source\PSoC5/RTC.c ****         }
2045:Generated_Source\PSoC5/RTC.c ****         else
2046:Generated_Source\PSoC5/RTC.c ****         {
2047:Generated_Source\PSoC5/RTC.c ****             /* Clear year alarm */
2048:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 2603              		.loc 1 2048 0
 2604 0362 134B     		ldr	r3, .L195
 2605 0364 1B78     		ldrb	r3, [r3]
 2606 0366 DBB2     		uxtb	r3, r3
 2607 0368 03F07F03 		and	r3, r3, #127
 2608 036c DAB2     		uxtb	r2, r3
 2609 036e 104B     		ldr	r3, .L195
 2610 0370 1A70     		strb	r2, [r3]
 2611              	.L189:
2049:Generated_Source\PSoC5/RTC.c ****         }
2050:Generated_Source\PSoC5/RTC.c ****     }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 83


2051:Generated_Source\PSoC5/RTC.c **** 
2052:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgMaskTemp = RTC_alarmCfgMask;
 2612              		.loc 1 2052 0
 2613 0372 104B     		ldr	r3, .L195+4
 2614 0374 1B78     		ldrb	r3, [r3]
 2615 0376 BB71     		strb	r3, [r7, #6]
2053:Generated_Source\PSoC5/RTC.c ****     /* Set Alarm flag event */
2054:Generated_Source\PSoC5/RTC.c ****     RTC_SET_ALARM(RTC_alarmCfgMaskTemp,
 2616              		.loc 1 2054 0
 2617 0378 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2618 037a 002B     		cmp	r3, #0
 2619 037c 13D0     		beq	.L192
 2620              		.loc 1 2054 0 is_stmt 0 discriminator 1
 2621 037e 0C4B     		ldr	r3, .L195
 2622 0380 1B78     		ldrb	r3, [r3]
 2623 0382 DAB2     		uxtb	r2, r3
 2624 0384 BB79     		ldrb	r3, [r7, #6]
 2625 0386 1340     		ands	r3, r3, r2
 2626 0388 DBB2     		uxtb	r3, r3
 2627 038a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2628 038c 9A42     		cmp	r2, r3
 2629 038e 0AD1     		bne	.L192
 2630              		.loc 1 2054 0 discriminator 2
 2631 0390 0B4B     		ldr	r3, .L195+16
 2632 0392 1B78     		ldrb	r3, [r3]
 2633 0394 DBB2     		uxtb	r3, r3
 2634 0396 43F00803 		orr	r3, r3, #8
 2635 039a DAB2     		uxtb	r2, r3
 2636 039c 084B     		ldr	r3, .L195+16
 2637 039e 1A70     		strb	r2, [r3]
 2638 03a0 034B     		ldr	r3, .L195
 2639 03a2 0022     		movs	r2, #0
 2640 03a4 1A70     		strb	r2, [r3]
 2641              	.L192:
2055:Generated_Source\PSoC5/RTC.c ****                                RTC_alarmCurStatus,
2056:Generated_Source\PSoC5/RTC.c ****                                RTC_statusDateTime);
2057:Generated_Source\PSoC5/RTC.c **** }
 2642              		.loc 1 2057 0 is_stmt 1
 2643 03a6 00BF     		nop
 2644 03a8 0837     		adds	r7, r7, #8
 2645              		.cfi_def_cfa_offset 8
 2646 03aa BD46     		mov	sp, r7
 2647              		.cfi_def_cfa_register 13
 2648              		@ sp needed
 2649 03ac 80BD     		pop	{r7, pc}
 2650              	.L196:
 2651 03ae 00BF     		.align	2
 2652              	.L195:
 2653 03b0 00000000 		.word	RTC_alarmCurStatus
 2654 03b4 00000000 		.word	RTC_alarmCfgMask
 2655 03b8 00000000 		.word	RTC_alarmCfgTimeDate
 2656 03bc 00000000 		.word	RTC_currentTimeDate
 2657 03c0 00000000 		.word	RTC_statusDateTime
 2658              		.cfi_endproc
 2659              	.LFE40:
 2660              		.size	RTC_SetInitValues, .-RTC_SetInitValues
 2661              		.section	.rodata
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 84


 2662              		.align	2
 2663              		.type	RTC_monthTemplate.5164, %object
 2664              		.size	RTC_monthTemplate.5164, 12
 2665              	RTC_monthTemplate.5164:
 2666 000c 00       		.byte	0
 2667 000d 03       		.byte	3
 2668 000e 02       		.byte	2
 2669 000f 05       		.byte	5
 2670 0010 00       		.byte	0
 2671 0011 03       		.byte	3
 2672 0012 05       		.byte	5
 2673 0013 01       		.byte	1
 2674 0014 04       		.byte	4
 2675 0015 06       		.byte	6
 2676 0016 02       		.byte	2
 2677 0017 04       		.byte	4
 2678              		.text
 2679              	.Letext0:
 2680              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2681              		.file 3 "Generated_Source\\PSoC5\\RTC.h"
 2682              		.section	.debug_info,"",%progbits
 2683              	.Ldebug_info0:
 2684 0000 18070000 		.4byte	0x718
 2685 0004 0400     		.2byte	0x4
 2686 0006 00000000 		.4byte	.Ldebug_abbrev0
 2687 000a 04       		.byte	0x4
 2688 000b 01       		.uleb128 0x1
 2689 000c 3C000000 		.4byte	.LASF86
 2690 0010 0C       		.byte	0xc
 2691 0011 07000000 		.4byte	.LASF87
 2692 0015 8D020000 		.4byte	.LASF88
 2693 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2694 001d 00000000 		.4byte	0
 2695 0021 00000000 		.4byte	.Ldebug_line0
 2696 0025 02       		.uleb128 0x2
 2697 0026 01       		.byte	0x1
 2698 0027 06       		.byte	0x6
 2699 0028 6E010000 		.4byte	.LASF0
 2700 002c 02       		.uleb128 0x2
 2701 002d 01       		.byte	0x1
 2702 002e 08       		.byte	0x8
 2703 002f 19040000 		.4byte	.LASF1
 2704 0033 02       		.uleb128 0x2
 2705 0034 02       		.byte	0x2
 2706 0035 05       		.byte	0x5
 2707 0036 56040000 		.4byte	.LASF2
 2708 003a 02       		.uleb128 0x2
 2709 003b 02       		.byte	0x2
 2710 003c 07       		.byte	0x7
 2711 003d F0020000 		.4byte	.LASF3
 2712 0041 02       		.uleb128 0x2
 2713 0042 04       		.byte	0x4
 2714 0043 05       		.byte	0x5
 2715 0044 F7010000 		.4byte	.LASF4
 2716 0048 02       		.uleb128 0x2
 2717 0049 04       		.byte	0x4
 2718 004a 07       		.byte	0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 85


 2719 004b D3020000 		.4byte	.LASF5
 2720 004f 02       		.uleb128 0x2
 2721 0050 08       		.byte	0x8
 2722 0051 05       		.byte	0x5
 2723 0052 60010000 		.4byte	.LASF6
 2724 0056 02       		.uleb128 0x2
 2725 0057 08       		.byte	0x8
 2726 0058 07       		.byte	0x7
 2727 0059 F0000000 		.4byte	.LASF7
 2728 005d 03       		.uleb128 0x3
 2729 005e 04       		.byte	0x4
 2730 005f 05       		.byte	0x5
 2731 0060 696E7400 		.ascii	"int\000"
 2732 0064 02       		.uleb128 0x2
 2733 0065 04       		.byte	0x4
 2734 0066 07       		.byte	0x7
 2735 0067 C6020000 		.4byte	.LASF8
 2736 006b 04       		.uleb128 0x4
 2737 006c 28020000 		.4byte	.LASF9
 2738 0070 02       		.byte	0x2
 2739 0071 9201     		.2byte	0x192
 2740 0073 2C000000 		.4byte	0x2c
 2741 0077 04       		.uleb128 0x4
 2742 0078 00000000 		.4byte	.LASF10
 2743 007c 02       		.byte	0x2
 2744 007d 9301     		.2byte	0x193
 2745 007f 3A000000 		.4byte	0x3a
 2746 0083 04       		.uleb128 0x4
 2747 0084 55020000 		.4byte	.LASF11
 2748 0088 02       		.byte	0x2
 2749 0089 9401     		.2byte	0x194
 2750 008b 48000000 		.4byte	0x48
 2751 008f 02       		.uleb128 0x2
 2752 0090 04       		.byte	0x4
 2753 0091 04       		.byte	0x4
 2754 0092 E5030000 		.4byte	.LASF12
 2755 0096 02       		.uleb128 0x2
 2756 0097 08       		.byte	0x8
 2757 0098 04       		.byte	0x4
 2758 0099 41020000 		.4byte	.LASF13
 2759 009d 02       		.uleb128 0x2
 2760 009e 01       		.byte	0x1
 2761 009f 08       		.byte	0x8
 2762 00a0 7D040000 		.4byte	.LASF14
 2763 00a4 04       		.uleb128 0x4
 2764 00a5 14040000 		.4byte	.LASF15
 2765 00a9 02       		.byte	0x2
 2766 00aa 3C02     		.2byte	0x23c
 2767 00ac B0000000 		.4byte	0xb0
 2768 00b0 05       		.uleb128 0x5
 2769 00b1 6B000000 		.4byte	0x6b
 2770 00b5 04       		.uleb128 0x4
 2771 00b6 60030000 		.4byte	.LASF16
 2772 00ba 02       		.byte	0x2
 2773 00bb 3E02     		.2byte	0x23e
 2774 00bd C1000000 		.4byte	0xc1
 2775 00c1 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 86


 2776 00c2 83000000 		.4byte	0x83
 2777 00c6 06       		.uleb128 0x6
 2778 00c7 0C       		.byte	0xc
 2779 00c8 03       		.byte	0x3
 2780 00c9 30       		.byte	0x30
 2781 00ca 2F010000 		.4byte	0x12f
 2782 00ce 07       		.uleb128 0x7
 2783 00cf 53656300 		.ascii	"Sec\000"
 2784 00d3 03       		.byte	0x3
 2785 00d4 32       		.byte	0x32
 2786 00d5 6B000000 		.4byte	0x6b
 2787 00d9 00       		.byte	0
 2788 00da 07       		.uleb128 0x7
 2789 00db 4D696E00 		.ascii	"Min\000"
 2790 00df 03       		.byte	0x3
 2791 00e0 33       		.byte	0x33
 2792 00e1 6B000000 		.4byte	0x6b
 2793 00e5 01       		.byte	0x1
 2794 00e6 08       		.uleb128 0x8
 2795 00e7 1A010000 		.4byte	.LASF17
 2796 00eb 03       		.byte	0x3
 2797 00ec 34       		.byte	0x34
 2798 00ed 6B000000 		.4byte	0x6b
 2799 00f1 02       		.byte	0x2
 2800 00f2 08       		.uleb128 0x8
 2801 00f3 69040000 		.4byte	.LASF18
 2802 00f7 03       		.byte	0x3
 2803 00f8 35       		.byte	0x35
 2804 00f9 6B000000 		.4byte	0x6b
 2805 00fd 03       		.byte	0x3
 2806 00fe 08       		.uleb128 0x8
 2807 00ff E5020000 		.4byte	.LASF19
 2808 0103 03       		.byte	0x3
 2809 0104 36       		.byte	0x36
 2810 0105 6B000000 		.4byte	0x6b
 2811 0109 04       		.byte	0x4
 2812 010a 08       		.uleb128 0x8
 2813 010b 9D050000 		.4byte	.LASF20
 2814 010f 03       		.byte	0x3
 2815 0110 37       		.byte	0x37
 2816 0111 77000000 		.4byte	0x77
 2817 0115 06       		.byte	0x6
 2818 0116 08       		.uleb128 0x8
 2819 0117 00020000 		.4byte	.LASF21
 2820 011b 03       		.byte	0x3
 2821 011c 38       		.byte	0x38
 2822 011d 6B000000 		.4byte	0x6b
 2823 0121 08       		.byte	0x8
 2824 0122 08       		.uleb128 0x8
 2825 0123 03030000 		.4byte	.LASF22
 2826 0127 03       		.byte	0x3
 2827 0128 39       		.byte	0x39
 2828 0129 77000000 		.4byte	0x77
 2829 012d 0A       		.byte	0xa
 2830 012e 00       		.byte	0
 2831 012f 09       		.uleb128 0x9
 2832 0130 8E030000 		.4byte	.LASF23
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 87


 2833 0134 03       		.byte	0x3
 2834 0135 3A       		.byte	0x3a
 2835 0136 3A010000 		.4byte	0x13a
 2836 013a 05       		.uleb128 0x5
 2837 013b C6000000 		.4byte	0xc6
 2838 013f 02       		.uleb128 0x2
 2839 0140 08       		.byte	0x8
 2840 0141 04       		.byte	0x4
 2841 0142 5C020000 		.4byte	.LASF24
 2842 0146 02       		.uleb128 0x2
 2843 0147 04       		.byte	0x4
 2844 0148 07       		.byte	0x7
 2845 0149 77030000 		.4byte	.LASF25
 2846 014d 0A       		.uleb128 0xa
 2847 014e CD010000 		.4byte	.LASF26
 2848 0152 01       		.byte	0x1
 2849 0153 81       		.byte	0x81
 2850 0154 00000000 		.4byte	.LFB0
 2851 0158 24000000 		.4byte	.LFE0-.LFB0
 2852 015c 01       		.uleb128 0x1
 2853 015d 9C       		.byte	0x9c
 2854 015e 0B       		.uleb128 0xb
 2855 015f 60040000 		.4byte	.LASF30
 2856 0163 01       		.byte	0x1
 2857 0164 A3       		.byte	0xa3
 2858 0165 00000000 		.4byte	.LFB1
 2859 0169 3C000000 		.4byte	.LFE1-.LFB1
 2860 016d 01       		.uleb128 0x1
 2861 016e 9C       		.byte	0x9c
 2862 016f 82010000 		.4byte	0x182
 2863 0173 0C       		.uleb128 0xc
 2864 0174 8D010000 		.4byte	.LASF32
 2865 0178 01       		.byte	0x1
 2866 0179 A5       		.byte	0xa5
 2867 017a 6B000000 		.4byte	0x6b
 2868 017e 02       		.uleb128 0x2
 2869 017f 91       		.byte	0x91
 2870 0180 77       		.sleb128 -9
 2871 0181 00       		.byte	0
 2872 0182 0D       		.uleb128 0xd
 2873 0183 E2000000 		.4byte	.LASF27
 2874 0187 01       		.byte	0x1
 2875 0188 C3       		.byte	0xc3
 2876 0189 00000000 		.4byte	.LFB2
 2877 018d 18000000 		.4byte	.LFE2-.LFB2
 2878 0191 01       		.uleb128 0x1
 2879 0192 9C       		.byte	0x9c
 2880 0193 0D       		.uleb128 0xd
 2881 0194 CA000000 		.4byte	.LASF28
 2882 0198 01       		.byte	0x1
 2883 0199 D8       		.byte	0xd8
 2884 019a 00000000 		.4byte	.LFB3
 2885 019e 18000000 		.4byte	.LFE3-.LFB3
 2886 01a2 01       		.uleb128 0x1
 2887 01a3 9C       		.byte	0x9c
 2888 01a4 0E       		.uleb128 0xe
 2889 01a5 D9000000 		.4byte	.LASF29
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 88


 2890 01a9 01       		.byte	0x1
 2891 01aa 8701     		.2byte	0x187
 2892 01ac 00000000 		.4byte	.LFB4
 2893 01b0 2C000000 		.4byte	.LFE4-.LFB4
 2894 01b4 01       		.uleb128 0x1
 2895 01b5 9C       		.byte	0x9c
 2896 01b6 0F       		.uleb128 0xf
 2897 01b7 6D020000 		.4byte	.LASF31
 2898 01bb 01       		.byte	0x1
 2899 01bc AB01     		.2byte	0x1ab
 2900 01be 00000000 		.4byte	.LFB5
 2901 01c2 3C000000 		.4byte	.LFE5-.LFB5
 2902 01c6 01       		.uleb128 0x1
 2903 01c7 9C       		.byte	0x9c
 2904 01c8 DC010000 		.4byte	0x1dc
 2905 01cc 10       		.uleb128 0x10
 2906 01cd 8D010000 		.4byte	.LASF32
 2907 01d1 01       		.byte	0x1
 2908 01d2 AD01     		.2byte	0x1ad
 2909 01d4 6B000000 		.4byte	0x6b
 2910 01d8 02       		.uleb128 0x2
 2911 01d9 91       		.byte	0x91
 2912 01da 77       		.sleb128 -9
 2913 01db 00       		.byte	0
 2914 01dc 11       		.uleb128 0x11
 2915 01dd 48020000 		.4byte	.LASF57
 2916 01e1 01       		.byte	0x1
 2917 01e2 D501     		.2byte	0x1d5
 2918 01e4 F2010000 		.4byte	0x1f2
 2919 01e8 00000000 		.4byte	.LFB6
 2920 01ec 14000000 		.4byte	.LFE6-.LFB6
 2921 01f0 01       		.uleb128 0x1
 2922 01f1 9C       		.byte	0x9c
 2923 01f2 12       		.uleb128 0x12
 2924 01f3 04       		.byte	0x4
 2925 01f4 2F010000 		.4byte	0x12f
 2926 01f8 0F       		.uleb128 0xf
 2927 01f9 1A020000 		.4byte	.LASF33
 2928 01fd 01       		.byte	0x1
 2929 01fe F401     		.2byte	0x1f4
 2930 0200 00000000 		.4byte	.LFB7
 2931 0204 58000000 		.4byte	.LFE7-.LFB7
 2932 0208 01       		.uleb128 0x1
 2933 0209 9C       		.byte	0x9c
 2934 020a 1E020000 		.4byte	0x21e
 2935 020e 13       		.uleb128 0x13
 2936 020f 9C030000 		.4byte	.LASF35
 2937 0213 01       		.byte	0x1
 2938 0214 F401     		.2byte	0x1f4
 2939 0216 1E020000 		.4byte	0x21e
 2940 021a 02       		.uleb128 0x2
 2941 021b 91       		.byte	0x91
 2942 021c 74       		.sleb128 -12
 2943 021d 00       		.byte	0
 2944 021e 12       		.uleb128 0x12
 2945 021f 04       		.byte	0x4
 2946 0220 24020000 		.4byte	0x224
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 89


 2947 0224 14       		.uleb128 0x14
 2948 0225 2F010000 		.4byte	0x12f
 2949 0229 15       		.uleb128 0x15
 2950 022a 8D050000 		.4byte	.LASF34
 2951 022e 01       		.byte	0x1
 2952 022f 1C02     		.2byte	0x21c
 2953 0231 00000000 		.4byte	.LFB8
 2954 0235 20000000 		.4byte	.LFE8-.LFB8
 2955 0239 01       		.uleb128 0x1
 2956 023a 9C       		.byte	0x9c
 2957 023b 4F020000 		.4byte	0x24f
 2958 023f 13       		.uleb128 0x13
 2959 0240 3B040000 		.4byte	.LASF36
 2960 0244 01       		.byte	0x1
 2961 0245 1C02     		.2byte	0x21c
 2962 0247 6B000000 		.4byte	0x6b
 2963 024b 02       		.uleb128 0x2
 2964 024c 91       		.byte	0x91
 2965 024d 77       		.sleb128 -9
 2966 024e 00       		.byte	0
 2967 024f 15       		.uleb128 0x15
 2968 0250 04040000 		.4byte	.LASF37
 2969 0254 01       		.byte	0x1
 2970 0255 3802     		.2byte	0x238
 2971 0257 00000000 		.4byte	.LFB9
 2972 025b 20000000 		.4byte	.LFE9-.LFB9
 2973 025f 01       		.uleb128 0x1
 2974 0260 9C       		.byte	0x9c
 2975 0261 75020000 		.4byte	0x275
 2976 0265 13       		.uleb128 0x13
 2977 0266 2B050000 		.4byte	.LASF38
 2978 026a 01       		.byte	0x1
 2979 026b 3802     		.2byte	0x238
 2980 026d 6B000000 		.4byte	0x6b
 2981 0271 02       		.uleb128 0x2
 2982 0272 91       		.byte	0x91
 2983 0273 77       		.sleb128 -9
 2984 0274 00       		.byte	0
 2985 0275 15       		.uleb128 0x15
 2986 0276 80030000 		.4byte	.LASF39
 2987 027a 01       		.byte	0x1
 2988 027b 5402     		.2byte	0x254
 2989 027d 00000000 		.4byte	.LFB10
 2990 0281 20000000 		.4byte	.LFE10-.LFB10
 2991 0285 01       		.uleb128 0x1
 2992 0286 9C       		.byte	0x9c
 2993 0287 9B020000 		.4byte	0x29b
 2994 028b 13       		.uleb128 0x13
 2995 028c B2030000 		.4byte	.LASF40
 2996 0290 01       		.byte	0x1
 2997 0291 5402     		.2byte	0x254
 2998 0293 6B000000 		.4byte	0x6b
 2999 0297 02       		.uleb128 0x2
 3000 0298 91       		.byte	0x91
 3001 0299 77       		.sleb128 -9
 3002 029a 00       		.byte	0
 3003 029b 15       		.uleb128 0x15
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 90


 3004 029c E3040000 		.4byte	.LASF41
 3005 02a0 01       		.byte	0x1
 3006 02a1 7002     		.2byte	0x270
 3007 02a3 00000000 		.4byte	.LFB11
 3008 02a7 20000000 		.4byte	.LFE11-.LFB11
 3009 02ab 01       		.uleb128 0x1
 3010 02ac 9C       		.byte	0x9c
 3011 02ad C1020000 		.4byte	0x2c1
 3012 02b1 13       		.uleb128 0x13
 3013 02b2 EB030000 		.4byte	.LASF42
 3014 02b6 01       		.byte	0x1
 3015 02b7 7002     		.2byte	0x270
 3016 02b9 6B000000 		.4byte	0x6b
 3017 02bd 02       		.uleb128 0x2
 3018 02be 91       		.byte	0x91
 3019 02bf 77       		.sleb128 -9
 3020 02c0 00       		.byte	0
 3021 02c1 15       		.uleb128 0x15
 3022 02c2 0A050000 		.4byte	.LASF43
 3023 02c6 01       		.byte	0x1
 3024 02c7 8C02     		.2byte	0x28c
 3025 02c9 00000000 		.4byte	.LFB12
 3026 02cd 20000000 		.4byte	.LFE12-.LFB12
 3027 02d1 01       		.uleb128 0x1
 3028 02d2 9C       		.byte	0x9c
 3029 02d3 E7020000 		.4byte	0x2e7
 3030 02d7 13       		.uleb128 0x13
 3031 02d8 A8020000 		.4byte	.LASF44
 3032 02dc 01       		.byte	0x1
 3033 02dd 8C02     		.2byte	0x28c
 3034 02df 6B000000 		.4byte	0x6b
 3035 02e3 02       		.uleb128 0x2
 3036 02e4 91       		.byte	0x91
 3037 02e5 77       		.sleb128 -9
 3038 02e6 00       		.byte	0
 3039 02e7 15       		.uleb128 0x15
 3040 02e8 D5040000 		.4byte	.LASF45
 3041 02ec 01       		.byte	0x1
 3042 02ed A802     		.2byte	0x2a8
 3043 02ef 00000000 		.4byte	.LFB13
 3044 02f3 20000000 		.4byte	.LFE13-.LFB13
 3045 02f7 01       		.uleb128 0x1
 3046 02f8 9C       		.byte	0x9c
 3047 02f9 0D030000 		.4byte	0x30d
 3048 02fd 13       		.uleb128 0x13
 3049 02fe E3010000 		.4byte	.LASF46
 3050 0302 01       		.byte	0x1
 3051 0303 A802     		.2byte	0x2a8
 3052 0305 77000000 		.4byte	0x77
 3053 0309 02       		.uleb128 0x2
 3054 030a 91       		.byte	0x91
 3055 030b 76       		.sleb128 -10
 3056 030c 00       		.byte	0
 3057 030d 15       		.uleb128 0x15
 3058 030e 1F010000 		.4byte	.LASF47
 3059 0312 01       		.byte	0x1
 3060 0313 CA02     		.2byte	0x2ca
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 91


 3061 0315 00000000 		.4byte	.LFB14
 3062 0319 58000000 		.4byte	.LFE14-.LFB14
 3063 031d 01       		.uleb128 0x1
 3064 031e 9C       		.byte	0x9c
 3065 031f 33030000 		.4byte	0x333
 3066 0323 13       		.uleb128 0x13
 3067 0324 3B040000 		.4byte	.LASF36
 3068 0328 01       		.byte	0x1
 3069 0329 CA02     		.2byte	0x2ca
 3070 032b 6B000000 		.4byte	0x6b
 3071 032f 02       		.uleb128 0x2
 3072 0330 91       		.byte	0x91
 3073 0331 77       		.sleb128 -9
 3074 0332 00       		.byte	0
 3075 0333 15       		.uleb128 0x15
 3076 0334 A9040000 		.4byte	.LASF48
 3077 0338 01       		.byte	0x1
 3078 0339 F702     		.2byte	0x2f7
 3079 033b 00000000 		.4byte	.LFB15
 3080 033f 58000000 		.4byte	.LFE15-.LFB15
 3081 0343 01       		.uleb128 0x1
 3082 0344 9C       		.byte	0x9c
 3083 0345 59030000 		.4byte	0x359
 3084 0349 13       		.uleb128 0x13
 3085 034a 2B050000 		.4byte	.LASF38
 3086 034e 01       		.byte	0x1
 3087 034f F702     		.2byte	0x2f7
 3088 0351 6B000000 		.4byte	0x6b
 3089 0355 02       		.uleb128 0x2
 3090 0356 91       		.byte	0x91
 3091 0357 77       		.sleb128 -9
 3092 0358 00       		.byte	0
 3093 0359 15       		.uleb128 0x15
 3094 035a 4D010000 		.4byte	.LASF49
 3095 035e 01       		.byte	0x1
 3096 035f 2403     		.2byte	0x324
 3097 0361 00000000 		.4byte	.LFB16
 3098 0365 58000000 		.4byte	.LFE16-.LFB16
 3099 0369 01       		.uleb128 0x1
 3100 036a 9C       		.byte	0x9c
 3101 036b 7F030000 		.4byte	0x37f
 3102 036f 13       		.uleb128 0x13
 3103 0370 B2030000 		.4byte	.LASF40
 3104 0374 01       		.byte	0x1
 3105 0375 2403     		.2byte	0x324
 3106 0377 6B000000 		.4byte	0x6b
 3107 037b 02       		.uleb128 0x2
 3108 037c 91       		.byte	0x91
 3109 037d 77       		.sleb128 -9
 3110 037e 00       		.byte	0
 3111 037f 15       		.uleb128 0x15
 3112 0380 34010000 		.4byte	.LASF50
 3113 0384 01       		.byte	0x1
 3114 0385 5103     		.2byte	0x351
 3115 0387 00000000 		.4byte	.LFB17
 3116 038b 58000000 		.4byte	.LFE17-.LFB17
 3117 038f 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 92


 3118 0390 9C       		.byte	0x9c
 3119 0391 A5030000 		.4byte	0x3a5
 3120 0395 13       		.uleb128 0x13
 3121 0396 EB030000 		.4byte	.LASF42
 3122 039a 01       		.byte	0x1
 3123 039b 5103     		.2byte	0x351
 3124 039d 6B000000 		.4byte	0x6b
 3125 03a1 02       		.uleb128 0x2
 3126 03a2 91       		.byte	0x91
 3127 03a3 77       		.sleb128 -9
 3128 03a4 00       		.byte	0
 3129 03a5 15       		.uleb128 0x15
 3130 03a6 06020000 		.4byte	.LASF51
 3131 03aa 01       		.byte	0x1
 3132 03ab 7E03     		.2byte	0x37e
 3133 03ad 00000000 		.4byte	.LFB18
 3134 03b1 58000000 		.4byte	.LFE18-.LFB18
 3135 03b5 01       		.uleb128 0x1
 3136 03b6 9C       		.byte	0x9c
 3137 03b7 CB030000 		.4byte	0x3cb
 3138 03bb 13       		.uleb128 0x13
 3139 03bc A8020000 		.4byte	.LASF44
 3140 03c0 01       		.byte	0x1
 3141 03c1 7E03     		.2byte	0x37e
 3142 03c3 6B000000 		.4byte	0x6b
 3143 03c7 02       		.uleb128 0x2
 3144 03c8 91       		.byte	0x91
 3145 03c9 77       		.sleb128 -9
 3146 03ca 00       		.byte	0
 3147 03cb 15       		.uleb128 0x15
 3148 03cc 1D030000 		.4byte	.LASF52
 3149 03d0 01       		.byte	0x1
 3150 03d1 AB03     		.2byte	0x3ab
 3151 03d3 00000000 		.4byte	.LFB19
 3152 03d7 58000000 		.4byte	.LFE19-.LFB19
 3153 03db 01       		.uleb128 0x1
 3154 03dc 9C       		.byte	0x9c
 3155 03dd F1030000 		.4byte	0x3f1
 3156 03e1 13       		.uleb128 0x13
 3157 03e2 E3010000 		.4byte	.LASF46
 3158 03e6 01       		.byte	0x1
 3159 03e7 AB03     		.2byte	0x3ab
 3160 03e9 77000000 		.4byte	0x77
 3161 03ed 02       		.uleb128 0x2
 3162 03ee 91       		.byte	0x91
 3163 03ef 76       		.sleb128 -10
 3164 03f0 00       		.byte	0
 3165 03f1 15       		.uleb128 0x15
 3166 03f2 24000000 		.4byte	.LASF53
 3167 03f6 01       		.byte	0x1
 3168 03f7 D903     		.2byte	0x3d9
 3169 03f9 00000000 		.4byte	.LFB20
 3170 03fd 58000000 		.4byte	.LFE20-.LFB20
 3171 0401 01       		.uleb128 0x1
 3172 0402 9C       		.byte	0x9c
 3173 0403 17040000 		.4byte	0x417
 3174 0407 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 93


 3175 0408 44030000 		.4byte	.LASF54
 3176 040c 01       		.byte	0x1
 3177 040d D903     		.2byte	0x3d9
 3178 040f 6B000000 		.4byte	0x6b
 3179 0413 02       		.uleb128 0x2
 3180 0414 91       		.byte	0x91
 3181 0415 77       		.sleb128 -9
 3182 0416 00       		.byte	0
 3183 0417 15       		.uleb128 0x15
 3184 0418 AE020000 		.4byte	.LASF55
 3185 041c 01       		.byte	0x1
 3186 041d 0604     		.2byte	0x406
 3187 041f 00000000 		.4byte	.LFB21
 3188 0423 58000000 		.4byte	.LFE21-.LFB21
 3189 0427 01       		.uleb128 0x1
 3190 0428 9C       		.byte	0x9c
 3191 0429 3D040000 		.4byte	0x43d
 3192 042d 13       		.uleb128 0x13
 3193 042e 73040000 		.4byte	.LASF56
 3194 0432 01       		.byte	0x1
 3195 0433 0604     		.2byte	0x406
 3196 0435 77000000 		.4byte	0x77
 3197 0439 02       		.uleb128 0x2
 3198 043a 91       		.byte	0x91
 3199 043b 76       		.sleb128 -10
 3200 043c 00       		.byte	0
 3201 043d 11       		.uleb128 0x11
 3202 043e E8010000 		.4byte	.LASF58
 3203 0442 01       		.byte	0x1
 3204 0443 2904     		.2byte	0x429
 3205 0445 6B000000 		.4byte	0x6b
 3206 0449 00000000 		.4byte	.LFB22
 3207 044d 18000000 		.4byte	.LFE22-.LFB22
 3208 0451 01       		.uleb128 0x1
 3209 0452 9C       		.byte	0x9c
 3210 0453 11       		.uleb128 0x11
 3211 0454 32050000 		.4byte	.LASF59
 3212 0458 01       		.byte	0x1
 3213 0459 4104     		.2byte	0x441
 3214 045b 6B000000 		.4byte	0x6b
 3215 045f 00000000 		.4byte	.LFB23
 3216 0463 18000000 		.4byte	.LFE23-.LFB23
 3217 0467 01       		.uleb128 0x1
 3218 0468 9C       		.byte	0x9c
 3219 0469 11       		.uleb128 0x11
 3220 046a A5030000 		.4byte	.LASF60
 3221 046e 01       		.byte	0x1
 3222 046f 5904     		.2byte	0x459
 3223 0471 6B000000 		.4byte	0x6b
 3224 0475 00000000 		.4byte	.LFB24
 3225 0479 18000000 		.4byte	.LFE24-.LFB24
 3226 047d 01       		.uleb128 0x1
 3227 047e 9C       		.byte	0x9c
 3228 047f 11       		.uleb128 0x11
 3229 0480 96040000 		.4byte	.LASF61
 3230 0484 01       		.byte	0x1
 3231 0485 7304     		.2byte	0x473
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 94


 3232 0487 6B000000 		.4byte	0x6b
 3233 048b 00000000 		.4byte	.LFB25
 3234 048f 18000000 		.4byte	.LFE25-.LFB25
 3235 0493 01       		.uleb128 0x1
 3236 0494 9C       		.byte	0x9c
 3237 0495 11       		.uleb128 0x11
 3238 0496 BF010000 		.4byte	.LASF62
 3239 049a 01       		.byte	0x1
 3240 049b 8B04     		.2byte	0x48b
 3241 049d 6B000000 		.4byte	0x6b
 3242 04a1 00000000 		.4byte	.LFB26
 3243 04a5 18000000 		.4byte	.LFE26-.LFB26
 3244 04a9 01       		.uleb128 0x1
 3245 04aa 9C       		.byte	0x9c
 3246 04ab 11       		.uleb128 0x11
 3247 04ac 58050000 		.4byte	.LASF63
 3248 04b0 01       		.byte	0x1
 3249 04b1 A304     		.2byte	0x4a3
 3250 04b3 77000000 		.4byte	0x77
 3251 04b7 00000000 		.4byte	.LFB27
 3252 04bb 18000000 		.4byte	.LFE27-.LFB27
 3253 04bf 01       		.uleb128 0x1
 3254 04c0 9C       		.byte	0x9c
 3255 04c1 11       		.uleb128 0x11
 3256 04c2 82040000 		.4byte	.LASF64
 3257 04c6 01       		.byte	0x1
 3258 04c7 BC04     		.2byte	0x4bc
 3259 04c9 6B000000 		.4byte	0x6b
 3260 04cd 00000000 		.4byte	.LFB28
 3261 04d1 18000000 		.4byte	.LFE28-.LFB28
 3262 04d5 01       		.uleb128 0x1
 3263 04d6 9C       		.byte	0x9c
 3264 04d7 11       		.uleb128 0x11
 3265 04d8 30030000 		.4byte	.LASF65
 3266 04dc 01       		.byte	0x1
 3267 04dd D404     		.2byte	0x4d4
 3268 04df 6B000000 		.4byte	0x6b
 3269 04e3 00000000 		.4byte	.LFB29
 3270 04e7 18000000 		.4byte	.LFE29-.LFB29
 3271 04eb 01       		.uleb128 0x1
 3272 04ec 9C       		.byte	0x9c
 3273 04ed 11       		.uleb128 0x11
 3274 04ee AD010000 		.4byte	.LASF66
 3275 04f2 01       		.byte	0x1
 3276 04f3 EC04     		.2byte	0x4ec
 3277 04f5 6B000000 		.4byte	0x6b
 3278 04f9 00000000 		.4byte	.LFB30
 3279 04fd 18000000 		.4byte	.LFE30-.LFB30
 3280 0501 01       		.uleb128 0x1
 3281 0502 9C       		.byte	0x9c
 3282 0503 11       		.uleb128 0x11
 3283 0504 B7030000 		.4byte	.LASF67
 3284 0508 01       		.byte	0x1
 3285 0509 0505     		.2byte	0x505
 3286 050b 6B000000 		.4byte	0x6b
 3287 050f 00000000 		.4byte	.LFB31
 3288 0513 18000000 		.4byte	.LFE31-.LFB31
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 95


 3289 0517 01       		.uleb128 0x1
 3290 0518 9C       		.byte	0x9c
 3291 0519 11       		.uleb128 0x11
 3292 051a 7A010000 		.4byte	.LASF68
 3293 051e 01       		.byte	0x1
 3294 051f 1E05     		.2byte	0x51e
 3295 0521 6B000000 		.4byte	0x6b
 3296 0525 00000000 		.4byte	.LFB32
 3297 0529 18000000 		.4byte	.LFE32-.LFB32
 3298 052d 01       		.uleb128 0x1
 3299 052e 9C       		.byte	0x9c
 3300 052f 11       		.uleb128 0x11
 3301 0530 7B050000 		.4byte	.LASF69
 3302 0534 01       		.byte	0x1
 3303 0535 3605     		.2byte	0x536
 3304 0537 77000000 		.4byte	0x77
 3305 053b 00000000 		.4byte	.LFB33
 3306 053f 18000000 		.4byte	.LFE33-.LFB33
 3307 0543 01       		.uleb128 0x1
 3308 0544 9C       		.byte	0x9c
 3309 0545 11       		.uleb128 0x11
 3310 0546 41050000 		.4byte	.LASF70
 3311 054a 01       		.byte	0x1
 3312 054b 4F05     		.2byte	0x54f
 3313 054d 6B000000 		.4byte	0x6b
 3314 0551 00000000 		.4byte	.LFB34
 3315 0555 18000000 		.4byte	.LFE34-.LFB34
 3316 0559 01       		.uleb128 0x1
 3317 055a 9C       		.byte	0x9c
 3318 055b 11       		.uleb128 0x11
 3319 055c BE040000 		.4byte	.LASF71
 3320 0560 01       		.byte	0x1
 3321 0561 6805     		.2byte	0x568
 3322 0563 77000000 		.4byte	0x77
 3323 0567 00000000 		.4byte	.LFB35
 3324 056b 18000000 		.4byte	.LFE35-.LFB35
 3325 056f 01       		.uleb128 0x1
 3326 0570 9C       		.byte	0x9c
 3327 0571 15       		.uleb128 0x15
 3328 0572 F7040000 		.4byte	.LASF72
 3329 0576 01       		.byte	0x1
 3330 0577 8505     		.2byte	0x585
 3331 0579 00000000 		.4byte	.LFB36
 3332 057d 20000000 		.4byte	.LFE36-.LFB36
 3333 0581 01       		.uleb128 0x1
 3334 0582 9C       		.byte	0x9c
 3335 0583 97050000 		.4byte	0x597
 3336 0587 13       		.uleb128 0x13
 3337 0588 68020000 		.4byte	.LASF73
 3338 058c 01       		.byte	0x1
 3339 058d 8505     		.2byte	0x585
 3340 058f 6B000000 		.4byte	0x6b
 3341 0593 02       		.uleb128 0x2
 3342 0594 91       		.byte	0x91
 3343 0595 77       		.sleb128 -9
 3344 0596 00       		.byte	0
 3345 0597 15       		.uleb128 0x15
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 96


 3346 0598 CF030000 		.4byte	.LASF74
 3347 059c 01       		.byte	0x1
 3348 059d A105     		.2byte	0x5a1
 3349 059f 00000000 		.4byte	.LFB37
 3350 05a3 20000000 		.4byte	.LFE37-.LFB37
 3351 05a7 01       		.uleb128 0x1
 3352 05a8 9C       		.byte	0x9c
 3353 05a9 BD050000 		.4byte	0x5bd
 3354 05ad 13       		.uleb128 0x13
 3355 05ae 68020000 		.4byte	.LASF73
 3356 05b2 01       		.byte	0x1
 3357 05b3 A105     		.2byte	0x5a1
 3358 05b5 6B000000 		.4byte	0x6b
 3359 05b9 02       		.uleb128 0x2
 3360 05ba 91       		.byte	0x91
 3361 05bb 77       		.sleb128 -9
 3362 05bc 00       		.byte	0
 3363 05bd 16       		.uleb128 0x16
 3364 05be 6C050000 		.4byte	.LASF89
 3365 05c2 01       		.byte	0x1
 3366 05c3 C005     		.2byte	0x5c0
 3367 05c5 6B000000 		.4byte	0x6b
 3368 05c9 00000000 		.4byte	.LFB38
 3369 05cd 2C000000 		.4byte	.LFE38-.LFB38
 3370 05d1 01       		.uleb128 0x1
 3371 05d2 9C       		.byte	0x9c
 3372 05d3 E7050000 		.4byte	0x5e7
 3373 05d7 10       		.uleb128 0x10
 3374 05d8 65050000 		.4byte	.LASF75
 3375 05dc 01       		.byte	0x1
 3376 05dd C205     		.2byte	0x5c2
 3377 05df 6B000000 		.4byte	0x6b
 3378 05e3 02       		.uleb128 0x2
 3379 05e4 91       		.byte	0x91
 3380 05e5 77       		.sleb128 -9
 3381 05e6 00       		.byte	0
 3382 05e7 17       		.uleb128 0x17
 3383 05e8 F6030000 		.4byte	.LASF90
 3384 05ec 01       		.byte	0x1
 3385 05ed DE05     		.2byte	0x5de
 3386 05ef 6B000000 		.4byte	0x6b
 3387 05f3 00000000 		.4byte	.LFB39
 3388 05f7 84000000 		.4byte	.LFE39-.LFB39
 3389 05fb 01       		.uleb128 0x1
 3390 05fc 9C       		.byte	0x9c
 3391 05fd 41060000 		.4byte	0x641
 3392 0601 13       		.uleb128 0x13
 3393 0602 EB030000 		.4byte	.LASF42
 3394 0606 01       		.byte	0x1
 3395 0607 DE05     		.2byte	0x5de
 3396 0609 6B000000 		.4byte	0x6b
 3397 060d 02       		.uleb128 0x2
 3398 060e 91       		.byte	0x91
 3399 060f 77       		.sleb128 -9
 3400 0610 13       		.uleb128 0x13
 3401 0611 A8020000 		.4byte	.LASF44
 3402 0615 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 97


 3403 0616 DE05     		.2byte	0x5de
 3404 0618 6B000000 		.4byte	0x6b
 3405 061c 02       		.uleb128 0x2
 3406 061d 91       		.byte	0x91
 3407 061e 76       		.sleb128 -10
 3408 061f 13       		.uleb128 0x13
 3409 0620 E3010000 		.4byte	.LASF46
 3410 0624 01       		.byte	0x1
 3411 0625 DE05     		.2byte	0x5de
 3412 0627 77000000 		.4byte	0x77
 3413 062b 02       		.uleb128 0x2
 3414 062c 91       		.byte	0x91
 3415 062d 74       		.sleb128 -12
 3416 062e 10       		.uleb128 0x10
 3417 062f 4E030000 		.4byte	.LASF76
 3418 0633 01       		.byte	0x1
 3419 0634 E205     		.2byte	0x5e2
 3420 0636 56060000 		.4byte	0x656
 3421 063a 05       		.uleb128 0x5
 3422 063b 03       		.byte	0x3
 3423 063c 0C000000 		.4byte	RTC_monthTemplate.5164
 3424 0640 00       		.byte	0
 3425 0641 18       		.uleb128 0x18
 3426 0642 51060000 		.4byte	0x651
 3427 0646 51060000 		.4byte	0x651
 3428 064a 19       		.uleb128 0x19
 3429 064b 46010000 		.4byte	0x146
 3430 064f 0B       		.byte	0xb
 3431 0650 00       		.byte	0
 3432 0651 14       		.uleb128 0x14
 3433 0652 6B000000 		.4byte	0x6b
 3434 0656 14       		.uleb128 0x14
 3435 0657 41060000 		.4byte	0x641
 3436 065b 1A       		.uleb128 0x1a
 3437 065c 19050000 		.4byte	.LASF91
 3438 0660 01       		.byte	0x1
 3439 0661 1806     		.2byte	0x618
 3440 0663 00000000 		.4byte	.LFB40
 3441 0667 C4030000 		.4byte	.LFE40-.LFB40
 3442 066b 01       		.uleb128 0x1
 3443 066c 9C       		.byte	0x9c
 3444 066d 8E060000 		.4byte	0x68e
 3445 0671 1B       		.uleb128 0x1b
 3446 0672 6900     		.ascii	"i\000"
 3447 0674 01       		.byte	0x1
 3448 0675 1A06     		.2byte	0x61a
 3449 0677 6B000000 		.4byte	0x6b
 3450 067b 02       		.uleb128 0x2
 3451 067c 91       		.byte	0x91
 3452 067d 77       		.sleb128 -9
 3453 067e 10       		.uleb128 0x10
 3454 067f 08030000 		.4byte	.LASF77
 3455 0683 01       		.byte	0x1
 3456 0684 1B06     		.2byte	0x61b
 3457 0686 6B000000 		.4byte	0x6b
 3458 068a 02       		.uleb128 0x2
 3459 068b 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 98


 3460 068c 76       		.sleb128 -10
 3461 068d 00       		.byte	0
 3462 068e 1C       		.uleb128 0x1c
 3463 068f D7010000 		.4byte	.LASF78
 3464 0693 01       		.byte	0x1
 3465 0694 1C       		.byte	0x1c
 3466 0695 6B000000 		.4byte	0x6b
 3467 0699 05       		.uleb128 0x5
 3468 069a 03       		.byte	0x3
 3469 069b 00000000 		.4byte	RTC_initVar
 3470 069f 1C       		.uleb128 0x1c
 3471 06a0 78020000 		.4byte	.LASF79
 3472 06a4 01       		.byte	0x1
 3473 06a5 28       		.byte	0x28
 3474 06a6 2F010000 		.4byte	0x12f
 3475 06aa 05       		.uleb128 0x5
 3476 06ab 03       		.byte	0x3
 3477 06ac 00000000 		.4byte	RTC_alarmCfgTimeDate
 3478 06b0 1C       		.uleb128 0x1c
 3479 06b1 27040000 		.4byte	.LASF80
 3480 06b5 01       		.byte	0x1
 3481 06b6 22       		.byte	0x22
 3482 06b7 2F010000 		.4byte	0x12f
 3483 06bb 05       		.uleb128 0x5
 3484 06bc 03       		.byte	0x3
 3485 06bd 00000000 		.4byte	RTC_currentTimeDate
 3486 06c1 1C       		.uleb128 0x1c
 3487 06c2 9C010000 		.4byte	.LASF81
 3488 06c6 01       		.byte	0x1
 3489 06c7 3B       		.byte	0x3b
 3490 06c8 B0000000 		.4byte	0xb0
 3491 06cc 05       		.uleb128 0x5
 3492 06cd 03       		.byte	0x3
 3493 06ce 00000000 		.4byte	RTC_alarmCfgMask
 3494 06d2 1C       		.uleb128 0x1c
 3495 06d3 07010000 		.4byte	.LASF82
 3496 06d7 01       		.byte	0x1
 3497 06d8 3C       		.byte	0x3c
 3498 06d9 B0000000 		.4byte	0xb0
 3499 06dd 05       		.uleb128 0x5
 3500 06de 03       		.byte	0x3
 3501 06df 00000000 		.4byte	RTC_alarmCurStatus
 3502 06e3 1C       		.uleb128 0x1c
 3503 06e4 42040000 		.4byte	.LASF83
 3504 06e8 01       		.byte	0x1
 3505 06e9 3D       		.byte	0x3d
 3506 06ea B0000000 		.4byte	0xb0
 3507 06ee 05       		.uleb128 0x5
 3508 06ef 03       		.byte	0x3
 3509 06f0 00000000 		.4byte	RTC_intervalCfgMask
 3510 06f4 1C       		.uleb128 0x1c
 3511 06f5 2E020000 		.4byte	.LASF84
 3512 06f9 01       		.byte	0x1
 3513 06fa 40       		.byte	0x40
 3514 06fb B0000000 		.4byte	0xb0
 3515 06ff 05       		.uleb128 0x5
 3516 0700 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 99


 3517 0701 00000000 		.4byte	RTC_statusDateTime
 3518 0705 1C       		.uleb128 0x1c
 3519 0706 66030000 		.4byte	.LASF85
 3520 070a 01       		.byte	0x1
 3521 070b 43       		.byte	0x43
 3522 070c 16070000 		.4byte	0x716
 3523 0710 05       		.uleb128 0x5
 3524 0711 03       		.byte	0x3
 3525 0712 00000000 		.4byte	RTC_daysInMonths
 3526 0716 14       		.uleb128 0x14
 3527 0717 41060000 		.4byte	0x641
 3528 071b 00       		.byte	0
 3529              		.section	.debug_abbrev,"",%progbits
 3530              	.Ldebug_abbrev0:
 3531 0000 01       		.uleb128 0x1
 3532 0001 11       		.uleb128 0x11
 3533 0002 01       		.byte	0x1
 3534 0003 25       		.uleb128 0x25
 3535 0004 0E       		.uleb128 0xe
 3536 0005 13       		.uleb128 0x13
 3537 0006 0B       		.uleb128 0xb
 3538 0007 03       		.uleb128 0x3
 3539 0008 0E       		.uleb128 0xe
 3540 0009 1B       		.uleb128 0x1b
 3541 000a 0E       		.uleb128 0xe
 3542 000b 55       		.uleb128 0x55
 3543 000c 17       		.uleb128 0x17
 3544 000d 11       		.uleb128 0x11
 3545 000e 01       		.uleb128 0x1
 3546 000f 10       		.uleb128 0x10
 3547 0010 17       		.uleb128 0x17
 3548 0011 00       		.byte	0
 3549 0012 00       		.byte	0
 3550 0013 02       		.uleb128 0x2
 3551 0014 24       		.uleb128 0x24
 3552 0015 00       		.byte	0
 3553 0016 0B       		.uleb128 0xb
 3554 0017 0B       		.uleb128 0xb
 3555 0018 3E       		.uleb128 0x3e
 3556 0019 0B       		.uleb128 0xb
 3557 001a 03       		.uleb128 0x3
 3558 001b 0E       		.uleb128 0xe
 3559 001c 00       		.byte	0
 3560 001d 00       		.byte	0
 3561 001e 03       		.uleb128 0x3
 3562 001f 24       		.uleb128 0x24
 3563 0020 00       		.byte	0
 3564 0021 0B       		.uleb128 0xb
 3565 0022 0B       		.uleb128 0xb
 3566 0023 3E       		.uleb128 0x3e
 3567 0024 0B       		.uleb128 0xb
 3568 0025 03       		.uleb128 0x3
 3569 0026 08       		.uleb128 0x8
 3570 0027 00       		.byte	0
 3571 0028 00       		.byte	0
 3572 0029 04       		.uleb128 0x4
 3573 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 100


 3574 002b 00       		.byte	0
 3575 002c 03       		.uleb128 0x3
 3576 002d 0E       		.uleb128 0xe
 3577 002e 3A       		.uleb128 0x3a
 3578 002f 0B       		.uleb128 0xb
 3579 0030 3B       		.uleb128 0x3b
 3580 0031 05       		.uleb128 0x5
 3581 0032 49       		.uleb128 0x49
 3582 0033 13       		.uleb128 0x13
 3583 0034 00       		.byte	0
 3584 0035 00       		.byte	0
 3585 0036 05       		.uleb128 0x5
 3586 0037 35       		.uleb128 0x35
 3587 0038 00       		.byte	0
 3588 0039 49       		.uleb128 0x49
 3589 003a 13       		.uleb128 0x13
 3590 003b 00       		.byte	0
 3591 003c 00       		.byte	0
 3592 003d 06       		.uleb128 0x6
 3593 003e 13       		.uleb128 0x13
 3594 003f 01       		.byte	0x1
 3595 0040 0B       		.uleb128 0xb
 3596 0041 0B       		.uleb128 0xb
 3597 0042 3A       		.uleb128 0x3a
 3598 0043 0B       		.uleb128 0xb
 3599 0044 3B       		.uleb128 0x3b
 3600 0045 0B       		.uleb128 0xb
 3601 0046 01       		.uleb128 0x1
 3602 0047 13       		.uleb128 0x13
 3603 0048 00       		.byte	0
 3604 0049 00       		.byte	0
 3605 004a 07       		.uleb128 0x7
 3606 004b 0D       		.uleb128 0xd
 3607 004c 00       		.byte	0
 3608 004d 03       		.uleb128 0x3
 3609 004e 08       		.uleb128 0x8
 3610 004f 3A       		.uleb128 0x3a
 3611 0050 0B       		.uleb128 0xb
 3612 0051 3B       		.uleb128 0x3b
 3613 0052 0B       		.uleb128 0xb
 3614 0053 49       		.uleb128 0x49
 3615 0054 13       		.uleb128 0x13
 3616 0055 38       		.uleb128 0x38
 3617 0056 0B       		.uleb128 0xb
 3618 0057 00       		.byte	0
 3619 0058 00       		.byte	0
 3620 0059 08       		.uleb128 0x8
 3621 005a 0D       		.uleb128 0xd
 3622 005b 00       		.byte	0
 3623 005c 03       		.uleb128 0x3
 3624 005d 0E       		.uleb128 0xe
 3625 005e 3A       		.uleb128 0x3a
 3626 005f 0B       		.uleb128 0xb
 3627 0060 3B       		.uleb128 0x3b
 3628 0061 0B       		.uleb128 0xb
 3629 0062 49       		.uleb128 0x49
 3630 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 101


 3631 0064 38       		.uleb128 0x38
 3632 0065 0B       		.uleb128 0xb
 3633 0066 00       		.byte	0
 3634 0067 00       		.byte	0
 3635 0068 09       		.uleb128 0x9
 3636 0069 16       		.uleb128 0x16
 3637 006a 00       		.byte	0
 3638 006b 03       		.uleb128 0x3
 3639 006c 0E       		.uleb128 0xe
 3640 006d 3A       		.uleb128 0x3a
 3641 006e 0B       		.uleb128 0xb
 3642 006f 3B       		.uleb128 0x3b
 3643 0070 0B       		.uleb128 0xb
 3644 0071 49       		.uleb128 0x49
 3645 0072 13       		.uleb128 0x13
 3646 0073 00       		.byte	0
 3647 0074 00       		.byte	0
 3648 0075 0A       		.uleb128 0xa
 3649 0076 2E       		.uleb128 0x2e
 3650 0077 00       		.byte	0
 3651 0078 3F       		.uleb128 0x3f
 3652 0079 19       		.uleb128 0x19
 3653 007a 03       		.uleb128 0x3
 3654 007b 0E       		.uleb128 0xe
 3655 007c 3A       		.uleb128 0x3a
 3656 007d 0B       		.uleb128 0xb
 3657 007e 3B       		.uleb128 0x3b
 3658 007f 0B       		.uleb128 0xb
 3659 0080 27       		.uleb128 0x27
 3660 0081 19       		.uleb128 0x19
 3661 0082 11       		.uleb128 0x11
 3662 0083 01       		.uleb128 0x1
 3663 0084 12       		.uleb128 0x12
 3664 0085 06       		.uleb128 0x6
 3665 0086 40       		.uleb128 0x40
 3666 0087 18       		.uleb128 0x18
 3667 0088 9642     		.uleb128 0x2116
 3668 008a 19       		.uleb128 0x19
 3669 008b 00       		.byte	0
 3670 008c 00       		.byte	0
 3671 008d 0B       		.uleb128 0xb
 3672 008e 2E       		.uleb128 0x2e
 3673 008f 01       		.byte	0x1
 3674 0090 3F       		.uleb128 0x3f
 3675 0091 19       		.uleb128 0x19
 3676 0092 03       		.uleb128 0x3
 3677 0093 0E       		.uleb128 0xe
 3678 0094 3A       		.uleb128 0x3a
 3679 0095 0B       		.uleb128 0xb
 3680 0096 3B       		.uleb128 0x3b
 3681 0097 0B       		.uleb128 0xb
 3682 0098 27       		.uleb128 0x27
 3683 0099 19       		.uleb128 0x19
 3684 009a 11       		.uleb128 0x11
 3685 009b 01       		.uleb128 0x1
 3686 009c 12       		.uleb128 0x12
 3687 009d 06       		.uleb128 0x6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 102


 3688 009e 40       		.uleb128 0x40
 3689 009f 18       		.uleb128 0x18
 3690 00a0 9642     		.uleb128 0x2116
 3691 00a2 19       		.uleb128 0x19
 3692 00a3 01       		.uleb128 0x1
 3693 00a4 13       		.uleb128 0x13
 3694 00a5 00       		.byte	0
 3695 00a6 00       		.byte	0
 3696 00a7 0C       		.uleb128 0xc
 3697 00a8 34       		.uleb128 0x34
 3698 00a9 00       		.byte	0
 3699 00aa 03       		.uleb128 0x3
 3700 00ab 0E       		.uleb128 0xe
 3701 00ac 3A       		.uleb128 0x3a
 3702 00ad 0B       		.uleb128 0xb
 3703 00ae 3B       		.uleb128 0x3b
 3704 00af 0B       		.uleb128 0xb
 3705 00b0 49       		.uleb128 0x49
 3706 00b1 13       		.uleb128 0x13
 3707 00b2 02       		.uleb128 0x2
 3708 00b3 18       		.uleb128 0x18
 3709 00b4 00       		.byte	0
 3710 00b5 00       		.byte	0
 3711 00b6 0D       		.uleb128 0xd
 3712 00b7 2E       		.uleb128 0x2e
 3713 00b8 00       		.byte	0
 3714 00b9 3F       		.uleb128 0x3f
 3715 00ba 19       		.uleb128 0x19
 3716 00bb 03       		.uleb128 0x3
 3717 00bc 0E       		.uleb128 0xe
 3718 00bd 3A       		.uleb128 0x3a
 3719 00be 0B       		.uleb128 0xb
 3720 00bf 3B       		.uleb128 0x3b
 3721 00c0 0B       		.uleb128 0xb
 3722 00c1 27       		.uleb128 0x27
 3723 00c2 19       		.uleb128 0x19
 3724 00c3 11       		.uleb128 0x11
 3725 00c4 01       		.uleb128 0x1
 3726 00c5 12       		.uleb128 0x12
 3727 00c6 06       		.uleb128 0x6
 3728 00c7 40       		.uleb128 0x40
 3729 00c8 18       		.uleb128 0x18
 3730 00c9 9742     		.uleb128 0x2117
 3731 00cb 19       		.uleb128 0x19
 3732 00cc 00       		.byte	0
 3733 00cd 00       		.byte	0
 3734 00ce 0E       		.uleb128 0xe
 3735 00cf 2E       		.uleb128 0x2e
 3736 00d0 00       		.byte	0
 3737 00d1 3F       		.uleb128 0x3f
 3738 00d2 19       		.uleb128 0x19
 3739 00d3 03       		.uleb128 0x3
 3740 00d4 0E       		.uleb128 0xe
 3741 00d5 3A       		.uleb128 0x3a
 3742 00d6 0B       		.uleb128 0xb
 3743 00d7 3B       		.uleb128 0x3b
 3744 00d8 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 103


 3745 00d9 27       		.uleb128 0x27
 3746 00da 19       		.uleb128 0x19
 3747 00db 11       		.uleb128 0x11
 3748 00dc 01       		.uleb128 0x1
 3749 00dd 12       		.uleb128 0x12
 3750 00de 06       		.uleb128 0x6
 3751 00df 40       		.uleb128 0x40
 3752 00e0 18       		.uleb128 0x18
 3753 00e1 9642     		.uleb128 0x2116
 3754 00e3 19       		.uleb128 0x19
 3755 00e4 00       		.byte	0
 3756 00e5 00       		.byte	0
 3757 00e6 0F       		.uleb128 0xf
 3758 00e7 2E       		.uleb128 0x2e
 3759 00e8 01       		.byte	0x1
 3760 00e9 3F       		.uleb128 0x3f
 3761 00ea 19       		.uleb128 0x19
 3762 00eb 03       		.uleb128 0x3
 3763 00ec 0E       		.uleb128 0xe
 3764 00ed 3A       		.uleb128 0x3a
 3765 00ee 0B       		.uleb128 0xb
 3766 00ef 3B       		.uleb128 0x3b
 3767 00f0 05       		.uleb128 0x5
 3768 00f1 27       		.uleb128 0x27
 3769 00f2 19       		.uleb128 0x19
 3770 00f3 11       		.uleb128 0x11
 3771 00f4 01       		.uleb128 0x1
 3772 00f5 12       		.uleb128 0x12
 3773 00f6 06       		.uleb128 0x6
 3774 00f7 40       		.uleb128 0x40
 3775 00f8 18       		.uleb128 0x18
 3776 00f9 9642     		.uleb128 0x2116
 3777 00fb 19       		.uleb128 0x19
 3778 00fc 01       		.uleb128 0x1
 3779 00fd 13       		.uleb128 0x13
 3780 00fe 00       		.byte	0
 3781 00ff 00       		.byte	0
 3782 0100 10       		.uleb128 0x10
 3783 0101 34       		.uleb128 0x34
 3784 0102 00       		.byte	0
 3785 0103 03       		.uleb128 0x3
 3786 0104 0E       		.uleb128 0xe
 3787 0105 3A       		.uleb128 0x3a
 3788 0106 0B       		.uleb128 0xb
 3789 0107 3B       		.uleb128 0x3b
 3790 0108 05       		.uleb128 0x5
 3791 0109 49       		.uleb128 0x49
 3792 010a 13       		.uleb128 0x13
 3793 010b 02       		.uleb128 0x2
 3794 010c 18       		.uleb128 0x18
 3795 010d 00       		.byte	0
 3796 010e 00       		.byte	0
 3797 010f 11       		.uleb128 0x11
 3798 0110 2E       		.uleb128 0x2e
 3799 0111 00       		.byte	0
 3800 0112 3F       		.uleb128 0x3f
 3801 0113 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 104


 3802 0114 03       		.uleb128 0x3
 3803 0115 0E       		.uleb128 0xe
 3804 0116 3A       		.uleb128 0x3a
 3805 0117 0B       		.uleb128 0xb
 3806 0118 3B       		.uleb128 0x3b
 3807 0119 05       		.uleb128 0x5
 3808 011a 27       		.uleb128 0x27
 3809 011b 19       		.uleb128 0x19
 3810 011c 49       		.uleb128 0x49
 3811 011d 13       		.uleb128 0x13
 3812 011e 11       		.uleb128 0x11
 3813 011f 01       		.uleb128 0x1
 3814 0120 12       		.uleb128 0x12
 3815 0121 06       		.uleb128 0x6
 3816 0122 40       		.uleb128 0x40
 3817 0123 18       		.uleb128 0x18
 3818 0124 9742     		.uleb128 0x2117
 3819 0126 19       		.uleb128 0x19
 3820 0127 00       		.byte	0
 3821 0128 00       		.byte	0
 3822 0129 12       		.uleb128 0x12
 3823 012a 0F       		.uleb128 0xf
 3824 012b 00       		.byte	0
 3825 012c 0B       		.uleb128 0xb
 3826 012d 0B       		.uleb128 0xb
 3827 012e 49       		.uleb128 0x49
 3828 012f 13       		.uleb128 0x13
 3829 0130 00       		.byte	0
 3830 0131 00       		.byte	0
 3831 0132 13       		.uleb128 0x13
 3832 0133 05       		.uleb128 0x5
 3833 0134 00       		.byte	0
 3834 0135 03       		.uleb128 0x3
 3835 0136 0E       		.uleb128 0xe
 3836 0137 3A       		.uleb128 0x3a
 3837 0138 0B       		.uleb128 0xb
 3838 0139 3B       		.uleb128 0x3b
 3839 013a 05       		.uleb128 0x5
 3840 013b 49       		.uleb128 0x49
 3841 013c 13       		.uleb128 0x13
 3842 013d 02       		.uleb128 0x2
 3843 013e 18       		.uleb128 0x18
 3844 013f 00       		.byte	0
 3845 0140 00       		.byte	0
 3846 0141 14       		.uleb128 0x14
 3847 0142 26       		.uleb128 0x26
 3848 0143 00       		.byte	0
 3849 0144 49       		.uleb128 0x49
 3850 0145 13       		.uleb128 0x13
 3851 0146 00       		.byte	0
 3852 0147 00       		.byte	0
 3853 0148 15       		.uleb128 0x15
 3854 0149 2E       		.uleb128 0x2e
 3855 014a 01       		.byte	0x1
 3856 014b 3F       		.uleb128 0x3f
 3857 014c 19       		.uleb128 0x19
 3858 014d 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 105


 3859 014e 0E       		.uleb128 0xe
 3860 014f 3A       		.uleb128 0x3a
 3861 0150 0B       		.uleb128 0xb
 3862 0151 3B       		.uleb128 0x3b
 3863 0152 05       		.uleb128 0x5
 3864 0153 27       		.uleb128 0x27
 3865 0154 19       		.uleb128 0x19
 3866 0155 11       		.uleb128 0x11
 3867 0156 01       		.uleb128 0x1
 3868 0157 12       		.uleb128 0x12
 3869 0158 06       		.uleb128 0x6
 3870 0159 40       		.uleb128 0x40
 3871 015a 18       		.uleb128 0x18
 3872 015b 9742     		.uleb128 0x2117
 3873 015d 19       		.uleb128 0x19
 3874 015e 01       		.uleb128 0x1
 3875 015f 13       		.uleb128 0x13
 3876 0160 00       		.byte	0
 3877 0161 00       		.byte	0
 3878 0162 16       		.uleb128 0x16
 3879 0163 2E       		.uleb128 0x2e
 3880 0164 01       		.byte	0x1
 3881 0165 3F       		.uleb128 0x3f
 3882 0166 19       		.uleb128 0x19
 3883 0167 03       		.uleb128 0x3
 3884 0168 0E       		.uleb128 0xe
 3885 0169 3A       		.uleb128 0x3a
 3886 016a 0B       		.uleb128 0xb
 3887 016b 3B       		.uleb128 0x3b
 3888 016c 05       		.uleb128 0x5
 3889 016d 27       		.uleb128 0x27
 3890 016e 19       		.uleb128 0x19
 3891 016f 49       		.uleb128 0x49
 3892 0170 13       		.uleb128 0x13
 3893 0171 11       		.uleb128 0x11
 3894 0172 01       		.uleb128 0x1
 3895 0173 12       		.uleb128 0x12
 3896 0174 06       		.uleb128 0x6
 3897 0175 40       		.uleb128 0x40
 3898 0176 18       		.uleb128 0x18
 3899 0177 9742     		.uleb128 0x2117
 3900 0179 19       		.uleb128 0x19
 3901 017a 01       		.uleb128 0x1
 3902 017b 13       		.uleb128 0x13
 3903 017c 00       		.byte	0
 3904 017d 00       		.byte	0
 3905 017e 17       		.uleb128 0x17
 3906 017f 2E       		.uleb128 0x2e
 3907 0180 01       		.byte	0x1
 3908 0181 03       		.uleb128 0x3
 3909 0182 0E       		.uleb128 0xe
 3910 0183 3A       		.uleb128 0x3a
 3911 0184 0B       		.uleb128 0xb
 3912 0185 3B       		.uleb128 0x3b
 3913 0186 05       		.uleb128 0x5
 3914 0187 27       		.uleb128 0x27
 3915 0188 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 106


 3916 0189 49       		.uleb128 0x49
 3917 018a 13       		.uleb128 0x13
 3918 018b 11       		.uleb128 0x11
 3919 018c 01       		.uleb128 0x1
 3920 018d 12       		.uleb128 0x12
 3921 018e 06       		.uleb128 0x6
 3922 018f 40       		.uleb128 0x40
 3923 0190 18       		.uleb128 0x18
 3924 0191 9742     		.uleb128 0x2117
 3925 0193 19       		.uleb128 0x19
 3926 0194 01       		.uleb128 0x1
 3927 0195 13       		.uleb128 0x13
 3928 0196 00       		.byte	0
 3929 0197 00       		.byte	0
 3930 0198 18       		.uleb128 0x18
 3931 0199 01       		.uleb128 0x1
 3932 019a 01       		.byte	0x1
 3933 019b 49       		.uleb128 0x49
 3934 019c 13       		.uleb128 0x13
 3935 019d 01       		.uleb128 0x1
 3936 019e 13       		.uleb128 0x13
 3937 019f 00       		.byte	0
 3938 01a0 00       		.byte	0
 3939 01a1 19       		.uleb128 0x19
 3940 01a2 21       		.uleb128 0x21
 3941 01a3 00       		.byte	0
 3942 01a4 49       		.uleb128 0x49
 3943 01a5 13       		.uleb128 0x13
 3944 01a6 2F       		.uleb128 0x2f
 3945 01a7 0B       		.uleb128 0xb
 3946 01a8 00       		.byte	0
 3947 01a9 00       		.byte	0
 3948 01aa 1A       		.uleb128 0x1a
 3949 01ab 2E       		.uleb128 0x2e
 3950 01ac 01       		.byte	0x1
 3951 01ad 03       		.uleb128 0x3
 3952 01ae 0E       		.uleb128 0xe
 3953 01af 3A       		.uleb128 0x3a
 3954 01b0 0B       		.uleb128 0xb
 3955 01b1 3B       		.uleb128 0x3b
 3956 01b2 05       		.uleb128 0x5
 3957 01b3 27       		.uleb128 0x27
 3958 01b4 19       		.uleb128 0x19
 3959 01b5 11       		.uleb128 0x11
 3960 01b6 01       		.uleb128 0x1
 3961 01b7 12       		.uleb128 0x12
 3962 01b8 06       		.uleb128 0x6
 3963 01b9 40       		.uleb128 0x40
 3964 01ba 18       		.uleb128 0x18
 3965 01bb 9642     		.uleb128 0x2116
 3966 01bd 19       		.uleb128 0x19
 3967 01be 01       		.uleb128 0x1
 3968 01bf 13       		.uleb128 0x13
 3969 01c0 00       		.byte	0
 3970 01c1 00       		.byte	0
 3971 01c2 1B       		.uleb128 0x1b
 3972 01c3 34       		.uleb128 0x34
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 107


 3973 01c4 00       		.byte	0
 3974 01c5 03       		.uleb128 0x3
 3975 01c6 08       		.uleb128 0x8
 3976 01c7 3A       		.uleb128 0x3a
 3977 01c8 0B       		.uleb128 0xb
 3978 01c9 3B       		.uleb128 0x3b
 3979 01ca 05       		.uleb128 0x5
 3980 01cb 49       		.uleb128 0x49
 3981 01cc 13       		.uleb128 0x13
 3982 01cd 02       		.uleb128 0x2
 3983 01ce 18       		.uleb128 0x18
 3984 01cf 00       		.byte	0
 3985 01d0 00       		.byte	0
 3986 01d1 1C       		.uleb128 0x1c
 3987 01d2 34       		.uleb128 0x34
 3988 01d3 00       		.byte	0
 3989 01d4 03       		.uleb128 0x3
 3990 01d5 0E       		.uleb128 0xe
 3991 01d6 3A       		.uleb128 0x3a
 3992 01d7 0B       		.uleb128 0xb
 3993 01d8 3B       		.uleb128 0x3b
 3994 01d9 0B       		.uleb128 0xb
 3995 01da 49       		.uleb128 0x49
 3996 01db 13       		.uleb128 0x13
 3997 01dc 3F       		.uleb128 0x3f
 3998 01dd 19       		.uleb128 0x19
 3999 01de 02       		.uleb128 0x2
 4000 01df 18       		.uleb128 0x18
 4001 01e0 00       		.byte	0
 4002 01e1 00       		.byte	0
 4003 01e2 00       		.byte	0
 4004              		.section	.debug_aranges,"",%progbits
 4005 0000 5C010000 		.4byte	0x15c
 4006 0004 0200     		.2byte	0x2
 4007 0006 00000000 		.4byte	.Ldebug_info0
 4008 000a 04       		.byte	0x4
 4009 000b 00       		.byte	0
 4010 000c 0000     		.2byte	0
 4011 000e 0000     		.2byte	0
 4012 0010 00000000 		.4byte	.LFB0
 4013 0014 24000000 		.4byte	.LFE0-.LFB0
 4014 0018 00000000 		.4byte	.LFB1
 4015 001c 3C000000 		.4byte	.LFE1-.LFB1
 4016 0020 00000000 		.4byte	.LFB2
 4017 0024 18000000 		.4byte	.LFE2-.LFB2
 4018 0028 00000000 		.4byte	.LFB3
 4019 002c 18000000 		.4byte	.LFE3-.LFB3
 4020 0030 00000000 		.4byte	.LFB4
 4021 0034 2C000000 		.4byte	.LFE4-.LFB4
 4022 0038 00000000 		.4byte	.LFB5
 4023 003c 3C000000 		.4byte	.LFE5-.LFB5
 4024 0040 00000000 		.4byte	.LFB6
 4025 0044 14000000 		.4byte	.LFE6-.LFB6
 4026 0048 00000000 		.4byte	.LFB7
 4027 004c 58000000 		.4byte	.LFE7-.LFB7
 4028 0050 00000000 		.4byte	.LFB8
 4029 0054 20000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 108


 4030 0058 00000000 		.4byte	.LFB9
 4031 005c 20000000 		.4byte	.LFE9-.LFB9
 4032 0060 00000000 		.4byte	.LFB10
 4033 0064 20000000 		.4byte	.LFE10-.LFB10
 4034 0068 00000000 		.4byte	.LFB11
 4035 006c 20000000 		.4byte	.LFE11-.LFB11
 4036 0070 00000000 		.4byte	.LFB12
 4037 0074 20000000 		.4byte	.LFE12-.LFB12
 4038 0078 00000000 		.4byte	.LFB13
 4039 007c 20000000 		.4byte	.LFE13-.LFB13
 4040 0080 00000000 		.4byte	.LFB14
 4041 0084 58000000 		.4byte	.LFE14-.LFB14
 4042 0088 00000000 		.4byte	.LFB15
 4043 008c 58000000 		.4byte	.LFE15-.LFB15
 4044 0090 00000000 		.4byte	.LFB16
 4045 0094 58000000 		.4byte	.LFE16-.LFB16
 4046 0098 00000000 		.4byte	.LFB17
 4047 009c 58000000 		.4byte	.LFE17-.LFB17
 4048 00a0 00000000 		.4byte	.LFB18
 4049 00a4 58000000 		.4byte	.LFE18-.LFB18
 4050 00a8 00000000 		.4byte	.LFB19
 4051 00ac 58000000 		.4byte	.LFE19-.LFB19
 4052 00b0 00000000 		.4byte	.LFB20
 4053 00b4 58000000 		.4byte	.LFE20-.LFB20
 4054 00b8 00000000 		.4byte	.LFB21
 4055 00bc 58000000 		.4byte	.LFE21-.LFB21
 4056 00c0 00000000 		.4byte	.LFB22
 4057 00c4 18000000 		.4byte	.LFE22-.LFB22
 4058 00c8 00000000 		.4byte	.LFB23
 4059 00cc 18000000 		.4byte	.LFE23-.LFB23
 4060 00d0 00000000 		.4byte	.LFB24
 4061 00d4 18000000 		.4byte	.LFE24-.LFB24
 4062 00d8 00000000 		.4byte	.LFB25
 4063 00dc 18000000 		.4byte	.LFE25-.LFB25
 4064 00e0 00000000 		.4byte	.LFB26
 4065 00e4 18000000 		.4byte	.LFE26-.LFB26
 4066 00e8 00000000 		.4byte	.LFB27
 4067 00ec 18000000 		.4byte	.LFE27-.LFB27
 4068 00f0 00000000 		.4byte	.LFB28
 4069 00f4 18000000 		.4byte	.LFE28-.LFB28
 4070 00f8 00000000 		.4byte	.LFB29
 4071 00fc 18000000 		.4byte	.LFE29-.LFB29
 4072 0100 00000000 		.4byte	.LFB30
 4073 0104 18000000 		.4byte	.LFE30-.LFB30
 4074 0108 00000000 		.4byte	.LFB31
 4075 010c 18000000 		.4byte	.LFE31-.LFB31
 4076 0110 00000000 		.4byte	.LFB32
 4077 0114 18000000 		.4byte	.LFE32-.LFB32
 4078 0118 00000000 		.4byte	.LFB33
 4079 011c 18000000 		.4byte	.LFE33-.LFB33
 4080 0120 00000000 		.4byte	.LFB34
 4081 0124 18000000 		.4byte	.LFE34-.LFB34
 4082 0128 00000000 		.4byte	.LFB35
 4083 012c 18000000 		.4byte	.LFE35-.LFB35
 4084 0130 00000000 		.4byte	.LFB36
 4085 0134 20000000 		.4byte	.LFE36-.LFB36
 4086 0138 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 109


 4087 013c 20000000 		.4byte	.LFE37-.LFB37
 4088 0140 00000000 		.4byte	.LFB38
 4089 0144 2C000000 		.4byte	.LFE38-.LFB38
 4090 0148 00000000 		.4byte	.LFB39
 4091 014c 84000000 		.4byte	.LFE39-.LFB39
 4092 0150 00000000 		.4byte	.LFB40
 4093 0154 C4030000 		.4byte	.LFE40-.LFB40
 4094 0158 00000000 		.4byte	0
 4095 015c 00000000 		.4byte	0
 4096              		.section	.debug_ranges,"",%progbits
 4097              	.Ldebug_ranges0:
 4098 0000 00000000 		.4byte	.LFB0
 4099 0004 24000000 		.4byte	.LFE0
 4100 0008 00000000 		.4byte	.LFB1
 4101 000c 3C000000 		.4byte	.LFE1
 4102 0010 00000000 		.4byte	.LFB2
 4103 0014 18000000 		.4byte	.LFE2
 4104 0018 00000000 		.4byte	.LFB3
 4105 001c 18000000 		.4byte	.LFE3
 4106 0020 00000000 		.4byte	.LFB4
 4107 0024 2C000000 		.4byte	.LFE4
 4108 0028 00000000 		.4byte	.LFB5
 4109 002c 3C000000 		.4byte	.LFE5
 4110 0030 00000000 		.4byte	.LFB6
 4111 0034 14000000 		.4byte	.LFE6
 4112 0038 00000000 		.4byte	.LFB7
 4113 003c 58000000 		.4byte	.LFE7
 4114 0040 00000000 		.4byte	.LFB8
 4115 0044 20000000 		.4byte	.LFE8
 4116 0048 00000000 		.4byte	.LFB9
 4117 004c 20000000 		.4byte	.LFE9
 4118 0050 00000000 		.4byte	.LFB10
 4119 0054 20000000 		.4byte	.LFE10
 4120 0058 00000000 		.4byte	.LFB11
 4121 005c 20000000 		.4byte	.LFE11
 4122 0060 00000000 		.4byte	.LFB12
 4123 0064 20000000 		.4byte	.LFE12
 4124 0068 00000000 		.4byte	.LFB13
 4125 006c 20000000 		.4byte	.LFE13
 4126 0070 00000000 		.4byte	.LFB14
 4127 0074 58000000 		.4byte	.LFE14
 4128 0078 00000000 		.4byte	.LFB15
 4129 007c 58000000 		.4byte	.LFE15
 4130 0080 00000000 		.4byte	.LFB16
 4131 0084 58000000 		.4byte	.LFE16
 4132 0088 00000000 		.4byte	.LFB17
 4133 008c 58000000 		.4byte	.LFE17
 4134 0090 00000000 		.4byte	.LFB18
 4135 0094 58000000 		.4byte	.LFE18
 4136 0098 00000000 		.4byte	.LFB19
 4137 009c 58000000 		.4byte	.LFE19
 4138 00a0 00000000 		.4byte	.LFB20
 4139 00a4 58000000 		.4byte	.LFE20
 4140 00a8 00000000 		.4byte	.LFB21
 4141 00ac 58000000 		.4byte	.LFE21
 4142 00b0 00000000 		.4byte	.LFB22
 4143 00b4 18000000 		.4byte	.LFE22
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 110


 4144 00b8 00000000 		.4byte	.LFB23
 4145 00bc 18000000 		.4byte	.LFE23
 4146 00c0 00000000 		.4byte	.LFB24
 4147 00c4 18000000 		.4byte	.LFE24
 4148 00c8 00000000 		.4byte	.LFB25
 4149 00cc 18000000 		.4byte	.LFE25
 4150 00d0 00000000 		.4byte	.LFB26
 4151 00d4 18000000 		.4byte	.LFE26
 4152 00d8 00000000 		.4byte	.LFB27
 4153 00dc 18000000 		.4byte	.LFE27
 4154 00e0 00000000 		.4byte	.LFB28
 4155 00e4 18000000 		.4byte	.LFE28
 4156 00e8 00000000 		.4byte	.LFB29
 4157 00ec 18000000 		.4byte	.LFE29
 4158 00f0 00000000 		.4byte	.LFB30
 4159 00f4 18000000 		.4byte	.LFE30
 4160 00f8 00000000 		.4byte	.LFB31
 4161 00fc 18000000 		.4byte	.LFE31
 4162 0100 00000000 		.4byte	.LFB32
 4163 0104 18000000 		.4byte	.LFE32
 4164 0108 00000000 		.4byte	.LFB33
 4165 010c 18000000 		.4byte	.LFE33
 4166 0110 00000000 		.4byte	.LFB34
 4167 0114 18000000 		.4byte	.LFE34
 4168 0118 00000000 		.4byte	.LFB35
 4169 011c 18000000 		.4byte	.LFE35
 4170 0120 00000000 		.4byte	.LFB36
 4171 0124 20000000 		.4byte	.LFE36
 4172 0128 00000000 		.4byte	.LFB37
 4173 012c 20000000 		.4byte	.LFE37
 4174 0130 00000000 		.4byte	.LFB38
 4175 0134 2C000000 		.4byte	.LFE38
 4176 0138 00000000 		.4byte	.LFB39
 4177 013c 84000000 		.4byte	.LFE39
 4178 0140 00000000 		.4byte	.LFB40
 4179 0144 C4030000 		.4byte	.LFE40
 4180 0148 00000000 		.4byte	0
 4181 014c 00000000 		.4byte	0
 4182              		.section	.debug_line,"",%progbits
 4183              	.Ldebug_line0:
 4184 0000 CD030000 		.section	.debug_str,"MS",%progbits,1
 4184      02004900 
 4184      00000201 
 4184      FB0E0D00 
 4184      01010101 
 4185              	.LASF10:
 4186 0000 75696E74 		.ascii	"uint16\000"
 4186      313600
 4187              	.LASF87:
 4188 0007 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC.c\000"
 4188      72617465 
 4188      645F536F 
 4188      75726365 
 4188      5C50536F 
 4189              	.LASF53:
 4190 0024 5254435F 		.ascii	"RTC_WriteAlarmDayOfWeek\000"
 4190      57726974 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 111


 4190      65416C61 
 4190      726D4461 
 4190      794F6657 
 4191              	.LASF86:
 4192 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4192      43313120 
 4192      352E342E 
 4192      31203230 
 4192      31363036 
 4193 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4193      20726576 
 4193      6973696F 
 4193      6E203233 
 4193      37373135 
 4194 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4194      66756E63 
 4194      74696F6E 
 4194      2D736563 
 4194      74696F6E 
 4195              	.LASF28:
 4196 00ca 5254435F 		.ascii	"RTC_DisableInt\000"
 4196      44697361 
 4196      626C6549 
 4196      6E7400
 4197              	.LASF29:
 4198 00d9 5254435F 		.ascii	"RTC_Init\000"
 4198      496E6974 
 4198      00
 4199              	.LASF27:
 4200 00e2 5254435F 		.ascii	"RTC_EnableInt\000"
 4200      456E6162 
 4200      6C65496E 
 4200      7400
 4201              	.LASF7:
 4202 00f0 6C6F6E67 		.ascii	"long long unsigned int\000"
 4202      206C6F6E 
 4202      6720756E 
 4202      7369676E 
 4202      65642069 
 4203              	.LASF82:
 4204 0107 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 4204      616C6172 
 4204      6D437572 
 4204      53746174 
 4204      757300
 4205              	.LASF17:
 4206 011a 486F7572 		.ascii	"Hour\000"
 4206      00
 4207              	.LASF47:
 4208 011f 5254435F 		.ascii	"RTC_WriteAlarmSecond\000"
 4208      57726974 
 4208      65416C61 
 4208      726D5365 
 4208      636F6E64 
 4209              	.LASF50:
 4210 0134 5254435F 		.ascii	"RTC_WriteAlarmDayOfMonth\000"
 4210      57726974 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 112


 4210      65416C61 
 4210      726D4461 
 4210      794F664D 
 4211              	.LASF49:
 4212 014d 5254435F 		.ascii	"RTC_WriteAlarmHour\000"
 4212      57726974 
 4212      65416C61 
 4212      726D486F 
 4212      757200
 4213              	.LASF6:
 4214 0160 6C6F6E67 		.ascii	"long long int\000"
 4214      206C6F6E 
 4214      6720696E 
 4214      7400
 4215              	.LASF0:
 4216 016e 7369676E 		.ascii	"signed char\000"
 4216      65642063 
 4216      68617200 
 4217              	.LASF68:
 4218 017a 5254435F 		.ascii	"RTC_ReadAlarmMonth\000"
 4218      52656164 
 4218      416C6172 
 4218      6D4D6F6E 
 4218      746800
 4219              	.LASF32:
 4220 018d 696E7465 		.ascii	"interruptState\000"
 4220      72727570 
 4220      74537461 
 4220      746500
 4221              	.LASF81:
 4222 019c 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 4222      616C6172 
 4222      6D436667 
 4222      4D61736B 
 4222      00
 4223              	.LASF66:
 4224 01ad 5254435F 		.ascii	"RTC_ReadAlarmHour\000"
 4224      52656164 
 4224      416C6172 
 4224      6D486F75 
 4224      7200
 4225              	.LASF62:
 4226 01bf 5254435F 		.ascii	"RTC_ReadMonth\000"
 4226      52656164 
 4226      4D6F6E74 
 4226      6800
 4227              	.LASF26:
 4228 01cd 5254435F 		.ascii	"RTC_Start\000"
 4228      53746172 
 4228      7400
 4229              	.LASF78:
 4230 01d7 5254435F 		.ascii	"RTC_initVar\000"
 4230      696E6974 
 4230      56617200 
 4231              	.LASF46:
 4232 01e3 79656172 		.ascii	"year\000"
 4232      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 113


 4233              	.LASF58:
 4234 01e8 5254435F 		.ascii	"RTC_ReadSecond\000"
 4234      52656164 
 4234      5365636F 
 4234      6E6400
 4235              	.LASF4:
 4236 01f7 6C6F6E67 		.ascii	"long int\000"
 4236      20696E74 
 4236      00
 4237              	.LASF21:
 4238 0200 4D6F6E74 		.ascii	"Month\000"
 4238      6800
 4239              	.LASF51:
 4240 0206 5254435F 		.ascii	"RTC_WriteAlarmMonth\000"
 4240      57726974 
 4240      65416C61 
 4240      726D4D6F 
 4240      6E746800 
 4241              	.LASF33:
 4242 021a 5254435F 		.ascii	"RTC_WriteTime\000"
 4242      57726974 
 4242      6554696D 
 4242      6500
 4243              	.LASF9:
 4244 0228 75696E74 		.ascii	"uint8\000"
 4244      3800
 4245              	.LASF84:
 4246 022e 5254435F 		.ascii	"RTC_statusDateTime\000"
 4246      73746174 
 4246      75734461 
 4246      74655469 
 4246      6D6500
 4247              	.LASF13:
 4248 0241 646F7562 		.ascii	"double\000"
 4248      6C6500
 4249              	.LASF57:
 4250 0248 5254435F 		.ascii	"RTC_ReadTime\000"
 4250      52656164 
 4250      54696D65 
 4250      00
 4251              	.LASF11:
 4252 0255 75696E74 		.ascii	"uint32\000"
 4252      333200
 4253              	.LASF24:
 4254 025c 6C6F6E67 		.ascii	"long double\000"
 4254      20646F75 
 4254      626C6500 
 4255              	.LASF73:
 4256 0268 6D61736B 		.ascii	"mask\000"
 4256      00
 4257              	.LASF31:
 4258 026d 5254435F 		.ascii	"RTC_Enable\000"
 4258      456E6162 
 4258      6C6500
 4259              	.LASF79:
 4260 0278 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 4260      616C6172 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 114


 4260      6D436667 
 4260      54696D65 
 4260      44617465 
 4261              	.LASF88:
 4262 028d 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4262      6F746F72 
 4262      694F535C 
 4262      6E6F746F 
 4262      72694F53 
 4263              	.LASF44:
 4264 02a8 6D6F6E74 		.ascii	"month\000"
 4264      6800
 4265              	.LASF55:
 4266 02ae 5254435F 		.ascii	"RTC_WriteAlarmDayOfYear\000"
 4266      57726974 
 4266      65416C61 
 4266      726D4461 
 4266      794F6659 
 4267              	.LASF8:
 4268 02c6 756E7369 		.ascii	"unsigned int\000"
 4268      676E6564 
 4268      20696E74 
 4268      00
 4269              	.LASF5:
 4270 02d3 6C6F6E67 		.ascii	"long unsigned int\000"
 4270      20756E73 
 4270      69676E65 
 4270      6420696E 
 4270      7400
 4271              	.LASF19:
 4272 02e5 4461794F 		.ascii	"DayOfMonth\000"
 4272      664D6F6E 
 4272      746800
 4273              	.LASF3:
 4274 02f0 73686F72 		.ascii	"short unsigned int\000"
 4274      7420756E 
 4274      7369676E 
 4274      65642069 
 4274      6E7400
 4275              	.LASF22:
 4276 0303 59656172 		.ascii	"Year\000"
 4276      00
 4277              	.LASF77:
 4278 0308 5254435F 		.ascii	"RTC_alarmCfgMaskTemp\000"
 4278      616C6172 
 4278      6D436667 
 4278      4D61736B 
 4278      54656D70 
 4279              	.LASF52:
 4280 031d 5254435F 		.ascii	"RTC_WriteAlarmYear\000"
 4280      57726974 
 4280      65416C61 
 4280      726D5965 
 4280      617200
 4281              	.LASF65:
 4282 0330 5254435F 		.ascii	"RTC_ReadAlarmMinute\000"
 4282      52656164 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 115


 4282      416C6172 
 4282      6D4D696E 
 4282      75746500 
 4283              	.LASF54:
 4284 0344 6461794F 		.ascii	"dayOfWeek\000"
 4284      66576565 
 4284      6B00
 4285              	.LASF76:
 4286 034e 5254435F 		.ascii	"RTC_monthTemplate\000"
 4286      6D6F6E74 
 4286      6854656D 
 4286      706C6174 
 4286      6500
 4287              	.LASF16:
 4288 0360 72656733 		.ascii	"reg32\000"
 4288      3200
 4289              	.LASF85:
 4290 0366 5254435F 		.ascii	"RTC_daysInMonths\000"
 4290      64617973 
 4290      496E4D6F 
 4290      6E746873 
 4290      00
 4291              	.LASF25:
 4292 0377 73697A65 		.ascii	"sizetype\000"
 4292      74797065 
 4292      00
 4293              	.LASF39:
 4294 0380 5254435F 		.ascii	"RTC_WriteHour\000"
 4294      57726974 
 4294      65486F75 
 4294      7200
 4295              	.LASF23:
 4296 038e 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4296      54494D45 
 4296      5F444154 
 4296      4500
 4297              	.LASF35:
 4298 039c 74696D65 		.ascii	"timeDate\000"
 4298      44617465 
 4298      00
 4299              	.LASF60:
 4300 03a5 5254435F 		.ascii	"RTC_ReadHour\000"
 4300      52656164 
 4300      486F7572 
 4300      00
 4301              	.LASF40:
 4302 03b2 686F7572 		.ascii	"hour\000"
 4302      00
 4303              	.LASF67:
 4304 03b7 5254435F 		.ascii	"RTC_ReadAlarmDayOfMonth\000"
 4304      52656164 
 4304      416C6172 
 4304      6D446179 
 4304      4F664D6F 
 4305              	.LASF74:
 4306 03cf 5254435F 		.ascii	"RTC_WriteIntervalMask\000"
 4306      57726974 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 116


 4306      65496E74 
 4306      65727661 
 4306      6C4D6173 
 4307              	.LASF12:
 4308 03e5 666C6F61 		.ascii	"float\000"
 4308      7400
 4309              	.LASF42:
 4310 03eb 6461794F 		.ascii	"dayOfMonth\000"
 4310      664D6F6E 
 4310      746800
 4311              	.LASF90:
 4312 03f6 5254435F 		.ascii	"RTC_DayOfWeek\000"
 4312      4461794F 
 4312      66576565 
 4312      6B00
 4313              	.LASF37:
 4314 0404 5254435F 		.ascii	"RTC_WriteMinute\000"
 4314      57726974 
 4314      654D696E 
 4314      75746500 
 4315              	.LASF15:
 4316 0414 72656738 		.ascii	"reg8\000"
 4316      00
 4317              	.LASF1:
 4318 0419 756E7369 		.ascii	"unsigned char\000"
 4318      676E6564 
 4318      20636861 
 4318      7200
 4319              	.LASF80:
 4320 0427 5254435F 		.ascii	"RTC_currentTimeDate\000"
 4320      63757272 
 4320      656E7454 
 4320      696D6544 
 4320      61746500 
 4321              	.LASF36:
 4322 043b 7365636F 		.ascii	"second\000"
 4322      6E6400
 4323              	.LASF83:
 4324 0442 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 4324      696E7465 
 4324      7276616C 
 4324      4366674D 
 4324      61736B00 
 4325              	.LASF2:
 4326 0456 73686F72 		.ascii	"short int\000"
 4326      7420696E 
 4326      7400
 4327              	.LASF30:
 4328 0460 5254435F 		.ascii	"RTC_Stop\000"
 4328      53746F70 
 4328      00
 4329              	.LASF18:
 4330 0469 4461794F 		.ascii	"DayOfWeek\000"
 4330      66576565 
 4330      6B00
 4331              	.LASF56:
 4332 0473 6461794F 		.ascii	"dayOfYear\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 117


 4332      66596561 
 4332      7200
 4333              	.LASF14:
 4334 047d 63686172 		.ascii	"char\000"
 4334      00
 4335              	.LASF64:
 4336 0482 5254435F 		.ascii	"RTC_ReadAlarmSecond\000"
 4336      52656164 
 4336      416C6172 
 4336      6D536563 
 4336      6F6E6400 
 4337              	.LASF61:
 4338 0496 5254435F 		.ascii	"RTC_ReadDayOfMonth\000"
 4338      52656164 
 4338      4461794F 
 4338      664D6F6E 
 4338      746800
 4339              	.LASF48:
 4340 04a9 5254435F 		.ascii	"RTC_WriteAlarmMinute\000"
 4340      57726974 
 4340      65416C61 
 4340      726D4D69 
 4340      6E757465 
 4341              	.LASF71:
 4342 04be 5254435F 		.ascii	"RTC_ReadAlarmDayOfYear\000"
 4342      52656164 
 4342      416C6172 
 4342      6D446179 
 4342      4F665965 
 4343              	.LASF45:
 4344 04d5 5254435F 		.ascii	"RTC_WriteYear\000"
 4344      57726974 
 4344      65596561 
 4344      7200
 4345              	.LASF41:
 4346 04e3 5254435F 		.ascii	"RTC_WriteDayOfMonth\000"
 4346      57726974 
 4346      65446179 
 4346      4F664D6F 
 4346      6E746800 
 4347              	.LASF72:
 4348 04f7 5254435F 		.ascii	"RTC_WriteAlarmMask\000"
 4348      57726974 
 4348      65416C61 
 4348      726D4D61 
 4348      736B00
 4349              	.LASF43:
 4350 050a 5254435F 		.ascii	"RTC_WriteMonth\000"
 4350      57726974 
 4350      654D6F6E 
 4350      746800
 4351              	.LASF91:
 4352 0519 5254435F 		.ascii	"RTC_SetInitValues\000"
 4352      53657449 
 4352      6E697456 
 4352      616C7565 
 4352      7300
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccm7aAtl.s 			page 118


 4353              	.LASF38:
 4354 052b 6D696E75 		.ascii	"minute\000"
 4354      746500
 4355              	.LASF59:
 4356 0532 5254435F 		.ascii	"RTC_ReadMinute\000"
 4356      52656164 
 4356      4D696E75 
 4356      746500
 4357              	.LASF70:
 4358 0541 5254435F 		.ascii	"RTC_ReadAlarmDayOfWeek\000"
 4358      52656164 
 4358      416C6172 
 4358      6D446179 
 4358      4F665765 
 4359              	.LASF63:
 4360 0558 5254435F 		.ascii	"RTC_ReadYear\000"
 4360      52656164 
 4360      59656172 
 4360      00
 4361              	.LASF75:
 4362 0565 73746174 		.ascii	"status\000"
 4362      757300
 4363              	.LASF89:
 4364 056c 5254435F 		.ascii	"RTC_ReadStatus\000"
 4364      52656164 
 4364      53746174 
 4364      757300
 4365              	.LASF69:
 4366 057b 5254435F 		.ascii	"RTC_ReadAlarmYear\000"
 4366      52656164 
 4366      416C6172 
 4366      6D596561 
 4366      7200
 4367              	.LASF34:
 4368 058d 5254435F 		.ascii	"RTC_WriteSecond\000"
 4368      57726974 
 4368      65536563 
 4368      6F6E6400 
 4369              	.LASF20:
 4370 059d 4461794F 		.ascii	"DayOfYear\000"
 4370      66596561 
 4370      7200
 4371              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

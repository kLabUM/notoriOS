ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 50 0
 127 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 52 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 62 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 63 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 65 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
 147              		.loc 1 68 0
 148 0048 2D4A     		ldr	r2, .L3+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 5


 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 70 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 79 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 80 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 82 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 6


 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 83 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 85 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // send hey to server saying the node rebooted
  88:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 88 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     char c_hey[10];
  90:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 90 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  91:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 91 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  92:notoriOS.c    ****     
  93:notoriOS.c    ****     // Initialize the try counter to 0
  94:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 94 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  95:notoriOS.c    **** }
 227              		.loc 1 95 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 7


 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  96:notoriOS.c    **** 
  97:notoriOS.c    **** 
  98:notoriOS.c    **** // ==============================================
  99:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 100:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 101:notoriOS.c    **** //
 102:notoriOS.c    **** // Prorcesses core tasks
 103:notoriOS.c    **** // ==============================================
 104:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 105:notoriOS.c    **** {
 265              		.loc 1 105 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 106:notoriOS.c    ****     
 107:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 108:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 109:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 110:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 111:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 8


 112:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 113:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 113 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 114:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 114 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 115:notoriOS.c    ****     }
 116:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 117:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 117 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 118:notoriOS.c    ****         //(int i=0; i<=30; i++){
 119:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 119 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 120:notoriOS.c    ****         //CyDelay(1000u);
 121:notoriOS.c    ****         //}
 122:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 122 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 123:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 123 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 124:notoriOS.c    ****     }
 125:notoriOS.c    ****     // Print the countdown to the next alarm
 126:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 127:notoriOS.c    ****     
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     // Check modem state machine on every loop
 130:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 9


 315              		.loc 1 130 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 131:notoriOS.c    **** 
 132:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 132 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133:notoriOS.c    **** }
 321              		.loc 1 133 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 134:notoriOS.c    **** 
 135:notoriOS.c    **** 
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** // ==============================================
 141:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 142:notoriOS.c    **** //      - Snoop Dogg (1993)
 143:notoriOS.c    **** //
 144:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 145:notoriOS.c    **** // ==============================================
 146:notoriOS.c    **** void LayBack()
 147:notoriOS.c    **** {
 346              		.loc 1 147 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 10


 355              		.cfi_def_cfa_register 7
 148:notoriOS.c    ****   
 149:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 149 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 150:notoriOS.c    ****     
 151:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 152:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 152 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 153:notoriOS.c    ****     
 154:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 154 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 157:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 158:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 159:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 160:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 161:notoriOS.c    ****     //CyPmHibernate();
 162:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 163:notoriOS.c    **** 
 164:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 164 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 166 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 168 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 169:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 169 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 170:notoriOS.c    **** 
 171:notoriOS.c    **** }
 372              		.loc 1 171 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
 172:notoriOS.c    **** 
 173:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 11


 174:notoriOS.c    **** // ==============================================
 175:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 176:notoriOS.c    **** //      - NAS (1994)
 177:notoriOS.c    **** //
 178:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 179:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 180:notoriOS.c    **** // It will add tasks to the work queue,
 181:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 182:notoriOS.c    **** // ==============================================
 183:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 184:notoriOS.c    **** {
 386              		.loc 1 184 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 185:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 186:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 186 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 187:notoriOS.c    ****     {
 188:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 189:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 189 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 190:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 191:notoriOS.c    ****         
 192:notoriOS.c    ****     }
 193:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 193 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
 194:notoriOS.c    ****     {
 195:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 12


 196:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 196 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 197:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 198:notoriOS.c    ****     }
 199:notoriOS.c    ****     
 200:notoriOS.c    **** }
 426              		.loc 1 200 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 201:notoriOS.c    **** 
 202:notoriOS.c    **** 
 203:notoriOS.c    **** // ==============================================
 204:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 207:notoriOS.c    **** {
 452              		.loc 1 207 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 13


 466 000a FB70     		strb	r3, [r7, #3]
 208:notoriOS.c    ****     // if the countDownType matches the alarmType
 209:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 209 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 210:notoriOS.c    ****        
 211:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 212:notoriOS.c    ****         // Decrement the count down value by 1
 213:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 213 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 214:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 215:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 215 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 216:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 216 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 217:notoriOS.c    ****             return 1u;
 493              		.loc 1 217 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 218:notoriOS.c    ****         } 
 219:notoriOS.c    ****     }
 220:notoriOS.c    ****     
 221:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 221 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 222:notoriOS.c    **** }
 500              		.loc 1 222 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 14


 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 223:notoriOS.c    **** 
 224:notoriOS.c    **** // ==============================================
 225:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 228:notoriOS.c    **** {
 519              		.loc 1 228 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 229:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 230:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 230 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 231:notoriOS.c    **** }
 539              		.loc 1 231 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 554              		.align	2
 555              		.global	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 15


 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 232:notoriOS.c    **** 
 233:notoriOS.c    **** // ==============================================
 234:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 237:notoriOS.c    **** {
 561              		.loc 1 237 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 238:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 239:notoriOS.c    ****     alarm newAlarm;
 240:notoriOS.c    ****     
 241:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 242:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 242 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 243:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 243 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 244:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 244 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 245:notoriOS.c    ****     
 246:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 247:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 248:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 248 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 249:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 16


 250:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 250 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 251:notoriOS.c    ****     
 252:notoriOS.c    **** }
 603              		.loc 1 252 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624 0093 00       		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
 635              	.LFB72:
 253:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 17


 254:notoriOS.c    **** // ==============================================
 255:notoriOS.c    **** // Dropping bombs on your moms
 256:notoriOS.c    **** //      - Ice Cube (1992)
 257:notoriOS.c    **** //
 258:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 259:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 260:notoriOS.c    **** // ==============================================
 261:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 261 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 1944
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF6141D 		subw	sp, sp, #2324
 646              		.cfi_def_cfa_offset 2336
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 1960
 262:notoriOS.c    **** 
 263:notoriOS.c    ****     //test_t t_influx = influx_test();
 264:notoriOS.c    ****     //printTestStatus(t_influx);
 265:notoriOS.c    ****     
 266:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 266 0
 650 0008 3849     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 267:notoriOS.c    ****     
 268:notoriOS.c    ****     // Test level sensor
 269:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 653              		.loc 1 269 0
 654 0010 07F21463 		addw	r3, r7, #1556
 655 0014 1846     		mov	r0, r3
 656 0016 FFF7FEFF 		bl	level_sensor_test
 270:notoriOS.c    ****     printTestStatus(t_level_sensor);
 657              		.loc 1 270 0
 658 001a 07F21464 		addw	r4, r7, #1556
 659 001e 6846     		mov	r0, sp
 660 0020 04F11003 		add	r3, r4, #16
 661 0024 40F27112 		movw	r2, #369
 662 0028 1946     		mov	r1, r3
 663 002a FFF7FEFF 		bl	memcpy
 664 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 665 0032 FFF7FEFF 		bl	printTestStatus
 271:notoriOS.c    ****     
 272:notoriOS.c    ****     // Test voltages
 273:notoriOS.c    ****     test_t t_voltages = voltages_test();
 666              		.loc 1 273 0
 667 0036 07F59263 		add	r3, r7, #1168
 668 003a 1846     		mov	r0, r3
 669 003c FFF7FEFF 		bl	voltages_test
 274:notoriOS.c    ****     printTestStatus(t_voltages);
 670              		.loc 1 274 0
 671 0040 07F59264 		add	r4, r7, #1168
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 18


 672 0044 6846     		mov	r0, sp
 673 0046 04F11003 		add	r3, r4, #16
 674 004a 40F27112 		movw	r2, #369
 675 004e 1946     		mov	r1, r3
 676 0050 FFF7FEFF 		bl	memcpy
 677 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 678 0058 FFF7FEFF 		bl	printTestStatus
 275:notoriOS.c    ****  
 276:notoriOS.c    ****     // Test voltages
 277:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 679              		.loc 1 277 0
 680 005c 07F54373 		add	r3, r7, #780
 681 0060 1846     		mov	r0, r3
 682 0062 FFF7FEFF 		bl	pressure_sensor_test
 278:notoriOS.c    ****     printTestStatus(t_pressure);
 683              		.loc 1 278 0
 684 0066 07F54374 		add	r4, r7, #780
 685 006a 6846     		mov	r0, sp
 686 006c 04F11003 		add	r3, r4, #16
 687 0070 40F27112 		movw	r2, #369
 688 0074 1946     		mov	r1, r3
 689 0076 FFF7FEFF 		bl	memcpy
 690 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 691 007e FFF7FEFF 		bl	printTestStatus
 279:notoriOS.c    ****     
 280:notoriOS.c    ****     // Test SD card
 281:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 692              		.loc 1 281 0
 693 0082 07F5C473 		add	r3, r7, #392
 694 0086 1846     		mov	r0, r3
 695 0088 FFF7FEFF 		bl	SD_card_test
 282:notoriOS.c    ****     printTestStatus(t_sd_card);
 696              		.loc 1 282 0
 697 008c 07F5C474 		add	r4, r7, #392
 698 0090 6846     		mov	r0, sp
 699 0092 04F11003 		add	r3, r4, #16
 700 0096 40F27112 		movw	r2, #369
 701 009a 1946     		mov	r1, r3
 702 009c FFF7FEFF 		bl	memcpy
 703 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 704 00a4 FFF7FEFF 		bl	printTestStatus
 283:notoriOS.c    ****     
 284:notoriOS.c    ****     // Test modem
 285:notoriOS.c    ****     test_t t_modem = modem_test();
 705              		.loc 1 285 0
 706 00a8 3B1D     		adds	r3, r7, #4
 707 00aa 1846     		mov	r0, r3
 708 00ac FFF7FEFF 		bl	modem_test
 286:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 709              		.loc 1 286 0
 710 00b0 0F4B     		ldr	r3, .L26+4
 711 00b2 0093     		str	r3, [sp]
 712 00b4 0F4B     		ldr	r3, .L26+8
 713 00b6 104A     		ldr	r2, .L26+12
 714 00b8 1049     		ldr	r1, .L26+16
 715 00ba 0320     		movs	r0, #3
 716 00bc FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 19


 287:notoriOS.c    ****     printTestStatus(t_modem);
 717              		.loc 1 287 0
 718 00c0 3C1D     		adds	r4, r7, #4
 719 00c2 6846     		mov	r0, sp
 720 00c4 04F11003 		add	r3, r4, #16
 721 00c8 40F27112 		movw	r2, #369
 722 00cc 1946     		mov	r1, r3
 723 00ce FFF7FEFF 		bl	memcpy
 724 00d2 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 725 00d6 FFF7FEFF 		bl	printTestStatus
 288:notoriOS.c    ****     
 289:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 726              		.loc 1 289 0
 727 00da 0949     		ldr	r1, .L26+20
 728 00dc 0320     		movs	r0, #3
 729 00de FFF7FEFF 		bl	printNotif
 290:notoriOS.c    **** 
 291:notoriOS.c    **** }
 730              		.loc 1 291 0
 731 00e2 00BF     		nop
 732 00e4 07F29C77 		addw	r7, r7, #1948
 733              		.cfi_def_cfa_offset 12
 734 00e8 BD46     		mov	sp, r7
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 00ea 90BD     		pop	{r4, r7, pc}
 738              	.L27:
 739              		.align	2
 740              	.L26:
 741 00ec 48000000 		.word	.LC4
 742 00f0 04000000 		.word	system_info+4
 743 00f4 00000000 		.word	modem_info
 744 00f8 28000000 		.word	modem_info+40
 745 00fc 74000000 		.word	.LC5
 746 0100 94000000 		.word	.LC6
 747              		.cfi_endproc
 748              	.LFE72:
 749              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 750              		.section	.text.main,"ax",%progbits
 751              		.align	2
 752              		.global	main
 753              		.thumb
 754              		.thumb_func
 755              		.type	main, %function
 756              	main:
 757              	.LFB73:
 292:notoriOS.c    **** 
 293:notoriOS.c    **** // ==============================================
 294:notoriOS.c    **** // Processes Core Tasks
 295:notoriOS.c    **** // ==============================================
 296:notoriOS.c    **** int main(void)
 297:notoriOS.c    **** {
 758              		.loc 1 297 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 20


 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 298:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 768              		.loc 1 298 0
 769              		.syntax unified
 770              	@ 298 "notoriOS.c" 1
 771 0004 62B6     		CPSIE   i
 772              	@ 0 "" 2
 299:notoriOS.c    **** 
 300:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 773              		.loc 1 300 0
 774              		.thumb
 775              		.syntax unified
 776 0006 FFF7FEFF 		bl	ReadyOrNot
 301:notoriOS.c    ****     
 302:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 777              		.loc 1 302 0
 778 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 779              	.L30:
 303:notoriOS.c    ****    
 304:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 305:notoriOS.c    ****     {
 306:notoriOS.c    ****         
 307:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 780              		.loc 1 307 0
 781 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 782 0012 0346     		mov	r3, r0
 783 0014 002B     		cmp	r3, #0
 784 0016 FAD1     		bne	.L30
 308:notoriOS.c    ****         {
 309:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 785              		.loc 1 309 0
 786 0018 FFF7FEFF 		bl	LayBack
 310:notoriOS.c    ****         }
 311:notoriOS.c    ****     }
 787              		.loc 1 311 0
 788 001c F7E7     		b	.L30
 789              		.cfi_endproc
 790              	.LFE73:
 791              		.size	main, .-main
 792 001e 00BF     		.section	.rodata
 793 00be 0000     		.align	2
 794              	.LC7:
 795 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 795      6D206973 
 795      20726561 
 795      64792E00 
 796              		.align	2
 797              	.LC8:
 798 00d0 72737270 		.ascii	"rsrp\000"
 798      00
 799 00d5 000000   		.align	2
 800              	.LC9:
 801 00d8 7472795F 		.ascii	"try_counter\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 21


 801      636F756E 
 801      74657200 
 802              		.align	2
 803              	.LC10:
 804 00e4 64617461 		.ascii	"data_count_sent\000"
 804      5F636F75 
 804      6E745F73 
 804      656E7400 
 805              		.align	2
 806              	.LC11:
 807 00f4 64617461 		.ascii	"data_count_desired\000"
 807      5F636F75 
 807      6E745F64 
 807      65736972 
 807      656400
 808 0107 00       		.align	2
 809              	.LC12:
 810 0108 42656769 		.ascii	"Begin HTTP post.\000"
 810      6E204854 
 810      54502070 
 810      6F73742E 
 810      00
 811 0119 000000   		.align	2
 812              	.LC13:
 813 011c 37333937 		.ascii	"73978d8a2cf9ff17d4f88ec40d0a83a9f9e01fa1\000"
 813      38643861 
 813      32636639 
 813      66663137 
 813      64346638 
 814 0145 000000   		.align	2
 815              	.LC14:
 816 0148 6170692F 		.ascii	"api/v1/write\000"
 816      76312F77 
 816      72697465 
 816      00
 817 0155 000000   		.align	2
 818              	.LC15:
 819 0158 48545450 		.ascii	"HTTP route: %s\000"
 819      20726F75 
 819      74653A20 
 819      257300
 820 0167 00       		.align	2
 821              	.LC16:
 822 0168 312E3100 		.ascii	"1.1\000"
 823              		.align	2
 824              	.LC17:
 825 016c 00       		.ascii	"\000"
 826 016d 000000   		.align	2
 827              	.LC18:
 828 0170 436C6F73 		.ascii	"Close\000"
 828      6500
 829 0176 0000     		.align	2
 830              	.LC19:
 831 0178 504F5354 		.ascii	"POST\000"
 831      00
 832 017d 000000   		.align	2
 833              	.LC20:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 22


 834 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 834      20485454 
 834      50205265 
 834      71756573 
 834      743A2025 
 835 0196 0000     		.align	2
 836              	.LC21:
 837 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 837      443D312C 
 837      302C2564 
 837      2C222573 
 837      222C302C 
 838 01b1 000000   		.align	2
 839              	.LC22:
 840 01b4 257300   		.ascii	"%s\000"
 841 01b7 00       		.align	2
 842              	.LC23:
 843 01b8 4F4B00   		.ascii	"OK\000"
 844              		.global	__aeabi_ui2d
 845              		.global	__aeabi_d2iz
 846 01bb 00       		.align	2
 847              	.LC24:
 848 01bc 68747470 		.ascii	"http_request len: %d\000"
 848      5F726571 
 848      75657374 
 848      206C656E 
 848      3A202564 
 849 01d1 000000   		.align	2
 850              	.LC25:
 851 01d4 23206F66 		.ascii	"# of packets: %d\000"
 851      20706163 
 851      6B657473 
 851      3A202564 
 851      00
 852 01e5 000000   		.align	2
 853              	.LC26:
 854 01e8 3E00     		.ascii	">\000"
 855 01ea 0000     		.align	2
 856              	.LC27:
 857 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 857      53454E44 
 857      3D310D0A 
 857      00
 858 01f9 000000   		.align	2
 859              	.LC28:
 860 01fc 1A00     		.ascii	"\032\000"
 861 01fe 0000     		.align	2
 862              	.LC29:
 863 0200 6368756E 		.ascii	"chunk %d: %s\000"
 863      6B202564 
 863      3A202573 
 863      00
 864 020d 000000   		.align	2
 865              	.LC30:
 866 0210 5352494E 		.ascii	"SRING\000"
 866      4700
 867 0216 0000     		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 23


 868              	.LC31:
 869 0218 4F532D4F 		.ascii	"OS-OK\000"
 869      4B00
 870 021e 0000     		.align	2
 871              	.LC32:
 872 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 872      52454356 
 872      3D312C31 
 872      3030300D 
 872      00
 873 0231 000000   		.align	2
 874              	.LC33:
 875 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 875      6D5F7478 
 875      5F74696D 
 875      6500
 876 0242 0000     		.align	2
 877              	.LC34:
 878 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 878      4F3A2043 
 878      6F756C64 
 878      206E6F74 
 878      20726563 
 879              		.section	.text.syncData,"ax",%progbits
 880              		.align	2
 881              		.global	syncData
 882              		.thumb
 883              		.thumb_func
 884              		.type	syncData, %function
 885              	syncData:
 886              	.LFB74:
 312:notoriOS.c    **** }
 313:notoriOS.c    **** 
 314:notoriOS.c    **** // ==============================================
 315:notoriOS.c    **** // Syncs data with server
 316:notoriOS.c    **** // Returns 0 when done
 317:notoriOS.c    **** // ==============================================
 318:notoriOS.c    **** uint8 syncData(){
 887              		.loc 1 318 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 1336
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891 0000 90B5     		push	{r4, r7, lr}
 892              		.cfi_def_cfa_offset 12
 893              		.cfi_offset 4, -12
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 ADF2545D 		subw	sp, sp, #1364
 897              		.cfi_def_cfa_offset 1376
 898 0006 06AF     		add	r7, sp, #24
 899              		.cfi_def_cfa 7, 1352
 319:notoriOS.c    ****     
 320:notoriOS.c    ****     /*
 321:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 322:notoriOS.c    ****     uint8 check = 0;
 323:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 324:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 24


 325:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 326:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 327:notoriOS.c    ****     */
 328:notoriOS.c    **** 
 329:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 330:notoriOS.c    ****     LED_Write(1u);
 900              		.loc 1 330 0
 901 0008 0120     		movs	r0, #1
 902 000a FFF7FEFF 		bl	LED_Write
 331:notoriOS.c    ****     CyDelay(100u);
 903              		.loc 1 331 0
 904 000e 6420     		movs	r0, #100
 905 0010 FFF7FEFF 		bl	CyDelay
 332:notoriOS.c    ****     LED_Write(0u);
 906              		.loc 1 332 0
 907 0014 0020     		movs	r0, #0
 908 0016 FFF7FEFF 		bl	LED_Write
 333:notoriOS.c    **** 
 334:notoriOS.c    ****     
 335:notoriOS.c    ****     // If there's no data, not need to do anything
 336:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 909              		.loc 1 336 0
 910 001a FFF7FEFF 		bl	sizeOfDataStack
 911 001e 0346     		mov	r3, r0
 912 0020 002B     		cmp	r3, #0
 913 0022 01D1     		bne	.L32
 337:notoriOS.c    ****         return 0u;
 914              		.loc 1 337 0
 915 0024 0023     		movs	r3, #0
 916 0026 F9E1     		b	.L33
 917              	.L32:
 338:notoriOS.c    ****         }
 339:notoriOS.c    ****     
 340:notoriOS.c    ****     // Create request body, in this case influx
 341:notoriOS.c    ****     // Place body into HTTP request header
 342:notoriOS.c    ****     // Fire up modem and get it out
 343:notoriOS.c    ****      
 344:notoriOS.c    ****     
 345:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 346:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 918              		.loc 1 346 0
 919 0028 FFF7FEFF 		bl	modem_get_state
 920 002c 0346     		mov	r3, r0
 921 002e 002B     		cmp	r3, #0
 922 0030 11D1     		bne	.L34
 347:notoriOS.c    **** 
 348:notoriOS.c    ****         try_counter++;
 923              		.loc 1 348 0
 924 0032 C74B     		ldr	r3, .L46
 925 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 926 0036 0133     		adds	r3, r3, #1
 927 0038 DAB2     		uxtb	r2, r3
 928 003a C54B     		ldr	r3, .L46
 929 003c 1A70     		strb	r2, [r3]
 349:notoriOS.c    ****         	
 350:notoriOS.c    ****         if(try_counter <= 2){
 930              		.loc 1 350 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 25


 931 003e C44B     		ldr	r3, .L46
 932 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 0042 022B     		cmp	r3, #2
 934 0044 02D8     		bhi	.L35
 351:notoriOS.c    ****             modem_power_up();
 935              		.loc 1 351 0
 936 0046 FFF7FEFF 		bl	modem_power_up
 937 004a E6E1     		b	.L36
 938              	.L35:
 352:notoriOS.c    ****         }else{
 353:notoriOS.c    ****             try_counter = 0;
 939              		.loc 1 353 0
 940 004c C04B     		ldr	r3, .L46
 941 004e 0022     		movs	r2, #0
 942 0050 1A70     		strb	r2, [r3]
 354:notoriOS.c    ****             return 0u;
 943              		.loc 1 354 0
 944 0052 0023     		movs	r3, #0
 945 0054 E2E1     		b	.L33
 946              	.L34:
 355:notoriOS.c    ****             }
 356:notoriOS.c    ****             
 357:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 947              		.loc 1 357 0
 948 0056 FFF7FEFF 		bl	modem_get_state
 949 005a 0346     		mov	r3, r0
 950 005c 042B     		cmp	r3, #4
 951 005e 40F0DC81 		bne	.L36
 952              	.LBB2:
 358:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 953              		.loc 1 358 0
 954 0062 BC49     		ldr	r1, .L46+4
 955 0064 0020     		movs	r0, #0
 956 0066 FFF7FEFF 		bl	printNotif
 359:notoriOS.c    ****         
 360:notoriOS.c    ****         http_request[0] = '\0';
 957              		.loc 1 360 0
 958 006a BB4B     		ldr	r3, .L46+8
 959 006c 0022     		movs	r2, #0
 960 006e 1A70     		strb	r2, [r3]
 361:notoriOS.c    ****         http_body[0] = '\0';
 961              		.loc 1 361 0
 962 0070 BA4B     		ldr	r3, .L46+12
 963 0072 0022     		movs	r2, #0
 964 0074 1A70     		strb	r2, [r3]
 362:notoriOS.c    ****         http_route[0] = '\0';
 965              		.loc 1 362 0
 966 0076 BA4B     		ldr	r3, .L46+16
 967 0078 0022     		movs	r2, #0
 968 007a 1A70     		strb	r2, [r3]
 363:notoriOS.c    ****         //char *base = "write";
 364:notoriOS.c    ****         
 365:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 366:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 367:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 969              		.loc 1 367 0
 970 007c B94B     		ldr	r3, .L46+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 26


 971 007e 5B69     		ldr	r3, [r3, #20]
 972 0080 07F5A260 		add	r0, r7, #1296
 973 0084 B84A     		ldr	r2, .L46+24
 974 0086 1421     		movs	r1, #20
 975 0088 FFF7FEFF 		bl	snprintf
 368:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 976              		.loc 1 368 0
 977 008c FFF7FEFF 		bl	getTimeStamp
 978 0090 0246     		mov	r2, r0
 979 0092 07F5A263 		add	r3, r7, #1296
 980 0096 1946     		mov	r1, r3
 981 0098 B448     		ldr	r0, .L46+28
 982 009a FFF7FEFF 		bl	pushData
 369:notoriOS.c    ****         
 370:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 371:notoriOS.c    ****         char c_try_counter[20];
 372:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 983              		.loc 1 372 0
 984 009e AC4B     		ldr	r3, .L46
 985 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 986 00a2 07F2FC40 		addw	r0, r7, #1276
 987 00a6 B04A     		ldr	r2, .L46+24
 988 00a8 1421     		movs	r1, #20
 989 00aa FFF7FEFF 		bl	snprintf
 373:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 990              		.loc 1 373 0
 991 00ae FFF7FEFF 		bl	getTimeStamp
 992 00b2 0246     		mov	r2, r0
 993 00b4 07F2FC43 		addw	r3, r7, #1276
 994 00b8 1946     		mov	r1, r3
 995 00ba AD48     		ldr	r0, .L46+32
 996 00bc FFF7FEFF 		bl	pushData
 374:notoriOS.c    ****         
 375:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 376:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 377:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 378:notoriOS.c    ****         if(buffer_overflow == false){
 997              		.loc 1 378 0
 998 00c0 AC4B     		ldr	r3, .L46+36
 999 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1000 00c4 83F00103 		eor	r3, r3, #1
 1001 00c8 DBB2     		uxtb	r3, r3
 1002 00ca 002B     		cmp	r3, #0
 1003 00cc 16D0     		beq	.L37
 1004              	.LBB3:
 379:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1005              		.loc 1 379 0
 1006 00ce FFF7FEFF 		bl	sizeOfDataStack
 1007 00d2 0346     		mov	r3, r0
 1008 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 380:notoriOS.c    ****             char c_data_count_sent[20];
 381:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1009              		.loc 1 381 0
 1010 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1011 00dc 07F2D440 		addw	r0, r7, #1236
 1012 00e0 A14A     		ldr	r2, .L46+24
 1013 00e2 1421     		movs	r1, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 27


 1014 00e4 FFF7FEFF 		bl	snprintf
 382:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1015              		.loc 1 382 0
 1016 00e8 FFF7FEFF 		bl	getTimeStamp
 1017 00ec 0246     		mov	r2, r0
 1018 00ee 07F2D443 		addw	r3, r7, #1236
 1019 00f2 1946     		mov	r1, r3
 1020 00f4 A048     		ldr	r0, .L46+40
 1021 00f6 FFF7FEFF 		bl	pushData
 1022              	.LBE3:
 1023 00fa 0FE0     		b	.L38
 1024              	.L37:
 1025              	.LBB4:
 383:notoriOS.c    ****         }else{
 384:notoriOS.c    ****             char c_data_count_sent[20];
 385:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1026              		.loc 1 385 0
 1027 00fc 07F59860 		add	r0, r7, #1216
 1028 0100 9623     		movs	r3, #150
 1029 0102 994A     		ldr	r2, .L46+24
 1030 0104 1421     		movs	r1, #20
 1031 0106 FFF7FEFF 		bl	snprintf
 386:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1032              		.loc 1 386 0
 1033 010a FFF7FEFF 		bl	getTimeStamp
 1034 010e 0246     		mov	r2, r0
 1035 0110 07F59863 		add	r3, r7, #1216
 1036 0114 1946     		mov	r1, r3
 1037 0116 9848     		ldr	r0, .L46+40
 1038 0118 FFF7FEFF 		bl	pushData
 1039              	.L38:
 1040              	.LBE4:
 387:notoriOS.c    ****         }
 388:notoriOS.c    ****         
 389:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 390:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1041              		.loc 1 390 0
 1042 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1043 0120 0346     		mov	r3, r0
 1044 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 391:notoriOS.c    ****         char c_data_count_desired[20];
 392:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 393:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1045              		.loc 1 393 0
 1046 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1047 012a 013B     		subs	r3, r3, #1
 1048 012c 07F59D60 		add	r0, r7, #1256
 1049 0130 8D4A     		ldr	r2, .L46+24
 1050 0132 1421     		movs	r1, #20
 1051 0134 FFF7FEFF 		bl	snprintf
 394:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1052              		.loc 1 394 0
 1053 0138 FFF7FEFF 		bl	getTimeStamp
 1054 013c 0246     		mov	r2, r0
 1055 013e 07F59D63 		add	r3, r7, #1256
 1056 0142 1946     		mov	r1, r3
 1057 0144 8D48     		ldr	r0, .L46+44
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 28


 1058 0146 FFF7FEFF 		bl	pushData
 395:notoriOS.c    ****         
 396:notoriOS.c    ****         // Construct HTPP request
 397:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1059              		.loc 1 397 0
 1060 014a 8D49     		ldr	r1, .L46+48
 1061 014c 0020     		movs	r0, #0
 1062 014e FFF7FEFF 		bl	printNotif
 398:notoriOS.c    ****         
 399:notoriOS.c    ****         // Old influx API
 400:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 401:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1063              		.loc 1 401 0
 1064 0152 8C4B     		ldr	r3, .L46+52
 1065 0154 8C4A     		ldr	r2, .L46+56
 1066 0156 8D49     		ldr	r1, .L46+60
 1067 0158 8148     		ldr	r0, .L46+16
 1068 015a FFF7FEFF 		bl	construct_malcom_route
 402:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1069              		.loc 1 402 0
 1070 015e 804A     		ldr	r2, .L46+16
 1071 0160 8B49     		ldr	r1, .L46+64
 1072 0162 0020     		movs	r0, #0
 1073 0164 FFF7FEFF 		bl	printNotif
 403:notoriOS.c    ****         
 404:notoriOS.c    ****         //OLD INFLUX API
 405:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 406:notoriOS.c    ****         construct_malcom_body(http_body);
 1074              		.loc 1 406 0
 1075 0168 7C48     		ldr	r0, .L46+12
 1076 016a FFF7FEFF 		bl	construct_malcom_body
 407:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1077              		.loc 1 407 0
 1078 016e 894B     		ldr	r3, .L46+68
 1079 0170 5B6E     		ldr	r3, [r3, #100]
 1080 0172 894A     		ldr	r2, .L46+72
 1081 0174 0592     		str	r2, [sp, #20]
 1082 0176 0022     		movs	r2, #0
 1083 0178 0492     		str	r2, [sp, #16]
 1084 017a 884A     		ldr	r2, .L46+76
 1085 017c 0392     		str	r2, [sp, #12]
 1086 017e 884A     		ldr	r2, .L46+80
 1087 0180 0292     		str	r2, [sp, #8]
 1088 0182 884A     		ldr	r2, .L46+84
 1089 0184 0192     		str	r2, [sp, #4]
 1090 0186 0093     		str	r3, [sp]
 1091 0188 754B     		ldr	r3, .L46+16
 1092 018a 824A     		ldr	r2, .L46+68
 1093 018c 7349     		ldr	r1, .L46+12
 1094 018e 7248     		ldr	r0, .L46+8
 1095 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 408:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1096              		.loc 1 408 0
 1097 0194 704A     		ldr	r2, .L46+8
 1098 0196 8449     		ldr	r1, .L46+88
 1099 0198 0020     		movs	r0, #0
 1100 019a FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 29


 409:notoriOS.c    ****         
 410:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 411:notoriOS.c    ****         // Open port and begin command line sequence
 412:notoriOS.c    ****         char portConfig[200];
 413:notoriOS.c    ****         uint8 status = 0u;
 1101              		.loc 1 413 0
 1102 019e 0023     		movs	r3, #0
 1103 01a0 87F82D35 		strb	r3, [r7, #1325]
 414:notoriOS.c    ****         
 415:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1104              		.loc 1 415 0
 1105 01a4 7B4B     		ldr	r3, .L46+68
 1106 01a6 5A6E     		ldr	r2, [r3, #100]
 1107 01a8 3846     		mov	r0, r7
 1108 01aa 7A4B     		ldr	r3, .L46+68
 1109 01ac 0093     		str	r3, [sp]
 1110 01ae 1346     		mov	r3, r2
 1111 01b0 7E4A     		ldr	r2, .L46+92
 1112 01b2 C821     		movs	r1, #200
 1113 01b4 FFF7FEFF 		bl	snprintf
 416:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1114              		.loc 1 416 0
 1115 01b8 3B46     		mov	r3, r7
 1116 01ba 1A46     		mov	r2, r3
 1117 01bc 7C49     		ldr	r1, .L46+96
 1118 01be 0020     		movs	r0, #0
 1119 01c0 FFF7FEFF 		bl	printNotif
 417:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1120              		.loc 1 417 0
 1121 01c4 3B46     		mov	r3, r7
 1122 01c6 42F21072 		movw	r2, #10000
 1123 01ca 7A49     		ldr	r1, .L46+100
 1124 01cc 1846     		mov	r0, r3
 1125 01ce FFF7FEFF 		bl	at_write_command
 1126 01d2 0346     		mov	r3, r0
 1127 01d4 87F82D35 		strb	r3, [r7, #1325]
 418:notoriOS.c    ****         
 419:notoriOS.c    ****         // create character pointer to chunk through the http_request
 420:notoriOS.c    ****         char *chunk;
 421:notoriOS.c    ****         // Set chunk to start where http_request starts
 422:notoriOS.c    ****         chunk = http_request;
 1128              		.loc 1 422 0
 1129 01d8 5F4B     		ldr	r3, .L46+8
 1130 01da C7F83435 		str	r3, [r7, #1332]
 423:notoriOS.c    ****         // variable for the number of packets to send
 424:notoriOS.c    ****         int8 packets;
 425:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1131              		.loc 1 425 0
 1132 01de 5E48     		ldr	r0, .L46+8
 1133 01e0 FFF7FEFF 		bl	strlen
 1134 01e4 0246     		mov	r2, r0
 1135 01e6 744B     		ldr	r3, .L46+104
 1136 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1137 01ec 5B09     		lsrs	r3, r3, #5
 1138 01ee 1846     		mov	r0, r3
 1139 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1140 01f4 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 30


 1141 01f8 704B     		ldr	r3, .L46+108
 1142 01fa FFF7FEFF 		bl	nextafter
 1143 01fe 0346     		mov	r3, r0
 1144 0200 0C46     		mov	r4, r1
 1145 0202 1846     		mov	r0, r3
 1146 0204 2146     		mov	r1, r4
 1147 0206 FFF7FEFF 		bl	ceil
 1148 020a 0346     		mov	r3, r0
 1149 020c 0C46     		mov	r4, r1
 1150 020e 1846     		mov	r0, r3
 1151 0210 2146     		mov	r1, r4
 1152 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1153 0216 0346     		mov	r3, r0
 1154 0218 87F82C35 		strb	r3, [r7, #1324]
 426:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1155              		.loc 1 426 0
 1156 021c 4E48     		ldr	r0, .L46+8
 1157 021e FFF7FEFF 		bl	strlen
 1158 0222 0346     		mov	r3, r0
 1159 0224 1A46     		mov	r2, r3
 1160 0226 6649     		ldr	r1, .L46+112
 1161 0228 0020     		movs	r0, #0
 1162 022a FFF7FEFF 		bl	printNotif
 427:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1163              		.loc 1 427 0
 1164 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1165 0232 1A46     		mov	r2, r3
 1166 0234 6349     		ldr	r1, .L46+116
 1167 0236 0020     		movs	r0, #0
 1168 0238 FFF7FEFF 		bl	printNotif
 1169              	.LBB5:
 428:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 429:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1170              		.loc 1 429 0
 1171 023c 0023     		movs	r3, #0
 1172 023e 87F83335 		strb	r3, [r7, #1331]
 1173 0242 53E0     		b	.L39
 1174              	.L42:
 1175              	.LBB6:
 430:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 431:notoriOS.c    ****             char http_chunk[1001];
 432:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 433:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 434:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1176              		.loc 1 434 0
 1177 0244 4FF47A72 		mov	r2, #1000
 1178 0248 5F49     		ldr	r1, .L46+120
 1179 024a 6048     		ldr	r0, .L46+124
 1180 024c FFF7FEFF 		bl	at_write_command
 1181 0250 0346     		mov	r3, r0
 1182 0252 87F82D35 		strb	r3, [r7, #1325]
 435:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 436:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1183              		.loc 1 436 0
 1184 0256 07F1C800 		add	r0, r7, #200
 1185 025a D7F83435 		ldr	r3, [r7, #1332]
 1186 025e 544A     		ldr	r2, .L46+96
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 31


 1187 0260 4FF4FA71 		mov	r1, #500
 1188 0264 FFF7FEFF 		bl	snprintf
 437:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 438:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1189              		.loc 1 438 0
 1190 0268 07F1C803 		add	r3, r7, #200
 1191 026c 1846     		mov	r0, r3
 1192 026e FFF7FEFF 		bl	strlen
 1193 0272 0346     		mov	r3, r0
 1194 0274 1A46     		mov	r2, r3
 1195 0276 07F1C803 		add	r3, r7, #200
 1196 027a 1344     		add	r3, r3, r2
 1197 027c 5449     		ldr	r1, .L46+128
 1198 027e 1A46     		mov	r2, r3
 1199 0280 0B46     		mov	r3, r1
 1200 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1201 0284 1380     		strh	r3, [r2]	@ unaligned
 439:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1202              		.loc 1 439 0
 1203 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1204 028a 07F1C803 		add	r3, r7, #200
 1205 028e 5149     		ldr	r1, .L46+132
 1206 0290 0020     		movs	r0, #0
 1207 0292 FFF7FEFF 		bl	printNotif
 440:notoriOS.c    ****             // Send data to server
 441:notoriOS.c    ****             if ((packet+1) != packets){
 1208              		.loc 1 441 0
 1209 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1210 029a 5A1C     		adds	r2, r3, #1
 1211 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1212 02a0 9A42     		cmp	r2, r3
 1213 02a2 11D0     		beq	.L40
 442:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1214              		.loc 1 442 0
 1215 02a4 07F1C803 		add	r3, r7, #200
 1216 02a8 41F28832 		movw	r2, #5000
 1217 02ac 4149     		ldr	r1, .L46+100
 1218 02ae 1846     		mov	r0, r3
 1219 02b0 FFF7FEFF 		bl	at_write_command
 1220 02b4 0346     		mov	r3, r0
 1221 02b6 87F82D35 		strb	r3, [r7, #1325]
 443:notoriOS.c    ****                 // Move the pointer forward 
 444:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1222              		.loc 1 444 0
 1223 02ba D7F83435 		ldr	r3, [r7, #1332]
 1224 02be 03F2F313 		addw	r3, r3, #499
 1225 02c2 C7F83435 		str	r3, [r7, #1332]
 1226 02c6 0AE0     		b	.L41
 1227              	.L40:
 445:notoriOS.c    ****             }else{
 446:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1228              		.loc 1 446 0
 1229 02c8 07F1C803 		add	r3, r7, #200
 1230 02cc 41F28832 		movw	r2, #5000
 1231 02d0 4149     		ldr	r1, .L46+136
 1232 02d2 1846     		mov	r0, r3
 1233 02d4 FFF7FEFF 		bl	at_write_command
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 32


 1234 02d8 0346     		mov	r3, r0
 1235 02da 87F82D35 		strb	r3, [r7, #1325]
 1236              	.L41:
 1237              	.LBE6:
 429:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1238              		.loc 1 429 0 discriminator 2
 1239 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1240 02e2 DBB2     		uxtb	r3, r3
 1241 02e4 0133     		adds	r3, r3, #1
 1242 02e6 DBB2     		uxtb	r3, r3
 1243 02e8 87F83335 		strb	r3, [r7, #1331]
 1244              	.L39:
 429:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1245              		.loc 1 429 0 is_stmt 0 discriminator 1
 1246 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1247 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1248 02f4 9A42     		cmp	r2, r3
 1249 02f6 A5DB     		blt	.L42
 1250              	.LBE5:
 447:notoriOS.c    ****             }
 448:notoriOS.c    ****             
 449:notoriOS.c    ****         }
 450:notoriOS.c    ****         
 451:notoriOS.c    ****         // Read received buffer
 452:notoriOS.c    ****         // A good write will return code "OS-OK"
 453:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 454:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 455:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1251              		.loc 1 455 0 is_stmt 1
 1252 02f8 41F28832 		movw	r2, #5000
 1253 02fc 3749     		ldr	r1, .L46+140
 1254 02fe 3848     		ldr	r0, .L46+144
 1255 0300 FFF7FEFF 		bl	at_write_command
 1256 0304 0346     		mov	r3, r0
 1257 0306 87F82D35 		strb	r3, [r7, #1325]
 456:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 457:notoriOS.c    ****     
 458:notoriOS.c    ****   
 459:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 460:notoriOS.c    ****         if(status == 1u){
 1258              		.loc 1 460 0
 1259 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1260 030e 012B     		cmp	r3, #1
 1261 0310 6CD1     		bne	.L43
 1262              	.LBB7:
 461:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1263              		.loc 1 461 0
 1264 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 462:notoriOS.c    ****             Clear_Data_Stack();
 1265              		.loc 1 462 0
 1266 0316 FFF7FEFF 		bl	Clear_Data_Stack
 463:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1267              		.loc 1 463 0
 1268 031a FFF7FEFF 		bl	getTimeStamp
 1269 031e 0246     		mov	r2, r0
 1270 0320 304B     		ldr	r3, .L46+148
 1271 0322 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 33


 1272 0324 D31A     		subs	r3, r2, r3
 1273 0326 C7F82835 		str	r3, [r7, #1320]
 464:notoriOS.c    ****             char s_send_time[10];
 465:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1274              		.loc 1 465 0
 1275 032a 07F2B440 		addw	r0, r7, #1204
 1276 032e D7F82835 		ldr	r3, [r7, #1320]
 1277 0332 0D4A     		ldr	r2, .L46+24
 1278 0334 0A21     		movs	r1, #10
 1279 0336 FFF7FEFF 		bl	snprintf
 466:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1280              		.loc 1 466 0
 1281 033a FFF7FEFF 		bl	getTimeStamp
 1282 033e 0246     		mov	r2, r0
 1283 0340 07F2B443 		addw	r3, r7, #1204
 1284 0344 1946     		mov	r1, r3
 1285 0346 2848     		ldr	r0, .L46+152
 1286 0348 FFF7FEFF 		bl	pushData
 1287              	.LBE7:
 1288 034c 52E0     		b	.L44
 1289              	.L47:
 1290 034e 00BF     		.align	2
 1291              	.L46:
 1292 0350 00000000 		.word	try_counter
 1293 0354 C0000000 		.word	.LC7
 1294 0358 00000000 		.word	http_request
 1295 035c 00000000 		.word	http_body
 1296 0360 00000000 		.word	http_route
 1297 0364 00000000 		.word	modem_stats
 1298 0368 3C000000 		.word	.LC2
 1299 036c D0000000 		.word	.LC8
 1300 0370 D8000000 		.word	.LC9
 1301 0374 00000000 		.word	buffer_overflow
 1302 0378 E4000000 		.word	.LC10
 1303 037c F4000000 		.word	.LC11
 1304 0380 08010000 		.word	.LC12
 1305 0384 1C010000 		.word	.LC13
 1306 0388 28000000 		.word	modem_info+40
 1307 038c 48010000 		.word	.LC14
 1308 0390 58010000 		.word	.LC15
 1309 0394 00000000 		.word	system_settings
 1310 0398 68010000 		.word	.LC16
 1311 039c 6C010000 		.word	.LC17
 1312 03a0 70010000 		.word	.LC18
 1313 03a4 78010000 		.word	.LC19
 1314 03a8 80010000 		.word	.LC20
 1315 03ac 98010000 		.word	.LC21
 1316 03b0 B4010000 		.word	.LC22
 1317 03b4 B8010000 		.word	.LC23
 1318 03b8 D34D6210 		.word	274877907
 1319 03bc 00407F40 		.word	1082081280
 1320 03c0 BC010000 		.word	.LC24
 1321 03c4 D4010000 		.word	.LC25
 1322 03c8 E8010000 		.word	.LC26
 1323 03cc EC010000 		.word	.LC27
 1324 03d0 FC010000 		.word	.LC28
 1325 03d4 00020000 		.word	.LC29
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 34


 1326 03d8 10020000 		.word	.LC30
 1327 03dc 18020000 		.word	.LC31
 1328 03e0 20020000 		.word	.LC32
 1329 03e4 00000000 		.word	modem_start_time_stamp
 1330 03e8 34020000 		.word	.LC33
 1331              	.L43:
 467:notoriOS.c    ****         }else{
 468:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1332              		.loc 1 468 0
 1333 03ec 0E49     		ldr	r1, .L48
 1334 03ee 0220     		movs	r0, #2
 1335 03f0 FFF7FEFF 		bl	printNotif
 1336              	.L44:
 469:notoriOS.c    ****         }
 470:notoriOS.c    ****          
 471:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 472:notoriOS.c    ****         long network_time = modem_get_network_time();
 1337              		.loc 1 472 0
 1338 03f4 FFF7FEFF 		bl	modem_get_network_time
 1339 03f8 C7F82405 		str	r0, [r7, #1316]
 473:notoriOS.c    ****         if(network_time != 0){
 1340              		.loc 1 473 0
 1341 03fc D7F82435 		ldr	r3, [r7, #1316]
 1342 0400 002B     		cmp	r3, #0
 1343 0402 03D0     		beq	.L45
 474:notoriOS.c    ****            setTime(network_time);
 1344              		.loc 1 474 0
 1345 0404 D7F82405 		ldr	r0, [r7, #1316]
 1346 0408 FFF7FEFF 		bl	setTime
 1347              	.L45:
 475:notoriOS.c    ****         }
 476:notoriOS.c    ****         
 477:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 478:notoriOS.c    ****         // If not -- keep the statck and try next time
 479:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 480:notoriOS.c    ****         modem_power_down();
 1348              		.loc 1 480 0
 1349 040c FFF7FEFF 		bl	modem_power_down
 481:notoriOS.c    ****         
 482:notoriOS.c    ****         try_counter = 0u;
 1350              		.loc 1 482 0
 1351 0410 064B     		ldr	r3, .L48+4
 1352 0412 0022     		movs	r2, #0
 1353 0414 1A70     		strb	r2, [r3]
 483:notoriOS.c    ****         return 0u;
 1354              		.loc 1 483 0
 1355 0416 0023     		movs	r3, #0
 1356 0418 00E0     		b	.L33
 1357              	.L36:
 1358              	.LBE2:
 484:notoriOS.c    ****     }
 485:notoriOS.c    ****       
 486:notoriOS.c    ****       return 1u; // Not done yet
 1359              		.loc 1 486 0
 1360 041a 0123     		movs	r3, #1
 1361              	.L33:
 487:notoriOS.c    **** }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 35


 1362              		.loc 1 487 0 discriminator 1
 1363 041c 1846     		mov	r0, r3
 1364 041e 07F23C57 		addw	r7, r7, #1340
 1365              		.cfi_def_cfa_offset 12
 1366 0422 BD46     		mov	sp, r7
 1367              		.cfi_def_cfa_register 13
 1368              		@ sp needed
 1369 0424 90BD     		pop	{r4, r7, pc}
 1370              	.L49:
 1371 0426 00BF     		.align	2
 1372              	.L48:
 1373 0428 44020000 		.word	.LC34
 1374 042c 00000000 		.word	try_counter
 1375              		.cfi_endproc
 1376              	.LFE74:
 1377              		.size	syncData, .-syncData
 1378              		.section	.text.configureRemoteParams,"ax",%progbits
 1379              		.align	2
 1380              		.global	configureRemoteParams
 1381              		.thumb
 1382              		.thumb_func
 1383              		.type	configureRemoteParams, %function
 1384              	configureRemoteParams:
 1385              	.LFB75:
 488:notoriOS.c    **** 
 489:notoriOS.c    **** // ==============================================
 490:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 491:notoriOS.c    **** // Returns 0 when done
 492:notoriOS.c    **** // ==============================================
 493:notoriOS.c    **** uint8 configureRemoteParams(){
 1386              		.loc 1 493 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 8
 1389              		@ frame_needed = 1, uses_anonymous_args = 0
 1390 0000 80B5     		push	{r7, lr}
 1391              		.cfi_def_cfa_offset 8
 1392              		.cfi_offset 7, -8
 1393              		.cfi_offset 14, -4
 1394 0002 82B0     		sub	sp, sp, #8
 1395              		.cfi_def_cfa_offset 16
 1396 0004 00AF     		add	r7, sp, #0
 1397              		.cfi_def_cfa_register 7
 494:notoriOS.c    ****     
 495:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1398              		.loc 1 495 0
 1399 0006 FFF7FEFF 		bl	modem_get_state
 1400 000a 0346     		mov	r3, r0
 1401 000c 002B     		cmp	r3, #0
 1402 000e 02D1     		bne	.L51
 496:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 497:notoriOS.c    ****         modem_power_up();
 1403              		.loc 1 497 0
 1404 0010 FFF7FEFF 		bl	modem_power_up
 1405 0014 11E0     		b	.L52
 1406              	.L51:
 498:notoriOS.c    ****             
 499:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 36


 1407              		.loc 1 499 0
 1408 0016 FFF7FEFF 		bl	modem_get_state
 1409 001a 0346     		mov	r3, r0
 1410 001c 042B     		cmp	r3, #4
 1411 001e 0CD1     		bne	.L52
 1412              	.LBB8:
 500:notoriOS.c    ****         
 501:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 502:notoriOS.c    ****         
 503:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 504:notoriOS.c    ****         long network_time = modem_get_network_time();
 1413              		.loc 1 504 0
 1414 0020 FFF7FEFF 		bl	modem_get_network_time
 1415 0024 7860     		str	r0, [r7, #4]
 505:notoriOS.c    ****         if(network_time != 0){
 1416              		.loc 1 505 0
 1417 0026 7B68     		ldr	r3, [r7, #4]
 1418 0028 002B     		cmp	r3, #0
 1419 002a 02D0     		beq	.L53
 506:notoriOS.c    ****             setTime(network_time);
 1420              		.loc 1 506 0
 1421 002c 7868     		ldr	r0, [r7, #4]
 1422 002e FFF7FEFF 		bl	setTime
 1423              	.L53:
 507:notoriOS.c    ****         }
 508:notoriOS.c    ****         
 509:notoriOS.c    ****         // Get GPS coordinates
 510:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 511:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 512:notoriOS.c    ****         modem_power_down();
 1424              		.loc 1 512 0
 1425 0032 FFF7FEFF 		bl	modem_power_down
 513:notoriOS.c    ****         return 0u;
 1426              		.loc 1 513 0
 1427 0036 0023     		movs	r3, #0
 1428 0038 00E0     		b	.L54
 1429              	.L52:
 1430              	.LBE8:
 514:notoriOS.c    ****         
 515:notoriOS.c    ****     }
 516:notoriOS.c    ****     
 517:notoriOS.c    ****     return 1u;
 1431              		.loc 1 517 0
 1432 003a 0123     		movs	r3, #1
 1433              	.L54:
 518:notoriOS.c    **** }
 1434              		.loc 1 518 0
 1435 003c 1846     		mov	r0, r3
 1436 003e 0837     		adds	r7, r7, #8
 1437              		.cfi_def_cfa_offset 8
 1438 0040 BD46     		mov	sp, r7
 1439              		.cfi_def_cfa_register 13
 1440              		@ sp needed
 1441 0042 80BD     		pop	{r7, pc}
 1442              		.cfi_endproc
 1443              	.LFE75:
 1444              		.size	configureRemoteParams, .-configureRemoteParams
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 37


 1445              		.section	.rodata
 1446 026f 00       		.align	2
 1447              	.LC35:
 1448 0270 256C6400 		.ascii	"%ld\000"
 1449              		.align	2
 1450              	.LC36:
 1451 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1451      6F746978 
 1451      5F646570 
 1451      74683D25 
 1451      7300
 1452 0286 0000     		.align	2
 1453              	.LC37:
 1454 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1454      6F746978 
 1454      5F646570 
 1454      746800
 1455 0297 00       		.align	2
 1456              	.LC38:
 1457 0298 612B00   		.ascii	"a+\000"
 1458 029b 00       		.align	2
 1459              	.LC39:
 1460 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1460      626F7469 
 1460      785F6465 
 1460      7074683A 
 1460      2000
 1461 02ae 0000     		.align	2
 1462              	.LC40:
 1463 02b0 2000     		.ascii	" \000"
 1464 02b2 0000     		.align	2
 1465              	.LC41:
 1466 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1466      64206E6F 
 1466      74206765 
 1466      74207661 
 1466      6C696420 
 1467              		.global	__aeabi_f2d
 1468              		.align	2
 1469              	.LC42:
 1470 02e0 252E3266 		.ascii	"%.2f\000"
 1470      00
 1471 02e5 000000   		.align	2
 1472              	.LC43:
 1473 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1473      743D2573 
 1473      00
 1474 02f1 000000   		.align	2
 1475              	.LC44:
 1476 02f4 765F6261 		.ascii	"v_bat\000"
 1476      7400
 1477 02fa 0000     		.align	2
 1478              	.LC45:
 1479 02fc 20766261 		.ascii	" vbat: \000"
 1479      743A2000 
 1480              		.align	2
 1481              	.LC46:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 38


 1482 0304 70726573 		.ascii	"pressure_current=%s\000"
 1482      73757265 
 1482      5F637572 
 1482      72656E74 
 1482      3D257300 
 1483              		.align	2
 1484              	.LC47:
 1485 0318 70726573 		.ascii	"pressure_current\000"
 1485      73757265 
 1485      5F637572 
 1485      72656E74 
 1485      00
 1486 0329 000000   		.align	2
 1487              	.LC48:
 1488 032c 20707265 		.ascii	" pressure_current: \000"
 1488      73737572 
 1488      655F6375 
 1488      7272656E 
 1488      743A2000 
 1489              		.align	2
 1490              	.LC49:
 1491 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1491      73757265 
 1491      5F646570 
 1491      74683D25 
 1491      7300
 1492 0352 0000     		.align	2
 1493              	.LC50:
 1494 0354 70726573 		.ascii	"pressure_depth\000"
 1494      73757265 
 1494      5F646570 
 1494      746800
 1495 0363 00       		.align	2
 1496              	.LC51:
 1497 0364 20707265 		.ascii	" pressure_depth: \000"
 1497      73737572 
 1497      655F6465 
 1497      7074683A 
 1497      2000
 1498 0376 0000     		.align	2
 1499              	.LC52:
 1500 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1500      64206E6F 
 1500      74206765 
 1500      74207661 
 1500      6C696420 
 1501              		.section	.text.makeMeasurements,"ax",%progbits
 1502              		.align	2
 1503              		.global	makeMeasurements
 1504              		.thumb
 1505              		.thumb_func
 1506              		.type	makeMeasurements, %function
 1507              	makeMeasurements:
 1508              	.LFB76:
 519:notoriOS.c    **** 
 520:notoriOS.c    **** 
 521:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 39


 522:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 523:notoriOS.c    **** // Returns 0 when finished
 524:notoriOS.c    **** // ==============================================
 525:notoriOS.c    **** uint8 makeMeasurements(){
 1509              		.loc 1 525 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 120
 1512              		@ frame_needed = 1, uses_anonymous_args = 0
 1513 0000 90B5     		push	{r4, r7, lr}
 1514              		.cfi_def_cfa_offset 12
 1515              		.cfi_offset 4, -12
 1516              		.cfi_offset 7, -8
 1517              		.cfi_offset 14, -4
 1518 0002 A1B0     		sub	sp, sp, #132
 1519              		.cfi_def_cfa_offset 144
 1520 0004 02AF     		add	r7, sp, #8
 1521              		.cfi_def_cfa 7, 136
 526:notoriOS.c    ****     
 527:notoriOS.c    ****     // Get clock time and save to timeStamp
 528:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1522              		.loc 1 528 0
 1523 0006 FFF7FEFF 		bl	getTimeStamp
 1524 000a 7867     		str	r0, [r7, #116]
 529:notoriOS.c    ****     char c_timeStamp[32];
 530:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1525              		.loc 1 530 0
 1526 000c 07F15400 		add	r0, r7, #84
 1527 0010 7B6F     		ldr	r3, [r7, #116]
 1528 0012 834A     		ldr	r2, .L63
 1529 0014 2021     		movs	r1, #32
 1530 0016 FFF7FEFF 		bl	snprintf
 531:notoriOS.c    ****     
 532:notoriOS.c    ****     // Holds string for value that will be written 
 533:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 534:notoriOS.c    ****     
 535:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 536:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1531              		.loc 1 536 0
 1532 001a 824B     		ldr	r3, .L63+4
 1533 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 001e 002B     		cmp	r3, #0
 1535 0020 3BD1     		bne	.L56
 1536              	.LBB9:
 537:notoriOS.c    ****         
 538:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 539:notoriOS.c    ****         level_sensor_t m_level_sensor;
 540:notoriOS.c    ****         
 541:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 542:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1537              		.loc 1 542 0
 1538 0022 07F11003 		add	r3, r7, #16
 1539 0026 1846     		mov	r0, r3
 1540 0028 FFF7FEFF 		bl	level_sensor_take_reading
 543:notoriOS.c    ****     
 544:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 545:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1541              		.loc 1 545 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 40


 1542 002c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1543 0030 002B     		cmp	r3, #0
 1544 0032 2ED0     		beq	.L57
 546:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1545              		.loc 1 546 0
 1546 0034 B7F92630 		ldrsh	r3, [r7, #38]
 1547 0038 07F14000 		add	r0, r7, #64
 1548 003c 7A4A     		ldr	r2, .L63+8
 1549 003e 1421     		movs	r1, #20
 1550 0040 FFF7FEFF 		bl	snprintf
 547:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1551              		.loc 1 547 0
 1552 0044 07F14003 		add	r3, r7, #64
 1553 0048 1A46     		mov	r2, r3
 1554 004a 7849     		ldr	r1, .L63+12
 1555 004c 0020     		movs	r0, #0
 1556 004e FFF7FEFF 		bl	printNotif
 548:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1557              		.loc 1 548 0
 1558 0052 07F14003 		add	r3, r7, #64
 1559 0056 7A6F     		ldr	r2, [r7, #116]
 1560 0058 1946     		mov	r1, r3
 1561 005a 7548     		ldr	r0, .L63+16
 1562 005c FFF7FEFF 		bl	pushData
 549:notoriOS.c    ****             
 550:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 551:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1563              		.loc 1 551 0
 1564 0060 07F15403 		add	r3, r7, #84
 1565 0064 1A46     		mov	r2, r3
 1566 0066 7349     		ldr	r1, .L63+20
 1567 0068 7348     		ldr	r0, .L63+24
 1568 006a FFF7FEFF 		bl	SD_write
 552:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1569              		.loc 1 552 0
 1570 006e 734A     		ldr	r2, .L63+28
 1571 0070 7049     		ldr	r1, .L63+20
 1572 0072 7148     		ldr	r0, .L63+24
 1573 0074 FFF7FEFF 		bl	SD_write
 553:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1574              		.loc 1 553 0
 1575 0078 07F14003 		add	r3, r7, #64
 1576 007c 1A46     		mov	r2, r3
 1577 007e 6D49     		ldr	r1, .L63+20
 1578 0080 6D48     		ldr	r0, .L63+24
 1579 0082 FFF7FEFF 		bl	SD_write
 554:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1580              		.loc 1 554 0
 1581 0086 6E4A     		ldr	r2, .L63+32
 1582 0088 6A49     		ldr	r1, .L63+20
 1583 008a 6B48     		ldr	r0, .L63+24
 1584 008c FFF7FEFF 		bl	SD_write
 1585 0090 03E0     		b	.L56
 1586              	.L57:
 555:notoriOS.c    ****         }else{
 556:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1587              		.loc 1 556 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 41


 1588 0092 6C49     		ldr	r1, .L63+36
 1589 0094 0220     		movs	r0, #2
 1590 0096 FFF7FEFF 		bl	printNotif
 1591              	.L56:
 1592              	.LBE9:
 557:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 558:notoriOS.c    ****         }
 559:notoriOS.c    ****     }
 560:notoriOS.c    ****     
 561:notoriOS.c    ****     
 562:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 563:notoriOS.c    ****     voltage_t m_voltage;
 564:notoriOS.c    ****     
 565:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 566:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1593              		.loc 1 566 0
 1594 009a 07F12C03 		add	r3, r7, #44
 1595 009e 1846     		mov	r0, r3
 1596 00a0 FFF7FEFF 		bl	voltage_take_readings
 567:notoriOS.c    ****     
 568:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 569:notoriOS.c    ****     if(m_voltage.valid){
 1597              		.loc 1 569 0
 1598 00a4 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1599 00a8 002B     		cmp	r3, #0
 1600 00aa 00F0AF80 		beq	.L59
 570:notoriOS.c    ****         // battery voltage data
 571:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1601              		.loc 1 571 0
 1602 00ae FB6A     		ldr	r3, [r7, #44]	@ float
 1603 00b0 1846     		mov	r0, r3
 1604 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1605 00b6 0346     		mov	r3, r0
 1606 00b8 0C46     		mov	r4, r1
 1607 00ba 07F14000 		add	r0, r7, #64
 1608 00be CDE90034 		strd	r3, [sp]
 1609 00c2 614A     		ldr	r2, .L63+40
 1610 00c4 1421     		movs	r1, #20
 1611 00c6 FFF7FEFF 		bl	snprintf
 572:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1612              		.loc 1 572 0
 1613 00ca 07F14003 		add	r3, r7, #64
 1614 00ce 1A46     		mov	r2, r3
 1615 00d0 5E49     		ldr	r1, .L63+44
 1616 00d2 0020     		movs	r0, #0
 1617 00d4 FFF7FEFF 		bl	printNotif
 573:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1618              		.loc 1 573 0
 1619 00d8 07F14003 		add	r3, r7, #64
 1620 00dc 7A6F     		ldr	r2, [r7, #116]
 1621 00de 1946     		mov	r1, r3
 1622 00e0 5B48     		ldr	r0, .L63+48
 1623 00e2 FFF7FEFF 		bl	pushData
 574:notoriOS.c    ****         
 575:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 576:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1624              		.loc 1 576 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 42


 1625 00e6 564A     		ldr	r2, .L63+32
 1626 00e8 5249     		ldr	r1, .L63+20
 1627 00ea 5348     		ldr	r0, .L63+24
 1628 00ec FFF7FEFF 		bl	SD_write
 577:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1629              		.loc 1 577 0
 1630 00f0 07F15403 		add	r3, r7, #84
 1631 00f4 1A46     		mov	r2, r3
 1632 00f6 4F49     		ldr	r1, .L63+20
 1633 00f8 4F48     		ldr	r0, .L63+24
 1634 00fa FFF7FEFF 		bl	SD_write
 578:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1635              		.loc 1 578 0
 1636 00fe 554A     		ldr	r2, .L63+52
 1637 0100 4C49     		ldr	r1, .L63+20
 1638 0102 4D48     		ldr	r0, .L63+24
 1639 0104 FFF7FEFF 		bl	SD_write
 579:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1640              		.loc 1 579 0
 1641 0108 07F14003 		add	r3, r7, #64
 1642 010c 1A46     		mov	r2, r3
 1643 010e 4949     		ldr	r1, .L63+20
 1644 0110 4948     		ldr	r0, .L63+24
 1645 0112 FFF7FEFF 		bl	SD_write
 580:notoriOS.c    ****         
 581:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 582:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1646              		.loc 1 582 0
 1647 0116 434B     		ldr	r3, .L63+4
 1648 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1649 011a 012B     		cmp	r3, #1
 1650 011c 7AD1     		bne	.L61
 1651              	.LBB10:
 583:notoriOS.c    ****             
 584:notoriOS.c    ****             // pressure transducer voltage (V) data
 585:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 586:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 587:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 588:notoriOS.c    ****             
 589:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 590:notoriOS.c    ****             pressure_t m_pressure;
 591:notoriOS.c    ****             
 592:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 593:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1652              		.loc 1 593 0
 1653 011e 3C46     		mov	r4, r7
 1654 0120 6A46     		mov	r2, sp
 1655 0122 07F13803 		add	r3, r7, #56
 1656 0126 93E80300 		ldmia	r3, {r0, r1}
 1657 012a 82E80300 		stmia	r2, {r0, r1}
 1658 012e 07F12C03 		add	r3, r7, #44
 1659 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1660 0134 2046     		mov	r0, r4
 1661 0136 FFF7FEFF 		bl	pressure_calculations
 594:notoriOS.c    ****             
 595:notoriOS.c    ****             // pressure transducer current (mA) data
 596:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 43


 1662              		.loc 1 596 0
 1663 013a BB68     		ldr	r3, [r7, #8]	@ float
 1664 013c 1846     		mov	r0, r3
 1665 013e FFF7FEFF 		bl	__aeabi_f2d
 1666 0142 0346     		mov	r3, r0
 1667 0144 0C46     		mov	r4, r1
 1668 0146 07F14000 		add	r0, r7, #64
 1669 014a CDE90034 		strd	r3, [sp]
 1670 014e 3E4A     		ldr	r2, .L63+40
 1671 0150 1421     		movs	r1, #20
 1672 0152 FFF7FEFF 		bl	snprintf
 597:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1673              		.loc 1 597 0
 1674 0156 07F14003 		add	r3, r7, #64
 1675 015a 1A46     		mov	r2, r3
 1676 015c 3E49     		ldr	r1, .L63+56
 1677 015e 0020     		movs	r0, #0
 1678 0160 FFF7FEFF 		bl	printNotif
 598:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1679              		.loc 1 598 0
 1680 0164 07F14003 		add	r3, r7, #64
 1681 0168 7A6F     		ldr	r2, [r7, #116]
 1682 016a 1946     		mov	r1, r3
 1683 016c 3B48     		ldr	r0, .L63+60
 1684 016e FFF7FEFF 		bl	pushData
 599:notoriOS.c    ****             
 600:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 601:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1685              		.loc 1 601 0
 1686 0172 334A     		ldr	r2, .L63+32
 1687 0174 2F49     		ldr	r1, .L63+20
 1688 0176 3048     		ldr	r0, .L63+24
 1689 0178 FFF7FEFF 		bl	SD_write
 602:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1690              		.loc 1 602 0
 1691 017c 07F15403 		add	r3, r7, #84
 1692 0180 1A46     		mov	r2, r3
 1693 0182 2C49     		ldr	r1, .L63+20
 1694 0184 2C48     		ldr	r0, .L63+24
 1695 0186 FFF7FEFF 		bl	SD_write
 603:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1696              		.loc 1 603 0
 1697 018a 354A     		ldr	r2, .L63+64
 1698 018c 2949     		ldr	r1, .L63+20
 1699 018e 2A48     		ldr	r0, .L63+24
 1700 0190 FFF7FEFF 		bl	SD_write
 604:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1701              		.loc 1 604 0
 1702 0194 07F14003 		add	r3, r7, #64
 1703 0198 1A46     		mov	r2, r3
 1704 019a 2649     		ldr	r1, .L63+20
 1705 019c 2648     		ldr	r0, .L63+24
 1706 019e FFF7FEFF 		bl	SD_write
 605:notoriOS.c    ****             
 606:notoriOS.c    ****             // pressure transducer depth (ft) data
 607:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1707              		.loc 1 607 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 44


 1708 01a2 FB68     		ldr	r3, [r7, #12]	@ float
 1709 01a4 1846     		mov	r0, r3
 1710 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1711 01aa 0346     		mov	r3, r0
 1712 01ac 0C46     		mov	r4, r1
 1713 01ae 07F14000 		add	r0, r7, #64
 1714 01b2 CDE90034 		strd	r3, [sp]
 1715 01b6 244A     		ldr	r2, .L63+40
 1716 01b8 1421     		movs	r1, #20
 1717 01ba FFF7FEFF 		bl	snprintf
 608:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1718              		.loc 1 608 0
 1719 01be 07F14003 		add	r3, r7, #64
 1720 01c2 1A46     		mov	r2, r3
 1721 01c4 2749     		ldr	r1, .L63+68
 1722 01c6 0020     		movs	r0, #0
 1723 01c8 FFF7FEFF 		bl	printNotif
 609:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1724              		.loc 1 609 0
 1725 01cc 07F14003 		add	r3, r7, #64
 1726 01d0 7A6F     		ldr	r2, [r7, #116]
 1727 01d2 1946     		mov	r1, r3
 1728 01d4 2448     		ldr	r0, .L63+72
 1729 01d6 FFF7FEFF 		bl	pushData
 610:notoriOS.c    ****             
 611:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 612:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1730              		.loc 1 612 0
 1731 01da 194A     		ldr	r2, .L63+32
 1732 01dc 1549     		ldr	r1, .L63+20
 1733 01de 1648     		ldr	r0, .L63+24
 1734 01e0 FFF7FEFF 		bl	SD_write
 613:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1735              		.loc 1 613 0
 1736 01e4 07F15403 		add	r3, r7, #84
 1737 01e8 1A46     		mov	r2, r3
 1738 01ea 1249     		ldr	r1, .L63+20
 1739 01ec 1248     		ldr	r0, .L63+24
 1740 01ee FFF7FEFF 		bl	SD_write
 614:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1741              		.loc 1 614 0
 1742 01f2 1E4A     		ldr	r2, .L63+76
 1743 01f4 0F49     		ldr	r1, .L63+20
 1744 01f6 1048     		ldr	r0, .L63+24
 1745 01f8 FFF7FEFF 		bl	SD_write
 615:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1746              		.loc 1 615 0
 1747 01fc 07F14003 		add	r3, r7, #64
 1748 0200 1A46     		mov	r2, r3
 1749 0202 0C49     		ldr	r1, .L63+20
 1750 0204 0C48     		ldr	r0, .L63+24
 1751 0206 FFF7FEFF 		bl	SD_write
 1752 020a 03E0     		b	.L61
 1753              	.L59:
 1754              	.LBE10:
 616:notoriOS.c    ****         }    
 617:notoriOS.c    ****     }else{
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 45


 618:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1755              		.loc 1 618 0
 1756 020c 1849     		ldr	r1, .L63+80
 1757 020e 0220     		movs	r0, #2
 1758 0210 FFF7FEFF 		bl	printNotif
 1759              	.L61:
 619:notoriOS.c    ****     }
 620:notoriOS.c    ****     
 621:notoriOS.c    ****     return 0u;
 1760              		.loc 1 621 0
 1761 0214 0023     		movs	r3, #0
 622:notoriOS.c    **** }
 1762              		.loc 1 622 0
 1763 0216 1846     		mov	r0, r3
 1764 0218 7C37     		adds	r7, r7, #124
 1765              		.cfi_def_cfa_offset 12
 1766 021a BD46     		mov	sp, r7
 1767              		.cfi_def_cfa_register 13
 1768              		@ sp needed
 1769 021c 90BD     		pop	{r4, r7, pc}
 1770              	.L64:
 1771 021e 00BF     		.align	2
 1772              	.L63:
 1773 0220 70020000 		.word	.LC35
 1774 0224 00000000 		.word	updatable_parameters
 1775 0228 3C000000 		.word	.LC2
 1776 022c 74020000 		.word	.LC36
 1777 0230 88020000 		.word	.LC37
 1778 0234 98020000 		.word	.LC38
 1779 0238 00000000 		.word	Data_fileName
 1780 023c 9C020000 		.word	.LC39
 1781 0240 B0020000 		.word	.LC40
 1782 0244 B4020000 		.word	.LC41
 1783 0248 E0020000 		.word	.LC42
 1784 024c E8020000 		.word	.LC43
 1785 0250 F4020000 		.word	.LC44
 1786 0254 FC020000 		.word	.LC45
 1787 0258 04030000 		.word	.LC46
 1788 025c 18030000 		.word	.LC47
 1789 0260 2C030000 		.word	.LC48
 1790 0264 40030000 		.word	.LC49
 1791 0268 54030000 		.word	.LC50
 1792 026c 64030000 		.word	.LC51
 1793 0270 78030000 		.word	.LC52
 1794              		.cfi_endproc
 1795              	.LFE76:
 1796              		.size	makeMeasurements, .-makeMeasurements
 1797              		.section	.rodata
 1798 039f 00       		.align	2
 1799              	.LC53:
 1800 03a0 4572726F 		.ascii	"Error setting system time.\000"
 1800      72207365 
 1800      7474696E 
 1800      67207379 
 1800      7374656D 
 1801              		.section	.text.setTime,"ax",%progbits
 1802              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 46


 1803              		.global	setTime
 1804              		.thumb
 1805              		.thumb_func
 1806              		.type	setTime, %function
 1807              	setTime:
 1808              	.LFB77:
 623:notoriOS.c    **** 
 624:notoriOS.c    **** // ==============================================
 625:notoriOS.c    **** // Set the system time
 626:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 627:notoriOS.c    **** // ==============================================
 628:notoriOS.c    **** uint8 setTime(long timeStamp){
 1809              		.loc 1 628 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 24
 1812              		@ frame_needed = 1, uses_anonymous_args = 0
 1813 0000 80B5     		push	{r7, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 7, -8
 1816              		.cfi_offset 14, -4
 1817 0002 86B0     		sub	sp, sp, #24
 1818              		.cfi_def_cfa_offset 32
 1819 0004 00AF     		add	r7, sp, #0
 1820              		.cfi_def_cfa_register 7
 1821 0006 7860     		str	r0, [r7, #4]
 629:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 630:notoriOS.c    ****     if(timeStamp <=0){
 1822              		.loc 1 630 0
 1823 0008 7B68     		ldr	r3, [r7, #4]
 1824 000a 002B     		cmp	r3, #0
 1825 000c 05DC     		bgt	.L66
 631:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1826              		.loc 1 631 0
 1827 000e 1849     		ldr	r1, .L68
 1828 0010 0220     		movs	r0, #2
 1829 0012 FFF7FEFF 		bl	printNotif
 632:notoriOS.c    ****         return 0;  
 1830              		.loc 1 632 0
 1831 0016 0023     		movs	r3, #0
 1832 0018 25E0     		b	.L67
 1833              	.L66:
 633:notoriOS.c    ****     }
 634:notoriOS.c    ****     // Create a new pointer t of data structure tm
 635:notoriOS.c    ****     struct tm * t;
 636:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 637:notoriOS.c    ****     t = gmtime(&timeStamp);
 1834              		.loc 1 637 0
 1835 001a 3B1D     		adds	r3, r7, #4
 1836 001c 1846     		mov	r0, r3
 1837 001e FFF7FEFF 		bl	gmtime
 1838 0022 7861     		str	r0, [r7, #20]
 638:notoriOS.c    ****     
 639:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 640:notoriOS.c    ****     RTC_TIME_DATE localTime;
 641:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1839              		.loc 1 641 0
 1840 0024 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 47


 1841 0026 1B68     		ldr	r3, [r3]
 1842 0028 DBB2     		uxtb	r3, r3
 1843 002a 3B72     		strb	r3, [r7, #8]
 642:notoriOS.c    ****     localTime.Min = t->tm_min;
 1844              		.loc 1 642 0
 1845 002c 7B69     		ldr	r3, [r7, #20]
 1846 002e 5B68     		ldr	r3, [r3, #4]
 1847 0030 DBB2     		uxtb	r3, r3
 1848 0032 7B72     		strb	r3, [r7, #9]
 643:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1849              		.loc 1 643 0
 1850 0034 7B69     		ldr	r3, [r7, #20]
 1851 0036 9B68     		ldr	r3, [r3, #8]
 1852 0038 DBB2     		uxtb	r3, r3
 1853 003a BB72     		strb	r3, [r7, #10]
 644:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1854              		.loc 1 644 0
 1855 003c 7B69     		ldr	r3, [r7, #20]
 1856 003e 5B69     		ldr	r3, [r3, #20]
 1857 0040 9BB2     		uxth	r3, r3
 1858 0042 03F26C73 		addw	r3, r3, #1900
 1859 0046 9BB2     		uxth	r3, r3
 1860 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 645:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1861              		.loc 1 645 0
 1862 004a 7B69     		ldr	r3, [r7, #20]
 1863 004c 1B69     		ldr	r3, [r3, #16]
 1864 004e DBB2     		uxtb	r3, r3
 1865 0050 3B74     		strb	r3, [r7, #16]
 646:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1866              		.loc 1 646 0
 1867 0052 7B69     		ldr	r3, [r7, #20]
 1868 0054 DB68     		ldr	r3, [r3, #12]
 1869 0056 DBB2     		uxtb	r3, r3
 1870 0058 3B73     		strb	r3, [r7, #12]
 647:notoriOS.c    **** 
 648:notoriOS.c    ****     // Writes time and date values as current time and date.
 649:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1871              		.loc 1 649 0
 1872 005a 07F10803 		add	r3, r7, #8
 1873 005e 1846     		mov	r0, r3
 1874 0060 FFF7FEFF 		bl	RTC_WriteTime
 650:notoriOS.c    ****     
 651:notoriOS.c    ****     // Return 1 when the system time was set properly.
 652:notoriOS.c    ****     return 1;
 1875              		.loc 1 652 0
 1876 0064 0123     		movs	r3, #1
 1877              	.L67:
 653:notoriOS.c    **** }
 1878              		.loc 1 653 0
 1879 0066 1846     		mov	r0, r3
 1880 0068 1837     		adds	r7, r7, #24
 1881              		.cfi_def_cfa_offset 8
 1882 006a BD46     		mov	sp, r7
 1883              		.cfi_def_cfa_register 13
 1884              		@ sp needed
 1885 006c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 48


 1886              	.L69:
 1887 006e 00BF     		.align	2
 1888              	.L68:
 1889 0070 A0030000 		.word	.LC53
 1890              		.cfi_endproc
 1891              	.LFE77:
 1892              		.size	setTime, .-setTime
 1893              		.section	.rodata
 1894 03bb 00       		.align	2
 1895              	.LC54:
 1896 03bc 75706772 		.ascii	"upgrade.hex\000"
 1896      6164652E 
 1896      68657800 
 1897              		.section	.text.upgraded,"ax",%progbits
 1898              		.align	2
 1899              		.global	upgraded
 1900              		.thumb
 1901              		.thumb_func
 1902              		.type	upgraded, %function
 1903              	upgraded:
 1904              	.LFB78:
 654:notoriOS.c    **** 
 655:notoriOS.c    **** //downloads and stores files on SD card
 656:notoriOS.c    **** 
 657:notoriOS.c    **** 
 658:notoriOS.c    **** 
 659:notoriOS.c    **** // ==============================================
 660:notoriOS.c    **** // Will they love it, will they hate it
 661:notoriOS.c    **** // Never fade it, I evade it
 662:notoriOS.c    **** // Cause I never really want to complicate it
 663:notoriOS.c    **** //      - Logic, Upgraded (2015)
 664:notoriOS.c    **** //
 665:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 666:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 667:notoriOS.c    **** // ==============================================
 668:notoriOS.c    **** 
 669:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1905              		.loc 1 669 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 232
 1908              		@ frame_needed = 1, uses_anonymous_args = 0
 1909 0000 80B5     		push	{r7, lr}
 1910              		.cfi_def_cfa_offset 8
 1911              		.cfi_offset 7, -8
 1912              		.cfi_offset 14, -4
 1913 0002 C0B0     		sub	sp, sp, #256
 1914              		.cfi_def_cfa_offset 264
 1915 0004 06AF     		add	r7, sp, #24
 1916              		.cfi_def_cfa 7, 240
 1917 0006 F860     		str	r0, [r7, #12]
 1918 0008 B960     		str	r1, [r7, #8]
 1919 000a 7A60     		str	r2, [r7, #4]
 670:notoriOS.c    ****     
 671:notoriOS.c    ****     uint8 upgrade_status = 0;
 1920              		.loc 1 671 0
 1921 000c 0023     		movs	r3, #0
 1922 000e 87F8E730 		strb	r3, [r7, #231]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 49


 672:notoriOS.c    ****     
 673:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 674:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1923              		.loc 1 674 0
 1924 0012 384B     		ldr	r3, .L74
 1925 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 0016 042B     		cmp	r3, #4
 1927 0018 02D0     		beq	.L71
 675:notoriOS.c    ****         return upgrade_status;//where valid = 0
 1928              		.loc 1 675 0
 1929 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 1930 001e 65E0     		b	.L73
 1931              	.L71:
 676:notoriOS.c    ****     }
 677:notoriOS.c    ****     
 678:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 1932              		.loc 1 678 0
 1933 0020 354A     		ldr	r2, .L74+4
 1934 0022 07F1D803 		add	r3, r7, #216
 1935 0026 07CA     		ldmia	r2, {r0, r1, r2}
 1936 0028 83E80700 		stmia	r3, {r0, r1, r2}
 679:notoriOS.c    ****     //delete file, if one exisits already
 680:notoriOS.c    ****     SD_rmfile(fileName);
 1937              		.loc 1 680 0
 1938 002c 07F1D803 		add	r3, r7, #216
 1939 0030 1846     		mov	r0, r3
 1940 0032 FFF7FEFF 		bl	SD_rmfile
 681:notoriOS.c    ****     
 682:notoriOS.c    ****     // Create http request
 683:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 1941              		.loc 1 683 0
 1942 0036 314B     		ldr	r3, .L74+8
 1943 0038 0593     		str	r3, [sp, #20]
 1944 003a 0023     		movs	r3, #0
 1945 003c 0493     		str	r3, [sp, #16]
 1946 003e 304B     		ldr	r3, .L74+12
 1947 0040 0393     		str	r3, [sp, #12]
 1948 0042 304B     		ldr	r3, .L74+16
 1949 0044 0293     		str	r3, [sp, #8]
 1950 0046 304B     		ldr	r3, .L74+20
 1951 0048 0193     		str	r3, [sp, #4]
 1952 004a BB68     		ldr	r3, [r7, #8]
 1953 004c 0093     		str	r3, [sp]
 1954 004e 7B68     		ldr	r3, [r7, #4]
 1955 0050 FA68     		ldr	r2, [r7, #12]
 1956 0052 2E49     		ldr	r1, .L74+24
 1957 0054 2E48     		ldr	r0, .L74+28
 1958 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 684:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1959              		.loc 1 684 0
 1960 005a 2D4A     		ldr	r2, .L74+28
 1961 005c 2D49     		ldr	r1, .L74+32
 1962 005e 0020     		movs	r0, #0
 1963 0060 FFF7FEFF 		bl	printNotif
 685:notoriOS.c    ****     // Create array portConfig of size 200 characters
 686:notoriOS.c    ****     char portConfig[200];
 687:notoriOS.c    ****     // Print port configurations
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 50


 688:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 1964              		.loc 1 688 0
 1965 0064 07F11000 		add	r0, r7, #16
 1966 0068 FB68     		ldr	r3, [r7, #12]
 1967 006a 0093     		str	r3, [sp]
 1968 006c BB68     		ldr	r3, [r7, #8]
 1969 006e 2A4A     		ldr	r2, .L74+36
 1970 0070 C821     		movs	r1, #200
 1971 0072 FFF7FEFF 		bl	snprintf
 689:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1972              		.loc 1 689 0
 1973 0076 07F11003 		add	r3, r7, #16
 1974 007a 1A46     		mov	r2, r3
 1975 007c 2749     		ldr	r1, .L74+40
 1976 007e 0020     		movs	r0, #0
 1977 0080 FFF7FEFF 		bl	printNotif
 690:notoriOS.c    ****     // AT command to configure the port
 691:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 1978              		.loc 1 691 0
 1979 0084 07F11003 		add	r3, r7, #16
 1980 0088 42F21072 		movw	r2, #10000
 1981 008c 2449     		ldr	r1, .L74+44
 1982 008e 1846     		mov	r0, r3
 1983 0090 FFF7FEFF 		bl	at_write_command
 1984 0094 0346     		mov	r3, r0
 1985 0096 87F8E730 		strb	r3, [r7, #231]
 692:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 693:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 694:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 1986              		.loc 1 694 0
 1987 009a 4FF47A72 		mov	r2, #1000
 1988 009e 2149     		ldr	r1, .L74+48
 1989 00a0 2148     		ldr	r0, .L74+52
 1990 00a2 FFF7FEFF 		bl	at_write_command
 1991 00a6 0346     		mov	r3, r0
 1992 00a8 87F8E730 		strb	r3, [r7, #231]
 695:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 696:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 1993              		.loc 1 696 0
 1994 00ac 1848     		ldr	r0, .L74+28
 1995 00ae FFF7FEFF 		bl	strlen
 1996 00b2 0346     		mov	r3, r0
 1997 00b4 1A46     		mov	r2, r3
 1998 00b6 164B     		ldr	r3, .L74+28
 1999 00b8 1344     		add	r3, r3, r2
 2000 00ba 1C49     		ldr	r1, .L74+56
 2001 00bc 1A46     		mov	r2, r3
 2002 00be 0B46     		mov	r3, r1
 2003 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2004 00c2 1380     		strh	r3, [r2]	@ unaligned
 697:notoriOS.c    ****     // AT command to send http request
 698:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2005              		.loc 1 698 0
 2006 00c4 41F28832 		movw	r2, #5000
 2007 00c8 1549     		ldr	r1, .L74+44
 2008 00ca 1148     		ldr	r0, .L74+28
 2009 00cc FFF7FEFF 		bl	at_write_command
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 51


 2010 00d0 0346     		mov	r3, r0
 2011 00d2 87F8E730 		strb	r3, [r7, #231]
 699:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 700:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 701:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2012              		.loc 1 701 0
 2013 00d6 41F28832 		movw	r2, #5000
 2014 00da 1549     		ldr	r1, .L74+60
 2015 00dc 1548     		ldr	r0, .L74+64
 2016 00de FFF7FEFF 		bl	at_write_command
 2017 00e2 0346     		mov	r3, r0
 2018 00e4 87F8E730 		strb	r3, [r7, #231]
 702:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 703:notoriOS.c    ****     
 704:notoriOS.c    ****     
 705:notoriOS.c    ****     return upgrade_status;
 2019              		.loc 1 705 0
 2020 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2021              	.L73:
 706:notoriOS.c    ****     
 707:notoriOS.c    **** }
 2022              		.loc 1 707 0 discriminator 1
 2023 00ec 1846     		mov	r0, r3
 2024 00ee E837     		adds	r7, r7, #232
 2025              		.cfi_def_cfa_offset 8
 2026 00f0 BD46     		mov	sp, r7
 2027              		.cfi_def_cfa_register 13
 2028              		@ sp needed
 2029 00f2 80BD     		pop	{r7, pc}
 2030              	.L75:
 2031              		.align	2
 2032              	.L74:
 2033 00f4 00000000 		.word	modem_state
 2034 00f8 BC030000 		.word	.LC54
 2035 00fc 68010000 		.word	.LC16
 2036 0100 6C010000 		.word	.LC17
 2037 0104 70010000 		.word	.LC18
 2038 0108 78010000 		.word	.LC19
 2039 010c 00000000 		.word	http_body
 2040 0110 00000000 		.word	http_request
 2041 0114 80010000 		.word	.LC20
 2042 0118 98010000 		.word	.LC21
 2043 011c B4010000 		.word	.LC22
 2044 0120 B8010000 		.word	.LC23
 2045 0124 E8010000 		.word	.LC26
 2046 0128 EC010000 		.word	.LC27
 2047 012c FC010000 		.word	.LC28
 2048 0130 18020000 		.word	.LC31
 2049 0134 20020000 		.word	.LC32
 2050              		.cfi_endproc
 2051              	.LFE78:
 2052              		.size	upgraded, .-upgraded
 2053              		.text
 2054              	.Letext0:
 2055              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2056              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2057              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 52


 2058              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2059              		.file 6 "testing.h"
 2060              		.file 7 "level_sensor.h"
 2061              		.file 8 "voltages.h"
 2062              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2063              		.file 10 "data.h"
 2064              		.file 11 "modem.h"
 2065              		.file 12 "notoriOS.h"
 2066              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2067              		.section	.debug_info,"",%progbits
 2068              	.Ldebug_info0:
 2069 0000 0D0C0000 		.4byte	0xc0d
 2070 0004 0400     		.2byte	0x4
 2071 0006 00000000 		.4byte	.Ldebug_abbrev0
 2072 000a 04       		.byte	0x4
 2073 000b 01       		.uleb128 0x1
 2074 000c 74000000 		.4byte	.LASF160
 2075 0010 0C       		.byte	0xc
 2076 0011 A3070000 		.4byte	.LASF161
 2077 0015 D7020000 		.4byte	.LASF162
 2078 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2079 001d 00000000 		.4byte	0
 2080 0021 00000000 		.4byte	.Ldebug_line0
 2081 0025 02       		.uleb128 0x2
 2082 0026 01       		.byte	0x1
 2083 0027 06       		.byte	0x6
 2084 0028 45000000 		.4byte	.LASF0
 2085 002c 02       		.uleb128 0x2
 2086 002d 01       		.byte	0x1
 2087 002e 08       		.byte	0x8
 2088 002f C0050000 		.4byte	.LASF1
 2089 0033 02       		.uleb128 0x2
 2090 0034 02       		.byte	0x2
 2091 0035 05       		.byte	0x5
 2092 0036 3A040000 		.4byte	.LASF2
 2093 003a 02       		.uleb128 0x2
 2094 003b 02       		.byte	0x2
 2095 003c 07       		.byte	0x7
 2096 003d 3B070000 		.4byte	.LASF3
 2097 0041 03       		.uleb128 0x3
 2098 0042 03070000 		.4byte	.LASF9
 2099 0046 02       		.byte	0x2
 2100 0047 3F       		.byte	0x3f
 2101 0048 4C000000 		.4byte	0x4c
 2102 004c 02       		.uleb128 0x2
 2103 004d 04       		.byte	0x4
 2104 004e 05       		.byte	0x5
 2105 004f 09020000 		.4byte	.LASF4
 2106 0053 02       		.uleb128 0x2
 2107 0054 04       		.byte	0x4
 2108 0055 07       		.byte	0x7
 2109 0056 77030000 		.4byte	.LASF5
 2110 005a 02       		.uleb128 0x2
 2111 005b 08       		.byte	0x8
 2112 005c 05       		.byte	0x5
 2113 005d 64010000 		.4byte	.LASF6
 2114 0061 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 53


 2115 0062 08       		.byte	0x8
 2116 0063 07       		.byte	0x7
 2117 0064 13010000 		.4byte	.LASF7
 2118 0068 04       		.uleb128 0x4
 2119 0069 04       		.byte	0x4
 2120 006a 05       		.byte	0x5
 2121 006b 696E7400 		.ascii	"int\000"
 2122 006f 02       		.uleb128 0x2
 2123 0070 04       		.byte	0x4
 2124 0071 07       		.byte	0x7
 2125 0072 23030000 		.4byte	.LASF8
 2126 0076 03       		.uleb128 0x3
 2127 0077 B8050000 		.4byte	.LASF10
 2128 007b 03       		.byte	0x3
 2129 007c 2C       		.byte	0x2c
 2130 007d 41000000 		.4byte	0x41
 2131 0081 05       		.uleb128 0x5
 2132 0082 40020000 		.4byte	.LASF11
 2133 0086 04       		.byte	0x4
 2134 0087 9201     		.2byte	0x192
 2135 0089 2C000000 		.4byte	0x2c
 2136 008d 05       		.uleb128 0x5
 2137 008e 08000000 		.4byte	.LASF12
 2138 0092 04       		.byte	0x4
 2139 0093 9301     		.2byte	0x193
 2140 0095 3A000000 		.4byte	0x3a
 2141 0099 05       		.uleb128 0x5
 2142 009a 84020000 		.4byte	.LASF13
 2143 009e 04       		.byte	0x4
 2144 009f 9401     		.2byte	0x194
 2145 00a1 53000000 		.4byte	0x53
 2146 00a5 05       		.uleb128 0x5
 2147 00a6 FD030000 		.4byte	.LASF14
 2148 00aa 04       		.byte	0x4
 2149 00ab 9501     		.2byte	0x195
 2150 00ad 25000000 		.4byte	0x25
 2151 00b1 05       		.uleb128 0x5
 2152 00b2 B8070000 		.4byte	.LASF15
 2153 00b6 04       		.byte	0x4
 2154 00b7 9601     		.2byte	0x196
 2155 00b9 33000000 		.4byte	0x33
 2156 00bd 05       		.uleb128 0x5
 2157 00be 5E020000 		.4byte	.LASF16
 2158 00c2 04       		.byte	0x4
 2159 00c3 9701     		.2byte	0x197
 2160 00c5 4C000000 		.4byte	0x4c
 2161 00c9 02       		.uleb128 0x2
 2162 00ca 04       		.byte	0x4
 2163 00cb 04       		.byte	0x4
 2164 00cc 5D050000 		.4byte	.LASF17
 2165 00d0 02       		.uleb128 0x2
 2166 00d1 08       		.byte	0x8
 2167 00d2 04       		.byte	0x4
 2168 00d3 3C080000 		.4byte	.LASF18
 2169 00d7 02       		.uleb128 0x2
 2170 00d8 01       		.byte	0x1
 2171 00d9 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 54


 2172 00da DC060000 		.4byte	.LASF19
 2173 00de 02       		.uleb128 0x2
 2174 00df 08       		.byte	0x8
 2175 00e0 04       		.byte	0x4
 2176 00e1 BE060000 		.4byte	.LASF20
 2177 00e5 02       		.uleb128 0x2
 2178 00e6 04       		.byte	0x4
 2179 00e7 07       		.byte	0x7
 2180 00e8 B7040000 		.4byte	.LASF21
 2181 00ec 06       		.uleb128 0x6
 2182 00ed 04       		.byte	0x4
 2183 00ee D7000000 		.4byte	0xd7
 2184 00f2 07       		.uleb128 0x7
 2185 00f3 D7000000 		.4byte	0xd7
 2186 00f7 02010000 		.4byte	0x102
 2187 00fb 08       		.uleb128 0x8
 2188 00fc E5000000 		.4byte	0xe5
 2189 0100 17       		.byte	0x17
 2190 0101 00       		.byte	0
 2191 0102 09       		.uleb128 0x9
 2192 0103 0C       		.byte	0xc
 2193 0104 05       		.byte	0x5
 2194 0105 30       		.byte	0x30
 2195 0106 6B010000 		.4byte	0x16b
 2196 010a 0A       		.uleb128 0xa
 2197 010b 53656300 		.ascii	"Sec\000"
 2198 010f 05       		.byte	0x5
 2199 0110 32       		.byte	0x32
 2200 0111 81000000 		.4byte	0x81
 2201 0115 00       		.byte	0
 2202 0116 0A       		.uleb128 0xa
 2203 0117 4D696E00 		.ascii	"Min\000"
 2204 011b 05       		.byte	0x5
 2205 011c 33       		.byte	0x33
 2206 011d 81000000 		.4byte	0x81
 2207 0121 01       		.byte	0x1
 2208 0122 0B       		.uleb128 0xb
 2209 0123 2A010000 		.4byte	.LASF22
 2210 0127 05       		.byte	0x5
 2211 0128 34       		.byte	0x34
 2212 0129 81000000 		.4byte	0x81
 2213 012d 02       		.byte	0x2
 2214 012e 0B       		.uleb128 0xb
 2215 012f 1D060000 		.4byte	.LASF23
 2216 0133 05       		.byte	0x5
 2217 0134 35       		.byte	0x35
 2218 0135 81000000 		.4byte	0x81
 2219 0139 03       		.byte	0x3
 2220 013a 0B       		.uleb128 0xb
 2221 013b B8030000 		.4byte	.LASF24
 2222 013f 05       		.byte	0x5
 2223 0140 36       		.byte	0x36
 2224 0141 81000000 		.4byte	0x81
 2225 0145 04       		.byte	0x4
 2226 0146 0B       		.uleb128 0xb
 2227 0147 F1070000 		.4byte	.LASF25
 2228 014b 05       		.byte	0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 55


 2229 014c 37       		.byte	0x37
 2230 014d 8D000000 		.4byte	0x8d
 2231 0151 06       		.byte	0x6
 2232 0152 0B       		.uleb128 0xb
 2233 0153 0D010000 		.4byte	.LASF26
 2234 0157 05       		.byte	0x5
 2235 0158 38       		.byte	0x38
 2236 0159 81000000 		.4byte	0x81
 2237 015d 08       		.byte	0x8
 2238 015e 0B       		.uleb128 0xb
 2239 015f AD050000 		.4byte	.LASF27
 2240 0163 05       		.byte	0x5
 2241 0164 39       		.byte	0x39
 2242 0165 8D000000 		.4byte	0x8d
 2243 0169 0A       		.byte	0xa
 2244 016a 00       		.byte	0
 2245 016b 03       		.uleb128 0x3
 2246 016c 02050000 		.4byte	.LASF28
 2247 0170 05       		.byte	0x5
 2248 0171 3A       		.byte	0x3a
 2249 0172 76010000 		.4byte	0x176
 2250 0176 0C       		.uleb128 0xc
 2251 0177 02010000 		.4byte	0x102
 2252 017b 0D       		.uleb128 0xd
 2253 017c 8101     		.2byte	0x181
 2254 017e 06       		.byte	0x6
 2255 017f 0A       		.byte	0xa
 2256 0180 A9010000 		.4byte	0x1a9
 2257 0184 0B       		.uleb128 0xb
 2258 0185 A3050000 		.4byte	.LASF29
 2259 0189 06       		.byte	0x6
 2260 018a 0C       		.byte	0xc
 2261 018b A9010000 		.4byte	0x1a9
 2262 018f 00       		.byte	0
 2263 0190 0B       		.uleb128 0xb
 2264 0191 78070000 		.4byte	.LASF30
 2265 0195 06       		.byte	0x6
 2266 0196 0D       		.byte	0xd
 2267 0197 81000000 		.4byte	0x81
 2268 019b 80       		.byte	0x80
 2269 019c 0B       		.uleb128 0xb
 2270 019d 3F060000 		.4byte	.LASF31
 2271 01a1 06       		.byte	0x6
 2272 01a2 0F       		.byte	0xf
 2273 01a3 B9010000 		.4byte	0x1b9
 2274 01a7 81       		.byte	0x81
 2275 01a8 00       		.byte	0
 2276 01a9 07       		.uleb128 0x7
 2277 01aa D7000000 		.4byte	0xd7
 2278 01ae B9010000 		.4byte	0x1b9
 2279 01b2 08       		.uleb128 0x8
 2280 01b3 E5000000 		.4byte	0xe5
 2281 01b7 7F       		.byte	0x7f
 2282 01b8 00       		.byte	0
 2283 01b9 07       		.uleb128 0x7
 2284 01ba D7000000 		.4byte	0xd7
 2285 01be C9010000 		.4byte	0x1c9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 56


 2286 01c2 08       		.uleb128 0x8
 2287 01c3 E5000000 		.4byte	0xe5
 2288 01c7 FF       		.byte	0xff
 2289 01c8 00       		.byte	0
 2290 01c9 03       		.uleb128 0x3
 2291 01ca 27060000 		.4byte	.LASF32
 2292 01ce 06       		.byte	0x6
 2293 01cf 10       		.byte	0x10
 2294 01d0 7B010000 		.4byte	0x17b
 2295 01d4 09       		.uleb128 0x9
 2296 01d5 1A       		.byte	0x1a
 2297 01d6 07       		.byte	0x7
 2298 01d7 10       		.byte	0x10
 2299 01d8 0D020000 		.4byte	0x20d
 2300 01dc 0B       		.uleb128 0xb
 2301 01dd 94020000 		.4byte	.LASF33
 2302 01e1 07       		.byte	0x7
 2303 01e2 11       		.byte	0x11
 2304 01e3 0D020000 		.4byte	0x20d
 2305 01e7 00       		.byte	0
 2306 01e8 0B       		.uleb128 0xb
 2307 01e9 25070000 		.4byte	.LASF34
 2308 01ed 07       		.byte	0x7
 2309 01ee 12       		.byte	0x12
 2310 01ef B1000000 		.4byte	0xb1
 2311 01f3 16       		.byte	0x16
 2312 01f4 0B       		.uleb128 0xb
 2313 01f5 4F030000 		.4byte	.LASF35
 2314 01f9 07       		.byte	0x7
 2315 01fa 13       		.byte	0x13
 2316 01fb 81000000 		.4byte	0x81
 2317 01ff 18       		.byte	0x18
 2318 0200 0B       		.uleb128 0xb
 2319 0201 17000000 		.4byte	.LASF36
 2320 0205 07       		.byte	0x7
 2321 0206 14       		.byte	0x14
 2322 0207 81000000 		.4byte	0x81
 2323 020b 19       		.byte	0x19
 2324 020c 00       		.byte	0
 2325 020d 07       		.uleb128 0x7
 2326 020e B1000000 		.4byte	0xb1
 2327 0212 1D020000 		.4byte	0x21d
 2328 0216 08       		.uleb128 0x8
 2329 0217 E5000000 		.4byte	0xe5
 2330 021b 0A       		.byte	0xa
 2331 021c 00       		.byte	0
 2332 021d 03       		.uleb128 0x3
 2333 021e 63050000 		.4byte	.LASF37
 2334 0222 07       		.byte	0x7
 2335 0223 15       		.byte	0x15
 2336 0224 D4010000 		.4byte	0x1d4
 2337 0228 09       		.uleb128 0x9
 2338 0229 14       		.byte	0x14
 2339 022a 08       		.byte	0x8
 2340 022b 11       		.byte	0x11
 2341 022c 6D020000 		.4byte	0x26d
 2342 0230 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 57


 2343 0231 A8030000 		.4byte	.LASF38
 2344 0235 08       		.byte	0x8
 2345 0236 12       		.byte	0x12
 2346 0237 C9000000 		.4byte	0xc9
 2347 023b 00       		.byte	0
 2348 023c 0B       		.uleb128 0xb
 2349 023d B0010000 		.4byte	.LASF39
 2350 0241 08       		.byte	0x8
 2351 0242 13       		.byte	0x13
 2352 0243 C9000000 		.4byte	0xc9
 2353 0247 04       		.byte	0x4
 2354 0248 0B       		.uleb128 0xb
 2355 0249 BE010000 		.4byte	.LASF40
 2356 024d 08       		.byte	0x8
 2357 024e 14       		.byte	0x14
 2358 024f C9000000 		.4byte	0xc9
 2359 0253 08       		.byte	0x8
 2360 0254 0B       		.uleb128 0xb
 2361 0255 3F050000 		.4byte	.LASF41
 2362 0259 08       		.byte	0x8
 2363 025a 15       		.byte	0x15
 2364 025b C9000000 		.4byte	0xc9
 2365 025f 0C       		.byte	0xc
 2366 0260 0B       		.uleb128 0xb
 2367 0261 B0060000 		.4byte	.LASF42
 2368 0265 08       		.byte	0x8
 2369 0266 16       		.byte	0x16
 2370 0267 81000000 		.4byte	0x81
 2371 026b 10       		.byte	0x10
 2372 026c 00       		.byte	0
 2373 026d 03       		.uleb128 0x3
 2374 026e 43080000 		.4byte	.LASF43
 2375 0272 08       		.byte	0x8
 2376 0273 17       		.byte	0x17
 2377 0274 28020000 		.4byte	0x228
 2378 0278 09       		.uleb128 0x9
 2379 0279 10       		.byte	0x10
 2380 027a 08       		.byte	0x8
 2381 027b 19       		.byte	0x19
 2382 027c B1020000 		.4byte	0x2b1
 2383 0280 0B       		.uleb128 0xb
 2384 0281 0F030000 		.4byte	.LASF44
 2385 0285 08       		.byte	0x8
 2386 0286 1A       		.byte	0x1a
 2387 0287 C9000000 		.4byte	0xc9
 2388 028b 00       		.byte	0
 2389 028c 0B       		.uleb128 0xb
 2390 028d 2B020000 		.4byte	.LASF45
 2391 0291 08       		.byte	0x8
 2392 0292 1B       		.byte	0x1b
 2393 0293 C9000000 		.4byte	0xc9
 2394 0297 04       		.byte	0x4
 2395 0298 0B       		.uleb128 0xb
 2396 0299 9F060000 		.4byte	.LASF46
 2397 029d 08       		.byte	0x8
 2398 029e 1C       		.byte	0x1c
 2399 029f C9000000 		.4byte	0xc9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 58


 2400 02a3 08       		.byte	0x8
 2401 02a4 0B       		.uleb128 0xb
 2402 02a5 09060000 		.4byte	.LASF47
 2403 02a9 08       		.byte	0x8
 2404 02aa 1D       		.byte	0x1d
 2405 02ab C9000000 		.4byte	0xc9
 2406 02af 0C       		.byte	0xc
 2407 02b0 00       		.byte	0
 2408 02b1 03       		.uleb128 0x3
 2409 02b2 FB070000 		.4byte	.LASF48
 2410 02b6 08       		.byte	0x8
 2411 02b7 1E       		.byte	0x1e
 2412 02b8 78020000 		.4byte	0x278
 2413 02bc 0E       		.uleb128 0xe
 2414 02bd 746D00   		.ascii	"tm\000"
 2415 02c0 24       		.byte	0x24
 2416 02c1 09       		.byte	0x9
 2417 02c2 21       		.byte	0x21
 2418 02c3 34030000 		.4byte	0x334
 2419 02c7 0B       		.uleb128 0xb
 2420 02c8 66070000 		.4byte	.LASF49
 2421 02cc 09       		.byte	0x9
 2422 02cd 23       		.byte	0x23
 2423 02ce 68000000 		.4byte	0x68
 2424 02d2 00       		.byte	0
 2425 02d3 0B       		.uleb128 0xb
 2426 02d4 99040000 		.4byte	.LASF50
 2427 02d8 09       		.byte	0x9
 2428 02d9 24       		.byte	0x24
 2429 02da 68000000 		.4byte	0x68
 2430 02de 04       		.byte	0x4
 2431 02df 0B       		.uleb128 0xb
 2432 02e0 0F000000 		.4byte	.LASF51
 2433 02e4 09       		.byte	0x9
 2434 02e5 25       		.byte	0x25
 2435 02e6 68000000 		.4byte	0x68
 2436 02ea 08       		.byte	0x8
 2437 02eb 0B       		.uleb128 0xb
 2438 02ec 55070000 		.4byte	.LASF52
 2439 02f0 09       		.byte	0x9
 2440 02f1 26       		.byte	0x26
 2441 02f2 68000000 		.4byte	0x68
 2442 02f6 0C       		.byte	0xc
 2443 02f7 0B       		.uleb128 0xb
 2444 02f8 BF020000 		.4byte	.LASF53
 2445 02fc 09       		.byte	0x9
 2446 02fd 27       		.byte	0x27
 2447 02fe 68000000 		.4byte	0x68
 2448 0302 10       		.byte	0x10
 2449 0303 0B       		.uleb128 0xb
 2450 0304 FD020000 		.4byte	.LASF54
 2451 0308 09       		.byte	0x9
 2452 0309 28       		.byte	0x28
 2453 030a 68000000 		.4byte	0x68
 2454 030e 14       		.byte	0x14
 2455 030f 0B       		.uleb128 0xb
 2456 0310 B6060000 		.4byte	.LASF55
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 59


 2457 0314 09       		.byte	0x9
 2458 0315 29       		.byte	0x29
 2459 0316 68000000 		.4byte	0x68
 2460 031a 18       		.byte	0x18
 2461 031b 0B       		.uleb128 0xb
 2462 031c C0040000 		.4byte	.LASF56
 2463 0320 09       		.byte	0x9
 2464 0321 2A       		.byte	0x2a
 2465 0322 68000000 		.4byte	0x68
 2466 0326 1C       		.byte	0x1c
 2467 0327 0B       		.uleb128 0xb
 2468 0328 E1030000 		.4byte	.LASF57
 2469 032c 09       		.byte	0x9
 2470 032d 2B       		.byte	0x2b
 2471 032e 68000000 		.4byte	0x68
 2472 0332 20       		.byte	0x20
 2473 0333 00       		.byte	0
 2474 0334 09       		.uleb128 0x9
 2475 0335 2C       		.byte	0x2c
 2476 0336 0A       		.byte	0xa
 2477 0337 14       		.byte	0x14
 2478 0338 61030000 		.4byte	0x361
 2479 033c 0A       		.uleb128 0xa
 2480 033d 6B657900 		.ascii	"key\000"
 2481 0341 0A       		.byte	0xa
 2482 0342 15       		.byte	0x15
 2483 0343 61030000 		.4byte	0x361
 2484 0347 00       		.byte	0
 2485 0348 0B       		.uleb128 0xb
 2486 0349 F2020000 		.4byte	.LASF58
 2487 034d 0A       		.byte	0xa
 2488 034e 16       		.byte	0x16
 2489 034f 61030000 		.4byte	0x361
 2490 0353 14       		.byte	0x14
 2491 0354 0B       		.uleb128 0xb
 2492 0355 F8040000 		.4byte	.LASF59
 2493 0359 0A       		.byte	0xa
 2494 035a 17       		.byte	0x17
 2495 035b BD000000 		.4byte	0xbd
 2496 035f 28       		.byte	0x28
 2497 0360 00       		.byte	0
 2498 0361 07       		.uleb128 0x7
 2499 0362 D7000000 		.4byte	0xd7
 2500 0366 71030000 		.4byte	0x371
 2501 036a 08       		.uleb128 0x8
 2502 036b E5000000 		.4byte	0xe5
 2503 036f 13       		.byte	0x13
 2504 0370 00       		.byte	0
 2505 0371 03       		.uleb128 0x3
 2506 0372 38030000 		.4byte	.LASF60
 2507 0376 0A       		.byte	0xa
 2508 0377 19       		.byte	0x19
 2509 0378 34030000 		.4byte	0x334
 2510 037c 09       		.uleb128 0x9
 2511 037d 3C       		.byte	0x3c
 2512 037e 0B       		.byte	0xb
 2513 037f 35       		.byte	0x35
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 60


 2514 0380 A9030000 		.4byte	0x3a9
 2515 0384 0B       		.uleb128 0xb
 2516 0385 4E070000 		.4byte	.LASF61
 2517 0389 0B       		.byte	0xb
 2518 038a 36       		.byte	0x36
 2519 038b 61030000 		.4byte	0x361
 2520 038f 00       		.byte	0
 2521 0390 0B       		.uleb128 0xb
 2522 0391 8B020000 		.4byte	.LASF62
 2523 0395 0B       		.byte	0xb
 2524 0396 37       		.byte	0x37
 2525 0397 61030000 		.4byte	0x361
 2526 039b 14       		.byte	0x14
 2527 039c 0B       		.uleb128 0xb
 2528 039d 3A060000 		.4byte	.LASF63
 2529 03a1 0B       		.byte	0xb
 2530 03a2 38       		.byte	0x38
 2531 03a3 61030000 		.4byte	0x361
 2532 03a7 28       		.byte	0x28
 2533 03a8 00       		.byte	0
 2534 03a9 03       		.uleb128 0x3
 2535 03aa F6010000 		.4byte	.LASF64
 2536 03ae 0B       		.byte	0xb
 2537 03af 3A       		.byte	0x3a
 2538 03b0 7C030000 		.4byte	0x37c
 2539 03b4 09       		.uleb128 0x9
 2540 03b5 20       		.byte	0x20
 2541 03b6 0B       		.byte	0xb
 2542 03b7 3C       		.byte	0x3c
 2543 03b8 1D040000 		.4byte	0x41d
 2544 03bc 0B       		.uleb128 0xb
 2545 03bd 03020000 		.4byte	.LASF65
 2546 03c1 0B       		.byte	0xb
 2547 03c2 3D       		.byte	0x3d
 2548 03c3 68000000 		.4byte	0x68
 2549 03c7 00       		.byte	0
 2550 03c8 0A       		.uleb128 0xa
 2551 03c9 62657200 		.ascii	"ber\000"
 2552 03cd 0B       		.byte	0xb
 2553 03ce 3E       		.byte	0x3e
 2554 03cf 68000000 		.4byte	0x68
 2555 03d3 04       		.byte	0x4
 2556 03d4 0B       		.uleb128 0xb
 2557 03d5 18060000 		.4byte	.LASF66
 2558 03d9 0B       		.byte	0xb
 2559 03da 3F       		.byte	0x3f
 2560 03db 68000000 		.4byte	0x68
 2561 03df 08       		.byte	0x8
 2562 03e0 0B       		.uleb128 0xb
 2563 03e1 7A010000 		.4byte	.LASF67
 2564 03e5 0B       		.byte	0xb
 2565 03e6 40       		.byte	0x40
 2566 03e7 68000000 		.4byte	0x68
 2567 03eb 0C       		.byte	0xc
 2568 03ec 0B       		.uleb128 0xb
 2569 03ed E3050000 		.4byte	.LASF68
 2570 03f1 0B       		.byte	0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 61


 2571 03f2 41       		.byte	0x41
 2572 03f3 68000000 		.4byte	0x68
 2573 03f7 10       		.byte	0x10
 2574 03f8 0B       		.uleb128 0xb
 2575 03f9 DE050000 		.4byte	.LASF69
 2576 03fd 0B       		.byte	0xb
 2577 03fe 42       		.byte	0x42
 2578 03ff 68000000 		.4byte	0x68
 2579 0403 14       		.byte	0x14
 2580 0404 0B       		.uleb128 0xb
 2581 0405 8D010000 		.4byte	.LASF70
 2582 0409 0B       		.byte	0xb
 2583 040a 43       		.byte	0x43
 2584 040b 68000000 		.4byte	0x68
 2585 040f 18       		.byte	0x18
 2586 0410 0B       		.uleb128 0xb
 2587 0411 12020000 		.4byte	.LASF71
 2588 0415 0B       		.byte	0xb
 2589 0416 44       		.byte	0x44
 2590 0417 68000000 		.4byte	0x68
 2591 041b 1C       		.byte	0x1c
 2592 041c 00       		.byte	0
 2593 041d 03       		.uleb128 0x3
 2594 041e 91060000 		.4byte	.LASF72
 2595 0422 0B       		.byte	0xb
 2596 0423 46       		.byte	0x46
 2597 0424 B4030000 		.4byte	0x3b4
 2598 0428 09       		.uleb128 0x9
 2599 0429 05       		.byte	0x5
 2600 042a 0B       		.byte	0xb
 2601 042b 52       		.byte	0x52
 2602 042c 6D040000 		.4byte	0x46d
 2603 0430 0B       		.uleb128 0xb
 2604 0431 64020000 		.4byte	.LASF73
 2605 0435 0B       		.byte	0xb
 2606 0436 54       		.byte	0x54
 2607 0437 81000000 		.4byte	0x81
 2608 043b 00       		.byte	0
 2609 043c 0B       		.uleb128 0xb
 2610 043d E2070000 		.4byte	.LASF74
 2611 0441 0B       		.byte	0xb
 2612 0442 56       		.byte	0x56
 2613 0443 6D040000 		.4byte	0x46d
 2614 0447 01       		.byte	0x1
 2615 0448 0B       		.uleb128 0xb
 2616 0449 2F080000 		.4byte	.LASF75
 2617 044d 0B       		.byte	0xb
 2618 044e 58       		.byte	0x58
 2619 044f 81000000 		.4byte	0x81
 2620 0453 02       		.byte	0x2
 2621 0454 0B       		.uleb128 0xb
 2622 0455 FF050000 		.4byte	.LASF76
 2623 0459 0B       		.byte	0xb
 2624 045a 5A       		.byte	0x5a
 2625 045b 81000000 		.4byte	0x81
 2626 045f 03       		.byte	0x3
 2627 0460 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 62


 2628 0461 C6020000 		.4byte	.LASF77
 2629 0465 0B       		.byte	0xb
 2630 0466 5D       		.byte	0x5d
 2631 0467 81000000 		.4byte	0x81
 2632 046b 04       		.byte	0x4
 2633 046c 00       		.byte	0
 2634 046d 02       		.uleb128 0x2
 2635 046e 01       		.byte	0x1
 2636 046f 02       		.byte	0x2
 2637 0470 B2050000 		.4byte	.LASF78
 2638 0474 03       		.uleb128 0x3
 2639 0475 66040000 		.4byte	.LASF79
 2640 0479 0B       		.byte	0xb
 2641 047a 5F       		.byte	0x5f
 2642 047b 28040000 		.4byte	0x428
 2643 047f 09       		.uleb128 0x9
 2644 0480 06       		.byte	0x6
 2645 0481 0C       		.byte	0xc
 2646 0482 2D       		.byte	0x2d
 2647 0483 B8040000 		.4byte	0x4b8
 2648 0487 0B       		.uleb128 0xb
 2649 0488 A7020000 		.4byte	.LASF80
 2650 048c 0C       		.byte	0xc
 2651 048d 2F       		.byte	0x2f
 2652 048e 8D000000 		.4byte	0x8d
 2653 0492 00       		.byte	0
 2654 0493 0B       		.uleb128 0xb
 2655 0494 CC070000 		.4byte	.LASF81
 2656 0498 0C       		.byte	0xc
 2657 0499 30       		.byte	0x30
 2658 049a B1000000 		.4byte	0xb1
 2659 049e 02       		.byte	0x2
 2660 049f 0B       		.uleb128 0xb
 2661 04a0 BE070000 		.4byte	.LASF82
 2662 04a4 0C       		.byte	0xc
 2663 04a5 31       		.byte	0x31
 2664 04a6 81000000 		.4byte	0x81
 2665 04aa 04       		.byte	0x4
 2666 04ab 0B       		.uleb128 0xb
 2667 04ac 51000000 		.4byte	.LASF83
 2668 04b0 0C       		.byte	0xc
 2669 04b1 32       		.byte	0x32
 2670 04b2 81000000 		.4byte	0x81
 2671 04b6 05       		.byte	0x5
 2672 04b7 00       		.byte	0
 2673 04b8 03       		.uleb128 0x3
 2674 04b9 25020000 		.4byte	.LASF84
 2675 04bd 0C       		.byte	0xc
 2676 04be 35       		.byte	0x35
 2677 04bf C3040000 		.4byte	0x4c3
 2678 04c3 0C       		.uleb128 0xc
 2679 04c4 7F040000 		.4byte	0x47f
 2680 04c8 09       		.uleb128 0x9
 2681 04c9 1C       		.byte	0x1c
 2682 04ca 0C       		.byte	0xc
 2683 04cb 38       		.byte	0x38
 2684 04cc E9040000 		.4byte	0x4e9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 63


 2685 04d0 0B       		.uleb128 0xb
 2686 04d1 EA030000 		.4byte	.LASF85
 2687 04d5 0C       		.byte	0xc
 2688 04d6 3A       		.byte	0x3a
 2689 04d7 E9040000 		.4byte	0x4e9
 2690 04db 00       		.byte	0
 2691 04dc 0B       		.uleb128 0xb
 2692 04dd 21080000 		.4byte	.LASF86
 2693 04e1 0C       		.byte	0xc
 2694 04e2 3B       		.byte	0x3b
 2695 04e3 F2000000 		.4byte	0xf2
 2696 04e7 04       		.byte	0x4
 2697 04e8 00       		.byte	0
 2698 04e9 06       		.uleb128 0x6
 2699 04ea 04       		.byte	0x4
 2700 04eb A9030000 		.4byte	0x3a9
 2701 04ef 03       		.uleb128 0x3
 2702 04f0 5B040000 		.4byte	.LASF87
 2703 04f4 0C       		.byte	0xc
 2704 04f5 3D       		.byte	0x3d
 2705 04f6 C8040000 		.4byte	0x4c8
 2706 04fa 09       		.uleb128 0x9
 2707 04fb 68       		.byte	0x68
 2708 04fc 0C       		.byte	0xc
 2709 04fd 43       		.byte	0x43
 2710 04fe 1B050000 		.4byte	0x51b
 2711 0502 0B       		.uleb128 0xb
 2712 0503 F5030000 		.4byte	.LASF88
 2713 0507 0C       		.byte	0xc
 2714 0508 48       		.byte	0x48
 2715 0509 1B050000 		.4byte	0x51b
 2716 050d 00       		.byte	0
 2717 050e 0B       		.uleb128 0xb
 2718 050f D9030000 		.4byte	.LASF89
 2719 0513 0C       		.byte	0xc
 2720 0514 49       		.byte	0x49
 2721 0515 68000000 		.4byte	0x68
 2722 0519 64       		.byte	0x64
 2723 051a 00       		.byte	0
 2724 051b 07       		.uleb128 0x7
 2725 051c D7000000 		.4byte	0xd7
 2726 0520 2B050000 		.4byte	0x52b
 2727 0524 08       		.uleb128 0x8
 2728 0525 E5000000 		.4byte	0xe5
 2729 0529 63       		.byte	0x63
 2730 052a 00       		.byte	0
 2731 052b 03       		.uleb128 0x3
 2732 052c C8040000 		.4byte	.LASF90
 2733 0530 0C       		.byte	0xc
 2734 0531 4F       		.byte	0x4f
 2735 0532 FA040000 		.4byte	0x4fa
 2736 0536 0F       		.uleb128 0xf
 2737 0537 69000000 		.4byte	.LASF163
 2738 053b 01       		.byte	0x1
 2739 053c 14       		.byte	0x14
 2740 053d 00000000 		.4byte	.LFB64
 2741 0541 0C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 64


 2742 0545 01       		.uleb128 0x1
 2743 0546 9C       		.byte	0x9c
 2744 0547 10       		.uleb128 0x10
 2745 0548 11080000 		.4byte	.LASF104
 2746 054c 01       		.byte	0x1
 2747 054d 28       		.byte	0x28
 2748 054e 00000000 		.4byte	.LFB65
 2749 0552 2C010000 		.4byte	.LFE65-.LFB65
 2750 0556 01       		.uleb128 0x1
 2751 0557 9C       		.byte	0x9c
 2752 0558 87050000 		.4byte	0x587
 2753 055c 11       		.uleb128 0x11
 2754 055d 0D070000 		.4byte	.LASF91
 2755 0561 01       		.byte	0x1
 2756 0562 3C       		.byte	0x3c
 2757 0563 87050000 		.4byte	0x587
 2758 0567 02       		.uleb128 0x2
 2759 0568 91       		.byte	0x91
 2760 0569 64       		.sleb128 -28
 2761 056a 11       		.uleb128 0x11
 2762 056b EB070000 		.4byte	.LASF92
 2763 056f 01       		.byte	0x1
 2764 0570 59       		.byte	0x59
 2765 0571 97050000 		.4byte	0x597
 2766 0575 02       		.uleb128 0x2
 2767 0576 91       		.byte	0x91
 2768 0577 58       		.sleb128 -40
 2769 0578 11       		.uleb128 0x11
 2770 0579 89030000 		.4byte	.LASF93
 2771 057d 01       		.byte	0x1
 2772 057e 5E       		.byte	0x5e
 2773 057f 81000000 		.4byte	0x81
 2774 0583 02       		.uleb128 0x2
 2775 0584 91       		.byte	0x91
 2776 0585 6F       		.sleb128 -17
 2777 0586 00       		.byte	0
 2778 0587 07       		.uleb128 0x7
 2779 0588 99000000 		.4byte	0x99
 2780 058c 97050000 		.4byte	0x597
 2781 0590 08       		.uleb128 0x8
 2782 0591 E5000000 		.4byte	0xe5
 2783 0595 01       		.byte	0x1
 2784 0596 00       		.byte	0
 2785 0597 07       		.uleb128 0x7
 2786 0598 D7000000 		.4byte	0xd7
 2787 059c A7050000 		.4byte	0x5a7
 2788 05a0 08       		.uleb128 0x8
 2789 05a1 E5000000 		.4byte	0xe5
 2790 05a5 09       		.byte	0x9
 2791 05a6 00       		.byte	0
 2792 05a7 12       		.uleb128 0x12
 2793 05a8 02040000 		.4byte	.LASF95
 2794 05ac 01       		.byte	0x1
 2795 05ad 68       		.byte	0x68
 2796 05ae 68000000 		.4byte	0x68
 2797 05b2 00000000 		.4byte	.LFB66
 2798 05b6 64000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 65


 2799 05ba 01       		.uleb128 0x1
 2800 05bb 9C       		.byte	0x9c
 2801 05bc CF050000 		.4byte	0x5cf
 2802 05c0 11       		.uleb128 0x11
 2803 05c1 96050000 		.4byte	.LASF94
 2804 05c5 01       		.byte	0x1
 2805 05c6 82       		.byte	0x82
 2806 05c7 81000000 		.4byte	0x81
 2807 05cb 02       		.uleb128 0x2
 2808 05cc 91       		.byte	0x91
 2809 05cd 77       		.sleb128 -9
 2810 05ce 00       		.byte	0
 2811 05cf 13       		.uleb128 0x13
 2812 05d0 33070000 		.4byte	.LASF164
 2813 05d4 01       		.byte	0x1
 2814 05d5 92       		.byte	0x92
 2815 05d6 00000000 		.4byte	.LFB67
 2816 05da 2A000000 		.4byte	.LFE67-.LFB67
 2817 05de 01       		.uleb128 0x1
 2818 05df 9C       		.byte	0x9c
 2819 05e0 14       		.uleb128 0x14
 2820 05e1 44030000 		.4byte	.LASF96
 2821 05e5 01       		.byte	0x1
 2822 05e6 B7       		.byte	0xb7
 2823 05e7 00000000 		.4byte	.LFB68
 2824 05eb 50000000 		.4byte	.LFE68-.LFB68
 2825 05ef 01       		.uleb128 0x1
 2826 05f0 9C       		.byte	0x9c
 2827 05f1 04060000 		.4byte	0x604
 2828 05f5 15       		.uleb128 0x15
 2829 05f6 7D040000 		.4byte	.LASF97
 2830 05fa 01       		.byte	0x1
 2831 05fb B7       		.byte	0xb7
 2832 05fc 81000000 		.4byte	0x81
 2833 0600 02       		.uleb128 0x2
 2834 0601 91       		.byte	0x91
 2835 0602 77       		.sleb128 -9
 2836 0603 00       		.byte	0
 2837 0604 16       		.uleb128 0x16
 2838 0605 06080000 		.4byte	.LASF101
 2839 0609 01       		.byte	0x1
 2840 060a CE       		.byte	0xce
 2841 060b 81000000 		.4byte	0x81
 2842 060f 00000000 		.4byte	.LFB69
 2843 0613 48000000 		.4byte	.LFE69-.LFB69
 2844 0617 01       		.uleb128 0x1
 2845 0618 9C       		.byte	0x9c
 2846 0619 3A060000 		.4byte	0x63a
 2847 061d 15       		.uleb128 0x15
 2848 061e A6040000 		.4byte	.LASF98
 2849 0622 01       		.byte	0x1
 2850 0623 CE       		.byte	0xce
 2851 0624 3A060000 		.4byte	0x63a
 2852 0628 02       		.uleb128 0x2
 2853 0629 91       		.byte	0x91
 2854 062a 74       		.sleb128 -12
 2855 062b 15       		.uleb128 0x15
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 66


 2856 062c 7D040000 		.4byte	.LASF97
 2857 0630 01       		.byte	0x1
 2858 0631 CE       		.byte	0xce
 2859 0632 81000000 		.4byte	0x81
 2860 0636 02       		.uleb128 0x2
 2861 0637 91       		.byte	0x91
 2862 0638 73       		.sleb128 -13
 2863 0639 00       		.byte	0
 2864 063a 06       		.uleb128 0x6
 2865 063b 04       		.byte	0x4
 2866 063c B8040000 		.4byte	0x4b8
 2867 0640 17       		.uleb128 0x17
 2868 0641 E8050000 		.4byte	.LASF99
 2869 0645 01       		.byte	0x1
 2870 0646 E3       		.byte	0xe3
 2871 0647 00000000 		.4byte	.LFB70
 2872 064b 1E000000 		.4byte	.LFE70-.LFB70
 2873 064f 01       		.uleb128 0x1
 2874 0650 9C       		.byte	0x9c
 2875 0651 64060000 		.4byte	0x664
 2876 0655 15       		.uleb128 0x15
 2877 0656 46060000 		.4byte	.LASF100
 2878 065a 01       		.byte	0x1
 2879 065b E3       		.byte	0xe3
 2880 065c 3A060000 		.4byte	0x63a
 2881 0660 02       		.uleb128 0x2
 2882 0661 91       		.byte	0x91
 2883 0662 74       		.sleb128 -12
 2884 0663 00       		.byte	0
 2885 0664 18       		.uleb128 0x18
 2886 0665 25050000 		.4byte	.LASF102
 2887 0669 01       		.byte	0x1
 2888 066a EC       		.byte	0xec
 2889 066b B8040000 		.4byte	0x4b8
 2890 066f 00000000 		.4byte	.LFB71
 2891 0673 46000000 		.4byte	.LFE71-.LFB71
 2892 0677 01       		.uleb128 0x1
 2893 0678 9C       		.byte	0x9c
 2894 0679 B6060000 		.4byte	0x6b6
 2895 067d 15       		.uleb128 0x15
 2896 067e A7020000 		.4byte	.LASF80
 2897 0682 01       		.byte	0x1
 2898 0683 EC       		.byte	0xec
 2899 0684 8D000000 		.4byte	0x8d
 2900 0688 02       		.uleb128 0x2
 2901 0689 91       		.byte	0x91
 2902 068a 6A       		.sleb128 -22
 2903 068b 15       		.uleb128 0x15
 2904 068c BE070000 		.4byte	.LASF82
 2905 0690 01       		.byte	0x1
 2906 0691 EC       		.byte	0xec
 2907 0692 81000000 		.4byte	0x81
 2908 0696 02       		.uleb128 0x2
 2909 0697 91       		.byte	0x91
 2910 0698 69       		.sleb128 -23
 2911 0699 15       		.uleb128 0x15
 2912 069a 51000000 		.4byte	.LASF83
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 67


 2913 069e 01       		.byte	0x1
 2914 069f EC       		.byte	0xec
 2915 06a0 81000000 		.4byte	0x81
 2916 06a4 02       		.uleb128 0x2
 2917 06a5 91       		.byte	0x91
 2918 06a6 68       		.sleb128 -24
 2919 06a7 11       		.uleb128 0x11
 2920 06a8 5D070000 		.4byte	.LASF103
 2921 06ac 01       		.byte	0x1
 2922 06ad EF       		.byte	0xef
 2923 06ae B8040000 		.4byte	0x4b8
 2924 06b2 02       		.uleb128 0x2
 2925 06b3 91       		.byte	0x91
 2926 06b4 70       		.sleb128 -16
 2927 06b5 00       		.byte	0
 2928 06b6 19       		.uleb128 0x19
 2929 06b7 55060000 		.4byte	.LASF105
 2930 06bb 01       		.byte	0x1
 2931 06bc 0501     		.2byte	0x105
 2932 06be 00000000 		.4byte	.LFB72
 2933 06c2 04010000 		.4byte	.LFE72-.LFB72
 2934 06c6 01       		.uleb128 0x1
 2935 06c7 9C       		.byte	0x9c
 2936 06c8 1D070000 		.4byte	0x71d
 2937 06cc 1A       		.uleb128 0x1a
 2938 06cd 55010000 		.4byte	.LASF106
 2939 06d1 01       		.byte	0x1
 2940 06d2 0D01     		.2byte	0x10d
 2941 06d4 C9010000 		.4byte	0x1c9
 2942 06d8 03       		.uleb128 0x3
 2943 06d9 91       		.byte	0x91
 2944 06da EC7C     		.sleb128 -404
 2945 06dc 1A       		.uleb128 0x1a
 2946 06dd 98070000 		.4byte	.LASF107
 2947 06e1 01       		.byte	0x1
 2948 06e2 1101     		.2byte	0x111
 2949 06e4 C9010000 		.4byte	0x1c9
 2950 06e8 03       		.uleb128 0x3
 2951 06e9 91       		.byte	0x91
 2952 06ea E879     		.sleb128 -792
 2953 06ec 1A       		.uleb128 0x1a
 2954 06ed 02010000 		.4byte	.LASF108
 2955 06f1 01       		.byte	0x1
 2956 06f2 1501     		.2byte	0x115
 2957 06f4 C9010000 		.4byte	0x1c9
 2958 06f8 03       		.uleb128 0x3
 2959 06f9 91       		.byte	0x91
 2960 06fa E476     		.sleb128 -1180
 2961 06fc 1A       		.uleb128 0x1a
 2962 06fd 30040000 		.4byte	.LASF109
 2963 0701 01       		.byte	0x1
 2964 0702 1901     		.2byte	0x119
 2965 0704 C9010000 		.4byte	0x1c9
 2966 0708 03       		.uleb128 0x3
 2967 0709 91       		.byte	0x91
 2968 070a E073     		.sleb128 -1568
 2969 070c 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 68


 2970 070d 00000000 		.4byte	.LASF110
 2971 0711 01       		.byte	0x1
 2972 0712 1D01     		.2byte	0x11d
 2973 0714 C9010000 		.4byte	0x1c9
 2974 0718 03       		.uleb128 0x3
 2975 0719 91       		.byte	0x91
 2976 071a DC70     		.sleb128 -1956
 2977 071c 00       		.byte	0
 2978 071d 1B       		.uleb128 0x1b
 2979 071e 1C080000 		.4byte	.LASF165
 2980 0722 01       		.byte	0x1
 2981 0723 2801     		.2byte	0x128
 2982 0725 68000000 		.4byte	0x68
 2983 0729 00000000 		.4byte	.LFB73
 2984 072d 1E000000 		.4byte	.LFE73-.LFB73
 2985 0731 01       		.uleb128 0x1
 2986 0732 9C       		.byte	0x9c
 2987 0733 1C       		.uleb128 0x1c
 2988 0734 6E020000 		.4byte	.LASF111
 2989 0738 01       		.byte	0x1
 2990 0739 3E01     		.2byte	0x13e
 2991 073b 81000000 		.4byte	0x81
 2992 073f 00000000 		.4byte	.LFB74
 2993 0743 30040000 		.4byte	.LFE74-.LFB74
 2994 0747 01       		.uleb128 0x1
 2995 0748 9C       		.byte	0x9c
 2996 0749 8D080000 		.4byte	0x88d
 2997 074d 1D       		.uleb128 0x1d
 2998 074e 62000000 		.4byte	.LBB2
 2999 0752 B8030000 		.4byte	.LBE2-.LBB2
 3000 0756 1A       		.uleb128 0x1a
 3001 0757 38050000 		.4byte	.LASF112
 3002 075b 01       		.byte	0x1
 3003 075c 6E01     		.2byte	0x16e
 3004 075e 61030000 		.4byte	0x361
 3005 0762 02       		.uleb128 0x2
 3006 0763 91       		.byte	0x91
 3007 0764 48       		.sleb128 -56
 3008 0765 1A       		.uleb128 0x1a
 3009 0766 46020000 		.4byte	.LASF113
 3010 076a 01       		.byte	0x1
 3011 076b 7301     		.2byte	0x173
 3012 076d 61030000 		.4byte	0x361
 3013 0771 03       		.uleb128 0x3
 3014 0772 91       		.byte	0x91
 3015 0773 B47F     		.sleb128 -76
 3016 0775 1A       		.uleb128 0x1a
 3017 0776 95030000 		.4byte	.LASF114
 3018 077a 01       		.byte	0x1
 3019 077b 8601     		.2byte	0x186
 3020 077d 8D000000 		.4byte	0x8d
 3021 0781 02       		.uleb128 0x2
 3022 0782 91       		.byte	0x91
 3023 0783 66       		.sleb128 -26
 3024 0784 1A       		.uleb128 0x1a
 3025 0785 1B040000 		.4byte	.LASF115
 3026 0789 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 69


 3027 078a 8701     		.2byte	0x187
 3028 078c 61030000 		.4byte	0x361
 3029 0790 03       		.uleb128 0x3
 3030 0791 91       		.byte	0x91
 3031 0792 A07F     		.sleb128 -96
 3032 0794 1A       		.uleb128 0x1a
 3033 0795 F8060000 		.4byte	.LASF116
 3034 0799 01       		.byte	0x1
 3035 079a 9C01     		.2byte	0x19c
 3036 079c 8D080000 		.4byte	0x88d
 3037 07a0 03       		.uleb128 0x3
 3038 07a1 91       		.byte	0x91
 3039 07a2 B875     		.sleb128 -1352
 3040 07a4 1A       		.uleb128 0x1a
 3041 07a5 78070000 		.4byte	.LASF30
 3042 07a9 01       		.byte	0x1
 3043 07aa 9D01     		.2byte	0x19d
 3044 07ac 81000000 		.4byte	0x81
 3045 07b0 02       		.uleb128 0x2
 3046 07b1 91       		.byte	0x91
 3047 07b2 65       		.sleb128 -27
 3048 07b3 1A       		.uleb128 0x1a
 3049 07b4 CA060000 		.4byte	.LASF117
 3050 07b8 01       		.byte	0x1
 3051 07b9 A401     		.2byte	0x1a4
 3052 07bb EC000000 		.4byte	0xec
 3053 07bf 02       		.uleb128 0x2
 3054 07c0 91       		.byte	0x91
 3055 07c1 6C       		.sleb128 -20
 3056 07c2 1A       		.uleb128 0x1a
 3057 07c3 72010000 		.4byte	.LASF118
 3058 07c7 01       		.byte	0x1
 3059 07c8 A801     		.2byte	0x1a8
 3060 07ca A5000000 		.4byte	0xa5
 3061 07ce 02       		.uleb128 0x2
 3062 07cf 91       		.byte	0x91
 3063 07d0 64       		.sleb128 -28
 3064 07d1 1A       		.uleb128 0x1a
 3065 07d2 77020000 		.4byte	.LASF119
 3066 07d6 01       		.byte	0x1
 3067 07d7 D801     		.2byte	0x1d8
 3068 07d9 4C000000 		.4byte	0x4c
 3069 07dd 02       		.uleb128 0x2
 3070 07de 91       		.byte	0x91
 3071 07df 5C       		.sleb128 -36
 3072 07e0 1E       		.uleb128 0x1e
 3073 07e1 CE000000 		.4byte	.LBB3
 3074 07e5 2C000000 		.4byte	.LBE3-.LBB3
 3075 07e9 0D080000 		.4byte	0x80d
 3076 07ed 1A       		.uleb128 0x1a
 3077 07ee 81060000 		.4byte	.LASF120
 3078 07f2 01       		.byte	0x1
 3079 07f3 7B01     		.2byte	0x17b
 3080 07f5 8D000000 		.4byte	0x8d
 3081 07f9 02       		.uleb128 0x2
 3082 07fa 91       		.byte	0x91
 3083 07fb 68       		.sleb128 -24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 70


 3084 07fc 1A       		.uleb128 0x1a
 3085 07fd E4010000 		.4byte	.LASF121
 3086 0801 01       		.byte	0x1
 3087 0802 7C01     		.2byte	0x17c
 3088 0804 61030000 		.4byte	0x361
 3089 0808 03       		.uleb128 0x3
 3090 0809 91       		.byte	0x91
 3091 080a 8C7F     		.sleb128 -116
 3092 080c 00       		.byte	0
 3093 080d 1E       		.uleb128 0x1e
 3094 080e FC000000 		.4byte	.LBB4
 3095 0812 20000000 		.4byte	.LBE4-.LBB4
 3096 0816 2B080000 		.4byte	0x82b
 3097 081a 1A       		.uleb128 0x1a
 3098 081b E4010000 		.4byte	.LASF121
 3099 081f 01       		.byte	0x1
 3100 0820 8001     		.2byte	0x180
 3101 0822 61030000 		.4byte	0x361
 3102 0826 03       		.uleb128 0x3
 3103 0827 91       		.byte	0x91
 3104 0828 F87E     		.sleb128 -136
 3105 082a 00       		.byte	0
 3106 082b 1E       		.uleb128 0x1e
 3107 082c 3C020000 		.4byte	.LBB5
 3108 0830 BC000000 		.4byte	.LBE5-.LBB5
 3109 0834 62080000 		.4byte	0x862
 3110 0838 1A       		.uleb128 0x1a
 3111 0839 31050000 		.4byte	.LASF122
 3112 083d 01       		.byte	0x1
 3113 083e AD01     		.2byte	0x1ad
 3114 0840 A5000000 		.4byte	0xa5
 3115 0844 02       		.uleb128 0x2
 3116 0845 91       		.byte	0x91
 3117 0846 6B       		.sleb128 -21
 3118 0847 1D       		.uleb128 0x1d
 3119 0848 44020000 		.4byte	.LBB6
 3120 084c 9A000000 		.4byte	.LBE6-.LBB6
 3121 0850 1A       		.uleb128 0x1a
 3122 0851 62030000 		.4byte	.LASF123
 3123 0855 01       		.byte	0x1
 3124 0856 AF01     		.2byte	0x1af
 3125 0858 9D080000 		.4byte	0x89d
 3126 085c 03       		.uleb128 0x3
 3127 085d 91       		.byte	0x91
 3128 085e 8077     		.sleb128 -1152
 3129 0860 00       		.byte	0
 3130 0861 00       		.byte	0
 3131 0862 1D       		.uleb128 0x1d
 3132 0863 12030000 		.4byte	.LBB7
 3133 0867 3A000000 		.4byte	.LBE7-.LBB7
 3134 086b 1A       		.uleb128 0x1a
 3135 086c 54020000 		.4byte	.LASF124
 3136 0870 01       		.byte	0x1
 3137 0871 CF01     		.2byte	0x1cf
 3138 0873 68000000 		.4byte	0x68
 3139 0877 02       		.uleb128 0x2
 3140 0878 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 71


 3141 0879 60       		.sleb128 -32
 3142 087a 1A       		.uleb128 0x1a
 3143 087b F3050000 		.4byte	.LASF125
 3144 087f 01       		.byte	0x1
 3145 0880 D001     		.2byte	0x1d0
 3146 0882 97050000 		.4byte	0x597
 3147 0886 03       		.uleb128 0x3
 3148 0887 91       		.byte	0x91
 3149 0888 EC7E     		.sleb128 -148
 3150 088a 00       		.byte	0
 3151 088b 00       		.byte	0
 3152 088c 00       		.byte	0
 3153 088d 07       		.uleb128 0x7
 3154 088e D7000000 		.4byte	0xd7
 3155 0892 9D080000 		.4byte	0x89d
 3156 0896 08       		.uleb128 0x8
 3157 0897 E5000000 		.4byte	0xe5
 3158 089b C7       		.byte	0xc7
 3159 089c 00       		.byte	0
 3160 089d 07       		.uleb128 0x7
 3161 089e D7000000 		.4byte	0xd7
 3162 08a2 AE080000 		.4byte	0x8ae
 3163 08a6 1F       		.uleb128 0x1f
 3164 08a7 E5000000 		.4byte	0xe5
 3165 08ab E803     		.2byte	0x3e8
 3166 08ad 00       		.byte	0
 3167 08ae 1C       		.uleb128 0x1c
 3168 08af 72050000 		.4byte	.LASF126
 3169 08b3 01       		.byte	0x1
 3170 08b4 ED01     		.2byte	0x1ed
 3171 08b6 81000000 		.4byte	0x81
 3172 08ba 00000000 		.4byte	.LFB75
 3173 08be 44000000 		.4byte	.LFE75-.LFB75
 3174 08c2 01       		.uleb128 0x1
 3175 08c3 9C       		.byte	0x9c
 3176 08c4 E2080000 		.4byte	0x8e2
 3177 08c8 1D       		.uleb128 0x1d
 3178 08c9 20000000 		.4byte	.LBB8
 3179 08cd 1A000000 		.4byte	.LBE8-.LBB8
 3180 08d1 1A       		.uleb128 0x1a
 3181 08d2 77020000 		.4byte	.LASF119
 3182 08d6 01       		.byte	0x1
 3183 08d7 F801     		.2byte	0x1f8
 3184 08d9 4C000000 		.4byte	0x4c
 3185 08dd 02       		.uleb128 0x2
 3186 08de 91       		.byte	0x91
 3187 08df 74       		.sleb128 -12
 3188 08e0 00       		.byte	0
 3189 08e1 00       		.byte	0
 3190 08e2 1C       		.uleb128 0x1c
 3191 08e3 C3030000 		.4byte	.LASF127
 3192 08e7 01       		.byte	0x1
 3193 08e8 0D02     		.2byte	0x20d
 3194 08ea 81000000 		.4byte	0x81
 3195 08ee 00000000 		.4byte	.LFB76
 3196 08f2 74020000 		.4byte	.LFE76-.LFB76
 3197 08f6 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 72


 3198 08f7 9C       		.byte	0x9c
 3199 08f8 73090000 		.4byte	0x973
 3200 08fc 1A       		.uleb128 0x1a
 3201 08fd F8040000 		.4byte	.LASF59
 3202 0901 01       		.byte	0x1
 3203 0902 1002     		.2byte	0x210
 3204 0904 4C000000 		.4byte	0x4c
 3205 0908 02       		.uleb128 0x2
 3206 0909 91       		.byte	0x91
 3207 090a 6C       		.sleb128 -20
 3208 090b 1A       		.uleb128 0x1a
 3209 090c D0060000 		.4byte	.LASF128
 3210 0910 01       		.byte	0x1
 3211 0911 1102     		.2byte	0x211
 3212 0913 73090000 		.4byte	0x973
 3213 0917 02       		.uleb128 0x2
 3214 0918 91       		.byte	0x91
 3215 0919 4C       		.sleb128 -52
 3216 091a 1A       		.uleb128 0x1a
 3217 091b F2020000 		.4byte	.LASF58
 3218 091f 01       		.byte	0x1
 3219 0920 1502     		.2byte	0x215
 3220 0922 61030000 		.4byte	0x361
 3221 0926 03       		.uleb128 0x3
 3222 0927 91       		.byte	0x91
 3223 0928 B87F     		.sleb128 -72
 3224 092a 1A       		.uleb128 0x1a
 3225 092b 6D030000 		.4byte	.LASF129
 3226 092f 01       		.byte	0x1
 3227 0930 3302     		.2byte	0x233
 3228 0932 6D020000 		.4byte	0x26d
 3229 0936 03       		.uleb128 0x3
 3230 0937 91       		.byte	0x91
 3231 0938 A47F     		.sleb128 -92
 3232 093a 1E       		.uleb128 0x1e
 3233 093b 22000000 		.4byte	.LBB9
 3234 093f 78000000 		.4byte	.LBE9-.LBB9
 3235 0943 58090000 		.4byte	0x958
 3236 0947 1A       		.uleb128 0x1a
 3237 0948 16070000 		.4byte	.LASF130
 3238 094c 01       		.byte	0x1
 3239 094d 1B02     		.2byte	0x21b
 3240 094f 1D020000 		.4byte	0x21d
 3241 0953 03       		.uleb128 0x3
 3242 0954 91       		.byte	0x91
 3243 0955 887F     		.sleb128 -120
 3244 0957 00       		.byte	0
 3245 0958 1D       		.uleb128 0x1d
 3246 0959 1E010000 		.4byte	.LBB10
 3247 095d EE000000 		.4byte	.LBE10-.LBB10
 3248 0961 1A       		.uleb128 0x1a
 3249 0962 6D070000 		.4byte	.LASF131
 3250 0966 01       		.byte	0x1
 3251 0967 4E02     		.2byte	0x24e
 3252 0969 B1020000 		.4byte	0x2b1
 3253 096d 03       		.uleb128 0x3
 3254 096e 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 73


 3255 096f F87E     		.sleb128 -136
 3256 0971 00       		.byte	0
 3257 0972 00       		.byte	0
 3258 0973 07       		.uleb128 0x7
 3259 0974 D7000000 		.4byte	0xd7
 3260 0978 83090000 		.4byte	0x983
 3261 097c 08       		.uleb128 0x8
 3262 097d E5000000 		.4byte	0xe5
 3263 0981 1F       		.byte	0x1f
 3264 0982 00       		.byte	0
 3265 0983 20       		.uleb128 0x20
 3266 0984 30030000 		.4byte	.LASF132
 3267 0988 01       		.byte	0x1
 3268 0989 7402     		.2byte	0x274
 3269 098b 81000000 		.4byte	0x81
 3270 098f 00000000 		.4byte	.LFB77
 3271 0993 74000000 		.4byte	.LFE77-.LFB77
 3272 0997 01       		.uleb128 0x1
 3273 0998 9C       		.byte	0x9c
 3274 0999 C9090000 		.4byte	0x9c9
 3275 099d 21       		.uleb128 0x21
 3276 099e F8040000 		.4byte	.LASF59
 3277 09a2 01       		.byte	0x1
 3278 09a3 7402     		.2byte	0x274
 3279 09a5 4C000000 		.4byte	0x4c
 3280 09a9 02       		.uleb128 0x2
 3281 09aa 91       		.byte	0x91
 3282 09ab 64       		.sleb128 -28
 3283 09ac 22       		.uleb128 0x22
 3284 09ad 7400     		.ascii	"t\000"
 3285 09af 01       		.byte	0x1
 3286 09b0 7B02     		.2byte	0x27b
 3287 09b2 C9090000 		.4byte	0x9c9
 3288 09b6 02       		.uleb128 0x2
 3289 09b7 91       		.byte	0x91
 3290 09b8 74       		.sleb128 -12
 3291 09b9 1A       		.uleb128 0x1a
 3292 09ba D7040000 		.4byte	.LASF133
 3293 09be 01       		.byte	0x1
 3294 09bf 8002     		.2byte	0x280
 3295 09c1 6B010000 		.4byte	0x16b
 3296 09c5 02       		.uleb128 0x2
 3297 09c6 91       		.byte	0x91
 3298 09c7 68       		.sleb128 -24
 3299 09c8 00       		.byte	0
 3300 09c9 06       		.uleb128 0x6
 3301 09ca 04       		.byte	0x4
 3302 09cb BC020000 		.4byte	0x2bc
 3303 09cf 20       		.uleb128 0x20
 3304 09d0 B6020000 		.4byte	.LASF134
 3305 09d4 01       		.byte	0x1
 3306 09d5 9D02     		.2byte	0x29d
 3307 09d7 81000000 		.4byte	0x81
 3308 09db 00000000 		.4byte	.LFB78
 3309 09df 38010000 		.4byte	.LFE78-.LFB78
 3310 09e3 01       		.uleb128 0x1
 3311 09e4 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 74


 3312 09e5 480A0000 		.4byte	0xa48
 3313 09e9 21       		.uleb128 0x21
 3314 09ea F8020000 		.4byte	.LASF135
 3315 09ee 01       		.byte	0x1
 3316 09ef 9D02     		.2byte	0x29d
 3317 09f1 EC000000 		.4byte	0xec
 3318 09f5 03       		.uleb128 0x3
 3319 09f6 91       		.byte	0x91
 3320 09f7 9C7E     		.sleb128 -228
 3321 09f9 21       		.uleb128 0x21
 3322 09fa D2020000 		.4byte	.LASF136
 3323 09fe 01       		.byte	0x1
 3324 09ff 9D02     		.2byte	0x29d
 3325 0a01 68000000 		.4byte	0x68
 3326 0a05 03       		.uleb128 0x3
 3327 0a06 91       		.byte	0x91
 3328 0a07 987E     		.sleb128 -232
 3329 0a09 21       		.uleb128 0x21
 3330 0a0a A0040000 		.4byte	.LASF137
 3331 0a0e 01       		.byte	0x1
 3332 0a0f 9D02     		.2byte	0x29d
 3333 0a11 EC000000 		.4byte	0xec
 3334 0a15 03       		.uleb128 0x3
 3335 0a16 91       		.byte	0x91
 3336 0a17 947E     		.sleb128 -236
 3337 0a19 1A       		.uleb128 0x1a
 3338 0a1a D5010000 		.4byte	.LASF138
 3339 0a1e 01       		.byte	0x1
 3340 0a1f 9F02     		.2byte	0x29f
 3341 0a21 81000000 		.4byte	0x81
 3342 0a25 02       		.uleb128 0x2
 3343 0a26 91       		.byte	0x91
 3344 0a27 77       		.sleb128 -9
 3345 0a28 1A       		.uleb128 0x1a
 3346 0a29 3C000000 		.4byte	.LASF139
 3347 0a2d 01       		.byte	0x1
 3348 0a2e A602     		.2byte	0x2a6
 3349 0a30 480A0000 		.4byte	0xa48
 3350 0a34 02       		.uleb128 0x2
 3351 0a35 91       		.byte	0x91
 3352 0a36 68       		.sleb128 -24
 3353 0a37 1A       		.uleb128 0x1a
 3354 0a38 F8060000 		.4byte	.LASF116
 3355 0a3c 01       		.byte	0x1
 3356 0a3d AE02     		.2byte	0x2ae
 3357 0a3f 8D080000 		.4byte	0x88d
 3358 0a43 03       		.uleb128 0x3
 3359 0a44 91       		.byte	0x91
 3360 0a45 A07E     		.sleb128 -224
 3361 0a47 00       		.byte	0
 3362 0a48 07       		.uleb128 0x7
 3363 0a49 D7000000 		.4byte	0xd7
 3364 0a4d 580A0000 		.4byte	0xa58
 3365 0a51 08       		.uleb128 0x8
 3366 0a52 E5000000 		.4byte	0xe5
 3367 0a56 0B       		.byte	0xb
 3368 0a57 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 75


 3369 0a58 23       		.uleb128 0x23
 3370 0a59 48010000 		.4byte	.LASF140
 3371 0a5d 0D       		.byte	0xd
 3372 0a5e 1207     		.2byte	0x712
 3373 0a60 640A0000 		.4byte	0xa64
 3374 0a64 0C       		.uleb128 0xc
 3375 0a65 76000000 		.4byte	0x76
 3376 0a69 24       		.uleb128 0x24
 3377 0a6a 2C000000 		.4byte	.LASF141
 3378 0a6e 0A       		.byte	0xa
 3379 0a6f 11       		.byte	0x11
 3380 0a70 6D040000 		.4byte	0x46d
 3381 0a74 05       		.uleb128 0x5
 3382 0a75 03       		.byte	0x3
 3383 0a76 00000000 		.4byte	buffer_overflow
 3384 0a7a 24       		.uleb128 0x24
 3385 0a7b 87040000 		.4byte	.LASF142
 3386 0a7f 0A       		.byte	0xa
 3387 0a80 22       		.byte	0x22
 3388 0a81 8D000000 		.4byte	0x8d
 3389 0a85 05       		.uleb128 0x5
 3390 0a86 03       		.byte	0x3
 3391 0a87 00000000 		.4byte	dataPointsInStack
 3392 0a8b 24       		.uleb128 0x24
 3393 0a8c 7F070000 		.4byte	.LASF143
 3394 0a90 0A       		.byte	0xa
 3395 0a91 23       		.byte	0x23
 3396 0a92 8D000000 		.4byte	0x8d
 3397 0a96 05       		.uleb128 0x5
 3398 0a97 03       		.byte	0x3
 3399 0a98 00000000 		.4byte	dataPointsInStackDesired
 3400 0a9c 07       		.uleb128 0x7
 3401 0a9d 71030000 		.4byte	0x371
 3402 0aa1 AC0A0000 		.4byte	0xaac
 3403 0aa5 08       		.uleb128 0x8
 3404 0aa6 E5000000 		.4byte	0xe5
 3405 0aaa 95       		.byte	0x95
 3406 0aab 00       		.byte	0
 3407 0aac 24       		.uleb128 0x24
 3408 0aad D4030000 		.4byte	.LASF144
 3409 0ab1 0A       		.byte	0xa
 3410 0ab2 24       		.byte	0x24
 3411 0ab3 9C0A0000 		.4byte	0xa9c
 3412 0ab7 05       		.uleb128 0x5
 3413 0ab8 03       		.byte	0x3
 3414 0ab9 00000000 		.4byte	data
 3415 0abd 24       		.uleb128 0x24
 3416 0abe 2F010000 		.4byte	.LASF145
 3417 0ac2 0B       		.byte	0xb
 3418 0ac3 1F       		.byte	0x1f
 3419 0ac4 81000000 		.4byte	0x81
 3420 0ac8 05       		.uleb128 0x5
 3421 0ac9 03       		.byte	0x3
 3422 0aca 00000000 		.4byte	modem_state
 3423 0ace 24       		.uleb128 0x24
 3424 0acf 44040000 		.4byte	.LASF146
 3425 0ad3 0B       		.byte	0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 76


 3426 0ad4 62       		.byte	0x62
 3427 0ad5 BD000000 		.4byte	0xbd
 3428 0ad9 05       		.uleb128 0x5
 3429 0ada 03       		.byte	0x3
 3430 0adb 00000000 		.4byte	modem_start_time_stamp
 3431 0adf 24       		.uleb128 0x24
 3432 0ae0 EA030000 		.4byte	.LASF85
 3433 0ae4 0B       		.byte	0xb
 3434 0ae5 63       		.byte	0x63
 3435 0ae6 A9030000 		.4byte	0x3a9
 3436 0aea 05       		.uleb128 0x5
 3437 0aeb 03       		.byte	0x3
 3438 0aec 00000000 		.4byte	modem_info
 3439 0af0 24       		.uleb128 0x24
 3440 0af1 E1060000 		.4byte	.LASF147
 3441 0af5 0B       		.byte	0xb
 3442 0af6 64       		.byte	0x64
 3443 0af7 1D040000 		.4byte	0x41d
 3444 0afb 05       		.uleb128 0x5
 3445 0afc 03       		.byte	0x3
 3446 0afd 00000000 		.4byte	modem_stats
 3447 0b01 24       		.uleb128 0x24
 3448 0b02 10050000 		.4byte	.LASF148
 3449 0b06 0B       		.byte	0xb
 3450 0b07 65       		.byte	0x65
 3451 0b08 74040000 		.4byte	0x474
 3452 0b0c 05       		.uleb128 0x5
 3453 0b0d 03       		.byte	0x3
 3454 0b0e 00000000 		.4byte	updatable_parameters
 3455 0b12 07       		.uleb128 0x7
 3456 0b13 D7000000 		.4byte	0xd7
 3457 0b17 230B0000 		.4byte	0xb23
 3458 0b1b 1F       		.uleb128 0x1f
 3459 0b1c E5000000 		.4byte	0xe5
 3460 0b20 0F27     		.2byte	0x270f
 3461 0b22 00       		.byte	0
 3462 0b23 24       		.uleb128 0x24
 3463 0b24 50050000 		.4byte	.LASF149
 3464 0b28 0C       		.byte	0xc
 3465 0b29 17       		.byte	0x17
 3466 0b2a 120B0000 		.4byte	0xb12
 3467 0b2e 05       		.uleb128 0x5
 3468 0b2f 03       		.byte	0x3
 3469 0b30 00000000 		.4byte	http_request
 3470 0b34 24       		.uleb128 0x24
 3471 0b35 AE070000 		.4byte	.LASF150
 3472 0b39 0C       		.byte	0xc
 3473 0b3a 18       		.byte	0x18
 3474 0b3b 120B0000 		.4byte	0xb12
 3475 0b3f 05       		.uleb128 0x5
 3476 0b40 03       		.byte	0x3
 3477 0b41 00000000 		.4byte	http_body
 3478 0b45 24       		.uleb128 0x24
 3479 0b46 ED060000 		.4byte	.LASF151
 3480 0b4a 0C       		.byte	0xc
 3481 0b4b 19       		.byte	0x19
 3482 0b4c 8D080000 		.4byte	0x88d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 77


 3483 0b50 05       		.uleb128 0x5
 3484 0b51 03       		.byte	0x3
 3485 0b52 00000000 		.4byte	http_route
 3486 0b56 24       		.uleb128 0x24
 3487 0b57 2E060000 		.4byte	.LASF152
 3488 0b5b 0C       		.byte	0xc
 3489 0b5c 40       		.byte	0x40
 3490 0b5d EF040000 		.4byte	0x4ef
 3491 0b61 05       		.uleb128 0x5
 3492 0b62 03       		.byte	0x3
 3493 0b63 00000000 		.4byte	system_info
 3494 0b67 24       		.uleb128 0x24
 3495 0b68 CE050000 		.4byte	.LASF153
 3496 0b6c 0C       		.byte	0xc
 3497 0b6d 52       		.byte	0x52
 3498 0b6e 2B050000 		.4byte	0x52b
 3499 0b72 05       		.uleb128 0x5
 3500 0b73 03       		.byte	0x3
 3501 0b74 00000000 		.4byte	system_settings
 3502 0b78 24       		.uleb128 0x24
 3503 0b79 3B010000 		.4byte	.LASF154
 3504 0b7d 0C       		.byte	0xc
 3505 0b7e 6E       		.byte	0x6e
 3506 0b7f B8040000 		.4byte	0x4b8
 3507 0b83 05       		.uleb128 0x5
 3508 0b84 03       		.byte	0x3
 3509 0b85 00000000 		.4byte	alarmMeasure
 3510 0b89 24       		.uleb128 0x24
 3511 0b8a 7F010000 		.4byte	.LASF155
 3512 0b8e 0C       		.byte	0xc
 3513 0b8f 6F       		.byte	0x6f
 3514 0b90 81000000 		.4byte	0x81
 3515 0b94 05       		.uleb128 0x5
 3516 0b95 03       		.byte	0x3
 3517 0b96 00000000 		.4byte	timeToMeasure
 3518 0b9a 24       		.uleb128 0x24
 3519 0b9b 05030000 		.4byte	.LASF156
 3520 0b9f 0C       		.byte	0xc
 3521 0ba0 70       		.byte	0x70
 3522 0ba1 B8040000 		.4byte	0x4b8
 3523 0ba5 05       		.uleb128 0x5
 3524 0ba6 03       		.byte	0x3
 3525 0ba7 00000000 		.4byte	alarmSync
 3526 0bab 24       		.uleb128 0x24
 3527 0bac A5010000 		.4byte	.LASF157
 3528 0bb0 0C       		.byte	0xc
 3529 0bb1 71       		.byte	0x71
 3530 0bb2 81000000 		.4byte	0x81
 3531 0bb6 05       		.uleb128 0x5
 3532 0bb7 03       		.byte	0x3
 3533 0bb8 00000000 		.4byte	timeToSync
 3534 0bbc 24       		.uleb128 0x24
 3535 0bbd E1040000 		.4byte	.LASF158
 3536 0bc1 0C       		.byte	0xc
 3537 0bc2 72       		.byte	0x72
 3538 0bc3 81000000 		.4byte	0x81
 3539 0bc7 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 78


 3540 0bc8 03       		.byte	0x3
 3541 0bc9 00000000 		.4byte	timeToSycnRemoteParams
 3542 0bcd 25       		.uleb128 0x25
 3543 0bce 68657900 		.ascii	"hey\000"
 3544 0bd2 0C       		.byte	0xc
 3545 0bd3 73       		.byte	0x73
 3546 0bd4 81000000 		.4byte	0x81
 3547 0bd8 05       		.uleb128 0x5
 3548 0bd9 03       		.byte	0x3
 3549 0bda 00000000 		.4byte	hey
 3550 0bde 07       		.uleb128 0x7
 3551 0bdf D7000000 		.4byte	0xd7
 3552 0be3 EE0B0000 		.4byte	0xbee
 3553 0be7 08       		.uleb128 0x8
 3554 0be8 E5000000 		.4byte	0xe5
 3555 0bec 1D       		.byte	0x1d
 3556 0bed 00       		.byte	0
 3557 0bee 24       		.uleb128 0x24
 3558 0bef 88050000 		.4byte	.LASF159
 3559 0bf3 01       		.byte	0x1
 3560 0bf4 1D       		.byte	0x1d
 3561 0bf5 DE0B0000 		.4byte	0xbde
 3562 0bf9 05       		.uleb128 0x5
 3563 0bfa 03       		.byte	0x3
 3564 0bfb 00000000 		.4byte	Data_fileName
 3565 0bff 24       		.uleb128 0x24
 3566 0c00 89030000 		.4byte	.LASF93
 3567 0c04 01       		.byte	0x1
 3568 0c05 1E       		.byte	0x1e
 3569 0c06 81000000 		.4byte	0x81
 3570 0c0a 05       		.uleb128 0x5
 3571 0c0b 03       		.byte	0x3
 3572 0c0c 00000000 		.4byte	try_counter
 3573 0c10 00       		.byte	0
 3574              		.section	.debug_abbrev,"",%progbits
 3575              	.Ldebug_abbrev0:
 3576 0000 01       		.uleb128 0x1
 3577 0001 11       		.uleb128 0x11
 3578 0002 01       		.byte	0x1
 3579 0003 25       		.uleb128 0x25
 3580 0004 0E       		.uleb128 0xe
 3581 0005 13       		.uleb128 0x13
 3582 0006 0B       		.uleb128 0xb
 3583 0007 03       		.uleb128 0x3
 3584 0008 0E       		.uleb128 0xe
 3585 0009 1B       		.uleb128 0x1b
 3586 000a 0E       		.uleb128 0xe
 3587 000b 55       		.uleb128 0x55
 3588 000c 17       		.uleb128 0x17
 3589 000d 11       		.uleb128 0x11
 3590 000e 01       		.uleb128 0x1
 3591 000f 10       		.uleb128 0x10
 3592 0010 17       		.uleb128 0x17
 3593 0011 00       		.byte	0
 3594 0012 00       		.byte	0
 3595 0013 02       		.uleb128 0x2
 3596 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 79


 3597 0015 00       		.byte	0
 3598 0016 0B       		.uleb128 0xb
 3599 0017 0B       		.uleb128 0xb
 3600 0018 3E       		.uleb128 0x3e
 3601 0019 0B       		.uleb128 0xb
 3602 001a 03       		.uleb128 0x3
 3603 001b 0E       		.uleb128 0xe
 3604 001c 00       		.byte	0
 3605 001d 00       		.byte	0
 3606 001e 03       		.uleb128 0x3
 3607 001f 16       		.uleb128 0x16
 3608 0020 00       		.byte	0
 3609 0021 03       		.uleb128 0x3
 3610 0022 0E       		.uleb128 0xe
 3611 0023 3A       		.uleb128 0x3a
 3612 0024 0B       		.uleb128 0xb
 3613 0025 3B       		.uleb128 0x3b
 3614 0026 0B       		.uleb128 0xb
 3615 0027 49       		.uleb128 0x49
 3616 0028 13       		.uleb128 0x13
 3617 0029 00       		.byte	0
 3618 002a 00       		.byte	0
 3619 002b 04       		.uleb128 0x4
 3620 002c 24       		.uleb128 0x24
 3621 002d 00       		.byte	0
 3622 002e 0B       		.uleb128 0xb
 3623 002f 0B       		.uleb128 0xb
 3624 0030 3E       		.uleb128 0x3e
 3625 0031 0B       		.uleb128 0xb
 3626 0032 03       		.uleb128 0x3
 3627 0033 08       		.uleb128 0x8
 3628 0034 00       		.byte	0
 3629 0035 00       		.byte	0
 3630 0036 05       		.uleb128 0x5
 3631 0037 16       		.uleb128 0x16
 3632 0038 00       		.byte	0
 3633 0039 03       		.uleb128 0x3
 3634 003a 0E       		.uleb128 0xe
 3635 003b 3A       		.uleb128 0x3a
 3636 003c 0B       		.uleb128 0xb
 3637 003d 3B       		.uleb128 0x3b
 3638 003e 05       		.uleb128 0x5
 3639 003f 49       		.uleb128 0x49
 3640 0040 13       		.uleb128 0x13
 3641 0041 00       		.byte	0
 3642 0042 00       		.byte	0
 3643 0043 06       		.uleb128 0x6
 3644 0044 0F       		.uleb128 0xf
 3645 0045 00       		.byte	0
 3646 0046 0B       		.uleb128 0xb
 3647 0047 0B       		.uleb128 0xb
 3648 0048 49       		.uleb128 0x49
 3649 0049 13       		.uleb128 0x13
 3650 004a 00       		.byte	0
 3651 004b 00       		.byte	0
 3652 004c 07       		.uleb128 0x7
 3653 004d 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 80


 3654 004e 01       		.byte	0x1
 3655 004f 49       		.uleb128 0x49
 3656 0050 13       		.uleb128 0x13
 3657 0051 01       		.uleb128 0x1
 3658 0052 13       		.uleb128 0x13
 3659 0053 00       		.byte	0
 3660 0054 00       		.byte	0
 3661 0055 08       		.uleb128 0x8
 3662 0056 21       		.uleb128 0x21
 3663 0057 00       		.byte	0
 3664 0058 49       		.uleb128 0x49
 3665 0059 13       		.uleb128 0x13
 3666 005a 2F       		.uleb128 0x2f
 3667 005b 0B       		.uleb128 0xb
 3668 005c 00       		.byte	0
 3669 005d 00       		.byte	0
 3670 005e 09       		.uleb128 0x9
 3671 005f 13       		.uleb128 0x13
 3672 0060 01       		.byte	0x1
 3673 0061 0B       		.uleb128 0xb
 3674 0062 0B       		.uleb128 0xb
 3675 0063 3A       		.uleb128 0x3a
 3676 0064 0B       		.uleb128 0xb
 3677 0065 3B       		.uleb128 0x3b
 3678 0066 0B       		.uleb128 0xb
 3679 0067 01       		.uleb128 0x1
 3680 0068 13       		.uleb128 0x13
 3681 0069 00       		.byte	0
 3682 006a 00       		.byte	0
 3683 006b 0A       		.uleb128 0xa
 3684 006c 0D       		.uleb128 0xd
 3685 006d 00       		.byte	0
 3686 006e 03       		.uleb128 0x3
 3687 006f 08       		.uleb128 0x8
 3688 0070 3A       		.uleb128 0x3a
 3689 0071 0B       		.uleb128 0xb
 3690 0072 3B       		.uleb128 0x3b
 3691 0073 0B       		.uleb128 0xb
 3692 0074 49       		.uleb128 0x49
 3693 0075 13       		.uleb128 0x13
 3694 0076 38       		.uleb128 0x38
 3695 0077 0B       		.uleb128 0xb
 3696 0078 00       		.byte	0
 3697 0079 00       		.byte	0
 3698 007a 0B       		.uleb128 0xb
 3699 007b 0D       		.uleb128 0xd
 3700 007c 00       		.byte	0
 3701 007d 03       		.uleb128 0x3
 3702 007e 0E       		.uleb128 0xe
 3703 007f 3A       		.uleb128 0x3a
 3704 0080 0B       		.uleb128 0xb
 3705 0081 3B       		.uleb128 0x3b
 3706 0082 0B       		.uleb128 0xb
 3707 0083 49       		.uleb128 0x49
 3708 0084 13       		.uleb128 0x13
 3709 0085 38       		.uleb128 0x38
 3710 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 81


 3711 0087 00       		.byte	0
 3712 0088 00       		.byte	0
 3713 0089 0C       		.uleb128 0xc
 3714 008a 35       		.uleb128 0x35
 3715 008b 00       		.byte	0
 3716 008c 49       		.uleb128 0x49
 3717 008d 13       		.uleb128 0x13
 3718 008e 00       		.byte	0
 3719 008f 00       		.byte	0
 3720 0090 0D       		.uleb128 0xd
 3721 0091 13       		.uleb128 0x13
 3722 0092 01       		.byte	0x1
 3723 0093 0B       		.uleb128 0xb
 3724 0094 05       		.uleb128 0x5
 3725 0095 3A       		.uleb128 0x3a
 3726 0096 0B       		.uleb128 0xb
 3727 0097 3B       		.uleb128 0x3b
 3728 0098 0B       		.uleb128 0xb
 3729 0099 01       		.uleb128 0x1
 3730 009a 13       		.uleb128 0x13
 3731 009b 00       		.byte	0
 3732 009c 00       		.byte	0
 3733 009d 0E       		.uleb128 0xe
 3734 009e 13       		.uleb128 0x13
 3735 009f 01       		.byte	0x1
 3736 00a0 03       		.uleb128 0x3
 3737 00a1 08       		.uleb128 0x8
 3738 00a2 0B       		.uleb128 0xb
 3739 00a3 0B       		.uleb128 0xb
 3740 00a4 3A       		.uleb128 0x3a
 3741 00a5 0B       		.uleb128 0xb
 3742 00a6 3B       		.uleb128 0x3b
 3743 00a7 0B       		.uleb128 0xb
 3744 00a8 01       		.uleb128 0x1
 3745 00a9 13       		.uleb128 0x13
 3746 00aa 00       		.byte	0
 3747 00ab 00       		.byte	0
 3748 00ac 0F       		.uleb128 0xf
 3749 00ad 2E       		.uleb128 0x2e
 3750 00ae 00       		.byte	0
 3751 00af 3F       		.uleb128 0x3f
 3752 00b0 19       		.uleb128 0x19
 3753 00b1 03       		.uleb128 0x3
 3754 00b2 0E       		.uleb128 0xe
 3755 00b3 3A       		.uleb128 0x3a
 3756 00b4 0B       		.uleb128 0xb
 3757 00b5 3B       		.uleb128 0x3b
 3758 00b6 0B       		.uleb128 0xb
 3759 00b7 27       		.uleb128 0x27
 3760 00b8 19       		.uleb128 0x19
 3761 00b9 11       		.uleb128 0x11
 3762 00ba 01       		.uleb128 0x1
 3763 00bb 12       		.uleb128 0x12
 3764 00bc 06       		.uleb128 0x6
 3765 00bd 40       		.uleb128 0x40
 3766 00be 18       		.uleb128 0x18
 3767 00bf 9642     		.uleb128 0x2116
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 82


 3768 00c1 19       		.uleb128 0x19
 3769 00c2 00       		.byte	0
 3770 00c3 00       		.byte	0
 3771 00c4 10       		.uleb128 0x10
 3772 00c5 2E       		.uleb128 0x2e
 3773 00c6 01       		.byte	0x1
 3774 00c7 3F       		.uleb128 0x3f
 3775 00c8 19       		.uleb128 0x19
 3776 00c9 03       		.uleb128 0x3
 3777 00ca 0E       		.uleb128 0xe
 3778 00cb 3A       		.uleb128 0x3a
 3779 00cc 0B       		.uleb128 0xb
 3780 00cd 3B       		.uleb128 0x3b
 3781 00ce 0B       		.uleb128 0xb
 3782 00cf 11       		.uleb128 0x11
 3783 00d0 01       		.uleb128 0x1
 3784 00d1 12       		.uleb128 0x12
 3785 00d2 06       		.uleb128 0x6
 3786 00d3 40       		.uleb128 0x40
 3787 00d4 18       		.uleb128 0x18
 3788 00d5 9642     		.uleb128 0x2116
 3789 00d7 19       		.uleb128 0x19
 3790 00d8 01       		.uleb128 0x1
 3791 00d9 13       		.uleb128 0x13
 3792 00da 00       		.byte	0
 3793 00db 00       		.byte	0
 3794 00dc 11       		.uleb128 0x11
 3795 00dd 34       		.uleb128 0x34
 3796 00de 00       		.byte	0
 3797 00df 03       		.uleb128 0x3
 3798 00e0 0E       		.uleb128 0xe
 3799 00e1 3A       		.uleb128 0x3a
 3800 00e2 0B       		.uleb128 0xb
 3801 00e3 3B       		.uleb128 0x3b
 3802 00e4 0B       		.uleb128 0xb
 3803 00e5 49       		.uleb128 0x49
 3804 00e6 13       		.uleb128 0x13
 3805 00e7 02       		.uleb128 0x2
 3806 00e8 18       		.uleb128 0x18
 3807 00e9 00       		.byte	0
 3808 00ea 00       		.byte	0
 3809 00eb 12       		.uleb128 0x12
 3810 00ec 2E       		.uleb128 0x2e
 3811 00ed 01       		.byte	0x1
 3812 00ee 3F       		.uleb128 0x3f
 3813 00ef 19       		.uleb128 0x19
 3814 00f0 03       		.uleb128 0x3
 3815 00f1 0E       		.uleb128 0xe
 3816 00f2 3A       		.uleb128 0x3a
 3817 00f3 0B       		.uleb128 0xb
 3818 00f4 3B       		.uleb128 0x3b
 3819 00f5 0B       		.uleb128 0xb
 3820 00f6 49       		.uleb128 0x49
 3821 00f7 13       		.uleb128 0x13
 3822 00f8 11       		.uleb128 0x11
 3823 00f9 01       		.uleb128 0x1
 3824 00fa 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 83


 3825 00fb 06       		.uleb128 0x6
 3826 00fc 40       		.uleb128 0x40
 3827 00fd 18       		.uleb128 0x18
 3828 00fe 9642     		.uleb128 0x2116
 3829 0100 19       		.uleb128 0x19
 3830 0101 01       		.uleb128 0x1
 3831 0102 13       		.uleb128 0x13
 3832 0103 00       		.byte	0
 3833 0104 00       		.byte	0
 3834 0105 13       		.uleb128 0x13
 3835 0106 2E       		.uleb128 0x2e
 3836 0107 00       		.byte	0
 3837 0108 3F       		.uleb128 0x3f
 3838 0109 19       		.uleb128 0x19
 3839 010a 03       		.uleb128 0x3
 3840 010b 0E       		.uleb128 0xe
 3841 010c 3A       		.uleb128 0x3a
 3842 010d 0B       		.uleb128 0xb
 3843 010e 3B       		.uleb128 0x3b
 3844 010f 0B       		.uleb128 0xb
 3845 0110 11       		.uleb128 0x11
 3846 0111 01       		.uleb128 0x1
 3847 0112 12       		.uleb128 0x12
 3848 0113 06       		.uleb128 0x6
 3849 0114 40       		.uleb128 0x40
 3850 0115 18       		.uleb128 0x18
 3851 0116 9642     		.uleb128 0x2116
 3852 0118 19       		.uleb128 0x19
 3853 0119 00       		.byte	0
 3854 011a 00       		.byte	0
 3855 011b 14       		.uleb128 0x14
 3856 011c 2E       		.uleb128 0x2e
 3857 011d 01       		.byte	0x1
 3858 011e 3F       		.uleb128 0x3f
 3859 011f 19       		.uleb128 0x19
 3860 0120 03       		.uleb128 0x3
 3861 0121 0E       		.uleb128 0xe
 3862 0122 3A       		.uleb128 0x3a
 3863 0123 0B       		.uleb128 0xb
 3864 0124 3B       		.uleb128 0x3b
 3865 0125 0B       		.uleb128 0xb
 3866 0126 27       		.uleb128 0x27
 3867 0127 19       		.uleb128 0x19
 3868 0128 11       		.uleb128 0x11
 3869 0129 01       		.uleb128 0x1
 3870 012a 12       		.uleb128 0x12
 3871 012b 06       		.uleb128 0x6
 3872 012c 40       		.uleb128 0x40
 3873 012d 18       		.uleb128 0x18
 3874 012e 9642     		.uleb128 0x2116
 3875 0130 19       		.uleb128 0x19
 3876 0131 01       		.uleb128 0x1
 3877 0132 13       		.uleb128 0x13
 3878 0133 00       		.byte	0
 3879 0134 00       		.byte	0
 3880 0135 15       		.uleb128 0x15
 3881 0136 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 84


 3882 0137 00       		.byte	0
 3883 0138 03       		.uleb128 0x3
 3884 0139 0E       		.uleb128 0xe
 3885 013a 3A       		.uleb128 0x3a
 3886 013b 0B       		.uleb128 0xb
 3887 013c 3B       		.uleb128 0x3b
 3888 013d 0B       		.uleb128 0xb
 3889 013e 49       		.uleb128 0x49
 3890 013f 13       		.uleb128 0x13
 3891 0140 02       		.uleb128 0x2
 3892 0141 18       		.uleb128 0x18
 3893 0142 00       		.byte	0
 3894 0143 00       		.byte	0
 3895 0144 16       		.uleb128 0x16
 3896 0145 2E       		.uleb128 0x2e
 3897 0146 01       		.byte	0x1
 3898 0147 3F       		.uleb128 0x3f
 3899 0148 19       		.uleb128 0x19
 3900 0149 03       		.uleb128 0x3
 3901 014a 0E       		.uleb128 0xe
 3902 014b 3A       		.uleb128 0x3a
 3903 014c 0B       		.uleb128 0xb
 3904 014d 3B       		.uleb128 0x3b
 3905 014e 0B       		.uleb128 0xb
 3906 014f 27       		.uleb128 0x27
 3907 0150 19       		.uleb128 0x19
 3908 0151 49       		.uleb128 0x49
 3909 0152 13       		.uleb128 0x13
 3910 0153 11       		.uleb128 0x11
 3911 0154 01       		.uleb128 0x1
 3912 0155 12       		.uleb128 0x12
 3913 0156 06       		.uleb128 0x6
 3914 0157 40       		.uleb128 0x40
 3915 0158 18       		.uleb128 0x18
 3916 0159 9642     		.uleb128 0x2116
 3917 015b 19       		.uleb128 0x19
 3918 015c 01       		.uleb128 0x1
 3919 015d 13       		.uleb128 0x13
 3920 015e 00       		.byte	0
 3921 015f 00       		.byte	0
 3922 0160 17       		.uleb128 0x17
 3923 0161 2E       		.uleb128 0x2e
 3924 0162 01       		.byte	0x1
 3925 0163 3F       		.uleb128 0x3f
 3926 0164 19       		.uleb128 0x19
 3927 0165 03       		.uleb128 0x3
 3928 0166 0E       		.uleb128 0xe
 3929 0167 3A       		.uleb128 0x3a
 3930 0168 0B       		.uleb128 0xb
 3931 0169 3B       		.uleb128 0x3b
 3932 016a 0B       		.uleb128 0xb
 3933 016b 27       		.uleb128 0x27
 3934 016c 19       		.uleb128 0x19
 3935 016d 11       		.uleb128 0x11
 3936 016e 01       		.uleb128 0x1
 3937 016f 12       		.uleb128 0x12
 3938 0170 06       		.uleb128 0x6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 85


 3939 0171 40       		.uleb128 0x40
 3940 0172 18       		.uleb128 0x18
 3941 0173 9742     		.uleb128 0x2117
 3942 0175 19       		.uleb128 0x19
 3943 0176 01       		.uleb128 0x1
 3944 0177 13       		.uleb128 0x13
 3945 0178 00       		.byte	0
 3946 0179 00       		.byte	0
 3947 017a 18       		.uleb128 0x18
 3948 017b 2E       		.uleb128 0x2e
 3949 017c 01       		.byte	0x1
 3950 017d 3F       		.uleb128 0x3f
 3951 017e 19       		.uleb128 0x19
 3952 017f 03       		.uleb128 0x3
 3953 0180 0E       		.uleb128 0xe
 3954 0181 3A       		.uleb128 0x3a
 3955 0182 0B       		.uleb128 0xb
 3956 0183 3B       		.uleb128 0x3b
 3957 0184 0B       		.uleb128 0xb
 3958 0185 27       		.uleb128 0x27
 3959 0186 19       		.uleb128 0x19
 3960 0187 49       		.uleb128 0x49
 3961 0188 13       		.uleb128 0x13
 3962 0189 11       		.uleb128 0x11
 3963 018a 01       		.uleb128 0x1
 3964 018b 12       		.uleb128 0x12
 3965 018c 06       		.uleb128 0x6
 3966 018d 40       		.uleb128 0x40
 3967 018e 18       		.uleb128 0x18
 3968 018f 9742     		.uleb128 0x2117
 3969 0191 19       		.uleb128 0x19
 3970 0192 01       		.uleb128 0x1
 3971 0193 13       		.uleb128 0x13
 3972 0194 00       		.byte	0
 3973 0195 00       		.byte	0
 3974 0196 19       		.uleb128 0x19
 3975 0197 2E       		.uleb128 0x2e
 3976 0198 01       		.byte	0x1
 3977 0199 3F       		.uleb128 0x3f
 3978 019a 19       		.uleb128 0x19
 3979 019b 03       		.uleb128 0x3
 3980 019c 0E       		.uleb128 0xe
 3981 019d 3A       		.uleb128 0x3a
 3982 019e 0B       		.uleb128 0xb
 3983 019f 3B       		.uleb128 0x3b
 3984 01a0 05       		.uleb128 0x5
 3985 01a1 11       		.uleb128 0x11
 3986 01a2 01       		.uleb128 0x1
 3987 01a3 12       		.uleb128 0x12
 3988 01a4 06       		.uleb128 0x6
 3989 01a5 40       		.uleb128 0x40
 3990 01a6 18       		.uleb128 0x18
 3991 01a7 9642     		.uleb128 0x2116
 3992 01a9 19       		.uleb128 0x19
 3993 01aa 01       		.uleb128 0x1
 3994 01ab 13       		.uleb128 0x13
 3995 01ac 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 86


 3996 01ad 00       		.byte	0
 3997 01ae 1A       		.uleb128 0x1a
 3998 01af 34       		.uleb128 0x34
 3999 01b0 00       		.byte	0
 4000 01b1 03       		.uleb128 0x3
 4001 01b2 0E       		.uleb128 0xe
 4002 01b3 3A       		.uleb128 0x3a
 4003 01b4 0B       		.uleb128 0xb
 4004 01b5 3B       		.uleb128 0x3b
 4005 01b6 05       		.uleb128 0x5
 4006 01b7 49       		.uleb128 0x49
 4007 01b8 13       		.uleb128 0x13
 4008 01b9 02       		.uleb128 0x2
 4009 01ba 18       		.uleb128 0x18
 4010 01bb 00       		.byte	0
 4011 01bc 00       		.byte	0
 4012 01bd 1B       		.uleb128 0x1b
 4013 01be 2E       		.uleb128 0x2e
 4014 01bf 00       		.byte	0
 4015 01c0 3F       		.uleb128 0x3f
 4016 01c1 19       		.uleb128 0x19
 4017 01c2 03       		.uleb128 0x3
 4018 01c3 0E       		.uleb128 0xe
 4019 01c4 3A       		.uleb128 0x3a
 4020 01c5 0B       		.uleb128 0xb
 4021 01c6 3B       		.uleb128 0x3b
 4022 01c7 05       		.uleb128 0x5
 4023 01c8 27       		.uleb128 0x27
 4024 01c9 19       		.uleb128 0x19
 4025 01ca 49       		.uleb128 0x49
 4026 01cb 13       		.uleb128 0x13
 4027 01cc 11       		.uleb128 0x11
 4028 01cd 01       		.uleb128 0x1
 4029 01ce 12       		.uleb128 0x12
 4030 01cf 06       		.uleb128 0x6
 4031 01d0 40       		.uleb128 0x40
 4032 01d1 18       		.uleb128 0x18
 4033 01d2 9642     		.uleb128 0x2116
 4034 01d4 19       		.uleb128 0x19
 4035 01d5 00       		.byte	0
 4036 01d6 00       		.byte	0
 4037 01d7 1C       		.uleb128 0x1c
 4038 01d8 2E       		.uleb128 0x2e
 4039 01d9 01       		.byte	0x1
 4040 01da 3F       		.uleb128 0x3f
 4041 01db 19       		.uleb128 0x19
 4042 01dc 03       		.uleb128 0x3
 4043 01dd 0E       		.uleb128 0xe
 4044 01de 3A       		.uleb128 0x3a
 4045 01df 0B       		.uleb128 0xb
 4046 01e0 3B       		.uleb128 0x3b
 4047 01e1 05       		.uleb128 0x5
 4048 01e2 49       		.uleb128 0x49
 4049 01e3 13       		.uleb128 0x13
 4050 01e4 11       		.uleb128 0x11
 4051 01e5 01       		.uleb128 0x1
 4052 01e6 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 87


 4053 01e7 06       		.uleb128 0x6
 4054 01e8 40       		.uleb128 0x40
 4055 01e9 18       		.uleb128 0x18
 4056 01ea 9642     		.uleb128 0x2116
 4057 01ec 19       		.uleb128 0x19
 4058 01ed 01       		.uleb128 0x1
 4059 01ee 13       		.uleb128 0x13
 4060 01ef 00       		.byte	0
 4061 01f0 00       		.byte	0
 4062 01f1 1D       		.uleb128 0x1d
 4063 01f2 0B       		.uleb128 0xb
 4064 01f3 01       		.byte	0x1
 4065 01f4 11       		.uleb128 0x11
 4066 01f5 01       		.uleb128 0x1
 4067 01f6 12       		.uleb128 0x12
 4068 01f7 06       		.uleb128 0x6
 4069 01f8 00       		.byte	0
 4070 01f9 00       		.byte	0
 4071 01fa 1E       		.uleb128 0x1e
 4072 01fb 0B       		.uleb128 0xb
 4073 01fc 01       		.byte	0x1
 4074 01fd 11       		.uleb128 0x11
 4075 01fe 01       		.uleb128 0x1
 4076 01ff 12       		.uleb128 0x12
 4077 0200 06       		.uleb128 0x6
 4078 0201 01       		.uleb128 0x1
 4079 0202 13       		.uleb128 0x13
 4080 0203 00       		.byte	0
 4081 0204 00       		.byte	0
 4082 0205 1F       		.uleb128 0x1f
 4083 0206 21       		.uleb128 0x21
 4084 0207 00       		.byte	0
 4085 0208 49       		.uleb128 0x49
 4086 0209 13       		.uleb128 0x13
 4087 020a 2F       		.uleb128 0x2f
 4088 020b 05       		.uleb128 0x5
 4089 020c 00       		.byte	0
 4090 020d 00       		.byte	0
 4091 020e 20       		.uleb128 0x20
 4092 020f 2E       		.uleb128 0x2e
 4093 0210 01       		.byte	0x1
 4094 0211 3F       		.uleb128 0x3f
 4095 0212 19       		.uleb128 0x19
 4096 0213 03       		.uleb128 0x3
 4097 0214 0E       		.uleb128 0xe
 4098 0215 3A       		.uleb128 0x3a
 4099 0216 0B       		.uleb128 0xb
 4100 0217 3B       		.uleb128 0x3b
 4101 0218 05       		.uleb128 0x5
 4102 0219 27       		.uleb128 0x27
 4103 021a 19       		.uleb128 0x19
 4104 021b 49       		.uleb128 0x49
 4105 021c 13       		.uleb128 0x13
 4106 021d 11       		.uleb128 0x11
 4107 021e 01       		.uleb128 0x1
 4108 021f 12       		.uleb128 0x12
 4109 0220 06       		.uleb128 0x6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 88


 4110 0221 40       		.uleb128 0x40
 4111 0222 18       		.uleb128 0x18
 4112 0223 9642     		.uleb128 0x2116
 4113 0225 19       		.uleb128 0x19
 4114 0226 01       		.uleb128 0x1
 4115 0227 13       		.uleb128 0x13
 4116 0228 00       		.byte	0
 4117 0229 00       		.byte	0
 4118 022a 21       		.uleb128 0x21
 4119 022b 05       		.uleb128 0x5
 4120 022c 00       		.byte	0
 4121 022d 03       		.uleb128 0x3
 4122 022e 0E       		.uleb128 0xe
 4123 022f 3A       		.uleb128 0x3a
 4124 0230 0B       		.uleb128 0xb
 4125 0231 3B       		.uleb128 0x3b
 4126 0232 05       		.uleb128 0x5
 4127 0233 49       		.uleb128 0x49
 4128 0234 13       		.uleb128 0x13
 4129 0235 02       		.uleb128 0x2
 4130 0236 18       		.uleb128 0x18
 4131 0237 00       		.byte	0
 4132 0238 00       		.byte	0
 4133 0239 22       		.uleb128 0x22
 4134 023a 34       		.uleb128 0x34
 4135 023b 00       		.byte	0
 4136 023c 03       		.uleb128 0x3
 4137 023d 08       		.uleb128 0x8
 4138 023e 3A       		.uleb128 0x3a
 4139 023f 0B       		.uleb128 0xb
 4140 0240 3B       		.uleb128 0x3b
 4141 0241 05       		.uleb128 0x5
 4142 0242 49       		.uleb128 0x49
 4143 0243 13       		.uleb128 0x13
 4144 0244 02       		.uleb128 0x2
 4145 0245 18       		.uleb128 0x18
 4146 0246 00       		.byte	0
 4147 0247 00       		.byte	0
 4148 0248 23       		.uleb128 0x23
 4149 0249 34       		.uleb128 0x34
 4150 024a 00       		.byte	0
 4151 024b 03       		.uleb128 0x3
 4152 024c 0E       		.uleb128 0xe
 4153 024d 3A       		.uleb128 0x3a
 4154 024e 0B       		.uleb128 0xb
 4155 024f 3B       		.uleb128 0x3b
 4156 0250 05       		.uleb128 0x5
 4157 0251 49       		.uleb128 0x49
 4158 0252 13       		.uleb128 0x13
 4159 0253 3F       		.uleb128 0x3f
 4160 0254 19       		.uleb128 0x19
 4161 0255 3C       		.uleb128 0x3c
 4162 0256 19       		.uleb128 0x19
 4163 0257 00       		.byte	0
 4164 0258 00       		.byte	0
 4165 0259 24       		.uleb128 0x24
 4166 025a 34       		.uleb128 0x34
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 89


 4167 025b 00       		.byte	0
 4168 025c 03       		.uleb128 0x3
 4169 025d 0E       		.uleb128 0xe
 4170 025e 3A       		.uleb128 0x3a
 4171 025f 0B       		.uleb128 0xb
 4172 0260 3B       		.uleb128 0x3b
 4173 0261 0B       		.uleb128 0xb
 4174 0262 49       		.uleb128 0x49
 4175 0263 13       		.uleb128 0x13
 4176 0264 3F       		.uleb128 0x3f
 4177 0265 19       		.uleb128 0x19
 4178 0266 02       		.uleb128 0x2
 4179 0267 18       		.uleb128 0x18
 4180 0268 00       		.byte	0
 4181 0269 00       		.byte	0
 4182 026a 25       		.uleb128 0x25
 4183 026b 34       		.uleb128 0x34
 4184 026c 00       		.byte	0
 4185 026d 03       		.uleb128 0x3
 4186 026e 08       		.uleb128 0x8
 4187 026f 3A       		.uleb128 0x3a
 4188 0270 0B       		.uleb128 0xb
 4189 0271 3B       		.uleb128 0x3b
 4190 0272 0B       		.uleb128 0xb
 4191 0273 49       		.uleb128 0x49
 4192 0274 13       		.uleb128 0x13
 4193 0275 3F       		.uleb128 0x3f
 4194 0276 19       		.uleb128 0x19
 4195 0277 02       		.uleb128 0x2
 4196 0278 18       		.uleb128 0x18
 4197 0279 00       		.byte	0
 4198 027a 00       		.byte	0
 4199 027b 00       		.byte	0
 4200              		.section	.debug_aranges,"",%progbits
 4201 0000 8C000000 		.4byte	0x8c
 4202 0004 0200     		.2byte	0x2
 4203 0006 00000000 		.4byte	.Ldebug_info0
 4204 000a 04       		.byte	0x4
 4205 000b 00       		.byte	0
 4206 000c 0000     		.2byte	0
 4207 000e 0000     		.2byte	0
 4208 0010 00000000 		.4byte	.LFB64
 4209 0014 0C000000 		.4byte	.LFE64-.LFB64
 4210 0018 00000000 		.4byte	.LFB65
 4211 001c 2C010000 		.4byte	.LFE65-.LFB65
 4212 0020 00000000 		.4byte	.LFB66
 4213 0024 64000000 		.4byte	.LFE66-.LFB66
 4214 0028 00000000 		.4byte	.LFB67
 4215 002c 2A000000 		.4byte	.LFE67-.LFB67
 4216 0030 00000000 		.4byte	.LFB68
 4217 0034 50000000 		.4byte	.LFE68-.LFB68
 4218 0038 00000000 		.4byte	.LFB69
 4219 003c 48000000 		.4byte	.LFE69-.LFB69
 4220 0040 00000000 		.4byte	.LFB70
 4221 0044 1E000000 		.4byte	.LFE70-.LFB70
 4222 0048 00000000 		.4byte	.LFB71
 4223 004c 46000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 90


 4224 0050 00000000 		.4byte	.LFB72
 4225 0054 04010000 		.4byte	.LFE72-.LFB72
 4226 0058 00000000 		.4byte	.LFB73
 4227 005c 1E000000 		.4byte	.LFE73-.LFB73
 4228 0060 00000000 		.4byte	.LFB74
 4229 0064 30040000 		.4byte	.LFE74-.LFB74
 4230 0068 00000000 		.4byte	.LFB75
 4231 006c 44000000 		.4byte	.LFE75-.LFB75
 4232 0070 00000000 		.4byte	.LFB76
 4233 0074 74020000 		.4byte	.LFE76-.LFB76
 4234 0078 00000000 		.4byte	.LFB77
 4235 007c 74000000 		.4byte	.LFE77-.LFB77
 4236 0080 00000000 		.4byte	.LFB78
 4237 0084 38010000 		.4byte	.LFE78-.LFB78
 4238 0088 00000000 		.4byte	0
 4239 008c 00000000 		.4byte	0
 4240              		.section	.debug_ranges,"",%progbits
 4241              	.Ldebug_ranges0:
 4242 0000 00000000 		.4byte	.LFB64
 4243 0004 0C000000 		.4byte	.LFE64
 4244 0008 00000000 		.4byte	.LFB65
 4245 000c 2C010000 		.4byte	.LFE65
 4246 0010 00000000 		.4byte	.LFB66
 4247 0014 64000000 		.4byte	.LFE66
 4248 0018 00000000 		.4byte	.LFB67
 4249 001c 2A000000 		.4byte	.LFE67
 4250 0020 00000000 		.4byte	.LFB68
 4251 0024 50000000 		.4byte	.LFE68
 4252 0028 00000000 		.4byte	.LFB69
 4253 002c 48000000 		.4byte	.LFE69
 4254 0030 00000000 		.4byte	.LFB70
 4255 0034 1E000000 		.4byte	.LFE70
 4256 0038 00000000 		.4byte	.LFB71
 4257 003c 46000000 		.4byte	.LFE71
 4258 0040 00000000 		.4byte	.LFB72
 4259 0044 04010000 		.4byte	.LFE72
 4260 0048 00000000 		.4byte	.LFB73
 4261 004c 1E000000 		.4byte	.LFE73
 4262 0050 00000000 		.4byte	.LFB74
 4263 0054 30040000 		.4byte	.LFE74
 4264 0058 00000000 		.4byte	.LFB75
 4265 005c 44000000 		.4byte	.LFE75
 4266 0060 00000000 		.4byte	.LFB76
 4267 0064 74020000 		.4byte	.LFE76
 4268 0068 00000000 		.4byte	.LFB77
 4269 006c 74000000 		.4byte	.LFE77
 4270 0070 00000000 		.4byte	.LFB78
 4271 0074 38010000 		.4byte	.LFE78
 4272 0078 00000000 		.4byte	0
 4273 007c 00000000 		.4byte	0
 4274              		.section	.debug_line,"",%progbits
 4275              	.Ldebug_line0:
 4276 0000 1E040000 		.section	.debug_str,"MS",%progbits,1
 4276      02001B02 
 4276      00000201 
 4276      FB0E0D00 
 4276      01010101 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 91


 4277              	.LASF110:
 4278 0000 745F6D6F 		.ascii	"t_modem\000"
 4278      64656D00 
 4279              	.LASF12:
 4280 0008 75696E74 		.ascii	"uint16\000"
 4280      313600
 4281              	.LASF51:
 4282 000f 746D5F68 		.ascii	"tm_hour\000"
 4282      6F757200 
 4283              	.LASF36:
 4284 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4284      696E7661 
 4284      6C69645F 
 4284      72656164 
 4284      696E6773 
 4285              	.LASF141:
 4286 002c 62756666 		.ascii	"buffer_overflow\000"
 4286      65725F6F 
 4286      76657266 
 4286      6C6F7700 
 4287              	.LASF139:
 4288 003c 66696C65 		.ascii	"fileName\000"
 4288      4E616D65 
 4288      00
 4289              	.LASF0:
 4290 0045 7369676E 		.ascii	"signed char\000"
 4290      65642063 
 4290      68617200 
 4291              	.LASF83:
 4292 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4292      74446F77 
 4292      6E526573 
 4292      6574436F 
 4292      6E646974 
 4293              	.LASF163:
 4294 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4294      75705F49 
 4294      535200
 4295              	.LASF160:
 4296 0074 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4296      43313120 
 4296      352E342E 
 4296      31203230 
 4296      31363036 
 4297 00a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4297      20726576 
 4297      6973696F 
 4297      6E203233 
 4297      37373135 
 4298 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4298      66756E63 
 4298      74696F6E 
 4298      2D736563 
 4298      74696F6E 
 4299              	.LASF108:
 4300 0102 745F7072 		.ascii	"t_pressure\000"
 4300      65737375 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 92


 4300      726500
 4301              	.LASF26:
 4302 010d 4D6F6E74 		.ascii	"Month\000"
 4302      6800
 4303              	.LASF7:
 4304 0113 6C6F6E67 		.ascii	"long long unsigned int\000"
 4304      206C6F6E 
 4304      6720756E 
 4304      7369676E 
 4304      65642069 
 4305              	.LASF22:
 4306 012a 486F7572 		.ascii	"Hour\000"
 4306      00
 4307              	.LASF145:
 4308 012f 6D6F6465 		.ascii	"modem_state\000"
 4308      6D5F7374 
 4308      61746500 
 4309              	.LASF154:
 4310 013b 616C6172 		.ascii	"alarmMeasure\000"
 4310      6D4D6561 
 4310      73757265 
 4310      00
 4311              	.LASF140:
 4312 0148 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4312      52784275 
 4312      66666572 
 4312      00
 4313              	.LASF106:
 4314 0155 745F6C65 		.ascii	"t_level_sensor\000"
 4314      76656C5F 
 4314      73656E73 
 4314      6F7200
 4315              	.LASF6:
 4316 0164 6C6F6E67 		.ascii	"long long int\000"
 4316      206C6F6E 
 4316      6720696E 
 4316      7400
 4317              	.LASF118:
 4318 0172 7061636B 		.ascii	"packets\000"
 4318      65747300 
 4319              	.LASF67:
 4320 017a 65636E6F 		.ascii	"ecno\000"
 4320      00
 4321              	.LASF155:
 4322 017f 74696D65 		.ascii	"timeToMeasure\000"
 4322      546F4D65 
 4322      61737572 
 4322      6500
 4323              	.LASF70:
 4324 018d 74696D65 		.ascii	"time_to_network_connect\000"
 4324      5F746F5F 
 4324      6E657477 
 4324      6F726B5F 
 4324      636F6E6E 
 4325              	.LASF157:
 4326 01a5 74696D65 		.ascii	"timeToSync\000"
 4326      546F5379 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 93


 4326      6E6300
 4327              	.LASF39:
 4328 01b0 766F6C74 		.ascii	"voltage_solar\000"
 4328      6167655F 
 4328      736F6C61 
 4328      7200
 4329              	.LASF40:
 4330 01be 766F6C74 		.ascii	"voltage_charge_current\000"
 4330      6167655F 
 4330      63686172 
 4330      67655F63 
 4330      75727265 
 4331              	.LASF138:
 4332 01d5 75706772 		.ascii	"upgrade_status\000"
 4332      6164655F 
 4332      73746174 
 4332      757300
 4333              	.LASF121:
 4334 01e4 635F6461 		.ascii	"c_data_count_sent\000"
 4334      74615F63 
 4334      6F756E74 
 4334      5F73656E 
 4334      7400
 4335              	.LASF64:
 4336 01f6 6D6F6465 		.ascii	"modem_info_t\000"
 4336      6D5F696E 
 4336      666F5F74 
 4336      00
 4337              	.LASF65:
 4338 0203 72786C65 		.ascii	"rxlev\000"
 4338      7600
 4339              	.LASF4:
 4340 0209 6C6F6E67 		.ascii	"long int\000"
 4340      20696E74 
 4340      00
 4341              	.LASF71:
 4342 0212 74696D65 		.ascii	"time_to_acquire_ip\000"
 4342      5F746F5F 
 4342      61637175 
 4342      6972655F 
 4342      697000
 4343              	.LASF84:
 4344 0225 616C6172 		.ascii	"alarm\000"
 4344      6D00
 4345              	.LASF45:
 4346 022b 70726573 		.ascii	"pressure_voltage_off\000"
 4346      73757265 
 4346      5F766F6C 
 4346      74616765 
 4346      5F6F6666 
 4347              	.LASF11:
 4348 0240 75696E74 		.ascii	"uint8\000"
 4348      3800
 4349              	.LASF113:
 4350 0246 635F7472 		.ascii	"c_try_counter\000"
 4350      795F636F 
 4350      756E7465 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 94


 4350      7200
 4351              	.LASF124:
 4352 0254 73656E64 		.ascii	"send_time\000"
 4352      5F74696D 
 4352      6500
 4353              	.LASF16:
 4354 025e 696E7433 		.ascii	"int32\000"
 4354      3200
 4355              	.LASF73:
 4356 0264 6E6F6465 		.ascii	"node_type\000"
 4356      5F747970 
 4356      6500
 4357              	.LASF111:
 4358 026e 73796E63 		.ascii	"syncData\000"
 4358      44617461 
 4358      00
 4359              	.LASF119:
 4360 0277 6E657477 		.ascii	"network_time\000"
 4360      6F726B5F 
 4360      74696D65 
 4360      00
 4361              	.LASF13:
 4362 0284 75696E74 		.ascii	"uint32\000"
 4362      333200
 4363              	.LASF62:
 4364 028b 6D6F6465 		.ascii	"model_id\000"
 4364      6C5F6964 
 4364      00
 4365              	.LASF33:
 4366 0294 616C6C5F 		.ascii	"all_level_readings\000"
 4366      6C657665 
 4366      6C5F7265 
 4366      6164696E 
 4366      677300
 4367              	.LASF80:
 4368 02a7 636F756E 		.ascii	"countDownValue\000"
 4368      74446F77 
 4368      6E56616C 
 4368      756500
 4369              	.LASF134:
 4370 02b6 75706772 		.ascii	"upgraded\000"
 4370      61646564 
 4370      00
 4371              	.LASF53:
 4372 02bf 746D5F6D 		.ascii	"tm_mon\000"
 4372      6F6E00
 4373              	.LASF77:
 4374 02c6 64656275 		.ascii	"debug_level\000"
 4374      675F6C65 
 4374      76656C00 
 4375              	.LASF136:
 4376 02d2 706F7274 		.ascii	"port\000"
 4376      00
 4377              	.LASF162:
 4378 02d7 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4378      6F746F72 
 4378      694F535C 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 95


 4378      6E6F746F 
 4378      72694F53 
 4379              	.LASF58:
 4380 02f2 76616C75 		.ascii	"value\000"
 4380      6500
 4381              	.LASF135:
 4382 02f8 686F7374 		.ascii	"host\000"
 4382      00
 4383              	.LASF54:
 4384 02fd 746D5F79 		.ascii	"tm_year\000"
 4384      65617200 
 4385              	.LASF156:
 4386 0305 616C6172 		.ascii	"alarmSync\000"
 4386      6D53796E 
 4386      6300
 4387              	.LASF44:
 4388 030f 70726573 		.ascii	"pressure_voltage_on\000"
 4388      73757265 
 4388      5F766F6C 
 4388      74616765 
 4388      5F6F6E00 
 4389              	.LASF8:
 4390 0323 756E7369 		.ascii	"unsigned int\000"
 4390      676E6564 
 4390      20696E74 
 4390      00
 4391              	.LASF132:
 4392 0330 73657454 		.ascii	"setTime\000"
 4392      696D6500 
 4393              	.LASF60:
 4394 0338 6B65795F 		.ascii	"key_value_t\000"
 4394      76616C75 
 4394      655F7400 
 4395              	.LASF96:
 4396 0344 41796F49 		.ascii	"AyoItsTime\000"
 4396      74735469 
 4396      6D6500
 4397              	.LASF35:
 4398 034f 6E756D5F 		.ascii	"num_valid_readings\000"
 4398      76616C69 
 4398      645F7265 
 4398      6164696E 
 4398      677300
 4399              	.LASF123:
 4400 0362 68747470 		.ascii	"http_chunk\000"
 4400      5F636875 
 4400      6E6B00
 4401              	.LASF129:
 4402 036d 6D5F766F 		.ascii	"m_voltage\000"
 4402      6C746167 
 4402      6500
 4403              	.LASF5:
 4404 0377 6C6F6E67 		.ascii	"long unsigned int\000"
 4404      20756E73 
 4404      69676E65 
 4404      6420696E 
 4404      7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 96


 4405              	.LASF93:
 4406 0389 7472795F 		.ascii	"try_counter\000"
 4406      636F756E 
 4406      74657200 
 4407              	.LASF114:
 4408 0395 64617461 		.ascii	"data_count_desired\000"
 4408      5F636F75 
 4408      6E745F64 
 4408      65736972 
 4408      656400
 4409              	.LASF38:
 4410 03a8 766F6C74 		.ascii	"voltage_battery\000"
 4410      6167655F 
 4410      62617474 
 4410      65727900 
 4411              	.LASF24:
 4412 03b8 4461794F 		.ascii	"DayOfMonth\000"
 4412      664D6F6E 
 4412      746800
 4413              	.LASF127:
 4414 03c3 6D616B65 		.ascii	"makeMeasurements\000"
 4414      4D656173 
 4414      7572656D 
 4414      656E7473 
 4414      00
 4415              	.LASF144:
 4416 03d4 64617461 		.ascii	"data\000"
 4416      00
 4417              	.LASF89:
 4418 03d9 65705F70 		.ascii	"ep_port\000"
 4418      6F727400 
 4419              	.LASF57:
 4420 03e1 746D5F69 		.ascii	"tm_isdst\000"
 4420      73647374 
 4420      00
 4421              	.LASF85:
 4422 03ea 6D6F6465 		.ascii	"modem_info\000"
 4422      6D5F696E 
 4422      666F00
 4423              	.LASF88:
 4424 03f5 65705F68 		.ascii	"ep_host\000"
 4424      6F737400 
 4425              	.LASF14:
 4426 03fd 696E7438 		.ascii	"int8\000"
 4426      00
 4427              	.LASF95:
 4428 0402 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4428      576F726B 
 4428      576F726B 
 4428      576F726B 
 4428      576F726B 
 4429              	.LASF115:
 4430 041b 635F6461 		.ascii	"c_data_count_desired\000"
 4430      74615F63 
 4430      6F756E74 
 4430      5F646573 
 4430      69726564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 97


 4431              	.LASF109:
 4432 0430 745F7364 		.ascii	"t_sd_card\000"
 4432      5F636172 
 4432      6400
 4433              	.LASF2:
 4434 043a 73686F72 		.ascii	"short int\000"
 4434      7420696E 
 4434      7400
 4435              	.LASF146:
 4436 0444 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4436      6D5F7374 
 4436      6172745F 
 4436      74696D65 
 4436      5F737461 
 4437              	.LASF87:
 4438 045b 7379735F 		.ascii	"sys_info_t\000"
 4438      696E666F 
 4438      5F7400
 4439              	.LASF79:
 4440 0466 75706461 		.ascii	"updatable_parameters_t\000"
 4440      7461626C 
 4440      655F7061 
 4440      72616D65 
 4440      74657273 
 4441              	.LASF97:
 4442 047d 616C6172 		.ascii	"alarmType\000"
 4442      6D547970 
 4442      6500
 4443              	.LASF142:
 4444 0487 64617461 		.ascii	"dataPointsInStack\000"
 4444      506F696E 
 4444      7473496E 
 4444      53746163 
 4444      6B00
 4445              	.LASF50:
 4446 0499 746D5F6D 		.ascii	"tm_min\000"
 4446      696E00
 4447              	.LASF137:
 4448 04a0 726F7574 		.ascii	"route\000"
 4448      6500
 4449              	.LASF98:
 4450 04a6 616C6172 		.ascii	"alarmToBeUpdated\000"
 4450      6D546F42 
 4450      65557064 
 4450      61746564 
 4450      00
 4451              	.LASF21:
 4452 04b7 73697A65 		.ascii	"sizetype\000"
 4452      74797065 
 4452      00
 4453              	.LASF56:
 4454 04c0 746D5F79 		.ascii	"tm_yday\000"
 4454      64617900 
 4455              	.LASF90:
 4456 04c8 7379735F 		.ascii	"sys_settings_t\000"
 4456      73657474 
 4456      696E6773 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 98


 4456      5F7400
 4457              	.LASF133:
 4458 04d7 6C6F6361 		.ascii	"localTime\000"
 4458      6C54696D 
 4458      6500
 4459              	.LASF158:
 4460 04e1 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4460      546F5379 
 4460      636E5265 
 4460      6D6F7465 
 4460      50617261 
 4461              	.LASF59:
 4462 04f8 74696D65 		.ascii	"timeStamp\000"
 4462      5374616D 
 4462      7000
 4463              	.LASF28:
 4464 0502 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4464      54494D45 
 4464      5F444154 
 4464      4500
 4465              	.LASF148:
 4466 0510 75706461 		.ascii	"updatable_parameters\000"
 4466      7461626C 
 4466      655F7061 
 4466      72616D65 
 4466      74657273 
 4467              	.LASF102:
 4468 0525 43726561 		.ascii	"CreateAlarm\000"
 4468      7465416C 
 4468      61726D00 
 4469              	.LASF122:
 4470 0531 7061636B 		.ascii	"packet\000"
 4470      657400
 4471              	.LASF112:
 4472 0538 735F7273 		.ascii	"s_rsrp\000"
 4472      727000
 4473              	.LASF41:
 4474 053f 766F6C74 		.ascii	"voltage_pressure\000"
 4474      6167655F 
 4474      70726573 
 4474      73757265 
 4474      00
 4475              	.LASF149:
 4476 0550 68747470 		.ascii	"http_request\000"
 4476      5F726571 
 4476      75657374 
 4476      00
 4477              	.LASF17:
 4478 055d 666C6F61 		.ascii	"float\000"
 4478      7400
 4479              	.LASF37:
 4480 0563 6C657665 		.ascii	"level_sensor_t\000"
 4480      6C5F7365 
 4480      6E736F72 
 4480      5F7400
 4481              	.LASF126:
 4482 0572 636F6E66 		.ascii	"configureRemoteParams\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 99


 4482      69677572 
 4482      6552656D 
 4482      6F746550 
 4482      6172616D 
 4483              	.LASF159:
 4484 0588 44617461 		.ascii	"Data_fileName\000"
 4484      5F66696C 
 4484      654E616D 
 4484      6500
 4485              	.LASF94:
 4486 0596 6D6F6465 		.ascii	"modem_status\000"
 4486      6D5F7374 
 4486      61747573 
 4486      00
 4487              	.LASF29:
 4488 05a3 74657374 		.ascii	"test_name\000"
 4488      5F6E616D 
 4488      6500
 4489              	.LASF27:
 4490 05ad 59656172 		.ascii	"Year\000"
 4490      00
 4491              	.LASF78:
 4492 05b2 5F426F6F 		.ascii	"_Bool\000"
 4492      6C00
 4493              	.LASF10:
 4494 05b8 696E7433 		.ascii	"int32_t\000"
 4494      325F7400 
 4495              	.LASF1:
 4496 05c0 756E7369 		.ascii	"unsigned char\000"
 4496      676E6564 
 4496      20636861 
 4496      7200
 4497              	.LASF153:
 4498 05ce 73797374 		.ascii	"system_settings\000"
 4498      656D5F73 
 4498      65747469 
 4498      6E677300 
 4499              	.LASF69:
 4500 05de 72737270 		.ascii	"rsrp\000"
 4500      00
 4501              	.LASF68:
 4502 05e3 72737271 		.ascii	"rsrq\000"
 4502      00
 4503              	.LASF99:
 4504 05e8 52657365 		.ascii	"ResetAlarm\000"
 4504      74416C61 
 4504      726D00
 4505              	.LASF125:
 4506 05f3 735F7365 		.ascii	"s_send_time\000"
 4506      6E645F74 
 4506      696D6500 
 4507              	.LASF76:
 4508 05ff 73796E63 		.ascii	"sync_time\000"
 4508      5F74696D 
 4508      6500
 4509              	.LASF47:
 4510 0609 70726573 		.ascii	"pressure_depth\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 100


 4510      73757265 
 4510      5F646570 
 4510      746800
 4511              	.LASF66:
 4512 0618 72736370 		.ascii	"rscp\000"
 4512      00
 4513              	.LASF23:
 4514 061d 4461794F 		.ascii	"DayOfWeek\000"
 4514      66576565 
 4514      6B00
 4515              	.LASF32:
 4516 0627 74657374 		.ascii	"test_t\000"
 4516      5F7400
 4517              	.LASF152:
 4518 062e 73797374 		.ascii	"system_info\000"
 4518      656D5F69 
 4518      6E666F00 
 4519              	.LASF63:
 4520 063a 696D6569 		.ascii	"imei\000"
 4520      00
 4521              	.LASF31:
 4522 063f 72656173 		.ascii	"reason\000"
 4522      6F6E00
 4523              	.LASF100:
 4524 0646 616C6172 		.ascii	"alarmToBeReset\000"
 4524      6D546F42 
 4524      65526573 
 4524      657400
 4525              	.LASF105:
 4526 0655 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4526      6B697479 
 4526      43686563 
 4526      6B596F75 
 4526      7273656C 
 4527              	.LASF120:
 4528 0681 64617461 		.ascii	"data_count_sent\000"
 4528      5F636F75 
 4528      6E745F73 
 4528      656E7400 
 4529              	.LASF72:
 4530 0691 6D6F6465 		.ascii	"modem_stats_t\000"
 4530      6D5F7374 
 4530      6174735F 
 4530      7400
 4531              	.LASF46:
 4532 069f 70726573 		.ascii	"pressure_current\000"
 4532      73757265 
 4532      5F637572 
 4532      72656E74 
 4532      00
 4533              	.LASF42:
 4534 06b0 76616C69 		.ascii	"valid\000"
 4534      6400
 4535              	.LASF55:
 4536 06b6 746D5F77 		.ascii	"tm_wday\000"
 4536      64617900 
 4537              	.LASF20:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 101


 4538 06be 6C6F6E67 		.ascii	"long double\000"
 4538      20646F75 
 4538      626C6500 
 4539              	.LASF117:
 4540 06ca 6368756E 		.ascii	"chunk\000"
 4540      6B00
 4541              	.LASF128:
 4542 06d0 635F7469 		.ascii	"c_timeStamp\000"
 4542      6D655374 
 4542      616D7000 
 4543              	.LASF19:
 4544 06dc 63686172 		.ascii	"char\000"
 4544      00
 4545              	.LASF147:
 4546 06e1 6D6F6465 		.ascii	"modem_stats\000"
 4546      6D5F7374 
 4546      61747300 
 4547              	.LASF151:
 4548 06ed 68747470 		.ascii	"http_route\000"
 4548      5F726F75 
 4548      746500
 4549              	.LASF116:
 4550 06f8 706F7274 		.ascii	"portConfig\000"
 4550      436F6E66 
 4550      696700
 4551              	.LASF9:
 4552 0703 5F5F696E 		.ascii	"__int32_t\000"
 4552      7433325F 
 4552      7400
 4553              	.LASF91:
 4554 070d 756E6971 		.ascii	"uniqueId\000"
 4554      75654964 
 4554      00
 4555              	.LASF130:
 4556 0716 6D5F6C65 		.ascii	"m_level_sensor\000"
 4556      76656C5F 
 4556      73656E73 
 4556      6F7200
 4557              	.LASF34:
 4558 0725 6C657665 		.ascii	"level_reading\000"
 4558      6C5F7265 
 4558      6164696E 
 4558      6700
 4559              	.LASF164:
 4560 0733 4C617942 		.ascii	"LayBack\000"
 4560      61636B00 
 4561              	.LASF3:
 4562 073b 73686F72 		.ascii	"short unsigned int\000"
 4562      7420756E 
 4562      7369676E 
 4562      65642069 
 4562      6E7400
 4563              	.LASF61:
 4564 074e 73696D5F 		.ascii	"sim_id\000"
 4564      696400
 4565              	.LASF52:
 4566 0755 746D5F6D 		.ascii	"tm_mday\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 102


 4566      64617900 
 4567              	.LASF103:
 4568 075d 6E657741 		.ascii	"newAlarm\000"
 4568      6C61726D 
 4568      00
 4569              	.LASF49:
 4570 0766 746D5F73 		.ascii	"tm_sec\000"
 4570      656300
 4571              	.LASF131:
 4572 076d 6D5F7072 		.ascii	"m_pressure\000"
 4572      65737375 
 4572      726500
 4573              	.LASF30:
 4574 0778 73746174 		.ascii	"status\000"
 4574      757300
 4575              	.LASF143:
 4576 077f 64617461 		.ascii	"dataPointsInStackDesired\000"
 4576      506F696E 
 4576      7473496E 
 4576      53746163 
 4576      6B446573 
 4577              	.LASF107:
 4578 0798 745F766F 		.ascii	"t_voltages\000"
 4578      6C746167 
 4578      657300
 4579              	.LASF161:
 4580 07a3 6E6F746F 		.ascii	"notoriOS.c\000"
 4580      72694F53 
 4580      2E6300
 4581              	.LASF150:
 4582 07ae 68747470 		.ascii	"http_body\000"
 4582      5F626F64 
 4582      7900
 4583              	.LASF15:
 4584 07b8 696E7431 		.ascii	"int16\000"
 4584      3600
 4585              	.LASF82:
 4586 07be 636F756E 		.ascii	"countDownType\000"
 4586      74446F77 
 4586      6E547970 
 4586      6500
 4587              	.LASF81:
 4588 07cc 63757272 		.ascii	"currentCountDownValue\000"
 4588      656E7443 
 4588      6F756E74 
 4588      446F776E 
 4588      56616C75 
 4589              	.LASF74:
 4590 07e2 73696D5F 		.ascii	"sim_type\000"
 4590      74797065 
 4590      00
 4591              	.LASF92:
 4592 07eb 635F6865 		.ascii	"c_hey\000"
 4592      7900
 4593              	.LASF25:
 4594 07f1 4461794F 		.ascii	"DayOfYear\000"
 4594      66596561 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccIDZo6r.s 			page 103


 4594      7200
 4595              	.LASF48:
 4596 07fb 70726573 		.ascii	"pressure_t\000"
 4596      73757265 
 4596      5F7400
 4597              	.LASF101:
 4598 0806 416C6172 		.ascii	"AlarmReady\000"
 4598      6D526561 
 4598      647900
 4599              	.LASF104:
 4600 0811 52656164 		.ascii	"ReadyOrNot\000"
 4600      794F724E 
 4600      6F7400
 4601              	.LASF165:
 4602 081c 6D61696E 		.ascii	"main\000"
 4602      00
 4603              	.LASF86:
 4604 0821 63686970 		.ascii	"chip_uniqueId\000"
 4604      5F756E69 
 4604      71756549 
 4604      6400
 4605              	.LASF75:
 4606 082f 6D656173 		.ascii	"measure_time\000"
 4606      7572655F 
 4606      74696D65 
 4606      00
 4607              	.LASF18:
 4608 083c 646F7562 		.ascii	"double\000"
 4608      6C6500
 4609              	.LASF43:
 4610 0843 766F6C74 		.ascii	"voltage_t\000"
 4610      6167655F 
 4610      7400
 4611              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

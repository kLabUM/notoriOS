ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_ISR1,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_ISR1
  22              		.thumb
  23              		.thumb_func
  24              		.type	ADC_ISR1, %function
  25              	ADC_ISR1:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\ADC_INT.c"
   1:Generated_Source\PSoC5/ADC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_INT.c **** * File Name: ADC_INT.c
   3:Generated_Source\PSoC5/ADC_INT.c **** * Version 3.30
   4:Generated_Source\PSoC5/ADC_INT.c **** *
   5:Generated_Source\PSoC5/ADC_INT.c **** * Description:
   6:Generated_Source\PSoC5/ADC_INT.c **** *  This file contains the code that operates during the ADC_DelSig interrupt
   7:Generated_Source\PSoC5/ADC_INT.c **** *  service routine.
   8:Generated_Source\PSoC5/ADC_INT.c **** *
   9:Generated_Source\PSoC5/ADC_INT.c **** * Note:
  10:Generated_Source\PSoC5/ADC_INT.c **** *
  11:Generated_Source\PSoC5/ADC_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_INT.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_INT.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_INT.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_INT.c **** 
  18:Generated_Source\PSoC5/ADC_INT.c **** #include "ADC.h"
  19:Generated_Source\PSoC5/ADC_INT.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/ADC_INT.c **** 
  21:Generated_Source\PSoC5/ADC_INT.c **** 
  22:Generated_Source\PSoC5/ADC_INT.c **** /*******************************************************************************
  23:Generated_Source\PSoC5/ADC_INT.c **** * Custom Declarations and Variables
  24:Generated_Source\PSoC5/ADC_INT.c **** * - add user include files, prototypes and variables between the following
  25:Generated_Source\PSoC5/ADC_INT.c **** *   #START and #END tags
  26:Generated_Source\PSoC5/ADC_INT.c **** *******************************************************************************/
  27:Generated_Source\PSoC5/ADC_INT.c **** /* `#START ADC_SYS_VAR`  */
  28:Generated_Source\PSoC5/ADC_INT.c **** 
  29:Generated_Source\PSoC5/ADC_INT.c **** /* `#END`  */
  30:Generated_Source\PSoC5/ADC_INT.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 2


  31:Generated_Source\PSoC5/ADC_INT.c **** #if(ADC_IRQ_REMOVE == 0u)
  32:Generated_Source\PSoC5/ADC_INT.c **** 
  33:Generated_Source\PSoC5/ADC_INT.c **** 
  34:Generated_Source\PSoC5/ADC_INT.c ****     /*****************************************************************************
  35:Generated_Source\PSoC5/ADC_INT.c ****     * Function Name: ADC_ISR1
  36:Generated_Source\PSoC5/ADC_INT.c ****     ******************************************************************************
  37:Generated_Source\PSoC5/ADC_INT.c ****     *
  38:Generated_Source\PSoC5/ADC_INT.c ****     * Summary:
  39:Generated_Source\PSoC5/ADC_INT.c ****     *  Handle Interrupt Service Routine.
  40:Generated_Source\PSoC5/ADC_INT.c ****     *
  41:Generated_Source\PSoC5/ADC_INT.c ****     * Parameters:
  42:Generated_Source\PSoC5/ADC_INT.c ****     *  None
  43:Generated_Source\PSoC5/ADC_INT.c ****     *
  44:Generated_Source\PSoC5/ADC_INT.c ****     * Return:
  45:Generated_Source\PSoC5/ADC_INT.c ****     *  None
  46:Generated_Source\PSoC5/ADC_INT.c ****     *
  47:Generated_Source\PSoC5/ADC_INT.c ****     * Reentrant:
  48:Generated_Source\PSoC5/ADC_INT.c ****     *  No
  49:Generated_Source\PSoC5/ADC_INT.c ****     *
  50:Generated_Source\PSoC5/ADC_INT.c ****     *****************************************************************************/
  51:Generated_Source\PSoC5/ADC_INT.c ****     CY_ISR( ADC_ISR1)
  52:Generated_Source\PSoC5/ADC_INT.c ****     {
  28              		.loc 1 52 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  53:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR1_ENTRY_CALLBACK
  54:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR1_EntryCallback();
  55:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR1_ENTRY_CALLBACK */
  56:Generated_Source\PSoC5/ADC_INT.c ****         
  57:Generated_Source\PSoC5/ADC_INT.c **** 
  58:Generated_Source\PSoC5/ADC_INT.c ****         /**************************************************************************
  59:Generated_Source\PSoC5/ADC_INT.c ****         *  Custom Code
  60:Generated_Source\PSoC5/ADC_INT.c ****         *  - add user ISR code between the following #START and #END tags
  61:Generated_Source\PSoC5/ADC_INT.c ****         **************************************************************************/
  62:Generated_Source\PSoC5/ADC_INT.c ****         /* `#START MAIN_ADC_ISR1`  */
  63:Generated_Source\PSoC5/ADC_INT.c **** 
  64:Generated_Source\PSoC5/ADC_INT.c ****         /* `#END`  */
  65:Generated_Source\PSoC5/ADC_INT.c ****         
  66:Generated_Source\PSoC5/ADC_INT.c ****         /* Stop the conversion if conversion mode is single sample and resolution
  67:Generated_Source\PSoC5/ADC_INT.c ****         *  is above 16 bits.
  68:Generated_Source\PSoC5/ADC_INT.c ****         */
  69:Generated_Source\PSoC5/ADC_INT.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
  70:Generated_Source\PSoC5/ADC_INT.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
  71:Generated_Source\PSoC5/ADC_INT.c ****             ADC_StopConvert();
  72:Generated_Source\PSoC5/ADC_INT.c ****             /* Software flag for checking conversion complete or not. Will be used when
  73:Generated_Source\PSoC5/ADC_INT.c ****             *  resolution is above 16 bits and conversion mode is single sample 
  74:Generated_Source\PSoC5/ADC_INT.c **** 			*/
  75:Generated_Source\PSoC5/ADC_INT.c ****             ADC_convDone = ADC_DEC_CONV_DONE;
  76:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* Single sample conversion mode with resolution above 16 bits */
  77:Generated_Source\PSoC5/ADC_INT.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 3


  78:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR1_EXIT_CALLBACK
  79:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR1_ExitCallback();
  80:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR1_EXIT_CALLBACK */
  81:Generated_Source\PSoC5/ADC_INT.c ****     }
  38              		.loc 1 81 0
  39 0004 00BF     		nop
  40 0006 BD46     		mov	sp, r7
  41              		.cfi_def_cfa_register 13
  42              		@ sp needed
  43 0008 80BC     		pop	{r7}
  44              		.cfi_restore 7
  45              		.cfi_def_cfa_offset 0
  46 000a 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	ADC_ISR1, .-ADC_ISR1
  50              		.section	.text.ADC_ISR2,"ax",%progbits
  51              		.align	2
  52              		.global	ADC_ISR2
  53              		.thumb
  54              		.thumb_func
  55              		.type	ADC_ISR2, %function
  56              	ADC_ISR2:
  57              	.LFB1:
  82:Generated_Source\PSoC5/ADC_INT.c **** 
  83:Generated_Source\PSoC5/ADC_INT.c **** 
  84:Generated_Source\PSoC5/ADC_INT.c ****     /*****************************************************************************
  85:Generated_Source\PSoC5/ADC_INT.c ****     * Function Name: ADC_ISR2
  86:Generated_Source\PSoC5/ADC_INT.c ****     ******************************************************************************
  87:Generated_Source\PSoC5/ADC_INT.c ****     *
  88:Generated_Source\PSoC5/ADC_INT.c ****     * Summary:
  89:Generated_Source\PSoC5/ADC_INT.c ****     *  Handle Interrupt Service Routine.
  90:Generated_Source\PSoC5/ADC_INT.c ****     *
  91:Generated_Source\PSoC5/ADC_INT.c ****     * Parameters:
  92:Generated_Source\PSoC5/ADC_INT.c ****     *  None
  93:Generated_Source\PSoC5/ADC_INT.c ****     *
  94:Generated_Source\PSoC5/ADC_INT.c ****     * Return:
  95:Generated_Source\PSoC5/ADC_INT.c ****     *  None
  96:Generated_Source\PSoC5/ADC_INT.c ****     *
  97:Generated_Source\PSoC5/ADC_INT.c ****     * Reentrant:
  98:Generated_Source\PSoC5/ADC_INT.c ****     *  No
  99:Generated_Source\PSoC5/ADC_INT.c ****     *
 100:Generated_Source\PSoC5/ADC_INT.c ****     *****************************************************************************/
 101:Generated_Source\PSoC5/ADC_INT.c ****     CY_ISR( ADC_ISR2)
 102:Generated_Source\PSoC5/ADC_INT.c ****     {
  58              		.loc 1 102 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0000 80B4     		push	{r7}
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 00AF     		add	r7, sp, #0
  67              		.cfi_def_cfa_register 7
 103:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR2_ENTRY_CALLBACK
 104:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR2_EntryCallback();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 4


 105:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR2_ENTRY_CALLBACK */
 106:Generated_Source\PSoC5/ADC_INT.c ****         
 107:Generated_Source\PSoC5/ADC_INT.c ****         
 108:Generated_Source\PSoC5/ADC_INT.c ****         /***************************************************************************
 109:Generated_Source\PSoC5/ADC_INT.c ****         *  Custom Code
 110:Generated_Source\PSoC5/ADC_INT.c ****         *  - add user ISR code between the following #START and #END tags
 111:Generated_Source\PSoC5/ADC_INT.c ****         **************************************************************************/
 112:Generated_Source\PSoC5/ADC_INT.c ****         /* `#START MAIN_ADC_ISR2`  */
 113:Generated_Source\PSoC5/ADC_INT.c **** 
 114:Generated_Source\PSoC5/ADC_INT.c ****         /* `#END`  */
 115:Generated_Source\PSoC5/ADC_INT.c **** 
 116:Generated_Source\PSoC5/ADC_INT.c ****         /* Stop the conversion conversion mode is single sample and resolution
 117:Generated_Source\PSoC5/ADC_INT.c ****         *  is above 16 bits.
 118:Generated_Source\PSoC5/ADC_INT.c ****         */
 119:Generated_Source\PSoC5/ADC_INT.c ****         #if(ADC_CFG2_RESOLUTION > 16 && \
 120:Generated_Source\PSoC5/ADC_INT.c ****             ADC_CFG2_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
 121:Generated_Source\PSoC5/ADC_INT.c ****             ADC_StopConvert();
 122:Generated_Source\PSoC5/ADC_INT.c ****             /* Software flag for checking conversion complete or not. Will be used when
 123:Generated_Source\PSoC5/ADC_INT.c ****             *   resolution is above 16 bits and conversion mode is single sample 
 124:Generated_Source\PSoC5/ADC_INT.c **** 			*/
 125:Generated_Source\PSoC5/ADC_INT.c ****             ADC_convDone = ADC_DEC_CONV_DONE;
 126:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* Single sample conversion mode with resolution above 16 bits */
 127:Generated_Source\PSoC5/ADC_INT.c **** 
 128:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR2_EXIT_CALLBACK
 129:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR2_ExitCallback();
 130:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR2_EXIT_CALLBACK */
 131:Generated_Source\PSoC5/ADC_INT.c ****     }
  68              		.loc 1 131 0
  69 0004 00BF     		nop
  70 0006 BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0008 80BC     		pop	{r7}
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 000a 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE1:
  79              		.size	ADC_ISR2, .-ADC_ISR2
  80              		.section	.text.ADC_ISR3,"ax",%progbits
  81              		.align	2
  82              		.global	ADC_ISR3
  83              		.thumb
  84              		.thumb_func
  85              		.type	ADC_ISR3, %function
  86              	ADC_ISR3:
  87              	.LFB2:
 132:Generated_Source\PSoC5/ADC_INT.c **** 
 133:Generated_Source\PSoC5/ADC_INT.c **** 
 134:Generated_Source\PSoC5/ADC_INT.c ****     /*****************************************************************************
 135:Generated_Source\PSoC5/ADC_INT.c ****     * Function Name: ADC_ISR3
 136:Generated_Source\PSoC5/ADC_INT.c ****     ******************************************************************************
 137:Generated_Source\PSoC5/ADC_INT.c ****     *
 138:Generated_Source\PSoC5/ADC_INT.c ****     * Summary:
 139:Generated_Source\PSoC5/ADC_INT.c ****     *  Handle Interrupt Service Routine.
 140:Generated_Source\PSoC5/ADC_INT.c ****     *
 141:Generated_Source\PSoC5/ADC_INT.c ****     * Parameters:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 5


 142:Generated_Source\PSoC5/ADC_INT.c ****     *  None
 143:Generated_Source\PSoC5/ADC_INT.c ****     *
 144:Generated_Source\PSoC5/ADC_INT.c ****     * Return:
 145:Generated_Source\PSoC5/ADC_INT.c ****     *  None
 146:Generated_Source\PSoC5/ADC_INT.c ****     *
 147:Generated_Source\PSoC5/ADC_INT.c ****     * Reentrant:
 148:Generated_Source\PSoC5/ADC_INT.c ****     *  No
 149:Generated_Source\PSoC5/ADC_INT.c ****     *
 150:Generated_Source\PSoC5/ADC_INT.c ****     *****************************************************************************/
 151:Generated_Source\PSoC5/ADC_INT.c ****     CY_ISR( ADC_ISR3)
 152:Generated_Source\PSoC5/ADC_INT.c ****     {
  88              		.loc 1 152 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93 0000 80B4     		push	{r7}
  94              		.cfi_def_cfa_offset 4
  95              		.cfi_offset 7, -4
  96 0002 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
 153:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR3_ENTRY_CALLBACK
 154:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR3_EntryCallback();
 155:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR3_ENTRY_CALLBACK */        
 156:Generated_Source\PSoC5/ADC_INT.c **** 
 157:Generated_Source\PSoC5/ADC_INT.c ****         
 158:Generated_Source\PSoC5/ADC_INT.c ****         /***************************************************************************
 159:Generated_Source\PSoC5/ADC_INT.c ****         *  Custom Code
 160:Generated_Source\PSoC5/ADC_INT.c ****         *  - add user ISR code between the following #START and #END tags
 161:Generated_Source\PSoC5/ADC_INT.c ****         **************************************************************************/
 162:Generated_Source\PSoC5/ADC_INT.c ****         /* `#START MAIN_ADC_ISR3`  */
 163:Generated_Source\PSoC5/ADC_INT.c **** 
 164:Generated_Source\PSoC5/ADC_INT.c ****         /* `#END`  */
 165:Generated_Source\PSoC5/ADC_INT.c ****         
 166:Generated_Source\PSoC5/ADC_INT.c ****         /* Stop the conversion if conversion mode is set to single sample and
 167:Generated_Source\PSoC5/ADC_INT.c ****         *  resolution is above 16 bits.
 168:Generated_Source\PSoC5/ADC_INT.c ****         */
 169:Generated_Source\PSoC5/ADC_INT.c ****         #if(ADC_CFG3_RESOLUTION > 16 && \
 170:Generated_Source\PSoC5/ADC_INT.c ****             ADC_CFG3_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
 171:Generated_Source\PSoC5/ADC_INT.c ****             ADC_StopConvert();
 172:Generated_Source\PSoC5/ADC_INT.c ****             /* Software flag for checking conversion complete or not. Will be used when
 173:Generated_Source\PSoC5/ADC_INT.c ****             *  resolution is above 16 bits and conversion mode is single sample 
 174:Generated_Source\PSoC5/ADC_INT.c **** 			*/
 175:Generated_Source\PSoC5/ADC_INT.c ****             ADC_convDone = ADC_DEC_CONV_DONE;
 176:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* Single sample conversion mode with resolution above 16 bits */
 177:Generated_Source\PSoC5/ADC_INT.c **** 
 178:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR3_EXIT_CALLBACK
 179:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR3_ExitCallback();
 180:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR3_EXIT_CALLBACK */        
 181:Generated_Source\PSoC5/ADC_INT.c ****     }
  98              		.loc 1 181 0
  99 0004 00BF     		nop
 100 0006 BD46     		mov	sp, r7
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 0008 80BC     		pop	{r7}
 104              		.cfi_restore 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 6


 105              		.cfi_def_cfa_offset 0
 106 000a 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE2:
 109              		.size	ADC_ISR3, .-ADC_ISR3
 110              		.section	.text.ADC_ISR4,"ax",%progbits
 111              		.align	2
 112              		.global	ADC_ISR4
 113              		.thumb
 114              		.thumb_func
 115              		.type	ADC_ISR4, %function
 116              	ADC_ISR4:
 117              	.LFB3:
 182:Generated_Source\PSoC5/ADC_INT.c **** 
 183:Generated_Source\PSoC5/ADC_INT.c **** 
 184:Generated_Source\PSoC5/ADC_INT.c ****     /*****************************************************************************
 185:Generated_Source\PSoC5/ADC_INT.c ****     * Function Name: ADC_ISR4
 186:Generated_Source\PSoC5/ADC_INT.c ****     ******************************************************************************
 187:Generated_Source\PSoC5/ADC_INT.c ****     *
 188:Generated_Source\PSoC5/ADC_INT.c ****     * Summary:
 189:Generated_Source\PSoC5/ADC_INT.c ****     *  Handle Interrupt Service Routine.
 190:Generated_Source\PSoC5/ADC_INT.c ****     *
 191:Generated_Source\PSoC5/ADC_INT.c ****     * Parameters:
 192:Generated_Source\PSoC5/ADC_INT.c ****     *  None
 193:Generated_Source\PSoC5/ADC_INT.c ****     *
 194:Generated_Source\PSoC5/ADC_INT.c ****     * Return:
 195:Generated_Source\PSoC5/ADC_INT.c ****     *  None
 196:Generated_Source\PSoC5/ADC_INT.c ****     *
 197:Generated_Source\PSoC5/ADC_INT.c ****     * Reentrant:
 198:Generated_Source\PSoC5/ADC_INT.c ****     *  No
 199:Generated_Source\PSoC5/ADC_INT.c ****     *
 200:Generated_Source\PSoC5/ADC_INT.c ****     *****************************************************************************/
 201:Generated_Source\PSoC5/ADC_INT.c ****     CY_ISR( ADC_ISR4)
 202:Generated_Source\PSoC5/ADC_INT.c ****     {
 118              		.loc 1 202 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123 0000 80B4     		push	{r7}
 124              		.cfi_def_cfa_offset 4
 125              		.cfi_offset 7, -4
 126 0002 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR4_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR4_EntryCallback();
 205:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR4_ENTRY_CALLBACK */            
 206:Generated_Source\PSoC5/ADC_INT.c **** 
 207:Generated_Source\PSoC5/ADC_INT.c ****         
 208:Generated_Source\PSoC5/ADC_INT.c ****         /***************************************************************************
 209:Generated_Source\PSoC5/ADC_INT.c ****         *  Custom Code
 210:Generated_Source\PSoC5/ADC_INT.c ****         *  - add user ISR code between the following #START and #END tags
 211:Generated_Source\PSoC5/ADC_INT.c ****         **************************************************************************/
 212:Generated_Source\PSoC5/ADC_INT.c ****         /* `#START MAIN_ADC_ISR4`  */
 213:Generated_Source\PSoC5/ADC_INT.c **** 
 214:Generated_Source\PSoC5/ADC_INT.c ****         /* `#END`  */
 215:Generated_Source\PSoC5/ADC_INT.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 7


 216:Generated_Source\PSoC5/ADC_INT.c ****         /* Stop the conversion if conversion mode is set to single sample and
 217:Generated_Source\PSoC5/ADC_INT.c ****         *  resolution is above 16 bits.
 218:Generated_Source\PSoC5/ADC_INT.c ****         */
 219:Generated_Source\PSoC5/ADC_INT.c ****         #if(ADC_CFG4_RESOLUTION > 16 && \
 220:Generated_Source\PSoC5/ADC_INT.c ****             ADC_CFG4_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
 221:Generated_Source\PSoC5/ADC_INT.c ****             ADC_StopConvert();
 222:Generated_Source\PSoC5/ADC_INT.c ****             /* Software flag for checking conversion complete or not. Will be used when
 223:Generated_Source\PSoC5/ADC_INT.c ****             *  resolution is above 16 bits and conversion mode is single sample 
 224:Generated_Source\PSoC5/ADC_INT.c **** 			*/
 225:Generated_Source\PSoC5/ADC_INT.c ****             ADC_convDone = ADC_DEC_CONV_DONE;
 226:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* Single sample conversion mode with resolution above 16 bits */
 227:Generated_Source\PSoC5/ADC_INT.c ****         
 228:Generated_Source\PSoC5/ADC_INT.c ****         #ifdef ADC_ISR4_EXIT_CALLBACK
 229:Generated_Source\PSoC5/ADC_INT.c ****             ADC_ISR4_ExitCallback();
 230:Generated_Source\PSoC5/ADC_INT.c ****         #endif /* ADC_ISR4_EXIT_CALLBACK */            
 231:Generated_Source\PSoC5/ADC_INT.c ****     }
 128              		.loc 1 231 0
 129 0004 00BF     		nop
 130 0006 BD46     		mov	sp, r7
 131              		.cfi_def_cfa_register 13
 132              		@ sp needed
 133 0008 80BC     		pop	{r7}
 134              		.cfi_restore 7
 135              		.cfi_def_cfa_offset 0
 136 000a 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE3:
 139              		.size	ADC_ISR4, .-ADC_ISR4
 140              		.text
 141              	.Letext0:
 142              		.section	.debug_info,"",%progbits
 143              	.Ldebug_info0:
 144 0000 CF000000 		.4byte	0xcf
 145 0004 0400     		.2byte	0x4
 146 0006 00000000 		.4byte	.Ldebug_abbrev0
 147 000a 04       		.byte	0x4
 148 000b 01       		.uleb128 0x1
 149 000c 65000000 		.4byte	.LASF18
 150 0010 0C       		.byte	0xc
 151 0011 6F010000 		.4byte	.LASF19
 152 0015 0E000000 		.4byte	.LASF20
 153 0019 00000000 		.4byte	.Ldebug_ranges0+0
 154 001d 00000000 		.4byte	0
 155 0021 00000000 		.4byte	.Ldebug_line0
 156 0025 02       		.uleb128 0x2
 157 0026 01       		.byte	0x1
 158 0027 06       		.byte	0x6
 159 0028 4D010000 		.4byte	.LASF0
 160 002c 02       		.uleb128 0x2
 161 002d 01       		.byte	0x1
 162 002e 08       		.byte	0x8
 163 002f F3000000 		.4byte	.LASF1
 164 0033 02       		.uleb128 0x2
 165 0034 02       		.byte	0x2
 166 0035 05       		.byte	0x5
 167 0036 65010000 		.4byte	.LASF2
 168 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 8


 169 003b 02       		.byte	0x2
 170 003c 07       		.byte	0x7
 171 003d 3A010000 		.4byte	.LASF3
 172 0041 02       		.uleb128 0x2
 173 0042 04       		.byte	0x4
 174 0043 05       		.byte	0x5
 175 0044 18010000 		.4byte	.LASF4
 176 0048 02       		.uleb128 0x2
 177 0049 04       		.byte	0x4
 178 004a 07       		.byte	0x7
 179 004b 36000000 		.4byte	.LASF5
 180 004f 02       		.uleb128 0x2
 181 0050 08       		.byte	0x8
 182 0051 05       		.byte	0x5
 183 0052 00000000 		.4byte	.LASF6
 184 0056 02       		.uleb128 0x2
 185 0057 08       		.byte	0x8
 186 0058 07       		.byte	0x7
 187 0059 48000000 		.4byte	.LASF7
 188 005d 03       		.uleb128 0x3
 189 005e 04       		.byte	0x4
 190 005f 05       		.byte	0x5
 191 0060 696E7400 		.ascii	"int\000"
 192 0064 02       		.uleb128 0x2
 193 0065 04       		.byte	0x4
 194 0066 07       		.byte	0x7
 195 0067 29000000 		.4byte	.LASF8
 196 006b 02       		.uleb128 0x2
 197 006c 04       		.byte	0x4
 198 006d 04       		.byte	0x4
 199 006e 5F000000 		.4byte	.LASF9
 200 0072 02       		.uleb128 0x2
 201 0073 08       		.byte	0x8
 202 0074 04       		.byte	0x4
 203 0075 21010000 		.4byte	.LASF10
 204 0079 02       		.uleb128 0x2
 205 007a 01       		.byte	0x1
 206 007b 08       		.byte	0x8
 207 007c 0A010000 		.4byte	.LASF11
 208 0080 02       		.uleb128 0x2
 209 0081 08       		.byte	0x8
 210 0082 04       		.byte	0x4
 211 0083 59010000 		.4byte	.LASF12
 212 0087 02       		.uleb128 0x2
 213 0088 04       		.byte	0x4
 214 0089 07       		.byte	0x7
 215 008a 90010000 		.4byte	.LASF13
 216 008e 04       		.uleb128 0x4
 217 008f 28010000 		.4byte	.LASF14
 218 0093 01       		.byte	0x1
 219 0094 33       		.byte	0x33
 220 0095 00000000 		.4byte	.LFB0
 221 0099 0C000000 		.4byte	.LFE0-.LFB0
 222 009d 01       		.uleb128 0x1
 223 009e 9C       		.byte	0x9c
 224 009f 04       		.uleb128 0x4
 225 00a0 31010000 		.4byte	.LASF15
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 9


 226 00a4 01       		.byte	0x1
 227 00a5 65       		.byte	0x65
 228 00a6 00000000 		.4byte	.LFB1
 229 00aa 0C000000 		.4byte	.LFE1-.LFB1
 230 00ae 01       		.uleb128 0x1
 231 00af 9C       		.byte	0x9c
 232 00b0 04       		.uleb128 0x4
 233 00b1 01010000 		.4byte	.LASF16
 234 00b5 01       		.byte	0x1
 235 00b6 97       		.byte	0x97
 236 00b7 00000000 		.4byte	.LFB2
 237 00bb 0C000000 		.4byte	.LFE2-.LFB2
 238 00bf 01       		.uleb128 0x1
 239 00c0 9C       		.byte	0x9c
 240 00c1 04       		.uleb128 0x4
 241 00c2 0F010000 		.4byte	.LASF17
 242 00c6 01       		.byte	0x1
 243 00c7 C9       		.byte	0xc9
 244 00c8 00000000 		.4byte	.LFB3
 245 00cc 0C000000 		.4byte	.LFE3-.LFB3
 246 00d0 01       		.uleb128 0x1
 247 00d1 9C       		.byte	0x9c
 248 00d2 00       		.byte	0
 249              		.section	.debug_abbrev,"",%progbits
 250              	.Ldebug_abbrev0:
 251 0000 01       		.uleb128 0x1
 252 0001 11       		.uleb128 0x11
 253 0002 01       		.byte	0x1
 254 0003 25       		.uleb128 0x25
 255 0004 0E       		.uleb128 0xe
 256 0005 13       		.uleb128 0x13
 257 0006 0B       		.uleb128 0xb
 258 0007 03       		.uleb128 0x3
 259 0008 0E       		.uleb128 0xe
 260 0009 1B       		.uleb128 0x1b
 261 000a 0E       		.uleb128 0xe
 262 000b 55       		.uleb128 0x55
 263 000c 17       		.uleb128 0x17
 264 000d 11       		.uleb128 0x11
 265 000e 01       		.uleb128 0x1
 266 000f 10       		.uleb128 0x10
 267 0010 17       		.uleb128 0x17
 268 0011 00       		.byte	0
 269 0012 00       		.byte	0
 270 0013 02       		.uleb128 0x2
 271 0014 24       		.uleb128 0x24
 272 0015 00       		.byte	0
 273 0016 0B       		.uleb128 0xb
 274 0017 0B       		.uleb128 0xb
 275 0018 3E       		.uleb128 0x3e
 276 0019 0B       		.uleb128 0xb
 277 001a 03       		.uleb128 0x3
 278 001b 0E       		.uleb128 0xe
 279 001c 00       		.byte	0
 280 001d 00       		.byte	0
 281 001e 03       		.uleb128 0x3
 282 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 10


 283 0020 00       		.byte	0
 284 0021 0B       		.uleb128 0xb
 285 0022 0B       		.uleb128 0xb
 286 0023 3E       		.uleb128 0x3e
 287 0024 0B       		.uleb128 0xb
 288 0025 03       		.uleb128 0x3
 289 0026 08       		.uleb128 0x8
 290 0027 00       		.byte	0
 291 0028 00       		.byte	0
 292 0029 04       		.uleb128 0x4
 293 002a 2E       		.uleb128 0x2e
 294 002b 00       		.byte	0
 295 002c 3F       		.uleb128 0x3f
 296 002d 19       		.uleb128 0x19
 297 002e 03       		.uleb128 0x3
 298 002f 0E       		.uleb128 0xe
 299 0030 3A       		.uleb128 0x3a
 300 0031 0B       		.uleb128 0xb
 301 0032 3B       		.uleb128 0x3b
 302 0033 0B       		.uleb128 0xb
 303 0034 27       		.uleb128 0x27
 304 0035 19       		.uleb128 0x19
 305 0036 11       		.uleb128 0x11
 306 0037 01       		.uleb128 0x1
 307 0038 12       		.uleb128 0x12
 308 0039 06       		.uleb128 0x6
 309 003a 40       		.uleb128 0x40
 310 003b 18       		.uleb128 0x18
 311 003c 9742     		.uleb128 0x2117
 312 003e 19       		.uleb128 0x19
 313 003f 00       		.byte	0
 314 0040 00       		.byte	0
 315 0041 00       		.byte	0
 316              		.section	.debug_aranges,"",%progbits
 317 0000 34000000 		.4byte	0x34
 318 0004 0200     		.2byte	0x2
 319 0006 00000000 		.4byte	.Ldebug_info0
 320 000a 04       		.byte	0x4
 321 000b 00       		.byte	0
 322 000c 0000     		.2byte	0
 323 000e 0000     		.2byte	0
 324 0010 00000000 		.4byte	.LFB0
 325 0014 0C000000 		.4byte	.LFE0-.LFB0
 326 0018 00000000 		.4byte	.LFB1
 327 001c 0C000000 		.4byte	.LFE1-.LFB1
 328 0020 00000000 		.4byte	.LFB2
 329 0024 0C000000 		.4byte	.LFE2-.LFB2
 330 0028 00000000 		.4byte	.LFB3
 331 002c 0C000000 		.4byte	.LFE3-.LFB3
 332 0030 00000000 		.4byte	0
 333 0034 00000000 		.4byte	0
 334              		.section	.debug_ranges,"",%progbits
 335              	.Ldebug_ranges0:
 336 0000 00000000 		.4byte	.LFB0
 337 0004 0C000000 		.4byte	.LFE0
 338 0008 00000000 		.4byte	.LFB1
 339 000c 0C000000 		.4byte	.LFE1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 11


 340 0010 00000000 		.4byte	.LFB2
 341 0014 0C000000 		.4byte	.LFE2
 342 0018 00000000 		.4byte	.LFB3
 343 001c 0C000000 		.4byte	.LFE3
 344 0020 00000000 		.4byte	0
 345 0024 00000000 		.4byte	0
 346              		.section	.debug_line,"",%progbits
 347              	.Ldebug_line0:
 348 0000 88000000 		.section	.debug_str,"MS",%progbits,1
 348      02003700 
 348      00000201 
 348      FB0E0D00 
 348      01010101 
 349              	.LASF6:
 350 0000 6C6F6E67 		.ascii	"long long int\000"
 350      206C6F6E 
 350      6720696E 
 350      7400
 351              	.LASF20:
 352 000e 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 352      6F746F72 
 352      694F535C 
 352      6E6F746F 
 352      72694F53 
 353              	.LASF8:
 354 0029 756E7369 		.ascii	"unsigned int\000"
 354      676E6564 
 354      20696E74 
 354      00
 355              	.LASF5:
 356 0036 6C6F6E67 		.ascii	"long unsigned int\000"
 356      20756E73 
 356      69676E65 
 356      6420696E 
 356      7400
 357              	.LASF7:
 358 0048 6C6F6E67 		.ascii	"long long unsigned int\000"
 358      206C6F6E 
 358      6720756E 
 358      7369676E 
 358      65642069 
 359              	.LASF9:
 360 005f 666C6F61 		.ascii	"float\000"
 360      7400
 361              	.LASF18:
 362 0065 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 362      43313120 
 362      352E342E 
 362      31203230 
 362      31363036 
 363 0098 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 363      20726576 
 363      6973696F 
 363      6E203233 
 363      37373135 
 364 00cb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 364      66756E63 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 12


 364      74696F6E 
 364      2D736563 
 364      74696F6E 
 365              	.LASF1:
 366 00f3 756E7369 		.ascii	"unsigned char\000"
 366      676E6564 
 366      20636861 
 366      7200
 367              	.LASF16:
 368 0101 4144435F 		.ascii	"ADC_ISR3\000"
 368      49535233 
 368      00
 369              	.LASF11:
 370 010a 63686172 		.ascii	"char\000"
 370      00
 371              	.LASF17:
 372 010f 4144435F 		.ascii	"ADC_ISR4\000"
 372      49535234 
 372      00
 373              	.LASF4:
 374 0118 6C6F6E67 		.ascii	"long int\000"
 374      20696E74 
 374      00
 375              	.LASF10:
 376 0121 646F7562 		.ascii	"double\000"
 376      6C6500
 377              	.LASF14:
 378 0128 4144435F 		.ascii	"ADC_ISR1\000"
 378      49535231 
 378      00
 379              	.LASF15:
 380 0131 4144435F 		.ascii	"ADC_ISR2\000"
 380      49535232 
 380      00
 381              	.LASF3:
 382 013a 73686F72 		.ascii	"short unsigned int\000"
 382      7420756E 
 382      7369676E 
 382      65642069 
 382      6E7400
 383              	.LASF0:
 384 014d 7369676E 		.ascii	"signed char\000"
 384      65642063 
 384      68617200 
 385              	.LASF12:
 386 0159 6C6F6E67 		.ascii	"long double\000"
 386      20646F75 
 386      626C6500 
 387              	.LASF2:
 388 0165 73686F72 		.ascii	"short int\000"
 388      7420696E 
 388      7400
 389              	.LASF19:
 390 016f 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_INT.c\000"
 390      72617465 
 390      645F536F 
 390      75726365 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccHvhmnD.s 			page 13


 390      5C50536F 
 391              	.LASF13:
 392 0190 73697A65 		.ascii	"sizetype\000"
 392      74797065 
 392      00
 393              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_convDone
  20              		.bss
  21              		.type	ADC_convDone, %object
  22              		.size	ADC_convDone, 1
  23              	ADC_convDone:
  24 0000 00       		.space	1
  25              		.global	ADC_stopConversion
  26              		.type	ADC_stopConversion, %object
  27              		.size	ADC_stopConversion, 1
  28              	ADC_stopConversion:
  29 0001 00       		.space	1
  30              		.global	ADC_initVar
  31              		.type	ADC_initVar, %object
  32              		.size	ADC_initVar, 1
  33              	ADC_initVar:
  34 0002 00       		.space	1
  35              		.global	ADC_started
  36              		.type	ADC_started, %object
  37              		.size	ADC_started, 1
  38              	ADC_started:
  39 0003 00       		.space	1
  40              		.global	ADC_Config
  41              		.data
  42              		.type	ADC_Config, %object
  43              		.size	ADC_Config, 1
  44              	ADC_Config:
  45 0000 01       		.byte	1
  46              		.global	ADC_Offset
  47              		.bss
  48              		.align	2
  49              		.type	ADC_Offset, %object
  50              		.size	ADC_Offset, 4
  51              	ADC_Offset:
  52 0004 00000000 		.space	4
  53              		.comm	ADC_CountsPerVolt,4,4
  54              		.align	2
  55              	ADC_gcor:
  56 0008 00000000 		.space	16
  56      00000000 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 2


  56      00000000 
  56      00000000 
  57              		.section	.text.ADC_Init,"ax",%progbits
  58              		.align	2
  59              		.global	ADC_Init
  60              		.thumb
  61              		.thumb_func
  62              		.type	ADC_Init, %function
  63              	ADC_Init:
  64              	.LFB0:
  65              		.file 1 "Generated_Source\\PSoC5\\ADC.c"
   1:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC5/ADC.c **** * Version 3.30
   4:Generated_Source\PSoC5/ADC.c **** *
   5:Generated_Source\PSoC5/ADC.c **** * Description:
   6:Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/ADC.c **** *  Component.
   8:Generated_Source\PSoC5/ADC.c **** *
   9:Generated_Source\PSoC5/ADC.c **** * Note:
  10:Generated_Source\PSoC5/ADC.c **** *
  11:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC.c **** 
  18:Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC5/ADC.c **** 
  20:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  22:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/ADC.c **** 
  24:Generated_Source\PSoC5/ADC.c **** #include "ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/ADC.c **** 
  26:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/ADC.c ****     #include "ADC_AMux.h"
  28:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/ADC.c **** 
  30:Generated_Source\PSoC5/ADC.c **** 
  31:Generated_Source\PSoC5/ADC.c **** /***************************************
  32:Generated_Source\PSoC5/ADC.c **** * Global data allocation
  33:Generated_Source\PSoC5/ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/ADC.c **** 
  35:Generated_Source\PSoC5/ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_convDone = 0u;
  37:Generated_Source\PSoC5/ADC.c **** 
  38:Generated_Source\PSoC5/ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/ADC.c **** */
  41:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/ADC.c **** 
  43:Generated_Source\PSoC5/ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  45:Generated_Source\PSoC5/ADC.c **** 
  46:Generated_Source\PSoC5/ADC.c **** /* To check whether ADC started or not before switching the configuration */
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 3


  47:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_started = 0u;
  48:Generated_Source\PSoC5/ADC.c **** 
  49:Generated_Source\PSoC5/ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_Config = 1u;
  51:Generated_Source\PSoC5/ADC.c **** 
  52:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_Offset = 0;
  53:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/ADC.c **** 
  55:Generated_Source\PSoC5/ADC.c **** 
  56:Generated_Source\PSoC5/ADC.c **** /***************************************
  57:Generated_Source\PSoC5/ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/ADC.c **** 
  60:Generated_Source\PSoC5/ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/ADC.c **** static ADC_GCOR_STRUCT ADC_gcor[ADC_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/ADC.c **** 
  63:Generated_Source\PSoC5/ADC.c **** 
  64:Generated_Source\PSoC5/ADC.c **** 
  65:Generated_Source\PSoC5/ADC.c **** /***************************************
  66:Generated_Source\PSoC5/ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:Generated_Source\PSoC5/ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/ADC.c **** 
  73:Generated_Source\PSoC5/ADC.c **** 
  74:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  76:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/ADC.c **** *
  78:Generated_Source\PSoC5/ADC.c **** * Summary:
  79:Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/ADC.c **** * ADC_Start().
  82:Generated_Source\PSoC5/ADC.c **** *
  83:Generated_Source\PSoC5/ADC.c **** *
  84:Generated_Source\PSoC5/ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/ADC.c **** *  None
  86:Generated_Source\PSoC5/ADC.c **** *
  87:Generated_Source\PSoC5/ADC.c **** * Return:
  88:Generated_Source\PSoC5/ADC.c **** *  None
  89:Generated_Source\PSoC5/ADC.c **** *
  90:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/ADC.c **** void ADC_Init(void) 
  92:Generated_Source\PSoC5/ADC.c **** {
  66              		.loc 1 92 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 4


  77              		.cfi_def_cfa 7, 8
  93:Generated_Source\PSoC5/ADC.c **** 
  94:Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
  78              		.loc 1 94 0
  79 0006 414B     		ldr	r3, .L2
  80 0008 0122     		movs	r2, #1
  81 000a 1A70     		strb	r2, [r3]
  95:Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
  82              		.loc 1 95 0
  83 000c 404B     		ldr	r3, .L2+4
  84 000e 0022     		movs	r2, #0
  85 0010 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/ADC.c **** 
  97:Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  86              		.loc 1 97 0
  87 0012 1020     		movs	r0, #16
  88 0014 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetModeRegister
  98:Generated_Source\PSoC5/ADC.c **** 
  99:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
  89              		.loc 1 101 0
  90 0018 1020     		movs	r0, #16
  91 001a FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 102:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/ADC.c **** 
 104:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  92              		.loc 1 106 0
  93 001e 0721     		movs	r1, #7
  94 0020 1D20     		movs	r0, #29
  95 0022 FFF7FEFF 		bl	CyIntSetPriority
 107:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/ADC.c **** 
 109:Generated_Source\PSoC5/ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
  96              		.loc 1 110 0
  97 0026 3B4B     		ldr	r3, .L2+8
  98 0028 0422     		movs	r2, #4
  99 002a 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 100              		.loc 1 111 0
 101 002c 3A4B     		ldr	r3, .L2+12
 102 002e 0022     		movs	r2, #0
 103 0030 1A70     		strb	r2, [r3]
 112:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 104              		.loc 1 112 0
 105 0032 3A4B     		ldr	r3, .L2+16
 106 0034 0022     		movs	r2, #0
 107 0036 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 108              		.loc 1 113 0
 109 0038 394A     		ldr	r2, .L2+20
 110 003a 394B     		ldr	r3, .L2+20
 111 003c 1B78     		ldrb	r3, [r3]
 112 003e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 5


 113 0040 43F01803 		orr	r3, r3, #24
 114 0044 DBB2     		uxtb	r3, r3
 115 0046 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 116              		.loc 1 114 0
 117 0048 364B     		ldr	r3, .L2+24
 118 004a 0022     		movs	r2, #0
 119 004c 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/ADC.c **** 
 116:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
 120              		.loc 1 116 0
 121 004e 364B     		ldr	r3, .L2+28
 122 0050 0022     		movs	r2, #0
 123 0052 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 124              		.loc 1 117 0
 125 0054 354B     		ldr	r3, .L2+32
 126 0056 0022     		movs	r2, #0
 127 0058 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC5/ADC.c **** 
 119:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 128              		.loc 1 119 0
 129 005a 354B     		ldr	r3, .L2+36
 130 005c 0A22     		movs	r2, #10
 131 005e 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 132              		.loc 1 120 0
 133 0060 344B     		ldr	r3, .L2+40
 134 0062 0022     		movs	r2, #0
 135 0064 1A70     		strb	r2, [r3]
 121:Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     |= ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/ADC.c **** #else
 124:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 136              		.loc 1 124 0
 137 0066 344B     		ldr	r3, .L2+44
 138 0068 0022     		movs	r2, #0
 139 006a 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 140              		.loc 1 126 0
 141 006c 334B     		ldr	r3, .L2+48
 142 006e 5B22     		movs	r2, #91
 143 0070 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 144              		.loc 1 127 0
 145 0072 334B     		ldr	r3, .L2+52
 146 0074 5E22     		movs	r2, #94
 147 0076 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 148              		.loc 1 128 0
 149 0078 324B     		ldr	r3, .L2+56
 150 007a 0022     		movs	r2, #0
 151 007c 1A70     		strb	r2, [r3]
 129:Generated_Source\PSoC5/ADC.c **** 
 130:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 152              		.loc 1 130 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 6


 153 007e 324B     		ldr	r3, .L2+60
 154 0080 1422     		movs	r2, #20
 155 0082 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC5/ADC.c **** 
 132:Generated_Source\PSoC5/ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 156              		.loc 1 133 0
 157 0084 0123     		movs	r3, #1
 158 0086 0093     		str	r3, [sp]
 159 0088 1023     		movs	r3, #16
 160 008a 4FF40042 		mov	r2, #32768
 161 008e 47F60271 		movw	r1, #32514
 162 0092 0320     		movs	r0, #3
 163 0094 FFF7FEFF 		bl	ADC_GainCompensation
 134:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1);
 138:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG2_INPUT_RANGE,
 164              		.loc 1 139 0
 165 0098 0223     		movs	r3, #2
 166 009a 0093     		str	r3, [sp]
 167 009c 1023     		movs	r3, #16
 168 009e 4FF40042 		mov	r2, #32768
 169 00a2 49F2DA01 		movw	r1, #37082
 170 00a6 0020     		movs	r0, #0
 171 00a8 FFF7FEFF 		bl	ADC_GainCompensation
 140:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2);
 144:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG3_INPUT_RANGE,
 172              		.loc 1 146 0
 173 00ac 0323     		movs	r3, #3
 174 00ae 0093     		str	r3, [sp]
 175 00b0 1023     		movs	r3, #16
 176 00b2 4FF40042 		mov	r2, #32768
 177 00b6 49F2DA01 		movw	r1, #37082
 178 00ba 0020     		movs	r0, #0
 179 00bc FFF7FEFF 		bl	ADC_GainCompensation
 147:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3);
 151:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG4_INPUT_RANGE,
 180              		.loc 1 153 0
 181 00c0 0423     		movs	r3, #4
 182 00c2 0093     		str	r3, [sp]
 183 00c4 1023     		movs	r3, #16
 184 00c6 4FF40042 		mov	r2, #32768
 185 00ca 49F2DA01 		movw	r1, #37082
 186 00ce 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 7


 187 00d0 FFF7FEFF 		bl	ADC_GainCompensation
 154:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4);
 158:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/ADC.c **** 
 160:Generated_Source\PSoC5/ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 188              		.loc 1 161 0
 189 00d4 1D4A     		ldr	r2, .L2+64
 190 00d6 0D4B     		ldr	r3, .L2
 191 00d8 1B78     		ldrb	r3, [r3]
 192 00da DBB2     		uxtb	r3, r3
 193 00dc 013B     		subs	r3, r3, #1
 194 00de 1C49     		ldr	r1, .L2+68
 195 00e0 9B00     		lsls	r3, r3, #2
 196 00e2 0B44     		add	r3, r3, r1
 197 00e4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 198 00e6 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 199              		.loc 1 162 0
 200 00e8 1A4A     		ldr	r2, .L2+72
 201 00ea 084B     		ldr	r3, .L2
 202 00ec 1B78     		ldrb	r3, [r3]
 203 00ee DBB2     		uxtb	r3, r3
 204 00f0 013B     		subs	r3, r3, #1
 205 00f2 1749     		ldr	r1, .L2+68
 206 00f4 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 207 00f8 1380     		strh	r3, [r2]	@ movhi
 163:Generated_Source\PSoC5/ADC.c **** 
 164:Generated_Source\PSoC5/ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 208              		.loc 1 165 0
 209 00fa 044B     		ldr	r3, .L2
 210 00fc 1B78     		ldrb	r3, [r3]
 211 00fe DBB2     		uxtb	r3, r3
 212 0100 1846     		mov	r0, r3
 213 0102 FFF7FEFF 		bl	ADC_InitConfig
 166:Generated_Source\PSoC5/ADC.c **** }
 214              		.loc 1 166 0
 215 0106 00BF     		nop
 216 0108 BD46     		mov	sp, r7
 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 010a 80BD     		pop	{r7, pc}
 220              	.L3:
 221              		.align	2
 222              	.L2:
 223 010c 00000000 		.word	ADC_Config
 224 0110 00000000 		.word	ADC_convDone
 225 0114 96580040 		.word	1073764502
 226 0118 97580040 		.word	1073764503
 227 011c 9E580040 		.word	1073764510
 228 0120 075B0040 		.word	1073765127
 229 0124 93580040 		.word	1073764499
 230 0128 885B0040 		.word	1073765256
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 8


 231 012c 895B0040 		.word	1073765257
 232 0130 80580040 		.word	1073764480
 233 0134 81580040 		.word	1073764481
 234 0138 83580040 		.word	1073764483
 235 013c 88580040 		.word	1073764488
 236 0140 89580040 		.word	1073764489
 237 0144 8D580040 		.word	1073764493
 238 0148 014E0040 		.word	1073761793
 239 014c 0E4E0040 		.word	1073761806
 240 0150 08000000 		.word	ADC_gcor
 241 0154 0C4E0040 		.word	1073761804
 242              		.cfi_endproc
 243              	.LFE0:
 244              		.size	ADC_Init, .-ADC_Init
 245              		.section	.text.ADC_Enable,"ax",%progbits
 246              		.align	2
 247              		.global	ADC_Enable
 248              		.thumb
 249              		.thumb_func
 250              		.type	ADC_Enable, %function
 251              	ADC_Enable:
 252              	.LFB1:
 167:Generated_Source\PSoC5/ADC.c **** 
 168:Generated_Source\PSoC5/ADC.c **** 
 169:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 171:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 172:Generated_Source\PSoC5/ADC.c **** *
 173:Generated_Source\PSoC5/ADC.c **** * Summary:
 174:Generated_Source\PSoC5/ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/ADC.c **** *
 176:Generated_Source\PSoC5/ADC.c **** * Parameters:
 177:Generated_Source\PSoC5/ADC.c **** *  None
 178:Generated_Source\PSoC5/ADC.c **** *
 179:Generated_Source\PSoC5/ADC.c **** * Return:
 180:Generated_Source\PSoC5/ADC.c **** *  None
 181:Generated_Source\PSoC5/ADC.c **** *
 182:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
 183:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
 184:Generated_Source\PSoC5/ADC.c **** *
 185:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void) 
 187:Generated_Source\PSoC5/ADC.c **** {
 253              		.loc 1 187 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 188:Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 189:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 9


 190:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 265              		.loc 1 190 0
 266 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 267 000a 0346     		mov	r3, r0
 268 000c FB71     		strb	r3, [r7, #7]
 191:Generated_Source\PSoC5/ADC.c **** 
 192:Generated_Source\PSoC5/ADC.c ****     /* Read volatile variable to the local variable */
 193:Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 269              		.loc 1 193 0
 270 000e 444B     		ldr	r3, .L5
 271 0010 1B78     		ldrb	r3, [r3]
 272 0012 BB71     		strb	r3, [r7, #6]
 194:Generated_Source\PSoC5/ADC.c ****     
 195:Generated_Source\PSoC5/ADC.c ****     /* Enable active mode power for ADC */
 196:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
 273              		.loc 1 196 0
 274 0014 434A     		ldr	r2, .L5+4
 275 0016 434B     		ldr	r3, .L5+4
 276 0018 1B78     		ldrb	r3, [r3]
 277 001a DBB2     		uxtb	r3, r3
 278 001c 43F00103 		orr	r3, r3, #1
 279 0020 DBB2     		uxtb	r3, r3
 280 0022 1370     		strb	r3, [r2]
 197:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 281              		.loc 1 197 0
 282 0024 3F4A     		ldr	r2, .L5+4
 283 0026 3F4B     		ldr	r3, .L5+4
 284 0028 1B78     		ldrb	r3, [r3]
 285 002a DBB2     		uxtb	r3, r3
 286 002c 43F01003 		orr	r3, r3, #16
 287 0030 DBB2     		uxtb	r3, r3
 288 0032 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/ADC.c **** 
 199:Generated_Source\PSoC5/ADC.c ****      /* Enable alternative active mode power for ADC */
 200:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 289              		.loc 1 200 0
 290 0034 3C4A     		ldr	r2, .L5+8
 291 0036 3C4B     		ldr	r3, .L5+8
 292 0038 1B78     		ldrb	r3, [r3]
 293 003a DBB2     		uxtb	r3, r3
 294 003c 43F00103 		orr	r3, r3, #1
 295 0040 DBB2     		uxtb	r3, r3
 296 0042 1370     		strb	r3, [r2]
 201:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 297              		.loc 1 201 0
 298 0044 384A     		ldr	r2, .L5+8
 299 0046 384B     		ldr	r3, .L5+8
 300 0048 1B78     		ldrb	r3, [r3]
 301 004a DBB2     		uxtb	r3, r3
 302 004c 43F01003 		orr	r3, r3, #16
 303 0050 DBB2     		uxtb	r3, r3
 304 0052 1370     		strb	r3, [r2]
 202:Generated_Source\PSoC5/ADC.c **** 
 203:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 204:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 305              		.loc 1 204 0
 306 0054 354A     		ldr	r2, .L5+12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 10


 307 0056 354B     		ldr	r3, .L5+12
 308 0058 1B78     		ldrb	r3, [r3]
 309 005a DBB2     		uxtb	r3, r3
 310 005c 43F00203 		orr	r3, r3, #2
 311 0060 DBB2     		uxtb	r3, r3
 312 0062 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 313              		.loc 1 205 0
 314 0064 324A     		ldr	r2, .L5+16
 315 0066 324B     		ldr	r3, .L5+16
 316 0068 1B78     		ldrb	r3, [r3]
 317 006a DBB2     		uxtb	r3, r3
 318 006c 43F00203 		orr	r3, r3, #2
 319 0070 DBB2     		uxtb	r3, r3
 320 0072 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC5/ADC.c **** 
 207:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 321              		.loc 1 207 0
 322 0074 2F4A     		ldr	r2, .L5+20
 323 0076 2F4B     		ldr	r3, .L5+20
 324 0078 1B78     		ldrb	r3, [r3]
 325 007a DBB2     		uxtb	r3, r3
 326 007c 43F00303 		orr	r3, r3, #3
 327 0080 DBB2     		uxtb	r3, r3
 328 0082 1370     		strb	r3, [r2]
 208:Generated_Source\PSoC5/ADC.c **** 
 209:Generated_Source\PSoC5/ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 210:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) || \
 211:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32)) || \
 212:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 213:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 214:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 215:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 216:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 217:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 218:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 219:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) || \
 220:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 221:Generated_Source\PSoC5/ADC.c ****         if (((config == 1u) &&
 222:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) ||
 223:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 224:Generated_Source\PSoC5/ADC.c ****             ((config == 2u) &&
 225:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||
 226:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 227:Generated_Source\PSoC5/ADC.c ****             ((config == 3u) &&
 228:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||
 229:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 230:Generated_Source\PSoC5/ADC.c ****             ((config == 4u) &&
 231:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) ||
 232:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 233:Generated_Source\PSoC5/ADC.c ****         {
 234:Generated_Source\PSoC5/ADC.c ****             /* Disable the REFBUF0 */
 235:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG &= (uint8)~ADC_DSM_EN_BUF_VREF;
 236:Generated_Source\PSoC5/ADC.c ****         }
 237:Generated_Source\PSoC5/ADC.c ****     #endif /* External ref */
 238:Generated_Source\PSoC5/ADC.c **** 
 239:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) || \
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 11


 240:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 241:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 243:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 244:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 245:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF))))
 246:Generated_Source\PSoC5/ADC.c ****         if(((config == 1u) &&
 247:Generated_Source\PSoC5/ADC.c ****             (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 248:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P03) &&
 249:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 250:Generated_Source\PSoC5/ADC.c ****              ((config == 2u) &&
 251:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 252:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P03) &&
 253:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 254:Generated_Source\PSoC5/ADC.c ****              ((config == 3u) &&
 255:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 256:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P03) &&
 257:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 258:Generated_Source\PSoC5/ADC.c ****              ((config == 4u) &&
 259:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 260:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P03) &&
 261:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P32))))
 262:Generated_Source\PSoC5/ADC.c ****         {
 263:Generated_Source\PSoC5/ADC.c ****             /* Enable the REFBUF1 */
 264:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF0_REG |= ADC_DSM_EN_BUF_VREF_INN;
 265:Generated_Source\PSoC5/ADC.c ****         }
 266:Generated_Source\PSoC5/ADC.c ****     #endif /* VSSA_TO_2VREF */
 267:Generated_Source\PSoC5/ADC.c ****     if(config != 0u)
 268:Generated_Source\PSoC5/ADC.c ****     {
 269:Generated_Source\PSoC5/ADC.c ****         /* Suppress compiler warning */
 270:Generated_Source\PSoC5/ADC.c ****     }
 271:Generated_Source\PSoC5/ADC.c **** 
 272:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
 273:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 329              		.loc 1 273 0
 330 0084 0320     		movs	r0, #3
 331 0086 FFF7FEFF 		bl	CyDelayUs
 274:Generated_Source\PSoC5/ADC.c **** 
 275:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 276:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 332              		.loc 1 276 0
 333 008a 284A     		ldr	r2, .L5+12
 334 008c 274B     		ldr	r3, .L5+12
 335 008e 1B78     		ldrb	r3, [r3]
 336 0090 DBB2     		uxtb	r3, r3
 337 0092 23F00203 		bic	r3, r3, #2
 338 0096 DBB2     		uxtb	r3, r3
 339 0098 1370     		strb	r3, [r2]
 277:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 340              		.loc 1 277 0
 341 009a 254A     		ldr	r2, .L5+16
 342 009c 244B     		ldr	r3, .L5+16
 343 009e 1B78     		ldrb	r3, [r3]
 344 00a0 DBB2     		uxtb	r3, r3
 345 00a2 23F00203 		bic	r3, r3, #2
 346 00a6 DBB2     		uxtb	r3, r3
 347 00a8 1370     		strb	r3, [r2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 12


 278:Generated_Source\PSoC5/ADC.c **** 
 279:Generated_Source\PSoC5/ADC.c ****     /* Enable negative pumps for DSM  */
 280:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 348              		.loc 1 280 0
 349 00aa 234A     		ldr	r2, .L5+24
 350 00ac 224B     		ldr	r3, .L5+24
 351 00ae 1B78     		ldrb	r3, [r3]
 352 00b0 DBB2     		uxtb	r3, r3
 353 00b2 43F00603 		orr	r3, r3, #6
 354 00b6 DBB2     		uxtb	r3, r3
 355 00b8 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/ADC.c **** 
 282:Generated_Source\PSoC5/ADC.c ****     /* Enable Modulator Chopping if required */
 283:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 356              		.loc 1 283 0
 357 00ba 204B     		ldr	r3, .L5+28
 358 00bc 7A22     		movs	r2, #122
 359 00be 1A70     		strb	r2, [r3]
 284:Generated_Source\PSoC5/ADC.c **** 
 285:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 286:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 287:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 360              		.loc 1 287 0
 361 00c0 1F4A     		ldr	r2, .L5+32
 362 00c2 1F4B     		ldr	r3, .L5+32
 363 00c4 1B78     		ldrb	r3, [r3]
 364 00c6 DBB2     		uxtb	r3, r3
 365 00c8 43F00103 		orr	r3, r3, #1
 366 00cc DBB2     		uxtb	r3, r3
 367 00ce 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 368              		.loc 1 288 0
 369 00d0 1C4A     		ldr	r2, .L5+36
 370 00d2 1C4B     		ldr	r3, .L5+36
 371 00d4 1B78     		ldrb	r3, [r3]
 372 00d6 DBB2     		uxtb	r3, r3
 373 00d8 43F00103 		orr	r3, r3, #1
 374 00dc DBB2     		uxtb	r3, r3
 375 00de 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 290:Generated_Source\PSoC5/ADC.c **** 
 291:Generated_Source\PSoC5/ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 292:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 376              		.loc 1 292 0
 377 00e0 194A     		ldr	r2, .L5+40
 378 00e2 194B     		ldr	r3, .L5+40
 379 00e4 1B78     		ldrb	r3, [r3]
 380 00e6 DBB2     		uxtb	r3, r3
 381 00e8 43F00203 		orr	r3, r3, #2
 382 00ec DBB2     		uxtb	r3, r3
 383 00ee 1370     		strb	r3, [r2]
 293:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 384              		.loc 1 293 0
 385 00f0 164A     		ldr	r2, .L5+44
 386 00f2 164B     		ldr	r3, .L5+44
 387 00f4 1B78     		ldrb	r3, [r3]
 388 00f6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 13


 389 00f8 43F00203 		orr	r3, r3, #2
 390 00fc DBB2     		uxtb	r3, r3
 391 00fe 1370     		strb	r3, [r2]
 294:Generated_Source\PSoC5/ADC.c **** 
 295:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 296:Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 297:Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 392              		.loc 1 297 0
 393 0100 134B     		ldr	r3, .L5+48
 394 0102 4FF00052 		mov	r2, #536870912
 395 0106 1A60     		str	r2, [r3]
 298:Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 299:Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 396              		.loc 1 299 0
 397 0108 124B     		ldr	r3, .L5+52
 398 010a 4FF00052 		mov	r2, #536870912
 399 010e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 301:Generated_Source\PSoC5/ADC.c **** 
 302:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 400              		.loc 1 302 0
 401 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 0112 1846     		mov	r0, r3
 403 0114 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC5/ADC.c **** 
 304:Generated_Source\PSoC5/ADC.c **** }
 404              		.loc 1 304 0
 405 0118 00BF     		nop
 406 011a 0837     		adds	r7, r7, #8
 407              		.cfi_def_cfa_offset 8
 408 011c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 011e 80BD     		pop	{r7, pc}
 412              	.L6:
 413              		.align	2
 414              	.L5:
 415 0120 00000000 		.word	ADC_Config
 416 0124 AA430040 		.word	1073759146
 417 0128 BA430040 		.word	1073759162
 418 012c F8460040 		.word	1073759992
 419 0130 F9460040 		.word	1073759993
 420 0134 91580040 		.word	1073764497
 421 0138 77580040 		.word	1073764471
 422 013c 82580040 		.word	1073764482
 423 0140 A1430040 		.word	1073759137
 424 0144 B1430040 		.word	1073759153
 425 0148 A2430040 		.word	1073759138
 426 014c B2430040 		.word	1073759154
 427 0150 80E200E0 		.word	-536812928
 428 0154 00E100E0 		.word	-536813312
 429              		.cfi_endproc
 430              	.LFE1:
 431              		.size	ADC_Enable, .-ADC_Enable
 432              		.section	.text.ADC_Start,"ax",%progbits
 433              		.align	2
 434              		.global	ADC_Start
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 14


 435              		.thumb
 436              		.thumb_func
 437              		.type	ADC_Start, %function
 438              	ADC_Start:
 439              	.LFB2:
 305:Generated_Source\PSoC5/ADC.c **** 
 306:Generated_Source\PSoC5/ADC.c **** 
 307:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 308:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
 309:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 310:Generated_Source\PSoC5/ADC.c **** *
 311:Generated_Source\PSoC5/ADC.c **** * Summary:
 312:Generated_Source\PSoC5/ADC.c **** *  Performs all required initialization for this component and enables
 313:Generated_Source\PSoC5/ADC.c **** *  the power. It configure all the register the first time it is called.
 314:Generated_Source\PSoC5/ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 315:Generated_Source\PSoC5/ADC.c **** *  on the power. If multiple configurations are selected, it will
 316:Generated_Source\PSoC5/ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 317:Generated_Source\PSoC5/ADC.c **** *  ADC_SelectConfiguration( ) function has been called to change
 318:Generated_Source\PSoC5/ADC.c **** *  the default setting.
 319:Generated_Source\PSoC5/ADC.c **** *
 320:Generated_Source\PSoC5/ADC.c **** * Parameters:
 321:Generated_Source\PSoC5/ADC.c **** *  None
 322:Generated_Source\PSoC5/ADC.c **** *
 323:Generated_Source\PSoC5/ADC.c **** * Return:
 324:Generated_Source\PSoC5/ADC.c **** *  None
 325:Generated_Source\PSoC5/ADC.c **** *
 326:Generated_Source\PSoC5/ADC.c **** * Global variables:
 327:Generated_Source\PSoC5/ADC.c **** *  ADC_initVar:  Used to check the initial configuration,
 328:Generated_Source\PSoC5/ADC.c **** *  modified when this function is called for the first time.
 329:Generated_Source\PSoC5/ADC.c **** *
 330:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
 331:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
 332:Generated_Source\PSoC5/ADC.c **** *
 333:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 334:Generated_Source\PSoC5/ADC.c **** void ADC_Start(void) 
 335:Generated_Source\PSoC5/ADC.c **** {
 440              		.loc 1 335 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 336:Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 450              		.loc 1 336 0
 451 0004 084B     		ldr	r3, .L10
 452 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 453 0008 002B     		cmp	r3, #0
 454 000a 09D1     		bne	.L8
 337:Generated_Source\PSoC5/ADC.c ****     {
 338:Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 455              		.loc 1 338 0
 456 000c 074B     		ldr	r3, .L10+4
 457 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 15


 458 0010 DBB2     		uxtb	r3, r3
 459 0012 002B     		cmp	r3, #0
 460 0014 01D1     		bne	.L9
 339:Generated_Source\PSoC5/ADC.c ****         {
 340:Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 461              		.loc 1 340 0
 462 0016 FFF7FEFF 		bl	ADC_Init
 463              	.L9:
 341:Generated_Source\PSoC5/ADC.c ****         }
 342:Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 464              		.loc 1 342 0
 465 001a 034B     		ldr	r3, .L10
 466 001c 0122     		movs	r2, #1
 467 001e 1A70     		strb	r2, [r3]
 468              	.L8:
 343:Generated_Source\PSoC5/ADC.c ****     }
 344:Generated_Source\PSoC5/ADC.c **** 
 345:Generated_Source\PSoC5/ADC.c ****     /* Enable the ADC */
 346:Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 469              		.loc 1 346 0
 470 0020 FFF7FEFF 		bl	ADC_Enable
 347:Generated_Source\PSoC5/ADC.c **** }
 471              		.loc 1 347 0
 472 0024 00BF     		nop
 473 0026 80BD     		pop	{r7, pc}
 474              	.L11:
 475              		.align	2
 476              	.L10:
 477 0028 00000000 		.word	ADC_initVar
 478 002c 00000000 		.word	ADC_started
 479              		.cfi_endproc
 480              	.LFE2:
 481              		.size	ADC_Start, .-ADC_Start
 482              		.section	.text.ADC_Stop,"ax",%progbits
 483              		.align	2
 484              		.global	ADC_Stop
 485              		.thumb
 486              		.thumb_func
 487              		.type	ADC_Stop, %function
 488              	ADC_Stop:
 489              	.LFB3:
 348:Generated_Source\PSoC5/ADC.c **** 
 349:Generated_Source\PSoC5/ADC.c **** 
 350:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC5/ADC.c **** *
 354:Generated_Source\PSoC5/ADC.c **** * Summary:
 355:Generated_Source\PSoC5/ADC.c **** *  This function stops and powers down the ADC component and the internal
 356:Generated_Source\PSoC5/ADC.c **** *  clock if the external clock is not selected. If an external clock is
 357:Generated_Source\PSoC5/ADC.c **** *  used, it is up to the designer to power down the external clock it
 358:Generated_Source\PSoC5/ADC.c **** *  required.
 359:Generated_Source\PSoC5/ADC.c **** *
 360:Generated_Source\PSoC5/ADC.c **** * Parameters:
 361:Generated_Source\PSoC5/ADC.c **** *  None
 362:Generated_Source\PSoC5/ADC.c **** *
 363:Generated_Source\PSoC5/ADC.c **** * Return:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 16


 364:Generated_Source\PSoC5/ADC.c **** *  None
 365:Generated_Source\PSoC5/ADC.c **** *
 366:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void) 
 368:Generated_Source\PSoC5/ADC.c **** {
 490              		.loc 1 368 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494 0000 80B5     		push	{r7, lr}
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 7, -8
 497              		.cfi_offset 14, -4
 498 0002 82B0     		sub	sp, sp, #8
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 369:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 370:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 502              		.loc 1 370 0
 503 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 504 000a 0346     		mov	r3, r0
 505 000c FB71     		strb	r3, [r7, #7]
 371:Generated_Source\PSoC5/ADC.c **** 
 372:Generated_Source\PSoC5/ADC.c ****     /* Stop conversions */
 373:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 506              		.loc 1 373 0
 507 000e 4D4A     		ldr	r2, .L13
 508 0010 4C4B     		ldr	r3, .L13
 509 0012 1B78     		ldrb	r3, [r3]
 510 0014 DBB2     		uxtb	r3, r3
 511 0016 23F00103 		bic	r3, r3, #1
 512 001a DBB2     		uxtb	r3, r3
 513 001c 1370     		strb	r3, [r2]
 374:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 514              		.loc 1 374 0
 515 001e 4A4A     		ldr	r2, .L13+4
 516 0020 494B     		ldr	r3, .L13+4
 517 0022 1B78     		ldrb	r3, [r3]
 518 0024 DBB2     		uxtb	r3, r3
 519 0026 43F00403 		orr	r3, r3, #4
 520 002a DBB2     		uxtb	r3, r3
 521 002c 1370     		strb	r3, [r2]
 375:Generated_Source\PSoC5/ADC.c **** 
 376:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 377:Generated_Source\PSoC5/ADC.c ****        enable PRES */
 378:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 522              		.loc 1 378 0
 523 002e 474A     		ldr	r2, .L13+8
 524 0030 464B     		ldr	r3, .L13+8
 525 0032 1B78     		ldrb	r3, [r3]
 526 0034 DBB2     		uxtb	r3, r3
 527 0036 43F00203 		orr	r3, r3, #2
 528 003a DBB2     		uxtb	r3, r3
 529 003c 1370     		strb	r3, [r2]
 379:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 530              		.loc 1 379 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 17


 531 003e 444A     		ldr	r2, .L13+12
 532 0040 434B     		ldr	r3, .L13+12
 533 0042 1B78     		ldrb	r3, [r3]
 534 0044 DBB2     		uxtb	r3, r3
 535 0046 43F00203 		orr	r3, r3, #2
 536 004a DBB2     		uxtb	r3, r3
 537 004c 1370     		strb	r3, [r2]
 380:Generated_Source\PSoC5/ADC.c **** 
 381:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 538              		.loc 1 381 0
 539 004e 414A     		ldr	r2, .L13+16
 540 0050 404B     		ldr	r3, .L13+16
 541 0052 1B78     		ldrb	r3, [r3]
 542 0054 DBB2     		uxtb	r3, r3
 543 0056 23F00303 		bic	r3, r3, #3
 544 005a DBB2     		uxtb	r3, r3
 545 005c 1370     		strb	r3, [r2]
 382:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 546              		.loc 1 382 0
 547 005e 3E4A     		ldr	r2, .L13+20
 548 0060 3D4B     		ldr	r3, .L13+20
 549 0062 1B78     		ldrb	r3, [r3]
 550 0064 DBB2     		uxtb	r3, r3
 551 0066 23F00803 		bic	r3, r3, #8
 552 006a DBB2     		uxtb	r3, r3
 553 006c 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/ADC.c **** 
 384:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds. */
 385:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 554              		.loc 1 385 0
 555 006e 0320     		movs	r0, #3
 556 0070 FFF7FEFF 		bl	CyDelayUs
 386:Generated_Source\PSoC5/ADC.c **** 
 387:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 388:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 557              		.loc 1 388 0
 558 0074 354A     		ldr	r2, .L13+8
 559 0076 354B     		ldr	r3, .L13+8
 560 0078 1B78     		ldrb	r3, [r3]
 561 007a DBB2     		uxtb	r3, r3
 562 007c 23F00203 		bic	r3, r3, #2
 563 0080 DBB2     		uxtb	r3, r3
 564 0082 1370     		strb	r3, [r2]
 389:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 565              		.loc 1 389 0
 566 0084 324A     		ldr	r2, .L13+12
 567 0086 324B     		ldr	r3, .L13+12
 568 0088 1B78     		ldrb	r3, [r3]
 569 008a DBB2     		uxtb	r3, r3
 570 008c 23F00203 		bic	r3, r3, #2
 571 0090 DBB2     		uxtb	r3, r3
 572 0092 1370     		strb	r3, [r2]
 390:Generated_Source\PSoC5/ADC.c **** 
 391:Generated_Source\PSoC5/ADC.c ****     /* Disable power to the ADC */
 392:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 573              		.loc 1 392 0
 574 0094 314A     		ldr	r2, .L13+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 18


 575 0096 314B     		ldr	r3, .L13+24
 576 0098 1B78     		ldrb	r3, [r3]
 577 009a DBB2     		uxtb	r3, r3
 578 009c 23F01003 		bic	r3, r3, #16
 579 00a0 DBB2     		uxtb	r3, r3
 580 00a2 1370     		strb	r3, [r2]
 393:Generated_Source\PSoC5/ADC.c **** 
 394:Generated_Source\PSoC5/ADC.c ****     /* Disable power to Decimator block */
 395:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 581              		.loc 1 395 0
 582 00a4 2D4A     		ldr	r2, .L13+24
 583 00a6 2D4B     		ldr	r3, .L13+24
 584 00a8 1B78     		ldrb	r3, [r3]
 585 00aa DBB2     		uxtb	r3, r3
 586 00ac 23F00103 		bic	r3, r3, #1
 587 00b0 DBB2     		uxtb	r3, r3
 588 00b2 1370     		strb	r3, [r2]
 396:Generated_Source\PSoC5/ADC.c **** 
 397:Generated_Source\PSoC5/ADC.c ****     /* Disable alternative active power to the ADC */
 398:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 589              		.loc 1 398 0
 590 00b4 2A4A     		ldr	r2, .L13+28
 591 00b6 2A4B     		ldr	r3, .L13+28
 592 00b8 1B78     		ldrb	r3, [r3]
 593 00ba DBB2     		uxtb	r3, r3
 594 00bc 23F00103 		bic	r3, r3, #1
 595 00c0 DBB2     		uxtb	r3, r3
 596 00c2 1370     		strb	r3, [r2]
 399:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 597              		.loc 1 399 0
 598 00c4 264A     		ldr	r2, .L13+28
 599 00c6 264B     		ldr	r3, .L13+28
 600 00c8 1B78     		ldrb	r3, [r3]
 601 00ca DBB2     		uxtb	r3, r3
 602 00cc 23F01003 		bic	r3, r3, #16
 603 00d0 DBB2     		uxtb	r3, r3
 604 00d2 1370     		strb	r3, [r2]
 400:Generated_Source\PSoC5/ADC.c **** 
 401:Generated_Source\PSoC5/ADC.c ****    /* Disable negative pumps for DSM  */
 402:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 605              		.loc 1 402 0
 606 00d4 234A     		ldr	r2, .L13+32
 607 00d6 234B     		ldr	r3, .L13+32
 608 00d8 1B78     		ldrb	r3, [r3]
 609 00da DBB2     		uxtb	r3, r3
 610 00dc 23F00603 		bic	r3, r3, #6
 611 00e0 DBB2     		uxtb	r3, r3
 612 00e2 1370     		strb	r3, [r2]
 403:Generated_Source\PSoC5/ADC.c **** 
 404:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 405:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 406:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 613              		.loc 1 406 0
 614 00e4 204A     		ldr	r2, .L13+36
 615 00e6 204B     		ldr	r3, .L13+36
 616 00e8 1B78     		ldrb	r3, [r3]
 617 00ea DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 19


 618 00ec 23F00103 		bic	r3, r3, #1
 619 00f0 DBB2     		uxtb	r3, r3
 620 00f2 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 621              		.loc 1 407 0
 622 00f4 1D4A     		ldr	r2, .L13+40
 623 00f6 1D4B     		ldr	r3, .L13+40
 624 00f8 1B78     		ldrb	r3, [r3]
 625 00fa DBB2     		uxtb	r3, r3
 626 00fc 23F00103 		bic	r3, r3, #1
 627 0100 DBB2     		uxtb	r3, r3
 628 0102 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 409:Generated_Source\PSoC5/ADC.c **** 
 410:Generated_Source\PSoC5/ADC.c ****     /* Disable Modulator Chopping */
 411:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 629              		.loc 1 411 0
 630 0104 1A4A     		ldr	r2, .L13+44
 631 0106 1A4B     		ldr	r3, .L13+44
 632 0108 1B78     		ldrb	r3, [r3]
 633 010a DBB2     		uxtb	r3, r3
 634 010c 23F00803 		bic	r3, r3, #8
 635 0110 DBB2     		uxtb	r3, r3
 636 0112 1370     		strb	r3, [r2]
 412:Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 413:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 637              		.loc 1 413 0
 638 0114 174A     		ldr	r2, .L13+48
 639 0116 174B     		ldr	r3, .L13+48
 640 0118 1B78     		ldrb	r3, [r3]
 641 011a DBB2     		uxtb	r3, r3
 642 011c 23F00203 		bic	r3, r3, #2
 643 0120 DBB2     		uxtb	r3, r3
 644 0122 1370     		strb	r3, [r2]
 414:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 645              		.loc 1 414 0
 646 0124 144A     		ldr	r2, .L13+52
 647 0126 144B     		ldr	r3, .L13+52
 648 0128 1B78     		ldrb	r3, [r3]
 649 012a DBB2     		uxtb	r3, r3
 650 012c 23F00203 		bic	r3, r3, #2
 651 0130 DBB2     		uxtb	r3, r3
 652 0132 1370     		strb	r3, [r2]
 415:Generated_Source\PSoC5/ADC.c ****     
 416:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 653              		.loc 1 416 0
 654 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 655 0136 1846     		mov	r0, r3
 656 0138 FFF7FEFF 		bl	CyExitCriticalSection
 417:Generated_Source\PSoC5/ADC.c **** }
 657              		.loc 1 417 0
 658 013c 00BF     		nop
 659 013e 0837     		adds	r7, r7, #8
 660              		.cfi_def_cfa_offset 8
 661 0140 BD46     		mov	sp, r7
 662              		.cfi_def_cfa_register 13
 663              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 20


 664 0142 80BD     		pop	{r7, pc}
 665              	.L14:
 666              		.align	2
 667              	.L13:
 668 0144 004E0040 		.word	1073761792
 669 0148 014E0040 		.word	1073761793
 670 014c F8460040 		.word	1073759992
 671 0150 F9460040 		.word	1073759993
 672 0154 91580040 		.word	1073764497
 673 0158 92580040 		.word	1073764498
 674 015c AA430040 		.word	1073759146
 675 0160 BA430040 		.word	1073759162
 676 0164 77580040 		.word	1073764471
 677 0168 A1430040 		.word	1073759137
 678 016c B1430040 		.word	1073759153
 679 0170 82580040 		.word	1073764482
 680 0174 A2430040 		.word	1073759138
 681 0178 B2430040 		.word	1073759154
 682              		.cfi_endproc
 683              	.LFE3:
 684              		.size	ADC_Stop, .-ADC_Stop
 685              		.section	.text.ADC_SetBufferGain,"ax",%progbits
 686              		.align	2
 687              		.global	ADC_SetBufferGain
 688              		.thumb
 689              		.thumb_func
 690              		.type	ADC_SetBufferGain, %function
 691              	ADC_SetBufferGain:
 692              	.LFB4:
 418:Generated_Source\PSoC5/ADC.c **** 
 419:Generated_Source\PSoC5/ADC.c **** 
 420:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 421:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetBufferGain
 422:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 423:Generated_Source\PSoC5/ADC.c **** *
 424:Generated_Source\PSoC5/ADC.c **** * Summary:
 425:Generated_Source\PSoC5/ADC.c **** *  Sets input buffer gain.
 426:Generated_Source\PSoC5/ADC.c **** *
 427:Generated_Source\PSoC5/ADC.c **** * Parameters:
 428:Generated_Source\PSoC5/ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 429:Generated_Source\PSoC5/ADC.c **** *
 430:Generated_Source\PSoC5/ADC.c **** * Return:
 431:Generated_Source\PSoC5/ADC.c **** *  None
 432:Generated_Source\PSoC5/ADC.c **** *
 433:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 434:Generated_Source\PSoC5/ADC.c **** void ADC_SetBufferGain(uint8 gain) 
 435:Generated_Source\PSoC5/ADC.c **** {
 693              		.loc 1 435 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 16
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 698 0000 80B4     		push	{r7}
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 85B0     		sub	sp, sp, #20
 702              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 21


 703 0004 00AF     		add	r7, sp, #0
 704              		.cfi_def_cfa_register 7
 705 0006 0346     		mov	r3, r0
 706 0008 FB71     		strb	r3, [r7, #7]
 436:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 437:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 707              		.loc 1 437 0
 708 000a 0B4B     		ldr	r3, .L16
 709 000c 1B78     		ldrb	r3, [r3]
 710 000e DBB2     		uxtb	r3, r3
 711 0010 23F00C03 		bic	r3, r3, #12
 712 0014 FB73     		strb	r3, [r7, #15]
 438:Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 713              		.loc 1 438 0
 714 0016 FB79     		ldrb	r3, [r7, #7]
 715 0018 9B00     		lsls	r3, r3, #2
 716 001a DBB2     		uxtb	r3, r3
 717 001c 03F00C03 		and	r3, r3, #12
 718 0020 DAB2     		uxtb	r2, r3
 719 0022 FB7B     		ldrb	r3, [r7, #15]
 720 0024 1343     		orrs	r3, r3, r2
 721 0026 FB73     		strb	r3, [r7, #15]
 439:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 722              		.loc 1 439 0
 723 0028 034A     		ldr	r2, .L16
 724 002a FB7B     		ldrb	r3, [r7, #15]
 725 002c 1370     		strb	r3, [r2]
 440:Generated_Source\PSoC5/ADC.c **** }
 726              		.loc 1 440 0
 727 002e 00BF     		nop
 728 0030 1437     		adds	r7, r7, #20
 729              		.cfi_def_cfa_offset 4
 730 0032 BD46     		mov	sp, r7
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
 733 0034 80BC     		pop	{r7}
 734              		.cfi_restore 7
 735              		.cfi_def_cfa_offset 0
 736 0036 7047     		bx	lr
 737              	.L17:
 738              		.align	2
 739              	.L16:
 740 0038 9B580040 		.word	1073764507
 741              		.cfi_endproc
 742              	.LFE4:
 743              		.size	ADC_SetBufferGain, .-ADC_SetBufferGain
 744              		.section	.text.ADC_SetCoherency,"ax",%progbits
 745              		.align	2
 746              		.global	ADC_SetCoherency
 747              		.thumb
 748              		.thumb_func
 749              		.type	ADC_SetCoherency, %function
 750              	ADC_SetCoherency:
 751              	.LFB5:
 441:Generated_Source\PSoC5/ADC.c **** 
 442:Generated_Source\PSoC5/ADC.c **** 
 443:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 22


 444:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetCoherency
 445:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 446:Generated_Source\PSoC5/ADC.c **** *
 447:Generated_Source\PSoC5/ADC.c **** * Summary:
 448:Generated_Source\PSoC5/ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 449:Generated_Source\PSoC5/ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 450:Generated_Source\PSoC5/ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 451:Generated_Source\PSoC5/ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 452:Generated_Source\PSoC5/ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 453:Generated_Source\PSoC5/ADC.c **** *  configuration for DMA data transfer.
 454:Generated_Source\PSoC5/ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 455:Generated_Source\PSoC5/ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 456:Generated_Source\PSoC5/ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 457:Generated_Source\PSoC5/ADC.c **** *  coherency can be set to any byte in the last word read.
 458:Generated_Source\PSoC5/ADC.c **** *
 459:Generated_Source\PSoC5/ADC.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 461:Generated_Source\PSoC5/ADC.c **** *           00-Coherency checking off
 462:Generated_Source\PSoC5/ADC.c **** *           01-low byte is key byte
 463:Generated_Source\PSoC5/ADC.c **** *           02-middle byte is the key byte
 464:Generated_Source\PSoC5/ADC.c **** *           03-high byte is the key byte
 465:Generated_Source\PSoC5/ADC.c **** *
 466:Generated_Source\PSoC5/ADC.c **** * Return:
 467:Generated_Source\PSoC5/ADC.c **** *  None
 468:Generated_Source\PSoC5/ADC.c **** *
 469:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 470:Generated_Source\PSoC5/ADC.c **** void ADC_SetCoherency(uint8 coherency) 
 471:Generated_Source\PSoC5/ADC.c **** {
 752              		.loc 1 471 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 16
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 80B4     		push	{r7}
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 7, -4
 760 0002 85B0     		sub	sp, sp, #20
 761              		.cfi_def_cfa_offset 24
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 764 0006 0346     		mov	r3, r0
 765 0008 FB71     		strb	r3, [r7, #7]
 472:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 473:Generated_Source\PSoC5/ADC.c **** 
 474:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 766              		.loc 1 474 0
 767 000a 0A4B     		ldr	r3, .L19
 768 000c 1B78     		ldrb	r3, [r3]
 769 000e DBB2     		uxtb	r3, r3
 770 0010 23F00303 		bic	r3, r3, #3
 771 0014 FB73     		strb	r3, [r7, #15]
 475:Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 772              		.loc 1 475 0
 773 0016 FB79     		ldrb	r3, [r7, #7]
 774 0018 03F00303 		and	r3, r3, #3
 775 001c DAB2     		uxtb	r2, r3
 776 001e FB7B     		ldrb	r3, [r7, #15]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 23


 777 0020 1343     		orrs	r3, r3, r2
 778 0022 FB73     		strb	r3, [r7, #15]
 476:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 779              		.loc 1 476 0
 780 0024 034A     		ldr	r2, .L19
 781 0026 FB7B     		ldrb	r3, [r7, #15]
 782 0028 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/ADC.c **** }
 783              		.loc 1 477 0
 784 002a 00BF     		nop
 785 002c 1437     		adds	r7, r7, #20
 786              		.cfi_def_cfa_offset 4
 787 002e BD46     		mov	sp, r7
 788              		.cfi_def_cfa_register 13
 789              		@ sp needed
 790 0030 80BC     		pop	{r7}
 791              		.cfi_restore 7
 792              		.cfi_def_cfa_offset 0
 793 0032 7047     		bx	lr
 794              	.L20:
 795              		.align	2
 796              	.L19:
 797 0034 144E0040 		.word	1073761812
 798              		.cfi_endproc
 799              	.LFE5:
 800              		.size	ADC_SetCoherency, .-ADC_SetCoherency
 801              		.global	__aeabi_ui2f
 802              		.global	__aeabi_fdiv
 803              		.global	__aeabi_fmul
 804              		.global	__aeabi_f2d
 805              		.global	__aeabi_dcmpgt
 806              		.global	__aeabi_f2uiz
 807              		.section	.text.ADC_SetGCOR,"ax",%progbits
 808              		.align	2
 809              		.global	ADC_SetGCOR
 810              		.thumb
 811              		.thumb_func
 812              		.type	ADC_SetGCOR, %function
 813              	ADC_SetGCOR:
 814              	.LFB6:
 478:Generated_Source\PSoC5/ADC.c **** 
 479:Generated_Source\PSoC5/ADC.c **** 
 480:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 481:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGCOR
 482:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 483:Generated_Source\PSoC5/ADC.c **** *
 484:Generated_Source\PSoC5/ADC.c **** * Summary:
 485:Generated_Source\PSoC5/ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 486:Generated_Source\PSoC5/ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 487:Generated_Source\PSoC5/ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 488:Generated_Source\PSoC5/ADC.c **** *  output registers. The numerical format for the GCOR value is:
 489:Generated_Source\PSoC5/ADC.c **** *  0x0000 -> 0.000
 490:Generated_Source\PSoC5/ADC.c **** *  0x8000 -> 1.000
 491:Generated_Source\PSoC5/ADC.c **** *  0xFFFF -> 1.99997
 492:Generated_Source\PSoC5/ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 493:Generated_Source\PSoC5/ADC.c **** *  gainAdjust and reloaded into the GCOR register.
 494:Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 24


 495:Generated_Source\PSoC5/ADC.c **** * Parameters:
 496:Generated_Source\PSoC5/ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 497:Generated_Source\PSoC5/ADC.c **** *
 498:Generated_Source\PSoC5/ADC.c **** * Return:
 499:Generated_Source\PSoC5/ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 500:Generated_Source\PSoC5/ADC.c **** *         1 - the correction value is outside GCOR value range of
 501:Generated_Source\PSoC5/ADC.c **** *             0.00 to 1.9999.
 502:Generated_Source\PSoC5/ADC.c **** *
 503:Generated_Source\PSoC5/ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 504:Generated_Source\PSoC5/ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 505:Generated_Source\PSoC5/ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 506:Generated_Source\PSoC5/ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 507:Generated_Source\PSoC5/ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 508:Generated_Source\PSoC5/ADC.c **** *
 509:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
 510:Generated_Source\PSoC5/ADC.c **** uint8 ADC_SetGCOR(float32 gainAdjust) 
 511:Generated_Source\PSoC5/ADC.c **** {
 815              		.loc 1 511 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 16
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819 0000 80B5     		push	{r7, lr}
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 84B0     		sub	sp, sp, #16
 824              		.cfi_def_cfa_offset 24
 825 0004 00AF     		add	r7, sp, #0
 826              		.cfi_def_cfa_register 7
 827 0006 7860     		str	r0, [r7, #4]	@ float
 512:Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 513:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 514:Generated_Source\PSoC5/ADC.c ****     float32 tmpValue;
 515:Generated_Source\PSoC5/ADC.c **** 
 516:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 828              		.loc 1 516 0
 829 0008 254B     		ldr	r3, .L28+8
 830 000a 1B78     		ldrb	r3, [r3]
 831 000c DBB2     		uxtb	r3, r3
 832 000e 013B     		subs	r3, r3, #1
 833 0010 244A     		ldr	r2, .L28+12
 834 0012 32F82330 		ldrh	r3, [r2, r3, lsl #2]	@ movhi
 835 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 517:Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 836              		.loc 1 517 0
 837 0018 BB89     		ldrh	r3, [r7, #12]
 838 001a 1846     		mov	r0, r3
 839 001c FFF7FEFF 		bl	__aeabi_ui2f
 840 0020 0346     		mov	r3, r0
 841 0022 4FF08E41 		mov	r1, #1191182336
 842 0026 1846     		mov	r0, r3
 843 0028 FFF7FEFF 		bl	__aeabi_fdiv
 844 002c 0346     		mov	r3, r0
 845 002e BB60     		str	r3, [r7, #8]	@ float
 518:Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 846              		.loc 1 518 0
 847 0030 7968     		ldr	r1, [r7, #4]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 25


 848 0032 B868     		ldr	r0, [r7, #8]	@ float
 849 0034 FFF7FEFF 		bl	__aeabi_fmul
 850 0038 0346     		mov	r3, r0
 851 003a BB60     		str	r3, [r7, #8]	@ float
 519:Generated_Source\PSoC5/ADC.c **** 
 520:Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 852              		.loc 1 520 0
 853 003c B868     		ldr	r0, [r7, #8]	@ float
 854 003e FFF7FEFF 		bl	__aeabi_f2d
 855 0042 15A3     		adr	r3, .L28
 856 0044 D3E90023 		ldrd	r2, [r3]
 857 0048 FFF7FEFF 		bl	__aeabi_dcmpgt
 858 004c 0346     		mov	r3, r0
 859 004e 002B     		cmp	r3, #0
 860 0050 02D0     		beq	.L27
 521:Generated_Source\PSoC5/ADC.c ****     {
 522:Generated_Source\PSoC5/ADC.c ****         status = 1u;
 861              		.loc 1 522 0
 862 0052 0123     		movs	r3, #1
 863 0054 FB73     		strb	r3, [r7, #15]
 864 0056 18E0     		b	.L24
 865              	.L27:
 523:Generated_Source\PSoC5/ADC.c ****     }
 524:Generated_Source\PSoC5/ADC.c ****     else
 525:Generated_Source\PSoC5/ADC.c ****     {
 526:Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 866              		.loc 1 526 0
 867 0058 4FF08E41 		mov	r1, #1191182336
 868 005c B868     		ldr	r0, [r7, #8]	@ float
 869 005e FFF7FEFF 		bl	__aeabi_fmul
 870 0062 0346     		mov	r3, r0
 871 0064 BB60     		str	r3, [r7, #8]	@ float
 527:Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 872              		.loc 1 527 0
 873 0066 B868     		ldr	r0, [r7, #8]	@ float
 874 0068 FFF7FEFF 		bl	__aeabi_f2uiz
 875 006c 0346     		mov	r3, r0
 876 006e BB81     		strh	r3, [r7, #12]	@ movhi
 528:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 877              		.loc 1 528 0
 878 0070 0D4A     		ldr	r2, .L28+16
 879 0072 BB89     		ldrh	r3, [r7, #12]	@ movhi
 880 0074 1380     		strh	r3, [r2]	@ movhi
 529:Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 530:Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 881              		.loc 1 530 0
 882 0076 0A4B     		ldr	r3, .L28+8
 883 0078 1B78     		ldrb	r3, [r3]
 884 007a DBB2     		uxtb	r3, r3
 885 007c 013B     		subs	r3, r3, #1
 886 007e 0949     		ldr	r1, .L28+12
 887 0080 BA89     		ldrh	r2, [r7, #12]	@ movhi
 888 0082 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 531:Generated_Source\PSoC5/ADC.c **** 
 532:Generated_Source\PSoC5/ADC.c ****         status = 0u;
 889              		.loc 1 532 0
 890 0086 0023     		movs	r3, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 26


 891 0088 FB73     		strb	r3, [r7, #15]
 892              	.L24:
 533:Generated_Source\PSoC5/ADC.c **** 
 534:Generated_Source\PSoC5/ADC.c ****     }
 535:Generated_Source\PSoC5/ADC.c ****     return(status);
 893              		.loc 1 535 0
 894 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 536:Generated_Source\PSoC5/ADC.c **** }
 895              		.loc 1 536 0
 896 008c 1846     		mov	r0, r3
 897 008e 1037     		adds	r7, r7, #16
 898              		.cfi_def_cfa_offset 8
 899 0090 BD46     		mov	sp, r7
 900              		.cfi_def_cfa_register 13
 901              		@ sp needed
 902 0092 80BD     		pop	{r7, pc}
 903              	.L29:
 904 0094 AFF30080 		.align	3
 905              	.L28:
 906 0098 8F537424 		.word	611603343
 907 009c 97FFFF3F 		.word	1073741719
 908 00a0 00000000 		.word	ADC_Config
 909 00a4 08000000 		.word	ADC_gcor
 910 00a8 0C4E0040 		.word	1073761804
 911              		.cfi_endproc
 912              	.LFE6:
 913              		.size	ADC_SetGCOR, .-ADC_SetGCOR
 914              		.section	.text.ADC_ReadGCOR,"ax",%progbits
 915              		.align	2
 916              		.global	ADC_ReadGCOR
 917              		.thumb
 918              		.thumb_func
 919              		.type	ADC_ReadGCOR, %function
 920              	ADC_ReadGCOR:
 921              	.LFB7:
 537:Generated_Source\PSoC5/ADC.c **** 
 538:Generated_Source\PSoC5/ADC.c **** 
 539:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 540:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_ReadGCOR
 541:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 542:Generated_Source\PSoC5/ADC.c **** *
 543:Generated_Source\PSoC5/ADC.c **** * Summary:
 544:Generated_Source\PSoC5/ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 545:Generated_Source\PSoC5/ADC.c **** *  GVAL register settings.
 546:Generated_Source\PSoC5/ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 547:Generated_Source\PSoC5/ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 548:Generated_Source\PSoC5/ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 549:Generated_Source\PSoC5/ADC.c **** *
 550:Generated_Source\PSoC5/ADC.c **** * Parameters:
 551:Generated_Source\PSoC5/ADC.c **** *  None
 552:Generated_Source\PSoC5/ADC.c **** *
 553:Generated_Source\PSoC5/ADC.c **** * Return:
 554:Generated_Source\PSoC5/ADC.c **** *  uint16:  Normalized GCOR value.
 555:Generated_Source\PSoC5/ADC.c **** *
 556:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 557:Generated_Source\PSoC5/ADC.c **** uint16 ADC_ReadGCOR(void) 
 558:Generated_Source\PSoC5/ADC.c **** {
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 27


 922              		.loc 1 558 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 8
 925              		@ frame_needed = 1, uses_anonymous_args = 0
 926              		@ link register save eliminated.
 927 0000 80B4     		push	{r7}
 928              		.cfi_def_cfa_offset 4
 929              		.cfi_offset 7, -4
 930 0002 83B0     		sub	sp, sp, #12
 931              		.cfi_def_cfa_offset 16
 932 0004 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 559:Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 560:Generated_Source\PSoC5/ADC.c ****     uint16 gcorValue;
 561:Generated_Source\PSoC5/ADC.c **** 
 562:Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 934              		.loc 1 562 0
 935 0006 0B4B     		ldr	r3, .L33
 936 0008 1B78     		ldrb	r3, [r3]
 937 000a 7B71     		strb	r3, [r7, #5]
 563:Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 938              		.loc 1 563 0
 939 000c 0A4B     		ldr	r3, .L33+4
 940 000e 1B88     		ldrh	r3, [r3]	@ movhi
 941 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 564:Generated_Source\PSoC5/ADC.c **** 
 565:Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
 942              		.loc 1 565 0
 943 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 944 0014 0E2B     		cmp	r3, #14
 945 0016 06D8     		bhi	.L31
 566:Generated_Source\PSoC5/ADC.c ****     {
 567:Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 946              		.loc 1 567 0
 947 0018 FA88     		ldrh	r2, [r7, #6]
 948 001a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 949 001c C3F10F03 		rsb	r3, r3, #15
 950 0020 02FA03F3 		lsl	r3, r2, r3
 951 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 952              	.L31:
 568:Generated_Source\PSoC5/ADC.c ****     }
 569:Generated_Source\PSoC5/ADC.c **** 
 570:Generated_Source\PSoC5/ADC.c ****     return gcorValue;
 953              		.loc 1 570 0
 954 0026 FB88     		ldrh	r3, [r7, #6]
 571:Generated_Source\PSoC5/ADC.c **** }
 955              		.loc 1 571 0
 956 0028 1846     		mov	r0, r3
 957 002a 0C37     		adds	r7, r7, #12
 958              		.cfi_def_cfa_offset 4
 959 002c BD46     		mov	sp, r7
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 002e 80BC     		pop	{r7}
 963              		.cfi_restore 7
 964              		.cfi_def_cfa_offset 0
 965 0030 7047     		bx	lr
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 28


 966              	.L34:
 967 0032 00BF     		.align	2
 968              	.L33:
 969 0034 0E4E0040 		.word	1073761806
 970 0038 0C4E0040 		.word	1073761804
 971              		.cfi_endproc
 972              	.LFE7:
 973              		.size	ADC_ReadGCOR, .-ADC_ReadGCOR
 974              		.section	.text.ADC_StartConvert,"ax",%progbits
 975              		.align	2
 976              		.global	ADC_StartConvert
 977              		.thumb
 978              		.thumb_func
 979              		.type	ADC_StartConvert, %function
 980              	ADC_StartConvert:
 981              	.LFB8:
 572:Generated_Source\PSoC5/ADC.c **** 
 573:Generated_Source\PSoC5/ADC.c **** 
 574:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 575:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StartConvert
 576:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 577:Generated_Source\PSoC5/ADC.c **** *
 578:Generated_Source\PSoC5/ADC.c **** * Summary:
 579:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 580:Generated_Source\PSoC5/ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 581:Generated_Source\PSoC5/ADC.c **** *  one of the other three conversion modes, the ADC will run
 582:Generated_Source\PSoC5/ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 583:Generated_Source\PSoC5/ADC.c **** *
 584:Generated_Source\PSoC5/ADC.c **** * Parameters:
 585:Generated_Source\PSoC5/ADC.c **** *  None
 586:Generated_Source\PSoC5/ADC.c **** *
 587:Generated_Source\PSoC5/ADC.c **** * Return:
 588:Generated_Source\PSoC5/ADC.c **** *  None
 589:Generated_Source\PSoC5/ADC.c **** *
 590:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 591:Generated_Source\PSoC5/ADC.c **** void ADC_StartConvert(void) 
 592:Generated_Source\PSoC5/ADC.c **** {
 982              		.loc 1 592 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986              		@ link register save eliminated.
 987 0000 80B4     		push	{r7}
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 7, -4
 990 0002 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 593:Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 594:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 992              		.loc 1 594 0
 993 0004 054A     		ldr	r2, .L36
 994 0006 054B     		ldr	r3, .L36
 995 0008 1B78     		ldrb	r3, [r3]
 996 000a DBB2     		uxtb	r3, r3
 997 000c 43F00103 		orr	r3, r3, #1
 998 0010 DBB2     		uxtb	r3, r3
 999 0012 1370     		strb	r3, [r2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 29


 595:Generated_Source\PSoC5/ADC.c **** }
 1000              		.loc 1 595 0
 1001 0014 00BF     		nop
 1002 0016 BD46     		mov	sp, r7
 1003              		.cfi_def_cfa_register 13
 1004              		@ sp needed
 1005 0018 80BC     		pop	{r7}
 1006              		.cfi_restore 7
 1007              		.cfi_def_cfa_offset 0
 1008 001a 7047     		bx	lr
 1009              	.L37:
 1010              		.align	2
 1011              	.L36:
 1012 001c 004E0040 		.word	1073761792
 1013              		.cfi_endproc
 1014              	.LFE8:
 1015              		.size	ADC_StartConvert, .-ADC_StartConvert
 1016              		.section	.text.ADC_StopConvert,"ax",%progbits
 1017              		.align	2
 1018              		.global	ADC_StopConvert
 1019              		.thumb
 1020              		.thumb_func
 1021              		.type	ADC_StopConvert, %function
 1022              	ADC_StopConvert:
 1023              	.LFB9:
 596:Generated_Source\PSoC5/ADC.c **** 
 597:Generated_Source\PSoC5/ADC.c **** 
 598:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 599:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StopConvert
 600:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 601:Generated_Source\PSoC5/ADC.c **** *
 602:Generated_Source\PSoC5/ADC.c **** * Summary:
 603:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 604:Generated_Source\PSoC5/ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 605:Generated_Source\PSoC5/ADC.c **** *  conversion.
 606:Generated_Source\PSoC5/ADC.c **** *
 607:Generated_Source\PSoC5/ADC.c **** * Parameters:
 608:Generated_Source\PSoC5/ADC.c **** *  None
 609:Generated_Source\PSoC5/ADC.c **** *
 610:Generated_Source\PSoC5/ADC.c **** * Return:
 611:Generated_Source\PSoC5/ADC.c **** *  None
 612:Generated_Source\PSoC5/ADC.c **** *
 613:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC5/ADC.c **** void ADC_StopConvert(void) 
 615:Generated_Source\PSoC5/ADC.c **** {
 1024              		.loc 1 615 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 1, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 1029 0000 80B4     		push	{r7}
 1030              		.cfi_def_cfa_offset 4
 1031              		.cfi_offset 7, -4
 1032 0002 00AF     		add	r7, sp, #0
 1033              		.cfi_def_cfa_register 7
 616:Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 617:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 30


 1034              		.loc 1 617 0
 1035 0004 054A     		ldr	r2, .L39
 1036 0006 054B     		ldr	r3, .L39
 1037 0008 1B78     		ldrb	r3, [r3]
 1038 000a DBB2     		uxtb	r3, r3
 1039 000c 23F00103 		bic	r3, r3, #1
 1040 0010 DBB2     		uxtb	r3, r3
 1041 0012 1370     		strb	r3, [r2]
 618:Generated_Source\PSoC5/ADC.c **** }
 1042              		.loc 1 618 0
 1043 0014 00BF     		nop
 1044 0016 BD46     		mov	sp, r7
 1045              		.cfi_def_cfa_register 13
 1046              		@ sp needed
 1047 0018 80BC     		pop	{r7}
 1048              		.cfi_restore 7
 1049              		.cfi_def_cfa_offset 0
 1050 001a 7047     		bx	lr
 1051              	.L40:
 1052              		.align	2
 1053              	.L39:
 1054 001c 004E0040 		.word	1073761792
 1055              		.cfi_endproc
 1056              	.LFE9:
 1057              		.size	ADC_StopConvert, .-ADC_StopConvert
 1058              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 1059              		.align	2
 1060              		.global	ADC_IsEndConversion
 1061              		.thumb
 1062              		.thumb_func
 1063              		.type	ADC_IsEndConversion, %function
 1064              	ADC_IsEndConversion:
 1065              	.LFB10:
 619:Generated_Source\PSoC5/ADC.c **** 
 620:Generated_Source\PSoC5/ADC.c **** 
 621:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
 623:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC5/ADC.c **** *
 625:Generated_Source\PSoC5/ADC.c **** * Summary:
 626:Generated_Source\PSoC5/ADC.c **** *  Checks the status that the most recently started conversion has completed.
 627:Generated_Source\PSoC5/ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 628:Generated_Source\PSoC5/ADC.c **** *  ADC_GetResult32() API.
 629:Generated_Source\PSoC5/ADC.c **** *  This function provides the programmer with two options. In one mode this 
 630:Generated_Source\PSoC5/ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 631:Generated_Source\PSoC5/ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 632:Generated_Source\PSoC5/ADC.c **** *
 633:Generated_Source\PSoC5/ADC.c **** * Parameters:
 634:Generated_Source\PSoC5/ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 635:Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS -   Immediately returns conversion result
 636:Generated_Source\PSoC5/ADC.c **** *                                      status.
 637:Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 638:Generated_Source\PSoC5/ADC.c **** *                                      is complete.
 639:Generated_Source\PSoC5/ADC.c **** *
 640:Generated_Source\PSoC5/ADC.c **** * Return:
 641:Generated_Source\PSoC5/ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 642:Generated_Source\PSoC5/ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 31


 643:Generated_Source\PSoC5/ADC.c **** *
 644:Generated_Source\PSoC5/ADC.c **** * Global variables:
 645:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Used to check whether conversion is complete
 646:Generated_Source\PSoC5/ADC.c **** *  or not for single sample mode with resolution is above 16
 647:Generated_Source\PSoC5/ADC.c **** *
 648:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 649:Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode) 
 650:Generated_Source\PSoC5/ADC.c **** {
 1066              		.loc 1 650 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 16
 1069              		@ frame_needed = 1, uses_anonymous_args = 0
 1070              		@ link register save eliminated.
 1071 0000 80B4     		push	{r7}
 1072              		.cfi_def_cfa_offset 4
 1073              		.cfi_offset 7, -4
 1074 0002 85B0     		sub	sp, sp, #20
 1075              		.cfi_def_cfa_offset 24
 1076 0004 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 1078 0006 0346     		mov	r3, r0
 1079 0008 FB71     		strb	r3, [r7, #7]
 1080              	.L45:
 651:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 652:Generated_Source\PSoC5/ADC.c **** 
 653:Generated_Source\PSoC5/ADC.c ****     do
 654:Generated_Source\PSoC5/ADC.c ****     {
 655:Generated_Source\PSoC5/ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 656:Generated_Source\PSoC5/ADC.c ****         *   resolution above 16 bit
 657:Generated_Source\PSoC5/ADC.c ****         */
 658:Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 1081              		.loc 1 658 0
 1082 000a 0D4B     		ldr	r3, .L47
 1083 000c 1B78     		ldrb	r3, [r3]
 1084 000e DBB2     		uxtb	r3, r3
 1085 0010 002B     		cmp	r3, #0
 1086 0012 03D0     		beq	.L42
 659:Generated_Source\PSoC5/ADC.c ****         {
 660:Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 1087              		.loc 1 660 0
 1088 0014 0B4B     		ldr	r3, .L47+4
 1089 0016 1B78     		ldrb	r3, [r3]
 1090 0018 FB73     		strb	r3, [r7, #15]
 1091 001a 05E0     		b	.L43
 1092              	.L42:
 661:Generated_Source\PSoC5/ADC.c ****         }
 662:Generated_Source\PSoC5/ADC.c ****         else
 663:Generated_Source\PSoC5/ADC.c ****         {
 664:Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
 1093              		.loc 1 664 0
 1094 001c 0A4B     		ldr	r3, .L47+8
 1095 001e 1B78     		ldrb	r3, [r3]
 1096 0020 DBB2     		uxtb	r3, r3
 1097 0022 03F00103 		and	r3, r3, #1
 1098 0026 FB73     		strb	r3, [r7, #15]
 1099              	.L43:
 665:Generated_Source\PSoC5/ADC.c ****         }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 32


 666:Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 1100              		.loc 1 666 0
 1101 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1102 002a 012B     		cmp	r3, #1
 1103 002c 02D0     		beq	.L44
 1104              		.loc 1 666 0 is_stmt 0 discriminator 1
 1105 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1106 0030 002B     		cmp	r3, #0
 1107 0032 EAD0     		beq	.L45
 1108              	.L44:
 667:Generated_Source\PSoC5/ADC.c **** 
 668:Generated_Source\PSoC5/ADC.c ****     return(status);
 1109              		.loc 1 668 0 is_stmt 1
 1110 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 669:Generated_Source\PSoC5/ADC.c **** }
 1111              		.loc 1 669 0
 1112 0036 1846     		mov	r0, r3
 1113 0038 1437     		adds	r7, r7, #20
 1114              		.cfi_def_cfa_offset 4
 1115 003a BD46     		mov	sp, r7
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 003c 80BC     		pop	{r7}
 1119              		.cfi_restore 7
 1120              		.cfi_def_cfa_offset 0
 1121 003e 7047     		bx	lr
 1122              	.L48:
 1123              		.align	2
 1124              	.L47:
 1125 0040 00000000 		.word	ADC_stopConversion
 1126 0044 00000000 		.word	ADC_convDone
 1127 0048 014E0040 		.word	1073761793
 1128              		.cfi_endproc
 1129              	.LFE10:
 1130              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 1131              		.section	.text.ADC_GetResult8,"ax",%progbits
 1132              		.align	2
 1133              		.global	ADC_GetResult8
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	ADC_GetResult8, %function
 1137              	ADC_GetResult8:
 1138              	.LFB11:
 670:Generated_Source\PSoC5/ADC.c **** 
 671:Generated_Source\PSoC5/ADC.c **** 
 672:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 673:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 674:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 675:Generated_Source\PSoC5/ADC.c **** *
 676:Generated_Source\PSoC5/ADC.c **** * Summary:
 677:Generated_Source\PSoC5/ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 678:Generated_Source\PSoC5/ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 679:Generated_Source\PSoC5/ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 680:Generated_Source\PSoC5/ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 681:Generated_Source\PSoC5/ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 682:Generated_Source\PSoC5/ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 683:Generated_Source\PSoC5/ADC.c **** *  maximum positive value is 255.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 33


 684:Generated_Source\PSoC5/ADC.c **** *
 685:Generated_Source\PSoC5/ADC.c **** * Parameters:
 686:Generated_Source\PSoC5/ADC.c **** *  None
 687:Generated_Source\PSoC5/ADC.c **** *
 688:Generated_Source\PSoC5/ADC.c **** * Return:
 689:Generated_Source\PSoC5/ADC.c **** *  int8: The LSB of the last ADC conversion.
 690:Generated_Source\PSoC5/ADC.c **** *
 691:Generated_Source\PSoC5/ADC.c **** * Global variables:
 692:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 693:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 694:Generated_Source\PSoC5/ADC.c **** *
 695:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 696:Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void ) 
 697:Generated_Source\PSoC5/ADC.c **** {
 1139              		.loc 1 697 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 8
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 1144 0000 80B4     		push	{r7}
 1145              		.cfi_def_cfa_offset 4
 1146              		.cfi_offset 7, -4
 1147 0002 83B0     		sub	sp, sp, #12
 1148              		.cfi_def_cfa_offset 16
 1149 0004 00AF     		add	r7, sp, #0
 1150              		.cfi_def_cfa_register 7
 698:Generated_Source\PSoC5/ADC.c ****     int8 result;
 699:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 700:Generated_Source\PSoC5/ADC.c **** 
 701:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 702:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1151              		.loc 1 702 0
 1152 0006 124B     		ldr	r3, .L54
 1153 0008 1B78     		ldrb	r3, [r3]
 1154 000a DBB2     		uxtb	r3, r3
 1155 000c 03F00303 		and	r3, r3, #3
 1156 0010 FB71     		strb	r3, [r7, #7]
 703:Generated_Source\PSoC5/ADC.c **** 
 704:Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 1157              		.loc 1 704 0
 1158 0012 104B     		ldr	r3, .L54+4
 1159 0014 1B78     		ldrb	r3, [r3]
 1160 0016 DBB2     		uxtb	r3, r3
 1161 0018 BB71     		strb	r3, [r7, #6]
 705:Generated_Source\PSoC5/ADC.c **** 
 706:Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 1162              		.loc 1 706 0
 1163 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1164 001c 022B     		cmp	r3, #2
 1165 001e 02D1     		bne	.L50
 707:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 708:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 1166              		.loc 1 708 0
 1167 0020 0D4B     		ldr	r3, .L54+8
 1168 0022 1B78     		ldrb	r3, [r3]
 1169 0024 04E0     		b	.L51
 1170              	.L50:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 34


 709:Generated_Source\PSoC5/ADC.c ****     }
 710:Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1171              		.loc 1 710 0
 1172 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1173 0028 032B     		cmp	r3, #3
 1174 002a 01D1     		bne	.L51
 711:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 712:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 1175              		.loc 1 712 0
 1176 002c 0B4B     		ldr	r3, .L54+12
 1177 002e 1B78     		ldrb	r3, [r3]
 1178              	.L51:
 713:Generated_Source\PSoC5/ADC.c ****     }
 714:Generated_Source\PSoC5/ADC.c ****     else /*No action required for other coherency */
 715:Generated_Source\PSoC5/ADC.c ****     {
 716:Generated_Source\PSoC5/ADC.c ****     }
 717:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 718:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1179              		.loc 1 718 0
 1180 0030 0B4B     		ldr	r3, .L54+16
 1181 0032 1B78     		ldrb	r3, [r3]
 1182 0034 DBB2     		uxtb	r3, r3
 1183 0036 002B     		cmp	r3, #0
 1184 0038 02D0     		beq	.L52
 719:Generated_Source\PSoC5/ADC.c ****     {
 720:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1185              		.loc 1 720 0
 1186 003a 0A4B     		ldr	r3, .L54+20
 1187 003c 0022     		movs	r2, #0
 1188 003e 1A70     		strb	r2, [r3]
 1189              	.L52:
 721:Generated_Source\PSoC5/ADC.c ****     }
 722:Generated_Source\PSoC5/ADC.c ****     return (result);
 1190              		.loc 1 722 0
 1191 0040 97F90630 		ldrsb	r3, [r7, #6]
 723:Generated_Source\PSoC5/ADC.c **** }
 1192              		.loc 1 723 0
 1193 0044 1846     		mov	r0, r3
 1194 0046 0C37     		adds	r7, r7, #12
 1195              		.cfi_def_cfa_offset 4
 1196 0048 BD46     		mov	sp, r7
 1197              		.cfi_def_cfa_register 13
 1198              		@ sp needed
 1199 004a 80BC     		pop	{r7}
 1200              		.cfi_restore 7
 1201              		.cfi_def_cfa_offset 0
 1202 004c 7047     		bx	lr
 1203              	.L55:
 1204 004e 00BF     		.align	2
 1205              	.L54:
 1206 0050 144E0040 		.word	1073761812
 1207 0054 104E0040 		.word	1073761808
 1208 0058 114E0040 		.word	1073761809
 1209 005c 124E0040 		.word	1073761810
 1210 0060 00000000 		.word	ADC_stopConversion
 1211 0064 00000000 		.word	ADC_convDone
 1212              		.cfi_endproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 35


 1213              	.LFE11:
 1214              		.size	ADC_GetResult8, .-ADC_GetResult8
 1215              		.section	.text.ADC_GetResult16,"ax",%progbits
 1216              		.align	2
 1217              		.global	ADC_GetResult16
 1218              		.thumb
 1219              		.thumb_func
 1220              		.type	ADC_GetResult16, %function
 1221              	ADC_GetResult16:
 1222              	.LFB12:
 724:Generated_Source\PSoC5/ADC.c **** 
 725:Generated_Source\PSoC5/ADC.c **** 
 726:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 727:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 728:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 729:Generated_Source\PSoC5/ADC.c **** *
 730:Generated_Source\PSoC5/ADC.c **** * Summary:
 731:Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 732:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 733:Generated_Source\PSoC5/ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 734:Generated_Source\PSoC5/ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 735:Generated_Source\PSoC5/ADC.c **** *  function should be used instead. This function returns only signed
 736:Generated_Source\PSoC5/ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 737:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 738:Generated_Source\PSoC5/ADC.c **** *
 739:Generated_Source\PSoC5/ADC.c **** * Parameters:
 740:Generated_Source\PSoC5/ADC.c **** *   void
 741:Generated_Source\PSoC5/ADC.c **** *
 742:Generated_Source\PSoC5/ADC.c **** * Return:
 743:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
 744:Generated_Source\PSoC5/ADC.c **** *
 745:Generated_Source\PSoC5/ADC.c **** * Global variables:
 746:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 747:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 748:Generated_Source\PSoC5/ADC.c **** *
 749:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 750:Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16(void) 
 751:Generated_Source\PSoC5/ADC.c **** {
 1223              		.loc 1 751 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 8
 1226              		@ frame_needed = 1, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
 1228 0000 80B4     		push	{r7}
 1229              		.cfi_def_cfa_offset 4
 1230              		.cfi_offset 7, -4
 1231 0002 83B0     		sub	sp, sp, #12
 1232              		.cfi_def_cfa_offset 16
 1233 0004 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 752:Generated_Source\PSoC5/ADC.c ****     uint16 result;
 753:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 754:Generated_Source\PSoC5/ADC.c **** 
 755:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 756:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1235              		.loc 1 756 0
 1236 0006 174B     		ldr	r3, .L61
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 36


 1237 0008 1B78     		ldrb	r3, [r3]
 1238 000a DBB2     		uxtb	r3, r3
 1239 000c 03F00303 		and	r3, r3, #3
 1240 0010 7B71     		strb	r3, [r7, #5]
 757:Generated_Source\PSoC5/ADC.c **** 
 758:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1241              		.loc 1 758 0
 1242 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1243 0014 012B     		cmp	r3, #1
 1244 0016 03D8     		bhi	.L57
 759:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 760:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 761:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPM_REG;
 762:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 763:Generated_Source\PSoC5/ADC.c ****         #else
 764:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1245              		.loc 1 764 0
 1246 0018 134B     		ldr	r3, .L61+4
 1247 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1248 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1249 001e 11E0     		b	.L58
 1250              	.L57:
 765:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 766:Generated_Source\PSoC5/ADC.c ****     }
 767:Generated_Source\PSoC5/ADC.c ****     else /* MID or HIGH */
 768:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 769:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 770:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 771:Generated_Source\PSoC5/ADC.c ****         #else
 772:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
 1251              		.loc 1 772 0
 1252 0020 114B     		ldr	r3, .L61+4
 1253 0022 1B78     		ldrb	r3, [r3]
 1254 0024 DBB2     		uxtb	r3, r3
 1255 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 773:Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 1256              		.loc 1 773 0
 1257 0028 104B     		ldr	r3, .L61+8
 1258 002a 1B78     		ldrb	r3, [r3]
 1259 002c DBB2     		uxtb	r3, r3
 1260 002e 9BB2     		uxth	r3, r3
 1261 0030 1B02     		lsls	r3, r3, #8
 1262 0032 9AB2     		uxth	r2, r3
 1263 0034 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1264 0036 1343     		orrs	r3, r3, r2
 1265 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 774:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 775:Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1266              		.loc 1 775 0
 1267 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1268 003c 032B     		cmp	r3, #3
 1269 003e 01D1     		bne	.L58
 776:Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 777:Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 1270              		.loc 1 777 0
 1271 0040 0B4B     		ldr	r3, .L61+12
 1272 0042 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 37


 1273              	.L58:
 778:Generated_Source\PSoC5/ADC.c ****         }
 779:Generated_Source\PSoC5/ADC.c ****     }
 780:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 781:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1274              		.loc 1 781 0
 1275 0044 0B4B     		ldr	r3, .L61+16
 1276 0046 1B78     		ldrb	r3, [r3]
 1277 0048 DBB2     		uxtb	r3, r3
 1278 004a 002B     		cmp	r3, #0
 1279 004c 02D0     		beq	.L59
 782:Generated_Source\PSoC5/ADC.c ****     {
 783:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1280              		.loc 1 783 0
 1281 004e 0A4B     		ldr	r3, .L61+20
 1282 0050 0022     		movs	r2, #0
 1283 0052 1A70     		strb	r2, [r3]
 1284              	.L59:
 784:Generated_Source\PSoC5/ADC.c ****     }
 785:Generated_Source\PSoC5/ADC.c **** 
 786:Generated_Source\PSoC5/ADC.c ****     return ((int16)result);
 1285              		.loc 1 786 0
 1286 0054 B7F90630 		ldrsh	r3, [r7, #6]
 787:Generated_Source\PSoC5/ADC.c **** }
 1287              		.loc 1 787 0
 1288 0058 1846     		mov	r0, r3
 1289 005a 0C37     		adds	r7, r7, #12
 1290              		.cfi_def_cfa_offset 4
 1291 005c BD46     		mov	sp, r7
 1292              		.cfi_def_cfa_register 13
 1293              		@ sp needed
 1294 005e 80BC     		pop	{r7}
 1295              		.cfi_restore 7
 1296              		.cfi_def_cfa_offset 0
 1297 0060 7047     		bx	lr
 1298              	.L62:
 1299 0062 00BF     		.align	2
 1300              	.L61:
 1301 0064 144E0040 		.word	1073761812
 1302 0068 104E0040 		.word	1073761808
 1303 006c 114E0040 		.word	1073761809
 1304 0070 124E0040 		.word	1073761810
 1305 0074 00000000 		.word	ADC_stopConversion
 1306 0078 00000000 		.word	ADC_convDone
 1307              		.cfi_endproc
 1308              	.LFE12:
 1309              		.size	ADC_GetResult16, .-ADC_GetResult16
 1310              		.section	.text.ADC_GetResult32,"ax",%progbits
 1311              		.align	2
 1312              		.global	ADC_GetResult32
 1313              		.thumb
 1314              		.thumb_func
 1315              		.type	ADC_GetResult32, %function
 1316              	ADC_GetResult32:
 1317              	.LFB13:
 788:Generated_Source\PSoC5/ADC.c **** 
 789:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 38


 790:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 791:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult32
 792:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 793:Generated_Source\PSoC5/ADC.c **** *
 794:Generated_Source\PSoC5/ADC.c **** * Summary:
 795:Generated_Source\PSoC5/ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 796:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 20 bits.
 797:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 798:Generated_Source\PSoC5/ADC.c **** *
 799:Generated_Source\PSoC5/ADC.c **** * Parameters:
 800:Generated_Source\PSoC5/ADC.c **** *  None
 801:Generated_Source\PSoC5/ADC.c **** *
 802:Generated_Source\PSoC5/ADC.c **** * Return:
 803:Generated_Source\PSoC5/ADC.c **** *  int32: Result of the last ADC conversion.
 804:Generated_Source\PSoC5/ADC.c **** *
 805:Generated_Source\PSoC5/ADC.c **** * Global variables:
 806:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 807:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 808:Generated_Source\PSoC5/ADC.c **** *
 809:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 810:Generated_Source\PSoC5/ADC.c **** int32 ADC_GetResult32(void) 
 811:Generated_Source\PSoC5/ADC.c **** {
 1318              		.loc 1 811 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 8
 1321              		@ frame_needed = 1, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323 0000 80B4     		push	{r7}
 1324              		.cfi_def_cfa_offset 4
 1325              		.cfi_offset 7, -4
 1326 0002 83B0     		sub	sp, sp, #12
 1327              		.cfi_def_cfa_offset 16
 1328 0004 00AF     		add	r7, sp, #0
 1329              		.cfi_def_cfa_register 7
 812:Generated_Source\PSoC5/ADC.c ****     uint32 result;
 813:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 814:Generated_Source\PSoC5/ADC.c ****     #if (CY_PSOC3)
 815:Generated_Source\PSoC5/ADC.c **** 	    uint16 tmp;
 816:Generated_Source\PSoC5/ADC.c ****     #endif /* CY_PSOC3 */
 817:Generated_Source\PSoC5/ADC.c **** 
 818:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 819:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1330              		.loc 1 819 0
 1331 0006 224B     		ldr	r3, .L69
 1332 0008 1B78     		ldrb	r3, [r3]
 1333 000a DBB2     		uxtb	r3, r3
 1334 000c 03F00303 		and	r3, r3, #3
 1335 0010 FB70     		strb	r3, [r7, #3]
 820:Generated_Source\PSoC5/ADC.c **** 
 821:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1336              		.loc 1 821 0
 1337 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1338 0014 012B     		cmp	r3, #1
 1339 0016 0BD8     		bhi	.L64
 822:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 823:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 824:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 39


 825:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 826:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 827:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 828:Generated_Source\PSoC5/ADC.c ****             }
 829:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMPM_REG;
 830:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 831:Generated_Source\PSoC5/ADC.c ****         #else
 832:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1340              		.loc 1 832 0
 1341 0018 1E4B     		ldr	r3, .L69+4
 1342 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1343 001c 9BB2     		uxth	r3, r3
 1344 001e 7B60     		str	r3, [r7, #4]
 833:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1345              		.loc 1 833 0
 1346 0020 7B68     		ldr	r3, [r7, #4]
 1347 0022 1B04     		lsls	r3, r3, #16
 1348 0024 1C4A     		ldr	r2, .L69+8
 1349 0026 1288     		ldrh	r2, [r2]	@ movhi
 1350 0028 92B2     		uxth	r2, r2
 1351 002a 1343     		orrs	r3, r3, r2
 1352 002c 7B60     		str	r3, [r7, #4]
 1353 002e 20E0     		b	.L65
 1354              	.L64:
 834:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 835:Generated_Source\PSoC5/ADC.c ****     }
 836:Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
 1355              		.loc 1 836 0
 1356 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1357 0032 022B     		cmp	r3, #2
 1358 0034 12D1     		bne	.L66
 837:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 838:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 839:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 840:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 841:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 842:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 843:Generated_Source\PSoC5/ADC.c ****             }
 844:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 845:Generated_Source\PSoC5/ADC.c ****         #else
 846:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1359              		.loc 1 846 0
 1360 0036 174B     		ldr	r3, .L69+4
 1361 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1362 003a 9BB2     		uxth	r3, r3
 1363 003c 7B60     		str	r3, [r7, #4]
 847:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 1364              		.loc 1 847 0
 1365 003e 7B68     		ldr	r3, [r7, #4]
 1366 0040 1B04     		lsls	r3, r3, #16
 1367 0042 154A     		ldr	r2, .L69+8
 1368 0044 1278     		ldrb	r2, [r2]
 1369 0046 D2B2     		uxtb	r2, r2
 1370 0048 1343     		orrs	r3, r3, r2
 1371 004a 7B60     		str	r3, [r7, #4]
 848:Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 1372              		.loc 1 848 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 40


 1373 004c 134B     		ldr	r3, .L69+12
 1374 004e 1B78     		ldrb	r3, [r3]
 1375 0050 DBB2     		uxtb	r3, r3
 1376 0052 1B02     		lsls	r3, r3, #8
 1377 0054 7A68     		ldr	r2, [r7, #4]
 1378 0056 1343     		orrs	r3, r3, r2
 1379 0058 7B60     		str	r3, [r7, #4]
 1380 005a 0AE0     		b	.L65
 1381              	.L66:
 849:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 850:Generated_Source\PSoC5/ADC.c ****     }
 851:Generated_Source\PSoC5/ADC.c ****     else /*ADC_DEC_SAMP_KEY_HIGH */
 852:Generated_Source\PSoC5/ADC.c ****     {
 853:Generated_Source\PSoC5/ADC.c ****         /* Read MSB byte at the end */
 854:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 855:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 856:Generated_Source\PSoC5/ADC.c **** 			tmp = ADC_DEC_SAMPH_REG;
 857:Generated_Source\PSoC5/ADC.c ****             if((tmp & 0x80u) != 0u)
 858:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 859:Generated_Source\PSoC5/ADC.c ****                 tmp |= 0xFF00u;
 860:Generated_Source\PSoC5/ADC.c ****             }
 861:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)tmp << 16u;
 862:Generated_Source\PSoC5/ADC.c ****         #else
 863:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 1382              		.loc 1 863 0
 1383 005c 0E4B     		ldr	r3, .L69+8
 1384 005e 1B88     		ldrh	r3, [r3]	@ movhi
 1385 0060 9BB2     		uxth	r3, r3
 1386 0062 7B60     		str	r3, [r7, #4]
 864:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 1387              		.loc 1 864 0
 1388 0064 0B4B     		ldr	r3, .L69+4
 1389 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1390 0068 9BB2     		uxth	r3, r3
 1391 006a 1B04     		lsls	r3, r3, #16
 1392 006c 7A68     		ldr	r2, [r7, #4]
 1393 006e 1343     		orrs	r3, r3, r2
 1394 0070 7B60     		str	r3, [r7, #4]
 1395              	.L65:
 865:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 866:Generated_Source\PSoC5/ADC.c ****     }
 867:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 868:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1396              		.loc 1 868 0
 1397 0072 0B4B     		ldr	r3, .L69+16
 1398 0074 1B78     		ldrb	r3, [r3]
 1399 0076 DBB2     		uxtb	r3, r3
 1400 0078 002B     		cmp	r3, #0
 1401 007a 02D0     		beq	.L67
 869:Generated_Source\PSoC5/ADC.c ****     {
 870:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1402              		.loc 1 870 0
 1403 007c 094B     		ldr	r3, .L69+20
 1404 007e 0022     		movs	r2, #0
 1405 0080 1A70     		strb	r2, [r3]
 1406              	.L67:
 871:Generated_Source\PSoC5/ADC.c ****     }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 41


 872:Generated_Source\PSoC5/ADC.c **** 
 873:Generated_Source\PSoC5/ADC.c ****     return ((int32)result);
 1407              		.loc 1 873 0
 1408 0082 7B68     		ldr	r3, [r7, #4]
 874:Generated_Source\PSoC5/ADC.c **** }
 1409              		.loc 1 874 0
 1410 0084 1846     		mov	r0, r3
 1411 0086 0C37     		adds	r7, r7, #12
 1412              		.cfi_def_cfa_offset 4
 1413 0088 BD46     		mov	sp, r7
 1414              		.cfi_def_cfa_register 13
 1415              		@ sp needed
 1416 008a 80BC     		pop	{r7}
 1417              		.cfi_restore 7
 1418              		.cfi_def_cfa_offset 0
 1419 008c 7047     		bx	lr
 1420              	.L70:
 1421 008e 00BF     		.align	2
 1422              	.L69:
 1423 0090 144E0040 		.word	1073761812
 1424 0094 124E0040 		.word	1073761810
 1425 0098 104E0040 		.word	1073761808
 1426 009c 114E0040 		.word	1073761809
 1427 00a0 00000000 		.word	ADC_stopConversion
 1428 00a4 00000000 		.word	ADC_convDone
 1429              		.cfi_endproc
 1430              	.LFE13:
 1431              		.size	ADC_GetResult32, .-ADC_GetResult32
 1432              		.section	.text.ADC_SetOffset,"ax",%progbits
 1433              		.align	2
 1434              		.global	ADC_SetOffset
 1435              		.thumb
 1436              		.thumb_func
 1437              		.type	ADC_SetOffset, %function
 1438              	ADC_SetOffset:
 1439              	.LFB14:
 875:Generated_Source\PSoC5/ADC.c **** 
 876:Generated_Source\PSoC5/ADC.c **** 
 877:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 878:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 879:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 880:Generated_Source\PSoC5/ADC.c **** *
 881:Generated_Source\PSoC5/ADC.c **** * Summary:
 882:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 883:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 884:Generated_Source\PSoC5/ADC.c **** *  given reading before calculating the voltage conversion.
 885:Generated_Source\PSoC5/ADC.c **** *
 886:Generated_Source\PSoC5/ADC.c **** * Parameters:
 887:Generated_Source\PSoC5/ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 888:Generated_Source\PSoC5/ADC.c **** *          connected to the same input voltage.
 889:Generated_Source\PSoC5/ADC.c **** *
 890:Generated_Source\PSoC5/ADC.c **** * Return:
 891:Generated_Source\PSoC5/ADC.c **** *  None
 892:Generated_Source\PSoC5/ADC.c **** *
 893:Generated_Source\PSoC5/ADC.c **** * Global variables:
 894:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset. This
 895:Generated_Source\PSoC5/ADC.c **** *  variable is used for offset calibration purpose.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 42


 896:Generated_Source\PSoC5/ADC.c **** *
 897:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 898:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 899:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 900:Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 901:Generated_Source\PSoC5/ADC.c **** *
 902:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 903:Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int32 offset) 
 904:Generated_Source\PSoC5/ADC.c **** {
 1440              		.loc 1 904 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 8
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
 1445 0000 80B4     		push	{r7}
 1446              		.cfi_def_cfa_offset 4
 1447              		.cfi_offset 7, -4
 1448 0002 83B0     		sub	sp, sp, #12
 1449              		.cfi_def_cfa_offset 16
 1450 0004 00AF     		add	r7, sp, #0
 1451              		.cfi_def_cfa_register 7
 1452 0006 7860     		str	r0, [r7, #4]
 905:Generated_Source\PSoC5/ADC.c **** 
 906:Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 1453              		.loc 1 906 0
 1454 0008 034A     		ldr	r2, .L72
 1455 000a 7B68     		ldr	r3, [r7, #4]
 1456 000c 1360     		str	r3, [r2]
 907:Generated_Source\PSoC5/ADC.c **** }
 1457              		.loc 1 907 0
 1458 000e 00BF     		nop
 1459 0010 0C37     		adds	r7, r7, #12
 1460              		.cfi_def_cfa_offset 4
 1461 0012 BD46     		mov	sp, r7
 1462              		.cfi_def_cfa_register 13
 1463              		@ sp needed
 1464 0014 80BC     		pop	{r7}
 1465              		.cfi_restore 7
 1466              		.cfi_def_cfa_offset 0
 1467 0016 7047     		bx	lr
 1468              	.L73:
 1469              		.align	2
 1470              	.L72:
 1471 0018 00000000 		.word	ADC_Offset
 1472              		.cfi_endproc
 1473              	.LFE14:
 1474              		.size	ADC_SetOffset, .-ADC_SetOffset
 1475              		.section	.text.ADC_SetGain,"ax",%progbits
 1476              		.align	2
 1477              		.global	ADC_SetGain
 1478              		.thumb
 1479              		.thumb_func
 1480              		.type	ADC_SetGain, %function
 1481              	ADC_SetGain:
 1482              	.LFB15:
 908:Generated_Source\PSoC5/ADC.c **** 
 909:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 43


 910:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 912:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 913:Generated_Source\PSoC5/ADC.c **** *
 914:Generated_Source\PSoC5/ADC.c **** * Summary:
 915:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 916:Generated_Source\PSoC5/ADC.c **** *  functions below. This value is set by default by the reference and
 917:Generated_Source\PSoC5/ADC.c **** *  input range settings. It should only be used to further calibrate the
 918:Generated_Source\PSoC5/ADC.c **** *  ADC with a known input or if an external reference is used. This
 919:Generated_Source\PSoC5/ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 920:Generated_Source\PSoC5/ADC.c **** *  just the ADC.
 921:Generated_Source\PSoC5/ADC.c **** *
 922:Generated_Source\PSoC5/ADC.c **** * Parameters:
 923:Generated_Source\PSoC5/ADC.c **** *  int32: ADC gain in counts per volt.
 924:Generated_Source\PSoC5/ADC.c **** *
 925:Generated_Source\PSoC5/ADC.c **** * Return:
 926:Generated_Source\PSoC5/ADC.c **** *  None
 927:Generated_Source\PSoC5/ADC.c **** *
 928:Generated_Source\PSoC5/ADC.c **** * Global variables:
 929:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  modified to set the ADC gain in counts
 930:Generated_Source\PSoC5/ADC.c **** *   per volt.
 931:Generated_Source\PSoC5/ADC.c **** *
 932:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 933:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 934:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 935:Generated_Source\PSoC5/ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 936:Generated_Source\PSoC5/ADC.c **** *
 937:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 938:Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int32 adcGain) 
 939:Generated_Source\PSoC5/ADC.c **** {
 1483              		.loc 1 939 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 8
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488 0000 80B4     		push	{r7}
 1489              		.cfi_def_cfa_offset 4
 1490              		.cfi_offset 7, -4
 1491 0002 83B0     		sub	sp, sp, #12
 1492              		.cfi_def_cfa_offset 16
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
 940:Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 1496              		.loc 1 940 0
 1497 0008 034A     		ldr	r2, .L75
 1498 000a 7B68     		ldr	r3, [r7, #4]
 1499 000c 1360     		str	r3, [r2]
 941:Generated_Source\PSoC5/ADC.c **** }
 1500              		.loc 1 941 0
 1501 000e 00BF     		nop
 1502 0010 0C37     		adds	r7, r7, #12
 1503              		.cfi_def_cfa_offset 4
 1504 0012 BD46     		mov	sp, r7
 1505              		.cfi_def_cfa_register 13
 1506              		@ sp needed
 1507 0014 80BC     		pop	{r7}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 44


 1508              		.cfi_restore 7
 1509              		.cfi_def_cfa_offset 0
 1510 0016 7047     		bx	lr
 1511              	.L76:
 1512              		.align	2
 1513              	.L75:
 1514 0018 00000000 		.word	ADC_CountsPerVolt
 1515              		.cfi_endproc
 1516              	.LFE15:
 1517              		.size	ADC_SetGain, .-ADC_SetGain
 1518              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1519              		.align	2
 1520              		.global	ADC_CountsTo_mVolts
 1521              		.thumb
 1522              		.thumb_func
 1523              		.type	ADC_CountsTo_mVolts, %function
 1524              	ADC_CountsTo_mVolts:
 1525              	.LFB16:
 942:Generated_Source\PSoC5/ADC.c **** 
 943:Generated_Source\PSoC5/ADC.c **** 
 944:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 945:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 946:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 947:Generated_Source\PSoC5/ADC.c **** *
 948:Generated_Source\PSoC5/ADC.c **** * Summary:
 949:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 950:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 951:Generated_Source\PSoC5/ADC.c **** *  be 534 mVolts.
 952:Generated_Source\PSoC5/ADC.c **** *
 953:Generated_Source\PSoC5/ADC.c **** * Parameters:
 954:Generated_Source\PSoC5/ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 955:Generated_Source\PSoC5/ADC.c **** *
 956:Generated_Source\PSoC5/ADC.c **** * Return:
 957:Generated_Source\PSoC5/ADC.c **** *  int16:  Result in mVolts
 958:Generated_Source\PSoC5/ADC.c **** *
 959:Generated_Source\PSoC5/ADC.c **** * Global variables:
 960:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 961:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
 962:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
 963:Generated_Source\PSoC5/ADC.c **** *
 964:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 965:Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int32 adcCounts) 
 966:Generated_Source\PSoC5/ADC.c **** {
 1526              		.loc 1 966 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 16
 1529              		@ frame_needed = 1, uses_anonymous_args = 0
 1530              		@ link register save eliminated.
 1531 0000 80B4     		push	{r7}
 1532              		.cfi_def_cfa_offset 4
 1533              		.cfi_offset 7, -4
 1534 0002 85B0     		sub	sp, sp, #20
 1535              		.cfi_def_cfa_offset 24
 1536 0004 00AF     		add	r7, sp, #0
 1537              		.cfi_def_cfa_register 7
 1538 0006 7860     		str	r0, [r7, #4]
 967:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 45


 968:Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 969:Generated_Source\PSoC5/ADC.c **** 
 970:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 971:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
 972:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
 973:Generated_Source\PSoC5/ADC.c ****         {
 974:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
 975:Generated_Source\PSoC5/ADC.c ****         }
 976:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
 977:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
 978:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
 979:Generated_Source\PSoC5/ADC.c ****         {
 980:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
 981:Generated_Source\PSoC5/ADC.c ****         }
 982:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 983:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
 984:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
 985:Generated_Source\PSoC5/ADC.c ****         {
 986:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
 987:Generated_Source\PSoC5/ADC.c ****         }
 988:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 989:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
 990:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
 991:Generated_Source\PSoC5/ADC.c ****         {
 992:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
 993:Generated_Source\PSoC5/ADC.c ****         }
 994:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 995:Generated_Source\PSoC5/ADC.c **** 
 996:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 997:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1539              		.loc 1 997 0
 1540 0008 0A4B     		ldr	r3, .L79
 1541 000a 1B68     		ldr	r3, [r3]
 1542 000c 7A68     		ldr	r2, [r7, #4]
 1543 000e D31A     		subs	r3, r2, r3
 1544 0010 7B60     		str	r3, [r7, #4]
 998:Generated_Source\PSoC5/ADC.c **** 
 999:Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
 1545              		.loc 1 999 0
 1546 0012 7B68     		ldr	r3, [r7, #4]
 1547 0014 4FF47A72 		mov	r2, #1000
 1548 0018 02FB03F2 		mul	r2, r2, r3
 1549 001c 064B     		ldr	r3, .L79+4
 1550 001e 1B68     		ldr	r3, [r3]
 1551 0020 92FBF3F3 		sdiv	r3, r2, r3
 1552 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1000:Generated_Source\PSoC5/ADC.c **** 
1001:Generated_Source\PSoC5/ADC.c ****     return(mVolts);
 1553              		.loc 1 1001 0
 1554 0026 B7F90E30 		ldrsh	r3, [r7, #14]
1002:Generated_Source\PSoC5/ADC.c **** }
 1555              		.loc 1 1002 0
 1556 002a 1846     		mov	r0, r3
 1557 002c 1437     		adds	r7, r7, #20
 1558              		.cfi_def_cfa_offset 4
 1559 002e BD46     		mov	sp, r7
 1560              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 46


 1561              		@ sp needed
 1562 0030 80BC     		pop	{r7}
 1563              		.cfi_restore 7
 1564              		.cfi_def_cfa_offset 0
 1565 0032 7047     		bx	lr
 1566              	.L80:
 1567              		.align	2
 1568              	.L79:
 1569 0034 00000000 		.word	ADC_Offset
 1570 0038 00000000 		.word	ADC_CountsPerVolt
 1571              		.cfi_endproc
 1572              	.LFE16:
 1573              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1574              		.global	__aeabi_i2f
 1575              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1576              		.align	2
 1577              		.global	ADC_CountsTo_Volts
 1578              		.thumb
 1579              		.thumb_func
 1580              		.type	ADC_CountsTo_Volts, %function
 1581              	ADC_CountsTo_Volts:
 1582              	.LFB17:
1003:Generated_Source\PSoC5/ADC.c **** 
1004:Generated_Source\PSoC5/ADC.c **** 
1005:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1006:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
1007:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1008:Generated_Source\PSoC5/ADC.c **** *
1009:Generated_Source\PSoC5/ADC.c **** * Summary:
1010:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1011:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1012:Generated_Source\PSoC5/ADC.c **** *  returned result would be +1.2345 Volts.
1013:Generated_Source\PSoC5/ADC.c **** *
1014:Generated_Source\PSoC5/ADC.c **** * Parameters:
1015:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1016:Generated_Source\PSoC5/ADC.c **** *
1017:Generated_Source\PSoC5/ADC.c **** * Return:
1018:Generated_Source\PSoC5/ADC.c **** *  float32: Result in Volts
1019:Generated_Source\PSoC5/ADC.c **** *
1020:Generated_Source\PSoC5/ADC.c **** * Global variables:
1021:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert to Volts.
1022:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1023:Generated_Source\PSoC5/ADC.c **** *   to Volts.
1024:Generated_Source\PSoC5/ADC.c **** *
1025:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1026:Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int32 adcCounts) 
1027:Generated_Source\PSoC5/ADC.c **** {
 1583              		.loc 1 1027 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 16
 1586              		@ frame_needed = 1, uses_anonymous_args = 0
 1587 0000 90B5     		push	{r4, r7, lr}
 1588              		.cfi_def_cfa_offset 12
 1589              		.cfi_offset 4, -12
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 47


 1593              		.cfi_def_cfa_offset 32
 1594 0004 00AF     		add	r7, sp, #0
 1595              		.cfi_def_cfa_register 7
 1596 0006 7860     		str	r0, [r7, #4]
1028:Generated_Source\PSoC5/ADC.c **** 
1029:Generated_Source\PSoC5/ADC.c ****     float32 Volts;
1030:Generated_Source\PSoC5/ADC.c **** 
1031:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1032:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
1033:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
1034:Generated_Source\PSoC5/ADC.c ****         {
1035:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1036:Generated_Source\PSoC5/ADC.c ****         }
1037:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
1038:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
1039:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
1040:Generated_Source\PSoC5/ADC.c ****         {
1041:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1042:Generated_Source\PSoC5/ADC.c ****         }
1043:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1044:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
1045:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
1046:Generated_Source\PSoC5/ADC.c ****         {
1047:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1048:Generated_Source\PSoC5/ADC.c ****         }
1049:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1050:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
1051:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
1052:Generated_Source\PSoC5/ADC.c ****         {
1053:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1054:Generated_Source\PSoC5/ADC.c ****         }
1055:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1056:Generated_Source\PSoC5/ADC.c **** 
1057:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
1058:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1597              		.loc 1 1058 0
 1598 0008 0C4B     		ldr	r3, .L83
 1599 000a 1B68     		ldr	r3, [r3]
 1600 000c 7A68     		ldr	r2, [r7, #4]
 1601 000e D31A     		subs	r3, r2, r3
 1602 0010 7B60     		str	r3, [r7, #4]
1059:Generated_Source\PSoC5/ADC.c **** 
1060:Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
 1603              		.loc 1 1060 0
 1604 0012 7868     		ldr	r0, [r7, #4]
 1605 0014 FFF7FEFF 		bl	__aeabi_i2f
 1606 0018 0446     		mov	r4, r0
 1607 001a 094B     		ldr	r3, .L83+4
 1608 001c 1B68     		ldr	r3, [r3]
 1609 001e 1846     		mov	r0, r3
 1610 0020 FFF7FEFF 		bl	__aeabi_i2f
 1611 0024 0346     		mov	r3, r0
 1612 0026 1946     		mov	r1, r3
 1613 0028 2046     		mov	r0, r4
 1614 002a FFF7FEFF 		bl	__aeabi_fdiv
 1615 002e 0346     		mov	r3, r0
 1616 0030 FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 48


1061:Generated_Source\PSoC5/ADC.c **** 
1062:Generated_Source\PSoC5/ADC.c ****     return( Volts );
 1617              		.loc 1 1062 0
 1618 0032 FB68     		ldr	r3, [r7, #12]	@ float
1063:Generated_Source\PSoC5/ADC.c **** }
 1619              		.loc 1 1063 0
 1620 0034 1846     		mov	r0, r3
 1621 0036 1437     		adds	r7, r7, #20
 1622              		.cfi_def_cfa_offset 12
 1623 0038 BD46     		mov	sp, r7
 1624              		.cfi_def_cfa_register 13
 1625              		@ sp needed
 1626 003a 90BD     		pop	{r4, r7, pc}
 1627              	.L84:
 1628              		.align	2
 1629              	.L83:
 1630 003c 00000000 		.word	ADC_Offset
 1631 0040 00000000 		.word	ADC_CountsPerVolt
 1632              		.cfi_endproc
 1633              	.LFE17:
 1634              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1635              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1636              		.align	2
 1637              		.global	ADC_CountsTo_uVolts
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	ADC_CountsTo_uVolts, %function
 1641              	ADC_CountsTo_uVolts:
 1642              	.LFB18:
1064:Generated_Source\PSoC5/ADC.c **** 
1065:Generated_Source\PSoC5/ADC.c **** 
1066:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1067:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1068:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1069:Generated_Source\PSoC5/ADC.c **** *
1070:Generated_Source\PSoC5/ADC.c **** * Summary:
1071:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1072:Generated_Source\PSoC5/ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1073:Generated_Source\PSoC5/ADC.c **** *
1074:Generated_Source\PSoC5/ADC.c **** * Parameters:
1075:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1076:Generated_Source\PSoC5/ADC.c **** *
1077:Generated_Source\PSoC5/ADC.c **** * Return:
1078:Generated_Source\PSoC5/ADC.c **** *  int32:  Result in uVolts
1079:Generated_Source\PSoC5/ADC.c **** *
1080:Generated_Source\PSoC5/ADC.c **** * Global variables:
1081:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1082:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1083:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
1084:Generated_Source\PSoC5/ADC.c **** *
1085:Generated_Source\PSoC5/ADC.c **** * Theory:
1086:Generated_Source\PSoC5/ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1087:Generated_Source\PSoC5/ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1088:Generated_Source\PSoC5/ADC.c **** *
1089:Generated_Source\PSoC5/ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_CountsPerVolt / B));
1090:Generated_Source\PSoC5/ADC.c **** *
1091:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 49


1092:Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int32 adcCounts) 
1093:Generated_Source\PSoC5/ADC.c **** {
 1643              		.loc 1 1093 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 24
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648 0000 80B4     		push	{r7}
 1649              		.cfi_def_cfa_offset 4
 1650              		.cfi_offset 7, -4
 1651 0002 87B0     		sub	sp, sp, #28
 1652              		.cfi_def_cfa_offset 32
 1653 0004 00AF     		add	r7, sp, #0
 1654              		.cfi_def_cfa_register 7
 1655 0006 7860     		str	r0, [r7, #4]
1094:Generated_Source\PSoC5/ADC.c **** 
1095:Generated_Source\PSoC5/ADC.c ****     int32 uVolts;
1096:Generated_Source\PSoC5/ADC.c ****     int32 coefA;
1097:Generated_Source\PSoC5/ADC.c ****     int32 coefB;
1098:Generated_Source\PSoC5/ADC.c ****     uint8 resolution;
1099:Generated_Source\PSoC5/ADC.c **** 
1100:Generated_Source\PSoC5/ADC.c ****     /* Set the resolution based on the configuration */
1101:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1102:Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
 1656              		.loc 1 1102 0
 1657 0008 224B     		ldr	r3, .L95
 1658 000a 1B78     		ldrb	r3, [r3]
 1659 000c DBB2     		uxtb	r3, r3
 1660 000e 012B     		cmp	r3, #1
 1661 0010 02D1     		bne	.L86
1103:Generated_Source\PSoC5/ADC.c ****     {
1104:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
 1662              		.loc 1 1104 0
 1663 0012 1023     		movs	r3, #16
 1664 0014 FB73     		strb	r3, [r7, #15]
 1665 0016 11E0     		b	.L87
 1666              	.L86:
1105:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
1106:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1107:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG1_DEC_DIV */
1108:Generated_Source\PSoC5/ADC.c ****     }
1109:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
 1667              		.loc 1 1109 0
 1668 0018 1E4B     		ldr	r3, .L95
 1669 001a 1B78     		ldrb	r3, [r3]
 1670 001c DBB2     		uxtb	r3, r3
 1671 001e 022B     		cmp	r3, #2
 1672 0020 02D1     		bne	.L88
1110:Generated_Source\PSoC5/ADC.c ****     {
1111:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
 1673              		.loc 1 1111 0
 1674 0022 1023     		movs	r3, #16
 1675 0024 FB73     		strb	r3, [r7, #15]
 1676 0026 09E0     		b	.L87
 1677              	.L88:
1112:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
1113:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 50


1114:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG2_DEC_DIV */
1115:Generated_Source\PSoC5/ADC.c ****     }
1116:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
 1678              		.loc 1 1116 0
 1679 0028 1A4B     		ldr	r3, .L95
 1680 002a 1B78     		ldrb	r3, [r3]
 1681 002c DBB2     		uxtb	r3, r3
 1682 002e 032B     		cmp	r3, #3
 1683 0030 02D1     		bne	.L89
1117:Generated_Source\PSoC5/ADC.c ****     {
1118:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
 1684              		.loc 1 1118 0
 1685 0032 1023     		movs	r3, #16
 1686 0034 FB73     		strb	r3, [r7, #15]
 1687 0036 01E0     		b	.L87
 1688              	.L89:
1119:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
1120:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1121:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG3_DEC_DIV */
1122:Generated_Source\PSoC5/ADC.c ****     }
1123:Generated_Source\PSoC5/ADC.c ****     else
1124:Generated_Source\PSoC5/ADC.c ****     {
1125:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG4_RESOLUTION;
 1689              		.loc 1 1125 0
 1690 0038 1023     		movs	r3, #16
 1691 003a FB73     		strb	r3, [r7, #15]
 1692              	.L87:
1126:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG4_DEC_DIV != 0)
1127:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1128:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG4_DEC_DIV */
1129:Generated_Source\PSoC5/ADC.c ****     }
1130:Generated_Source\PSoC5/ADC.c **** 
1131:Generated_Source\PSoC5/ADC.c ****     switch (resolution)
 1693              		.loc 1 1131 0
 1694 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1695 003e 102B     		cmp	r3, #16
 1696 0040 05D1     		bne	.L94
1132:Generated_Source\PSoC5/ADC.c ****     {
1133:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_12) || \
1134:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_12) || \
1135:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_12) || \
1136:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_12) )
1137:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_12:
1138:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_2;
1139:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_2;
1140:Generated_Source\PSoC5/ADC.c ****                 break;
1141:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_12 */    
1142:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_13) || \
1143:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_13) || \
1144:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_13) || \
1145:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_13) )
1146:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_13:
1147:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_4;
1148:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_4;
1149:Generated_Source\PSoC5/ADC.c ****                 break;
1150:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_13 */    
1151:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_14) || \
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 51


1152:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_14) || \
1153:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_14) || \
1154:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_14) )
1155:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_14:
1156:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_8;
1157:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_8;
1158:Generated_Source\PSoC5/ADC.c ****                 break;
1159:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_14 */    
1160:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_15) || \
1161:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_15) || \
1162:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_15) || \
1163:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_15) )
1164:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_15:
1165:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_16;
1166:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_16;
1167:Generated_Source\PSoC5/ADC.c ****                 break;
1168:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_15 */    
1169:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_16) || \
1170:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_16) || \
1171:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_16) || \
1172:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_16) )
1173:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_16:
1174:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
 1697              		.loc 1 1174 0
 1698 0042 47F61223 		movw	r3, #31250
 1699 0046 7B61     		str	r3, [r7, #20]
1175:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
 1700              		.loc 1 1175 0
 1701 0048 2023     		movs	r3, #32
 1702 004a 3B61     		str	r3, [r7, #16]
1176:Generated_Source\PSoC5/ADC.c ****                 break;
 1703              		.loc 1 1176 0
 1704 004c 04E0     		b	.L92
 1705              	.L94:
1177:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_16 */    
1178:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_17) || \
1179:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_17) || \
1180:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_17) || \
1181:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_17) )
1182:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_17:
1183:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_64;
1184:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_64;
1185:Generated_Source\PSoC5/ADC.c ****                 break;
1186:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_17 */    
1187:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_18) || \
1188:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_18) || \
1189:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_18) || \
1190:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_18) )
1191:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_18:
1192:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_125;
1193:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_125;
1194:Generated_Source\PSoC5/ADC.c ****                 break;
1195:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_18 */    
1196:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_19) || \
1197:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_19) || \
1198:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_19) || \
1199:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_19) )
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 52


1200:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_19:
1201:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_250;
1202:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_250;
1203:Generated_Source\PSoC5/ADC.c ****                 break;
1204:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_19 */    
1205:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_20) || \
1206:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_20) || \
1207:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_20) || \
1208:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_20) )
1209:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_20:
1210:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_500;
1211:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
1212:Generated_Source\PSoC5/ADC.c ****                 break;
1213:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_20 */    
1214:Generated_Source\PSoC5/ADC.c ****         default:    /* resolution < 12 */
1215:Generated_Source\PSoC5/ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1216:Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
 1706              		.loc 1 1216 0
 1707 004e 124B     		ldr	r3, .L95+4
 1708 0050 7B61     		str	r3, [r7, #20]
1217:Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
 1709              		.loc 1 1217 0
 1710 0052 0123     		movs	r3, #1
 1711 0054 3B61     		str	r3, [r7, #16]
1218:Generated_Source\PSoC5/ADC.c ****             break;
 1712              		.loc 1 1218 0
 1713 0056 00BF     		nop
 1714              	.L92:
1219:Generated_Source\PSoC5/ADC.c ****     }
1220:Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
 1715              		.loc 1 1220 0
 1716 0058 104B     		ldr	r3, .L95+8
 1717 005a 1A68     		ldr	r2, [r3]
 1718 005c 3B69     		ldr	r3, [r7, #16]
 1719 005e 92FBF3F3 		sdiv	r3, r2, r3
 1720 0062 3B61     		str	r3, [r7, #16]
1221:Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
 1721              		.loc 1 1221 0
 1722 0064 7B69     		ldr	r3, [r7, #20]
 1723 0066 7A68     		ldr	r2, [r7, #4]
 1724 0068 02FB03F2 		mul	r2, r2, r3
 1725 006c 3B69     		ldr	r3, [r7, #16]
 1726 006e 92FBF3F2 		sdiv	r2, r2, r3
 1727 0072 0B4B     		ldr	r3, .L95+12
 1728 0074 1B68     		ldr	r3, [r3]
 1729 0076 7969     		ldr	r1, [r7, #20]
 1730 0078 01FB03F1 		mul	r1, r1, r3
 1731 007c 3B69     		ldr	r3, [r7, #16]
 1732 007e 91FBF3F3 		sdiv	r3, r1, r3
 1733 0082 D31A     		subs	r3, r2, r3
 1734 0084 BB60     		str	r3, [r7, #8]
1222:Generated_Source\PSoC5/ADC.c **** 
1223:Generated_Source\PSoC5/ADC.c ****     return( uVolts );
 1735              		.loc 1 1223 0
 1736 0086 BB68     		ldr	r3, [r7, #8]
1224:Generated_Source\PSoC5/ADC.c **** }
 1737              		.loc 1 1224 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 53


 1738 0088 1846     		mov	r0, r3
 1739 008a 1C37     		adds	r7, r7, #28
 1740              		.cfi_def_cfa_offset 4
 1741 008c BD46     		mov	sp, r7
 1742              		.cfi_def_cfa_register 13
 1743              		@ sp needed
 1744 008e 80BC     		pop	{r7}
 1745              		.cfi_restore 7
 1746              		.cfi_def_cfa_offset 0
 1747 0090 7047     		bx	lr
 1748              	.L96:
 1749 0092 00BF     		.align	2
 1750              	.L95:
 1751 0094 00000000 		.word	ADC_Config
 1752 0098 40420F00 		.word	1000000
 1753 009c 00000000 		.word	ADC_CountsPerVolt
 1754 00a0 00000000 		.word	ADC_Offset
 1755              		.cfi_endproc
 1756              	.LFE18:
 1757              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1758              		.section	.text.ADC_InitConfig,"ax",%progbits
 1759              		.align	2
 1760              		.thumb
 1761              		.thumb_func
 1762              		.type	ADC_InitConfig, %function
 1763              	ADC_InitConfig:
 1764              	.LFB19:
1225:Generated_Source\PSoC5/ADC.c **** 
1226:Generated_Source\PSoC5/ADC.c **** 
1227:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1228:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_InitConfig(uint8 config)
1229:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1230:Generated_Source\PSoC5/ADC.c **** *
1231:Generated_Source\PSoC5/ADC.c **** * Summary:
1232:Generated_Source\PSoC5/ADC.c **** *  Initializes all registers based on customizer settings
1233:Generated_Source\PSoC5/ADC.c **** *
1234:Generated_Source\PSoC5/ADC.c **** * Parameters:
1235:Generated_Source\PSoC5/ADC.c **** *   void
1236:Generated_Source\PSoC5/ADC.c **** *
1237:Generated_Source\PSoC5/ADC.c **** * Return:
1238:Generated_Source\PSoC5/ADC.c **** *  None
1239:Generated_Source\PSoC5/ADC.c **** *
1240:Generated_Source\PSoC5/ADC.c **** * Global variables:
1241:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  Used to set the default counts per volt.
1242:Generated_Source\PSoC5/ADC.c **** *
1243:Generated_Source\PSoC5/ADC.c **** * Side Effects: Rewrites the coherency set by ADC_SetCoherency()
1244:Generated_Source\PSoC5/ADC.c **** *   API to the default value.
1245:Generated_Source\PSoC5/ADC.c **** *
1246:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1247:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) 
1248:Generated_Source\PSoC5/ADC.c **** {
 1765              		.loc 1 1248 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 8
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 80B5     		push	{r7, lr}
 1770              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 54


 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 82B0     		sub	sp, sp, #8
 1774              		.cfi_def_cfa_offset 16
 1775 0004 00AF     		add	r7, sp, #0
 1776              		.cfi_def_cfa_register 7
 1777 0006 0346     		mov	r3, r0
 1778 0008 FB71     		strb	r3, [r7, #7]
1249:Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
 1779              		.loc 1 1249 0
 1780 000a C34B     		ldr	r3, .L103
 1781 000c 0022     		movs	r2, #0
 1782 000e 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/ADC.c **** 
1251:Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
 1783              		.loc 1 1251 0
 1784 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1785 0012 012B     		cmp	r3, #1
 1786 0014 66D1     		bne	.L98
1252:Generated_Source\PSoC5/ADC.c ****     {
1253:Generated_Source\PSoC5/ADC.c ****         /* Default Config */
1254:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
 1787              		.loc 1 1254 0
 1788 0016 C14B     		ldr	r3, .L103+4
 1789 0018 3022     		movs	r2, #48
 1790 001a 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
 1791              		.loc 1 1255 0
 1792 001c C04B     		ldr	r3, .L103+8
 1793 001e 0422     		movs	r2, #4
 1794 0020 1A70     		strb	r2, [r3]
1256:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
 1795              		.loc 1 1256 0
 1796 0022 C04B     		ldr	r3, .L103+12
 1797 0024 0622     		movs	r2, #6
 1798 0026 1A70     		strb	r2, [r3]
1257:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
 1799              		.loc 1 1257 0
 1800 0028 BF4B     		ldr	r3, .L103+16
 1801 002a 0022     		movs	r2, #0
 1802 002c 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
 1803              		.loc 1 1258 0
 1804 002e BF4B     		ldr	r3, .L103+20
 1805 0030 0022     		movs	r2, #0
 1806 0032 1A70     		strb	r2, [r3]
1259:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
 1807              		.loc 1 1259 0
 1808 0034 BE4B     		ldr	r3, .L103+24
 1809 0036 3F22     		movs	r2, #63
 1810 0038 1A70     		strb	r2, [r3]
1260:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
 1811              		.loc 1 1260 0
 1812 003a BE4B     		ldr	r3, .L103+28
 1813 003c 0022     		movs	r2, #0
 1814 003e 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 55


 1815              		.loc 1 1261 0
 1816 0040 BD4B     		ldr	r3, .L103+32
 1817 0042 0022     		movs	r2, #0
 1818 0044 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
 1819              		.loc 1 1262 0
 1820 0046 BD4B     		ldr	r3, .L103+36
 1821 0048 0022     		movs	r2, #0
 1822 004a 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
 1823              		.loc 1 1263 0
 1824 004c BC4B     		ldr	r3, .L103+40
 1825 004e 0122     		movs	r2, #1
 1826 0050 1A70     		strb	r2, [r3]
1264:Generated_Source\PSoC5/ADC.c **** 
1265:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
 1827              		.loc 1 1265 0
 1828 0052 BC4B     		ldr	r3, .L103+44
 1829 0054 5022     		movs	r2, #80
 1830 0056 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
 1831              		.loc 1 1266 0
 1832 0058 BB4B     		ldr	r3, .L103+48
 1833 005a 0722     		movs	r2, #7
 1834 005c 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
 1835              		.loc 1 1267 0
 1836 005e BB4B     		ldr	r3, .L103+52
 1837 0060 2922     		movs	r2, #41
 1838 0062 1A70     		strb	r2, [r3]
1268:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
 1839              		.loc 1 1268 0
 1840 0064 BA4B     		ldr	r3, .L103+56
 1841 0066 0022     		movs	r2, #0
 1842 0068 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
 1843              		.loc 1 1269 0
 1844 006a BA4B     		ldr	r3, .L103+60
 1845 006c 5522     		movs	r2, #85
 1846 006e 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
 1847              		.loc 1 1270 0
 1848 0070 B94B     		ldr	r3, .L103+64
 1849 0072 5A22     		movs	r2, #90
 1850 0074 1A70     		strb	r2, [r3]
1271:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
 1851              		.loc 1 1271 0
 1852 0076 B94B     		ldr	r3, .L103+68
 1853 0078 0022     		movs	r2, #0
 1854 007a 1A70     		strb	r2, [r3]
1272:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
 1855              		.loc 1 1272 0
 1856 007c B84B     		ldr	r3, .L103+72
 1857 007e 0022     		movs	r2, #0
 1858 0080 1A70     		strb	r2, [r3]
1273:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
 1859              		.loc 1 1273 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 56


 1860 0082 B84B     		ldr	r3, .L103+76
 1861 0084 0022     		movs	r2, #0
 1862 0086 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
 1863              		.loc 1 1274 0
 1864 0088 B74B     		ldr	r3, .L103+80
 1865 008a 0A22     		movs	r2, #10
 1866 008c 1A70     		strb	r2, [r3]
1275:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
 1867              		.loc 1 1275 0
 1868 008e B74B     		ldr	r3, .L103+84
 1869 0090 4322     		movs	r2, #67
 1870 0092 1A70     		strb	r2, [r3]
1276:Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1277:Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
 1871              		.loc 1 1277 0
 1872 0094 4420     		movs	r0, #68
 1873 0096 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1278:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
 1874              		.loc 1 1278 0
 1875 009a B54B     		ldr	r3, .L103+88
 1876 009c 5822     		movs	r2, #88
 1877 009e 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
 1878              		.loc 1 1279 0
 1879 00a0 B44B     		ldr	r3, .L103+92
 1880 00a2 0022     		movs	r2, #0
 1881 00a4 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/ADC.c **** 
1281:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
 1882              		.loc 1 1281 0
 1883 00a6 B44B     		ldr	r3, .L103+96
 1884 00a8 0222     		movs	r2, #2
 1885 00aa 1A70     		strb	r2, [r3]
1282:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
 1886              		.loc 1 1282 0
 1887 00ac B34B     		ldr	r3, .L103+100
 1888 00ae 0222     		movs	r2, #2
 1889 00b0 1A70     		strb	r2, [r3]
1283:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
 1890              		.loc 1 1283 0
 1891 00b2 B34B     		ldr	r3, .L103+104
 1892 00b4 0022     		movs	r2, #0
 1893 00b6 1A70     		strb	r2, [r3]
1284:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
 1894              		.loc 1 1284 0
 1895 00b8 B24B     		ldr	r3, .L103+108
 1896 00ba 0022     		movs	r2, #0
 1897 00bc 1A70     		strb	r2, [r3]
1285:Generated_Source\PSoC5/ADC.c **** 
1286:Generated_Source\PSoC5/ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1287:Generated_Source\PSoC5/ADC.c ****         *  the input  range selected.
1288:Generated_Source\PSoC5/ADC.c ****         */
1289:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INPUT_MODE)
1290:Generated_Source\PSoC5/ADC.c ****             #if (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1291:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(1u);
1292:Generated_Source\PSoC5/ADC.c ****             #else
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 57


1293:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
 1898              		.loc 1 1293 0
 1899 00be 0020     		movs	r0, #0
 1900 00c0 FFF7FEFF 		bl	ADC_AMux_Select
1294:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
1295:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INPUT_MODE */
1296:Generated_Source\PSoC5/ADC.c **** 
1297:Generated_Source\PSoC5/ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1298:Generated_Source\PSoC5/ADC.c ****         *   mode is Single sample
1299:Generated_Source\PSoC5/ADC.c ****         */
1300:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
1301:Generated_Source\PSoC5/ADC.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1302:Generated_Source\PSoC5/ADC.c ****             ADC_stopConversion = 1u;
1303:Generated_Source\PSoC5/ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1304:Generated_Source\PSoC5/ADC.c **** 
1305:Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
 1901              		.loc 1 1305 0
 1902 00c4 B04B     		ldr	r3, .L103+112
 1903 00c6 42F6AB12 		movw	r2, #10667
 1904 00ca 1A60     		str	r2, [r3]
1306:Generated_Source\PSoC5/ADC.c **** 
1307:Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
 1905              		.loc 1 1307 0
 1906 00cc 0121     		movs	r1, #1
 1907 00ce 0520     		movs	r0, #5
 1908 00d0 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1308:Generated_Source\PSoC5/ADC.c **** 
1309:Generated_Source\PSoC5/ADC.c ****         /* This is only valid if there is an internal clock */
1310:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INTERNAL_CLK)
1311:Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
 1909              		.loc 1 1311 0
 1910 00d4 0121     		movs	r1, #1
 1911 00d6 8A20     		movs	r0, #138
 1912 00d8 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1312:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
1313:Generated_Source\PSoC5/ADC.c **** 
1314:Generated_Source\PSoC5/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1315:Generated_Source\PSoC5/ADC.c ****             /* Set interrupt vector */
1316:Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
 1913              		.loc 1 1316 0
 1914 00dc AB49     		ldr	r1, .L103+116
 1915 00de 1D20     		movs	r0, #29
 1916 00e0 FFF7FEFF 		bl	CyIntSetVector
 1917              	.L98:
1317:Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1318:Generated_Source\PSoC5/ADC.c ****     }
1319:Generated_Source\PSoC5/ADC.c **** 
1320:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
1321:Generated_Source\PSoC5/ADC.c ****         if(config == 2u)
 1918              		.loc 1 1321 0
 1919 00e4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1920 00e6 022B     		cmp	r3, #2
 1921 00e8 66D1     		bne	.L99
1322:Generated_Source\PSoC5/ADC.c ****         {
1323:Generated_Source\PSoC5/ADC.c ****             /* Second Config */
1324:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG2_DEC_CR;
 1922              		.loc 1 1324 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 58


 1923 00ea 8C4B     		ldr	r3, .L103+4
 1924 00ec 3822     		movs	r2, #56
 1925 00ee 1A70     		strb	r2, [r3]
1325:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
 1926              		.loc 1 1325 0
 1927 00f0 8B4B     		ldr	r3, .L103+8
 1928 00f2 0422     		movs	r2, #4
 1929 00f4 1A70     		strb	r2, [r3]
1326:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
 1930              		.loc 1 1326 0
 1931 00f6 8B4B     		ldr	r3, .L103+12
 1932 00f8 0622     		movs	r2, #6
 1933 00fa 1A70     		strb	r2, [r3]
1327:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
 1934              		.loc 1 1327 0
 1935 00fc 8A4B     		ldr	r3, .L103+16
 1936 00fe 0022     		movs	r2, #0
 1937 0100 1A70     		strb	r2, [r3]
1328:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
 1938              		.loc 1 1328 0
 1939 0102 8A4B     		ldr	r3, .L103+20
 1940 0104 0022     		movs	r2, #0
 1941 0106 1A70     		strb	r2, [r3]
1329:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
 1942              		.loc 1 1329 0
 1943 0108 894B     		ldr	r3, .L103+24
 1944 010a 3F22     		movs	r2, #63
 1945 010c 1A70     		strb	r2, [r3]
1330:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
 1946              		.loc 1 1330 0
 1947 010e 894B     		ldr	r3, .L103+28
 1948 0110 0022     		movs	r2, #0
 1949 0112 1A70     		strb	r2, [r3]
1331:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
 1950              		.loc 1 1331 0
 1951 0114 884B     		ldr	r3, .L103+32
 1952 0116 0022     		movs	r2, #0
 1953 0118 1A70     		strb	r2, [r3]
1332:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
 1954              		.loc 1 1332 0
 1955 011a 884B     		ldr	r3, .L103+36
 1956 011c 0022     		movs	r2, #0
 1957 011e 1A70     		strb	r2, [r3]
1333:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
 1958              		.loc 1 1333 0
 1959 0120 874B     		ldr	r3, .L103+40
 1960 0122 0122     		movs	r2, #1
 1961 0124 1A70     		strb	r2, [r3]
1334:Generated_Source\PSoC5/ADC.c **** 
1335:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG2_DSM_CR4;
 1962              		.loc 1 1335 0
 1963 0126 874B     		ldr	r3, .L103+44
 1964 0128 5022     		movs	r2, #80
 1965 012a 1A70     		strb	r2, [r3]
1336:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
 1966              		.loc 1 1336 0
 1967 012c 864B     		ldr	r3, .L103+48
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 59


 1968 012e 2722     		movs	r2, #39
 1969 0130 1A70     		strb	r2, [r3]
1337:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
 1970              		.loc 1 1337 0
 1971 0132 864B     		ldr	r3, .L103+52
 1972 0134 2C22     		movs	r2, #44
 1973 0136 1A70     		strb	r2, [r3]
1338:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
 1974              		.loc 1 1338 0
 1975 0138 854B     		ldr	r3, .L103+56
 1976 013a 0022     		movs	r2, #0
 1977 013c 1A70     		strb	r2, [r3]
1339:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
 1978              		.loc 1 1339 0
 1979 013e 854B     		ldr	r3, .L103+60
 1980 0140 5522     		movs	r2, #85
 1981 0142 1A70     		strb	r2, [r3]
1340:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
 1982              		.loc 1 1340 0
 1983 0144 844B     		ldr	r3, .L103+64
 1984 0146 5A22     		movs	r2, #90
 1985 0148 1A70     		strb	r2, [r3]
1341:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
 1986              		.loc 1 1341 0
 1987 014a 844B     		ldr	r3, .L103+68
 1988 014c 0522     		movs	r2, #5
 1989 014e 1A70     		strb	r2, [r3]
1342:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
 1990              		.loc 1 1342 0
 1991 0150 834B     		ldr	r3, .L103+72
 1992 0152 0122     		movs	r2, #1
 1993 0154 1A70     		strb	r2, [r3]
1343:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
 1994              		.loc 1 1343 0
 1995 0156 834B     		ldr	r3, .L103+76
 1996 0158 1122     		movs	r2, #17
 1997 015a 1A70     		strb	r2, [r3]
1344:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
 1998              		.loc 1 1344 0
 1999 015c 824B     		ldr	r3, .L103+80
 2000 015e 1922     		movs	r2, #25
 2001 0160 1A70     		strb	r2, [r3]
1345:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
 2002              		.loc 1 1345 0
 2003 0162 824B     		ldr	r3, .L103+84
 2004 0164 9722     		movs	r2, #151
 2005 0166 1A70     		strb	r2, [r3]
1346:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1347:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG2_DSM_REF0);
 2006              		.loc 1 1347 0
 2007 0168 4420     		movs	r0, #68
 2008 016a FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1348:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
 2009              		.loc 1 1348 0
 2010 016e 804B     		ldr	r3, .L103+88
 2011 0170 5822     		movs	r2, #88
 2012 0172 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 60


1349:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
 2013              		.loc 1 1349 0
 2014 0174 7F4B     		ldr	r3, .L103+92
 2015 0176 0022     		movs	r2, #0
 2016 0178 1A70     		strb	r2, [r3]
1350:Generated_Source\PSoC5/ADC.c **** 
1351:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG2_DSM_BUF0;
 2017              		.loc 1 1351 0
 2018 017a 7F4B     		ldr	r3, .L103+96
 2019 017c 0522     		movs	r2, #5
 2020 017e 1A70     		strb	r2, [r3]
1352:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
 2021              		.loc 1 1352 0
 2022 0180 7E4B     		ldr	r3, .L103+100
 2023 0182 0222     		movs	r2, #2
 2024 0184 1A70     		strb	r2, [r3]
1353:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
 2025              		.loc 1 1353 0
 2026 0186 7E4B     		ldr	r3, .L103+104
 2027 0188 0022     		movs	r2, #0
 2028 018a 1A70     		strb	r2, [r3]
1354:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
 2029              		.loc 1 1354 0
 2030 018c 7D4B     		ldr	r3, .L103+108
 2031 018e 0022     		movs	r2, #0
 2032 0190 1A70     		strb	r2, [r3]
1355:Generated_Source\PSoC5/ADC.c **** 
1356:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1357:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1358:Generated_Source\PSoC5/ADC.c ****             */
1359:Generated_Source\PSoC5/ADC.c **** 
1360:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1361:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1362:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1363:Generated_Source\PSoC5/ADC.c ****                 #else
1364:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
 2033              		.loc 1 1364 0
 2034 0192 0020     		movs	r0, #0
 2035 0194 FFF7FEFF 		bl	ADC_AMux_Select
1365:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1366:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1367:Generated_Source\PSoC5/ADC.c **** 
1368:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1369:Generated_Source\PSoC5/ADC.c ****             *   conversion mode is Single sample
1370:Generated_Source\PSoC5/ADC.c ****             */
1371:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG2_RESOLUTION > 16 && \
1372:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG2_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1373:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1374:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1375:Generated_Source\PSoC5/ADC.c **** 
1376:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG2_COUNTS_PER_VOLT;
 2036              		.loc 1 1376 0
 2037 0198 7B4B     		ldr	r3, .L103+112
 2038 019a 4FF47A42 		mov	r2, #64000
 2039 019e 1A60     		str	r2, [r3]
1377:Generated_Source\PSoC5/ADC.c **** 
1378:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG2_CP_CLK_DIVIDER, 1u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 61


 2040              		.loc 1 1378 0
 2041 01a0 0121     		movs	r1, #1
 2042 01a2 0520     		movs	r0, #5
 2043 01a4 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1379:Generated_Source\PSoC5/ADC.c **** 
1380:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1381:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1382:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG2_ADC_CLK_DIVIDER, 1u);
 2044              		.loc 1 1382 0
 2045 01a8 0121     		movs	r1, #1
 2046 01aa 2520     		movs	r0, #37
 2047 01ac FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1383:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1384:Generated_Source\PSoC5/ADC.c **** 
1385:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1386:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1387:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR2);
 2048              		.loc 1 1387 0
 2049 01b0 7749     		ldr	r1, .L103+120
 2050 01b2 1D20     		movs	r0, #29
 2051 01b4 FFF7FEFF 		bl	CyIntSetVector
 2052              	.L99:
1388:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1389:Generated_Source\PSoC5/ADC.c ****         }
1390:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
1391:Generated_Source\PSoC5/ADC.c **** 
1392:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
1393:Generated_Source\PSoC5/ADC.c ****         if(config == 3u)
 2053              		.loc 1 1393 0
 2054 01b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2055 01ba 032B     		cmp	r3, #3
 2056 01bc 66D1     		bne	.L100
1394:Generated_Source\PSoC5/ADC.c ****         {
1395:Generated_Source\PSoC5/ADC.c ****             /* Third Config */
1396:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG3_DEC_CR;
 2057              		.loc 1 1396 0
 2058 01be 574B     		ldr	r3, .L103+4
 2059 01c0 3822     		movs	r2, #56
 2060 01c2 1A70     		strb	r2, [r3]
1397:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG3_DEC_SHIFT1;
 2061              		.loc 1 1397 0
 2062 01c4 564B     		ldr	r3, .L103+8
 2063 01c6 0422     		movs	r2, #4
 2064 01c8 1A70     		strb	r2, [r3]
1398:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG3_DEC_SHIFT2;
 2065              		.loc 1 1398 0
 2066 01ca 564B     		ldr	r3, .L103+12
 2067 01cc 0622     		movs	r2, #6
 2068 01ce 1A70     		strb	r2, [r3]
1399:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG3_DEC_DR2;
 2069              		.loc 1 1399 0
 2070 01d0 554B     		ldr	r3, .L103+16
 2071 01d2 0022     		movs	r2, #0
 2072 01d4 1A70     		strb	r2, [r3]
1400:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG3_DEC_DR2H;
 2073              		.loc 1 1400 0
 2074 01d6 554B     		ldr	r3, .L103+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 62


 2075 01d8 0022     		movs	r2, #0
 2076 01da 1A70     		strb	r2, [r3]
1401:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG3_DEC_DR1;
 2077              		.loc 1 1401 0
 2078 01dc 544B     		ldr	r3, .L103+24
 2079 01de 3F22     		movs	r2, #63
 2080 01e0 1A70     		strb	r2, [r3]
1402:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG3_DEC_OCOR;
 2081              		.loc 1 1402 0
 2082 01e2 544B     		ldr	r3, .L103+28
 2083 01e4 0022     		movs	r2, #0
 2084 01e6 1A70     		strb	r2, [r3]
1403:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG3_DEC_OCORM;
 2085              		.loc 1 1403 0
 2086 01e8 534B     		ldr	r3, .L103+32
 2087 01ea 0022     		movs	r2, #0
 2088 01ec 1A70     		strb	r2, [r3]
1404:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG3_DEC_OCORH;
 2089              		.loc 1 1404 0
 2090 01ee 534B     		ldr	r3, .L103+36
 2091 01f0 0022     		movs	r2, #0
 2092 01f2 1A70     		strb	r2, [r3]
1405:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG3_DEC_COHER;
 2093              		.loc 1 1405 0
 2094 01f4 524B     		ldr	r3, .L103+40
 2095 01f6 0122     		movs	r2, #1
 2096 01f8 1A70     		strb	r2, [r3]
1406:Generated_Source\PSoC5/ADC.c **** 
1407:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG3_DSM_CR4;
 2097              		.loc 1 1407 0
 2098 01fa 524B     		ldr	r3, .L103+44
 2099 01fc 5022     		movs	r2, #80
 2100 01fe 1A70     		strb	r2, [r3]
1408:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG3_DSM_CR5;
 2101              		.loc 1 1408 0
 2102 0200 514B     		ldr	r3, .L103+48
 2103 0202 2722     		movs	r2, #39
 2104 0204 1A70     		strb	r2, [r3]
1409:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG3_DSM_CR6;
 2105              		.loc 1 1409 0
 2106 0206 514B     		ldr	r3, .L103+52
 2107 0208 2C22     		movs	r2, #44
 2108 020a 1A70     		strb	r2, [r3]
1410:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG3_DSM_CR7;
 2109              		.loc 1 1410 0
 2110 020c 504B     		ldr	r3, .L103+56
 2111 020e 0022     		movs	r2, #0
 2112 0210 1A70     		strb	r2, [r3]
1411:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG3_DSM_CR10;
 2113              		.loc 1 1411 0
 2114 0212 504B     		ldr	r3, .L103+60
 2115 0214 5522     		movs	r2, #85
 2116 0216 1A70     		strb	r2, [r3]
1412:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG3_DSM_CR11;
 2117              		.loc 1 1412 0
 2118 0218 4F4B     		ldr	r3, .L103+64
 2119 021a 5A22     		movs	r2, #90
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 63


 2120 021c 1A70     		strb	r2, [r3]
1413:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG3_DSM_CR12;
 2121              		.loc 1 1413 0
 2122 021e 4F4B     		ldr	r3, .L103+68
 2123 0220 0522     		movs	r2, #5
 2124 0222 1A70     		strb	r2, [r3]
1414:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG3_DSM_CR14;
 2125              		.loc 1 1414 0
 2126 0224 4E4B     		ldr	r3, .L103+72
 2127 0226 0122     		movs	r2, #1
 2128 0228 1A70     		strb	r2, [r3]
1415:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG3_DSM_CR15;
 2129              		.loc 1 1415 0
 2130 022a 4E4B     		ldr	r3, .L103+76
 2131 022c 1122     		movs	r2, #17
 2132 022e 1A70     		strb	r2, [r3]
1416:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG3_DSM_CR16;
 2133              		.loc 1 1416 0
 2134 0230 4D4B     		ldr	r3, .L103+80
 2135 0232 1922     		movs	r2, #25
 2136 0234 1A70     		strb	r2, [r3]
1417:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG3_DSM_CR17;
 2137              		.loc 1 1417 0
 2138 0236 4D4B     		ldr	r3, .L103+84
 2139 0238 9722     		movs	r2, #151
 2140 023a 1A70     		strb	r2, [r3]
1418:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1419:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG3_DSM_REF0);
 2141              		.loc 1 1419 0
 2142 023c 4420     		movs	r0, #68
 2143 023e FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1420:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG3_DSM_REF2;
 2144              		.loc 1 1420 0
 2145 0242 4B4B     		ldr	r3, .L103+88
 2146 0244 5822     		movs	r2, #88
 2147 0246 1A70     		strb	r2, [r3]
1421:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG3_DSM_REF3;
 2148              		.loc 1 1421 0
 2149 0248 4A4B     		ldr	r3, .L103+92
 2150 024a 0022     		movs	r2, #0
 2151 024c 1A70     		strb	r2, [r3]
1422:Generated_Source\PSoC5/ADC.c **** 
1423:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG3_DSM_BUF0;
 2152              		.loc 1 1423 0
 2153 024e 4A4B     		ldr	r3, .L103+96
 2154 0250 0522     		movs	r2, #5
 2155 0252 1A70     		strb	r2, [r3]
1424:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG3_DSM_BUF1;
 2156              		.loc 1 1424 0
 2157 0254 494B     		ldr	r3, .L103+100
 2158 0256 0222     		movs	r2, #2
 2159 0258 1A70     		strb	r2, [r3]
1425:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG3_DSM_BUF2;
 2160              		.loc 1 1425 0
 2161 025a 494B     		ldr	r3, .L103+104
 2162 025c 0022     		movs	r2, #0
 2163 025e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 64


1426:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG3_DSM_BUF3;
 2164              		.loc 1 1426 0
 2165 0260 484B     		ldr	r3, .L103+108
 2166 0262 0022     		movs	r2, #0
 2167 0264 1A70     		strb	r2, [r3]
1427:Generated_Source\PSoC5/ADC.c **** 
1428:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1429:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1430:Generated_Source\PSoC5/ADC.c ****             */
1431:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1432:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1433:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1434:Generated_Source\PSoC5/ADC.c ****                 #else
1435:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
 2168              		.loc 1 1435 0
 2169 0266 0020     		movs	r0, #0
 2170 0268 FFF7FEFF 		bl	ADC_AMux_Select
1436:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1437:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1438:Generated_Source\PSoC5/ADC.c **** 
1439:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1440:Generated_Source\PSoC5/ADC.c ****                conversion  mode is Single sample */
1441:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG3_RESOLUTION > 16 && \
1442:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG3_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1443:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1444:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1445:Generated_Source\PSoC5/ADC.c **** 
1446:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG3_COUNTS_PER_VOLT;
 2171              		.loc 1 1446 0
 2172 026c 464B     		ldr	r3, .L103+112
 2173 026e 4FF47A42 		mov	r2, #64000
 2174 0272 1A60     		str	r2, [r3]
1447:Generated_Source\PSoC5/ADC.c **** 
1448:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG3_CP_CLK_DIVIDER, 1u);
 2175              		.loc 1 1448 0
 2176 0274 0121     		movs	r1, #1
 2177 0276 0520     		movs	r0, #5
 2178 0278 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1449:Generated_Source\PSoC5/ADC.c **** 
1450:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1451:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1452:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG3_ADC_CLK_DIVIDER, 1u);
 2179              		.loc 1 1452 0
 2180 027c 0121     		movs	r1, #1
 2181 027e 2520     		movs	r0, #37
 2182 0280 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1453:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1454:Generated_Source\PSoC5/ADC.c **** 
1455:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1456:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1457:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR3);
 2183              		.loc 1 1457 0
 2184 0284 4349     		ldr	r1, .L103+124
 2185 0286 1D20     		movs	r0, #29
 2186 0288 FFF7FEFF 		bl	CyIntSetVector
 2187              	.L100:
1458:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 65


1459:Generated_Source\PSoC5/ADC.c ****         }
1460:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
1461:Generated_Source\PSoC5/ADC.c **** 
1462:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
1463:Generated_Source\PSoC5/ADC.c ****         if (config == 4u)
 2188              		.loc 1 1463 0
 2189 028c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2190 028e 042B     		cmp	r3, #4
 2191 0290 40F0A980 		bne	.L102
1464:Generated_Source\PSoC5/ADC.c ****         {
1465:Generated_Source\PSoC5/ADC.c ****             /* Fourth Config */
1466:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG4_DEC_CR;
 2192              		.loc 1 1466 0
 2193 0294 214B     		ldr	r3, .L103+4
 2194 0296 3822     		movs	r2, #56
 2195 0298 1A70     		strb	r2, [r3]
1467:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG4_DEC_SHIFT1;
 2196              		.loc 1 1467 0
 2197 029a 214B     		ldr	r3, .L103+8
 2198 029c 0422     		movs	r2, #4
 2199 029e 1A70     		strb	r2, [r3]
1468:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG4_DEC_SHIFT2;
 2200              		.loc 1 1468 0
 2201 02a0 204B     		ldr	r3, .L103+12
 2202 02a2 0622     		movs	r2, #6
 2203 02a4 1A70     		strb	r2, [r3]
1469:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG4_DEC_DR2;
 2204              		.loc 1 1469 0
 2205 02a6 204B     		ldr	r3, .L103+16
 2206 02a8 0022     		movs	r2, #0
 2207 02aa 1A70     		strb	r2, [r3]
1470:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG4_DEC_DR2H;
 2208              		.loc 1 1470 0
 2209 02ac 1F4B     		ldr	r3, .L103+20
 2210 02ae 0022     		movs	r2, #0
 2211 02b0 1A70     		strb	r2, [r3]
1471:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG4_DEC_DR1;
 2212              		.loc 1 1471 0
 2213 02b2 1F4B     		ldr	r3, .L103+24
 2214 02b4 3F22     		movs	r2, #63
 2215 02b6 1A70     		strb	r2, [r3]
1472:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG4_DEC_OCOR;
 2216              		.loc 1 1472 0
 2217 02b8 1E4B     		ldr	r3, .L103+28
 2218 02ba 0022     		movs	r2, #0
 2219 02bc 1A70     		strb	r2, [r3]
1473:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG4_DEC_OCORM;
 2220              		.loc 1 1473 0
 2221 02be 1E4B     		ldr	r3, .L103+32
 2222 02c0 0022     		movs	r2, #0
 2223 02c2 1A70     		strb	r2, [r3]
1474:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG4_DEC_OCORH;
 2224              		.loc 1 1474 0
 2225 02c4 1D4B     		ldr	r3, .L103+36
 2226 02c6 0022     		movs	r2, #0
 2227 02c8 1A70     		strb	r2, [r3]
1475:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG4_DEC_COHER;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 66


 2228              		.loc 1 1475 0
 2229 02ca 1D4B     		ldr	r3, .L103+40
 2230 02cc 0122     		movs	r2, #1
 2231 02ce 1A70     		strb	r2, [r3]
1476:Generated_Source\PSoC5/ADC.c **** 
1477:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG4_DSM_CR4;
 2232              		.loc 1 1477 0
 2233 02d0 1C4B     		ldr	r3, .L103+44
 2234 02d2 5022     		movs	r2, #80
 2235 02d4 1A70     		strb	r2, [r3]
1478:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG4_DSM_CR5;
 2236              		.loc 1 1478 0
 2237 02d6 1C4B     		ldr	r3, .L103+48
 2238 02d8 2722     		movs	r2, #39
 2239 02da 1A70     		strb	r2, [r3]
1479:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG4_DSM_CR6;
 2240              		.loc 1 1479 0
 2241 02dc 1B4B     		ldr	r3, .L103+52
 2242 02de 2C22     		movs	r2, #44
 2243 02e0 1A70     		strb	r2, [r3]
1480:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG4_DSM_CR7;
 2244              		.loc 1 1480 0
 2245 02e2 1B4B     		ldr	r3, .L103+56
 2246 02e4 0022     		movs	r2, #0
 2247 02e6 1A70     		strb	r2, [r3]
1481:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG4_DSM_CR10;
 2248              		.loc 1 1481 0
 2249 02e8 1A4B     		ldr	r3, .L103+60
 2250 02ea 5522     		movs	r2, #85
 2251 02ec 1A70     		strb	r2, [r3]
1482:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG4_DSM_CR11;
 2252              		.loc 1 1482 0
 2253 02ee 1A4B     		ldr	r3, .L103+64
 2254 02f0 5A22     		movs	r2, #90
 2255 02f2 1A70     		strb	r2, [r3]
1483:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG4_DSM_CR12;
 2256              		.loc 1 1483 0
 2257 02f4 194B     		ldr	r3, .L103+68
 2258 02f6 0522     		movs	r2, #5
 2259 02f8 1A70     		strb	r2, [r3]
1484:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG4_DSM_CR14;
 2260              		.loc 1 1484 0
 2261 02fa 194B     		ldr	r3, .L103+72
 2262 02fc 0122     		movs	r2, #1
 2263 02fe 1A70     		strb	r2, [r3]
1485:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG4_DSM_CR15;
 2264              		.loc 1 1485 0
 2265 0300 184B     		ldr	r3, .L103+76
 2266 0302 1122     		movs	r2, #17
 2267 0304 1A70     		strb	r2, [r3]
1486:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG4_DSM_CR16;
 2268              		.loc 1 1486 0
 2269 0306 184B     		ldr	r3, .L103+80
 2270 0308 1922     		movs	r2, #25
 2271 030a 1A70     		strb	r2, [r3]
1487:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG4_DSM_CR17;
 2272              		.loc 1 1487 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 67


 2273 030c 174B     		ldr	r3, .L103+84
 2274 030e 9722     		movs	r2, #151
 2275 0310 1A70     		strb	r2, [r3]
1488:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1489:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG4_DSM_REF0);
 2276              		.loc 1 1489 0
 2277 0312 4420     		movs	r0, #68
 2278 0314 40E0     		b	.L104
 2279              	.L105:
 2280 0316 00BF     		.align	2
 2281              	.L103:
 2282 0318 00000000 		.word	ADC_stopConversion
 2283 031c 004E0040 		.word	1073761792
 2284 0320 024E0040 		.word	1073761794
 2285 0324 034E0040 		.word	1073761795
 2286 0328 044E0040 		.word	1073761796
 2287 032c 054E0040 		.word	1073761797
 2288 0330 064E0040 		.word	1073761798
 2289 0334 084E0040 		.word	1073761800
 2290 0338 094E0040 		.word	1073761801
 2291 033c 0A4E0040 		.word	1073761802
 2292 0340 144E0040 		.word	1073761812
 2293 0344 84580040 		.word	1073764484
 2294 0348 85580040 		.word	1073764485
 2295 034c 86580040 		.word	1073764486
 2296 0350 87580040 		.word	1073764487
 2297 0354 8A580040 		.word	1073764490
 2298 0358 8B580040 		.word	1073764491
 2299 035c 8C580040 		.word	1073764492
 2300 0360 8E580040 		.word	1073764494
 2301 0364 8F580040 		.word	1073764495
 2302 0368 90580040 		.word	1073764496
 2303 036c 91580040 		.word	1073764497
 2304 0370 94580040 		.word	1073764500
 2305 0374 95580040 		.word	1073764501
 2306 0378 9A580040 		.word	1073764506
 2307 037c 9B580040 		.word	1073764507
 2308 0380 9C580040 		.word	1073764508
 2309 0384 9D580040 		.word	1073764509
 2310 0388 00000000 		.word	ADC_CountsPerVolt
 2311 038c 00000000 		.word	ADC_ISR1
 2312 0390 00000000 		.word	ADC_ISR2
 2313 0394 00000000 		.word	ADC_ISR3
 2314              	.L104:
 2315 0398 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1490:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG4_DSM_REF2;
 2316              		.loc 1 1490 0
 2317 039c 144B     		ldr	r3, .L106
 2318 039e 5822     		movs	r2, #88
 2319 03a0 1A70     		strb	r2, [r3]
1491:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG4_DSM_REF3;
 2320              		.loc 1 1491 0
 2321 03a2 144B     		ldr	r3, .L106+4
 2322 03a4 0022     		movs	r2, #0
 2323 03a6 1A70     		strb	r2, [r3]
1492:Generated_Source\PSoC5/ADC.c **** 
1493:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG4_DSM_BUF0;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 68


 2324              		.loc 1 1493 0
 2325 03a8 134B     		ldr	r3, .L106+8
 2326 03aa 0522     		movs	r2, #5
 2327 03ac 1A70     		strb	r2, [r3]
1494:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG4_DSM_BUF1;
 2328              		.loc 1 1494 0
 2329 03ae 134B     		ldr	r3, .L106+12
 2330 03b0 0222     		movs	r2, #2
 2331 03b2 1A70     		strb	r2, [r3]
1495:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG4_DSM_BUF2;
 2332              		.loc 1 1495 0
 2333 03b4 124B     		ldr	r3, .L106+16
 2334 03b6 0022     		movs	r2, #0
 2335 03b8 1A70     		strb	r2, [r3]
1496:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG4_DSM_BUF3;
 2336              		.loc 1 1496 0
 2337 03ba 124B     		ldr	r3, .L106+20
 2338 03bc 0022     		movs	r2, #0
 2339 03be 1A70     		strb	r2, [r3]
1497:Generated_Source\PSoC5/ADC.c **** 
1498:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1499:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1500:Generated_Source\PSoC5/ADC.c ****             */
1501:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1502:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1503:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1504:Generated_Source\PSoC5/ADC.c ****                 #else
1505:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
 2340              		.loc 1 1505 0
 2341 03c0 0020     		movs	r0, #0
 2342 03c2 FFF7FEFF 		bl	ADC_AMux_Select
1506:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1507:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1508:Generated_Source\PSoC5/ADC.c **** 
1509:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1510:Generated_Source\PSoC5/ADC.c ****                conversion mode is Single sample */
1511:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG4_RESOLUTION > 16 && \
1512:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG4_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1513:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1514:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1515:Generated_Source\PSoC5/ADC.c **** 
1516:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG4_COUNTS_PER_VOLT;
 2343              		.loc 1 1516 0
 2344 03c6 104B     		ldr	r3, .L106+24
 2345 03c8 4FF47A42 		mov	r2, #64000
 2346 03cc 1A60     		str	r2, [r3]
1517:Generated_Source\PSoC5/ADC.c **** 
1518:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG4_CP_CLK_DIVIDER, 1u);
 2347              		.loc 1 1518 0
 2348 03ce 0121     		movs	r1, #1
 2349 03d0 0520     		movs	r0, #5
 2350 03d2 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1519:Generated_Source\PSoC5/ADC.c **** 
1520:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1521:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1522:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG4_ADC_CLK_DIVIDER, 1u);
 2351              		.loc 1 1522 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 69


 2352 03d6 0121     		movs	r1, #1
 2353 03d8 2520     		movs	r0, #37
 2354 03da FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1523:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1524:Generated_Source\PSoC5/ADC.c **** 
1525:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1526:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1527:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR4);
 2355              		.loc 1 1527 0
 2356 03de 0B49     		ldr	r1, .L106+28
 2357 03e0 1D20     		movs	r0, #29
 2358 03e2 FFF7FEFF 		bl	CyIntSetVector
 2359              	.L102:
1528:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1529:Generated_Source\PSoC5/ADC.c ****         }
1530:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
1531:Generated_Source\PSoC5/ADC.c **** }
 2360              		.loc 1 1531 0
 2361 03e6 00BF     		nop
 2362 03e8 0837     		adds	r7, r7, #8
 2363              		.cfi_def_cfa_offset 8
 2364 03ea BD46     		mov	sp, r7
 2365              		.cfi_def_cfa_register 13
 2366              		@ sp needed
 2367 03ec 80BD     		pop	{r7, pc}
 2368              	.L107:
 2369 03ee 00BF     		.align	2
 2370              	.L106:
 2371 03f0 94580040 		.word	1073764500
 2372 03f4 95580040 		.word	1073764501
 2373 03f8 9A580040 		.word	1073764506
 2374 03fc 9B580040 		.word	1073764507
 2375 0400 9C580040 		.word	1073764508
 2376 0404 9D580040 		.word	1073764509
 2377 0408 00000000 		.word	ADC_CountsPerVolt
 2378 040c 00000000 		.word	ADC_ISR4
 2379              		.cfi_endproc
 2380              	.LFE19:
 2381              		.size	ADC_InitConfig, .-ADC_InitConfig
 2382              		.section	.text.ADC_SelectConfiguration,"ax",%progbits
 2383              		.align	2
 2384              		.global	ADC_SelectConfiguration
 2385              		.thumb
 2386              		.thumb_func
 2387              		.type	ADC_SelectConfiguration, %function
 2388              	ADC_SelectConfiguration:
 2389              	.LFB20:
1532:Generated_Source\PSoC5/ADC.c **** 
1533:Generated_Source\PSoC5/ADC.c **** 
1534:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1535:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SelectCofiguration
1536:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1537:Generated_Source\PSoC5/ADC.c **** *
1538:Generated_Source\PSoC5/ADC.c **** * Summary:
1539:Generated_Source\PSoC5/ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1540:Generated_Source\PSoC5/ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1541:Generated_Source\PSoC5/ADC.c **** *  the new configuration, the ADC can be powered and conversion
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 70


1542:Generated_Source\PSoC5/ADC.c **** *  can be restarted depending up on the value of second parameter
1543:Generated_Source\PSoC5/ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1544:Generated_Source\PSoC5/ADC.c **** *  restarted. If this value is zero, then user must call ADC_Start
1545:Generated_Source\PSoC5/ADC.c **** *  and ADC_StartConvert() to restart the conversion.
1546:Generated_Source\PSoC5/ADC.c **** *
1547:Generated_Source\PSoC5/ADC.c **** * Parameters:
1548:Generated_Source\PSoC5/ADC.c **** *  config:  configuration user wants to select.
1549:Generated_Source\PSoC5/ADC.c **** *           Valid range: 1..4
1550:Generated_Source\PSoC5/ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1551:Generated_Source\PSoC5/ADC.c **** *                            0 means do not start the ADC and conversion.
1552:Generated_Source\PSoC5/ADC.c **** *
1553:Generated_Source\PSoC5/ADC.c **** * Return:
1554:Generated_Source\PSoC5/ADC.c **** *  None
1555:Generated_Source\PSoC5/ADC.c **** *
1556:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
1557:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
1558:Generated_Source\PSoC5/ADC.c **** *
1559:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1560:Generated_Source\PSoC5/ADC.c **** void ADC_SelectConfiguration(uint8 config, uint8 restart)
1561:Generated_Source\PSoC5/ADC.c ****                                               
1562:Generated_Source\PSoC5/ADC.c **** {
 2390              		.loc 1 1562 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 8
 2393              		@ frame_needed = 1, uses_anonymous_args = 0
 2394 0000 80B5     		push	{r7, lr}
 2395              		.cfi_def_cfa_offset 8
 2396              		.cfi_offset 7, -8
 2397              		.cfi_offset 14, -4
 2398 0002 82B0     		sub	sp, sp, #8
 2399              		.cfi_def_cfa_offset 16
 2400 0004 00AF     		add	r7, sp, #0
 2401              		.cfi_def_cfa_register 7
 2402 0006 0346     		mov	r3, r0
 2403 0008 0A46     		mov	r2, r1
 2404 000a FB71     		strb	r3, [r7, #7]
 2405 000c 1346     		mov	r3, r2
 2406 000e BB71     		strb	r3, [r7, #6]
1563:Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
1564:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 2407              		.loc 1 1564 0
 2408 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2409 0012 002B     		cmp	r3, #0
 2410 0014 29D0     		beq	.L109
 2411              		.loc 1 1564 0 is_stmt 0 discriminator 1
 2412 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2413 0018 042B     		cmp	r3, #4
 2414 001a 26D8     		bhi	.L109
1565:Generated_Source\PSoC5/ADC.c ****     {
1566:Generated_Source\PSoC5/ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1567:Generated_Source\PSoC5/ADC.c **** 		*  selected configuration
1568:Generated_Source\PSoC5/ADC.c **** 		*/
1569:Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
 2415              		.loc 1 1569 0 is_stmt 1
 2416 001c 164B     		ldr	r3, .L113
 2417 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2418 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 71


 2419 0022 02D1     		bne	.L110
1570:Generated_Source\PSoC5/ADC.c ****         {
1571:Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
 2420              		.loc 1 1571 0
 2421 0024 154B     		ldr	r3, .L113+4
 2422 0026 0122     		movs	r2, #1
 2423 0028 1A70     		strb	r2, [r3]
 2424              	.L110:
1572:Generated_Source\PSoC5/ADC.c ****         }
1573:Generated_Source\PSoC5/ADC.c **** 
1574:Generated_Source\PSoC5/ADC.c ****         /* Update the config flag */
1575:Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
 2425              		.loc 1 1575 0
 2426 002a 154A     		ldr	r2, .L113+8
 2427 002c FB79     		ldrb	r3, [r7, #7]
 2428 002e 1370     		strb	r3, [r2]
1576:Generated_Source\PSoC5/ADC.c **** 
1577:Generated_Source\PSoC5/ADC.c ****         /* Stop the ADC  */
1578:Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
 2429              		.loc 1 1578 0
 2430 0030 FFF7FEFF 		bl	ADC_Stop
1579:Generated_Source\PSoC5/ADC.c **** 
1580:Generated_Source\PSoC5/ADC.c ****         /* Set the  ADC registers based on the configuration */
1581:Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
 2431              		.loc 1 1581 0
 2432 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2433 0036 1846     		mov	r0, r3
 2434 0038 FFF7FEFF 		bl	ADC_InitConfig
1582:Generated_Source\PSoC5/ADC.c **** 
1583:Generated_Source\PSoC5/ADC.c ****         /* Compensate the gain */
1584:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
 2435              		.loc 1 1584 0
 2436 003c 114A     		ldr	r2, .L113+12
 2437 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2438 0040 013B     		subs	r3, r3, #1
 2439 0042 1149     		ldr	r1, .L113+16
 2440 0044 9B00     		lsls	r3, r3, #2
 2441 0046 0B44     		add	r3, r3, r1
 2442 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2443 004a 1370     		strb	r3, [r2]
1585:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
 2444              		.loc 1 1585 0
 2445 004c 0F4A     		ldr	r2, .L113+20
 2446 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2447 0050 013B     		subs	r3, r3, #1
 2448 0052 0D49     		ldr	r1, .L113+16
 2449 0054 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 2450 0058 1380     		strh	r3, [r2]	@ movhi
1586:Generated_Source\PSoC5/ADC.c **** 
1587:Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
 2451              		.loc 1 1587 0
 2452 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2453 005c 012B     		cmp	r3, #1
 2454 005e 07D1     		bne	.L112
1588:Generated_Source\PSoC5/ADC.c ****         {
1589:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC */
1590:Generated_Source\PSoC5/ADC.c ****             ADC_Start();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 72


 2455              		.loc 1 1590 0
 2456 0060 FFF7FEFF 		bl	ADC_Start
1591:Generated_Source\PSoC5/ADC.c **** 
1592:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC conversion */
1593:Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
 2457              		.loc 1 1593 0
 2458 0064 FFF7FEFF 		bl	ADC_StartConvert
1587:Generated_Source\PSoC5/ADC.c ****         {
 2459              		.loc 1 1587 0
 2460 0068 02E0     		b	.L112
 2461              	.L109:
1594:Generated_Source\PSoC5/ADC.c ****         }
1595:Generated_Source\PSoC5/ADC.c ****     }
1596:Generated_Source\PSoC5/ADC.c ****     else
1597:Generated_Source\PSoC5/ADC.c ****     {
1598:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1599:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 2462              		.loc 1 1599 0 discriminator 1
 2463 006a 0020     		movs	r0, #0
 2464 006c FFF7FEFF 		bl	CyHalt
 2465              	.L112:
1600:Generated_Source\PSoC5/ADC.c ****     }
1601:Generated_Source\PSoC5/ADC.c **** }
 2466              		.loc 1 1601 0
 2467 0070 00BF     		nop
 2468 0072 0837     		adds	r7, r7, #8
 2469              		.cfi_def_cfa_offset 8
 2470 0074 BD46     		mov	sp, r7
 2471              		.cfi_def_cfa_register 13
 2472              		@ sp needed
 2473 0076 80BD     		pop	{r7, pc}
 2474              	.L114:
 2475              		.align	2
 2476              	.L113:
 2477 0078 00000000 		.word	ADC_initVar
 2478 007c 00000000 		.word	ADC_started
 2479 0080 00000000 		.word	ADC_Config
 2480 0084 0E4E0040 		.word	1073761806
 2481 0088 08000000 		.word	ADC_gcor
 2482 008c 0C4E0040 		.word	1073761804
 2483              		.cfi_endproc
 2484              	.LFE20:
 2485              		.size	ADC_SelectConfiguration, .-ADC_SelectConfiguration
 2486              		.section	.text.ADC_GainCompensation,"ax",%progbits
 2487              		.align	2
 2488              		.thumb
 2489              		.thumb_func
 2490              		.type	ADC_GainCompensation, %function
 2491              	ADC_GainCompensation:
 2492              	.LFB21:
1602:Generated_Source\PSoC5/ADC.c **** 
1603:Generated_Source\PSoC5/ADC.c **** 
1604:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1605:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GainCompensation
1606:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1607:Generated_Source\PSoC5/ADC.c **** *
1608:Generated_Source\PSoC5/ADC.c **** * Summary:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 73


1609:Generated_Source\PSoC5/ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1610:Generated_Source\PSoC5/ADC.c **** *
1611:Generated_Source\PSoC5/ADC.c **** * Parameters:
1612:Generated_Source\PSoC5/ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1613:Generated_Source\PSoC5/ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1614:Generated_Source\PSoC5/ADC.c **** *                 conversion  mode.
1615:Generated_Source\PSoC5/ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1616:Generated_Source\PSoC5/ADC.c ****                      conversion mode.
1617:Generated_Source\PSoC5/ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1618:Generated_Source\PSoC5/ADC.c **** *  config:      Specifies the configuration number
1619:Generated_Source\PSoC5/ADC.c **** *               Valid range: 1..4
1620:Generated_Source\PSoC5/ADC.c **** *
1621:Generated_Source\PSoC5/ADC.c **** * Return:
1622:Generated_Source\PSoC5/ADC.c **** *  None
1623:Generated_Source\PSoC5/ADC.c **** *
1624:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1625:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1626:Generated_Source\PSoC5/ADC.c ****                               uint8 resolution, uint8 config) 
1627:Generated_Source\PSoC5/ADC.c **** {
 2493              		.loc 1 1627 0
 2494              		.cfi_startproc
 2495              		@ args = 4, pretend = 0, frame = 24
 2496              		@ frame_needed = 1, uses_anonymous_args = 0
 2497 0000 90B5     		push	{r4, r7, lr}
 2498              		.cfi_def_cfa_offset 12
 2499              		.cfi_offset 4, -12
 2500              		.cfi_offset 7, -8
 2501              		.cfi_offset 14, -4
 2502 0002 87B0     		sub	sp, sp, #28
 2503              		.cfi_def_cfa_offset 40
 2504 0004 00AF     		add	r7, sp, #0
 2505              		.cfi_def_cfa_register 7
 2506 0006 0446     		mov	r4, r0
 2507 0008 0846     		mov	r0, r1
 2508 000a 1146     		mov	r1, r2
 2509 000c 1A46     		mov	r2, r3
 2510 000e 2346     		mov	r3, r4
 2511 0010 FB71     		strb	r3, [r7, #7]
 2512 0012 0346     		mov	r3, r0	@ movhi
 2513 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 2514 0016 0B46     		mov	r3, r1	@ movhi
 2515 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 2516 001a 1346     		mov	r3, r2
 2517 001c BB71     		strb	r3, [r7, #6]
1628:Generated_Source\PSoC5/ADC.c ****     int8 flash;
1629:Generated_Source\PSoC5/ADC.c **** 	int32 normalised;
1630:Generated_Source\PSoC5/ADC.c **** 	uint16 gcorValue;
1631:Generated_Source\PSoC5/ADC.c ****     uint32 gcorTmp;
1632:Generated_Source\PSoC5/ADC.c **** 
1633:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 2518              		.loc 1 1633 0
 2519 001e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2520 0022 002B     		cmp	r3, #0
 2521 0024 00F08B80 		beq	.L116
 2522              		.loc 1 1633 0 is_stmt 0 discriminator 1
 2523 0028 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2524 002c 042B     		cmp	r3, #4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 74


 2525 002e 00F28680 		bhi	.L116
1634:Generated_Source\PSoC5/ADC.c ****     {
1635:Generated_Source\PSoC5/ADC.c ****         switch(inputRange)
 2526              		.loc 1 1635 0 is_stmt 1
 2527 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2528 0034 013B     		subs	r3, r3, #1
 2529 0036 092B     		cmp	r3, #9
 2530 0038 4AD8     		bhi	.L117
 2531 003a 01A2     		adr	r2, .L119
 2532 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2533              		.p2align 2
 2534              	.L119:
 2535 0040 69000000 		.word	.L118+1
 2536 0044 D1000000 		.word	.L117+1
 2537 0048 D1000000 		.word	.L117+1
 2538 004c 69000000 		.word	.L118+1
 2539 0050 D1000000 		.word	.L117+1
 2540 0054 D1000000 		.word	.L117+1
 2541 0058 83000000 		.word	.L120+1
 2542 005c 9D000000 		.word	.L121+1
 2543 0060 D1000000 		.word	.L117+1
 2544 0064 B7000000 		.word	.L122+1
 2545              		.p2align 1
 2546              	.L118:
1636:Generated_Source\PSoC5/ADC.c ****         {
1637:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_DIFF:
1638:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VSSA_TO_2VREF:
1639:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1640:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2547              		.loc 1 1640 0
 2548 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2549 006a 0F2B     		cmp	r3, #15
 2550 006c 04D9     		bls	.L123
1641:Generated_Source\PSoC5/ADC.c ****                 {
1642:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_16_20;
 2551              		.loc 1 1642 0
 2552 006e 374B     		ldr	r3, .L135
 2553 0070 1B78     		ldrb	r3, [r3]
 2554 0072 DBB2     		uxtb	r3, r3
 2555 0074 FB75     		strb	r3, [r7, #23]
1643:Generated_Source\PSoC5/ADC.c ****                 }
1644:Generated_Source\PSoC5/ADC.c ****                 else
1645:Generated_Source\PSoC5/ADC.c ****                 {
1646:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_8_15;
1647:Generated_Source\PSoC5/ADC.c ****                 }
1648:Generated_Source\PSoC5/ADC.c ****                 break;
 2556              		.loc 1 1648 0
 2557 0076 2EE0     		b	.L125
 2558              	.L123:
1646:Generated_Source\PSoC5/ADC.c ****                 }
 2559              		.loc 1 1646 0
 2560 0078 354B     		ldr	r3, .L135+4
 2561 007a 1B78     		ldrb	r3, [r3]
 2562 007c DBB2     		uxtb	r3, r3
 2563 007e FB75     		strb	r3, [r7, #23]
 2564              		.loc 1 1648 0
 2565 0080 29E0     		b	.L125
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 75


 2566              	.L120:
1649:Generated_Source\PSoC5/ADC.c **** 
1650:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_2_DIFF:
1651:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1652:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2567              		.loc 1 1652 0
 2568 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2569 0084 0F2B     		cmp	r3, #15
 2570 0086 04D9     		bls	.L126
1653:Generated_Source\PSoC5/ADC.c ****                 {
1654:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_16_20;
 2571              		.loc 1 1654 0
 2572 0088 324B     		ldr	r3, .L135+8
 2573 008a 1B78     		ldrb	r3, [r3]
 2574 008c DBB2     		uxtb	r3, r3
 2575 008e FB75     		strb	r3, [r7, #23]
1655:Generated_Source\PSoC5/ADC.c ****                 }
1656:Generated_Source\PSoC5/ADC.c ****                 else
1657:Generated_Source\PSoC5/ADC.c ****                 {
1658:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_8_15;
1659:Generated_Source\PSoC5/ADC.c ****                 }
1660:Generated_Source\PSoC5/ADC.c ****                 break;
 2576              		.loc 1 1660 0
 2577 0090 21E0     		b	.L125
 2578              	.L126:
1658:Generated_Source\PSoC5/ADC.c ****                 }
 2579              		.loc 1 1658 0
 2580 0092 314B     		ldr	r3, .L135+12
 2581 0094 1B78     		ldrb	r3, [r3]
 2582 0096 DBB2     		uxtb	r3, r3
 2583 0098 FB75     		strb	r3, [r7, #23]
 2584              		.loc 1 1660 0
 2585 009a 1CE0     		b	.L125
 2586              	.L121:
1661:Generated_Source\PSoC5/ADC.c **** 
1662:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_4_DIFF:
1663:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1664:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2587              		.loc 1 1664 0
 2588 009c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2589 009e 0F2B     		cmp	r3, #15
 2590 00a0 04D9     		bls	.L128
1665:Generated_Source\PSoC5/ADC.c ****                 {
1666:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_16_20;
 2591              		.loc 1 1666 0
 2592 00a2 2E4B     		ldr	r3, .L135+16
 2593 00a4 1B78     		ldrb	r3, [r3]
 2594 00a6 DBB2     		uxtb	r3, r3
 2595 00a8 FB75     		strb	r3, [r7, #23]
1667:Generated_Source\PSoC5/ADC.c ****                 }
1668:Generated_Source\PSoC5/ADC.c ****                 else
1669:Generated_Source\PSoC5/ADC.c ****                 {
1670:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_8_15;
1671:Generated_Source\PSoC5/ADC.c ****                 }
1672:Generated_Source\PSoC5/ADC.c ****                 break;
 2596              		.loc 1 1672 0
 2597 00aa 14E0     		b	.L125
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 76


 2598              	.L128:
1670:Generated_Source\PSoC5/ADC.c ****                 }
 2599              		.loc 1 1670 0
 2600 00ac 2C4B     		ldr	r3, .L135+20
 2601 00ae 1B78     		ldrb	r3, [r3]
 2602 00b0 DBB2     		uxtb	r3, r3
 2603 00b2 FB75     		strb	r3, [r7, #23]
 2604              		.loc 1 1672 0
 2605 00b4 0FE0     		b	.L125
 2606              	.L122:
1673:Generated_Source\PSoC5/ADC.c **** 
1674:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_16_DIFF:
1675:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1676:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2607              		.loc 1 1676 0
 2608 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2609 00b8 0F2B     		cmp	r3, #15
 2610 00ba 04D9     		bls	.L130
1677:Generated_Source\PSoC5/ADC.c ****                 {
1678:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 2611              		.loc 1 1678 0
 2612 00bc 294B     		ldr	r3, .L135+24
 2613 00be 1B78     		ldrb	r3, [r3]
 2614 00c0 DBB2     		uxtb	r3, r3
 2615 00c2 FB75     		strb	r3, [r7, #23]
1679:Generated_Source\PSoC5/ADC.c ****                 }
1680:Generated_Source\PSoC5/ADC.c ****                 else
1681:Generated_Source\PSoC5/ADC.c ****                 {
1682:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_8_15;
1683:Generated_Source\PSoC5/ADC.c ****                 }
1684:Generated_Source\PSoC5/ADC.c ****                 break;
 2616              		.loc 1 1684 0
 2617 00c4 07E0     		b	.L125
 2618              	.L130:
1682:Generated_Source\PSoC5/ADC.c ****                 }
 2619              		.loc 1 1682 0
 2620 00c6 284B     		ldr	r3, .L135+28
 2621 00c8 1B78     		ldrb	r3, [r3]
 2622 00ca DBB2     		uxtb	r3, r3
 2623 00cc FB75     		strb	r3, [r7, #23]
 2624              		.loc 1 1684 0
 2625 00ce 02E0     		b	.L125
 2626              	.L117:
1685:Generated_Source\PSoC5/ADC.c **** 
1686:Generated_Source\PSoC5/ADC.c ****             default:
1687:Generated_Source\PSoC5/ADC.c ****                 flash = 0;
 2627              		.loc 1 1687 0
 2628 00d0 0023     		movs	r3, #0
 2629 00d2 FB75     		strb	r3, [r7, #23]
1688:Generated_Source\PSoC5/ADC.c ****                 break;
 2630              		.loc 1 1688 0
 2631 00d4 00BF     		nop
 2632              	.L125:
1689:Generated_Source\PSoC5/ADC.c ****         }
1690:Generated_Source\PSoC5/ADC.c **** 
1691:Generated_Source\PSoC5/ADC.c ****         /* Add two values */
1692:Generated_Source\PSoC5/ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 77


 2633              		.loc 1 1692 0
 2634 00d6 BA88     		ldrh	r2, [r7, #4]
 2635 00d8 97F91730 		ldrsb	r3, [r7, #23]
 2636 00dc 5B01     		lsls	r3, r3, #5
 2637 00de 1344     		add	r3, r3, r2
 2638 00e0 3B61     		str	r3, [r7, #16]
1693:Generated_Source\PSoC5/ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 2639              		.loc 1 1693 0
 2640 00e2 7B88     		ldrh	r3, [r7, #2]
 2641 00e4 3A69     		ldr	r2, [r7, #16]
 2642 00e6 02FB03F3 		mul	r3, r2, r3
 2643 00ea FB60     		str	r3, [r7, #12]
1694:Generated_Source\PSoC5/ADC.c ****         gcorValue = (uint16)(gcorTmp / ADC_IDEAL_GAIN_CONST);
 2644              		.loc 1 1694 0
 2645 00ec FB68     		ldr	r3, [r7, #12]
 2646 00ee DB0B     		lsrs	r3, r3, #15
 2647 00f0 BB82     		strh	r3, [r7, #20]	@ movhi
1695:Generated_Source\PSoC5/ADC.c **** 
1696:Generated_Source\PSoC5/ADC.c ****         if (resolution < (ADC_MAX_GVAL - 1u))
 2648              		.loc 1 1696 0
 2649 00f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2650 00f4 0D2B     		cmp	r3, #13
 2651 00f6 12D8     		bhi	.L132
1697:Generated_Source\PSoC5/ADC.c ****         {
1698:Generated_Source\PSoC5/ADC.c ****             gcorValue = (gcorValue >> (ADC_MAX_GVAL - (resolution + 1u)));
 2652              		.loc 1 1698 0
 2653 00f8 BA8A     		ldrh	r2, [r7, #20]
 2654 00fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2655 00fc C3F10E03 		rsb	r3, r3, #14
 2656 0100 42FA03F3 		asr	r3, r2, r3
 2657 0104 BB82     		strh	r3, [r7, #20]	@ movhi
1699:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = (resolution + 1u);
 2658              		.loc 1 1699 0
 2659 0106 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2660 010a 013B     		subs	r3, r3, #1
 2661 010c BA79     		ldrb	r2, [r7, #6]
 2662 010e 0132     		adds	r2, r2, #1
 2663 0110 D1B2     		uxtb	r1, r2
 2664 0112 164A     		ldr	r2, .L135+32
 2665 0114 9B00     		lsls	r3, r3, #2
 2666 0116 1344     		add	r3, r3, r2
 2667 0118 0A46     		mov	r2, r1
 2668 011a 9A70     		strb	r2, [r3, #2]
 2669 011c 07E0     		b	.L133
 2670              	.L132:
1700:Generated_Source\PSoC5/ADC.c ****         }
1701:Generated_Source\PSoC5/ADC.c ****         else
1702:Generated_Source\PSoC5/ADC.c ****         {
1703:Generated_Source\PSoC5/ADC.c ****             /* Use all 16 bits */
1704:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = ADC_MAX_GVAL;
 2671              		.loc 1 1704 0
 2672 011e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2673 0122 013B     		subs	r3, r3, #1
 2674 0124 114A     		ldr	r2, .L135+32
 2675 0126 9B00     		lsls	r3, r3, #2
 2676 0128 1344     		add	r3, r3, r2
 2677 012a 0F22     		movs	r2, #15
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 78


 2678 012c 9A70     		strb	r2, [r3, #2]
 2679              	.L133:
1705:Generated_Source\PSoC5/ADC.c ****         }
1706:Generated_Source\PSoC5/ADC.c **** 
1707:Generated_Source\PSoC5/ADC.c ****         /* Save the gain correction register value */
1708:Generated_Source\PSoC5/ADC.c ****         ADC_gcor[config - 1u].gcor = gcorValue;
 2680              		.loc 1 1708 0
 2681 012e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2682 0132 013B     		subs	r3, r3, #1
 2683 0134 0D49     		ldr	r1, .L135+32
 2684 0136 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2685 0138 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 2686 013c 02E0     		b	.L134
 2687              	.L116:
1709:Generated_Source\PSoC5/ADC.c ****     }
1710:Generated_Source\PSoC5/ADC.c ****     else
1711:Generated_Source\PSoC5/ADC.c ****     {
1712:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1713:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 2688              		.loc 1 1713 0 discriminator 1
 2689 013e 0020     		movs	r0, #0
 2690 0140 FFF7FEFF 		bl	CyHalt
 2691              	.L134:
1714:Generated_Source\PSoC5/ADC.c ****     }
1715:Generated_Source\PSoC5/ADC.c **** }
 2692              		.loc 1 1715 0
 2693 0144 00BF     		nop
 2694 0146 1C37     		adds	r7, r7, #28
 2695              		.cfi_def_cfa_offset 12
 2696 0148 BD46     		mov	sp, r7
 2697              		.cfi_def_cfa_register 13
 2698              		@ sp needed
 2699 014a 90BD     		pop	{r4, r7, pc}
 2700              	.L136:
 2701              		.align	2
 2702              	.L135:
 2703 014c 18010049 		.word	1224737048
 2704 0150 1C010049 		.word	1224737052
 2705 0154 19010049 		.word	1224737049
 2706 0158 1D010049 		.word	1224737053
 2707 015c 1A010049 		.word	1224737050
 2708 0160 1E010049 		.word	1224737054
 2709 0164 1B010049 		.word	1224737051
 2710 0168 1F010049 		.word	1224737055
 2711 016c 08000000 		.word	ADC_gcor
 2712              		.cfi_endproc
 2713              	.LFE21:
 2714              		.size	ADC_GainCompensation, .-ADC_GainCompensation
 2715              		.section	.text.ADC_SetDSMRef0Reg,"ax",%progbits
 2716              		.align	2
 2717              		.thumb
 2718              		.thumb_func
 2719              		.type	ADC_SetDSMRef0Reg, %function
 2720              	ADC_SetDSMRef0Reg:
 2721              	.LFB22:
1716:Generated_Source\PSoC5/ADC.c **** 
1717:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 79


1718:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
1719:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetDSMRef0Reg(uint8)
1720:Generated_Source\PSoC5/ADC.c **** ******************************************************************************
1721:Generated_Source\PSoC5/ADC.c **** *
1722:Generated_Source\PSoC5/ADC.c **** * Summary:
1723:Generated_Source\PSoC5/ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1724:Generated_Source\PSoC5/ADC.c **** *
1725:Generated_Source\PSoC5/ADC.c **** * Parameters:
1726:Generated_Source\PSoC5/ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1727:Generated_Source\PSoC5/ADC.c **** *
1728:Generated_Source\PSoC5/ADC.c **** * Return:
1729:Generated_Source\PSoC5/ADC.c **** *  None
1730:Generated_Source\PSoC5/ADC.c **** *
1731:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
1732:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) 
1733:Generated_Source\PSoC5/ADC.c **** {
 2722              		.loc 1 1733 0
 2723              		.cfi_startproc
 2724              		@ args = 0, pretend = 0, frame = 16
 2725              		@ frame_needed = 1, uses_anonymous_args = 0
 2726 0000 80B5     		push	{r7, lr}
 2727              		.cfi_def_cfa_offset 8
 2728              		.cfi_offset 7, -8
 2729              		.cfi_offset 14, -4
 2730 0002 84B0     		sub	sp, sp, #16
 2731              		.cfi_def_cfa_offset 24
 2732 0004 00AF     		add	r7, sp, #0
 2733              		.cfi_def_cfa_register 7
 2734 0006 0346     		mov	r3, r0
 2735 0008 FB71     		strb	r3, [r7, #7]
1734:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
1735:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 2736              		.loc 1 1735 0
 2737 000a FFF7FEFF 		bl	CyEnterCriticalSection
 2738 000e 0346     		mov	r3, r0
 2739 0010 FB73     		strb	r3, [r7, #15]
1736:Generated_Source\PSoC5/ADC.c **** 
1737:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1738:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= (ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2740              		.loc 1 1738 0
 2741 0012 174A     		ldr	r2, .L138
 2742 0014 164B     		ldr	r3, .L138
 2743 0016 1B78     		ldrb	r3, [r3]
 2744 0018 DBB2     		uxtb	r3, r3
 2745 001a 43F00303 		orr	r3, r3, #3
 2746 001e DBB2     		uxtb	r3, r3
 2747 0020 1370     		strb	r3, [r2]
1739:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= (ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2748              		.loc 1 1739 0
 2749 0022 144A     		ldr	r2, .L138+4
 2750 0024 134B     		ldr	r3, .L138+4
 2751 0026 1B78     		ldrb	r3, [r3]
 2752 0028 DBB2     		uxtb	r3, r3
 2753 002a 43F00303 		orr	r3, r3, #3
 2754 002e DBB2     		uxtb	r3, r3
 2755 0030 1370     		strb	r3, [r2]
1740:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG = value;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 80


 2756              		.loc 1 1740 0
 2757 0032 114A     		ldr	r2, .L138+8
 2758 0034 FB79     		ldrb	r3, [r7, #7]
 2759 0036 1370     		strb	r3, [r2]
1741:Generated_Source\PSoC5/ADC.c **** 
1742:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
1743:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 2760              		.loc 1 1743 0
 2761 0038 0320     		movs	r0, #3
 2762 003a FFF7FEFF 		bl	CyDelayUs
1744:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
1745:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~(ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2763              		.loc 1 1745 0
 2764 003e 0C4A     		ldr	r2, .L138
 2765 0040 0B4B     		ldr	r3, .L138
 2766 0042 1B78     		ldrb	r3, [r3]
 2767 0044 DBB2     		uxtb	r3, r3
 2768 0046 23F00303 		bic	r3, r3, #3
 2769 004a DBB2     		uxtb	r3, r3
 2770 004c 1370     		strb	r3, [r2]
1746:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~(ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2771              		.loc 1 1746 0
 2772 004e 094A     		ldr	r2, .L138+4
 2773 0050 084B     		ldr	r3, .L138+4
 2774 0052 1B78     		ldrb	r3, [r3]
 2775 0054 DBB2     		uxtb	r3, r3
 2776 0056 23F00303 		bic	r3, r3, #3
 2777 005a DBB2     		uxtb	r3, r3
 2778 005c 1370     		strb	r3, [r2]
1747:Generated_Source\PSoC5/ADC.c **** 
1748:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 2779              		.loc 1 1748 0
 2780 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2781 0060 1846     		mov	r0, r3
 2782 0062 FFF7FEFF 		bl	CyExitCriticalSection
1749:Generated_Source\PSoC5/ADC.c **** }
 2783              		.loc 1 1749 0
 2784 0066 00BF     		nop
 2785 0068 1037     		adds	r7, r7, #16
 2786              		.cfi_def_cfa_offset 8
 2787 006a BD46     		mov	sp, r7
 2788              		.cfi_def_cfa_register 13
 2789              		@ sp needed
 2790 006c 80BD     		pop	{r7, pc}
 2791              	.L139:
 2792 006e 00BF     		.align	2
 2793              	.L138:
 2794 0070 F8460040 		.word	1073759992
 2795 0074 F9460040 		.word	1073759993
 2796 0078 92580040 		.word	1073764498
 2797              		.cfi_endproc
 2798              	.LFE22:
 2799              		.size	ADC_SetDSMRef0Reg, .-ADC_SetDSMRef0Reg
 2800              		.section	.text.ADC_Read8,"ax",%progbits
 2801              		.align	2
 2802              		.global	ADC_Read8
 2803              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 81


 2804              		.thumb_func
 2805              		.type	ADC_Read8, %function
 2806              	ADC_Read8:
 2807              	.LFB23:
1750:Generated_Source\PSoC5/ADC.c **** 
1751:Generated_Source\PSoC5/ADC.c **** 
1752:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1753:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read8
1754:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1755:Generated_Source\PSoC5/ADC.c **** *
1756:Generated_Source\PSoC5/ADC.c **** * Summary:
1757:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1758:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1759:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1760:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1761:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1762:Generated_Source\PSoC5/ADC.c **** *
1763:Generated_Source\PSoC5/ADC.c **** * Parameters:
1764:Generated_Source\PSoC5/ADC.c **** *  None
1765:Generated_Source\PSoC5/ADC.c **** *
1766:Generated_Source\PSoC5/ADC.c **** * Return:
1767:Generated_Source\PSoC5/ADC.c **** *  int8:  ADC result.
1768:Generated_Source\PSoC5/ADC.c **** *
1769:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1770:Generated_Source\PSoC5/ADC.c **** int8 ADC_Read8(void) 
1771:Generated_Source\PSoC5/ADC.c **** {
 2808              		.loc 1 1771 0
 2809              		.cfi_startproc
 2810              		@ args = 0, pretend = 0, frame = 8
 2811              		@ frame_needed = 1, uses_anonymous_args = 0
 2812 0000 80B5     		push	{r7, lr}
 2813              		.cfi_def_cfa_offset 8
 2814              		.cfi_offset 7, -8
 2815              		.cfi_offset 14, -4
 2816 0002 82B0     		sub	sp, sp, #8
 2817              		.cfi_def_cfa_offset 16
 2818 0004 00AF     		add	r7, sp, #0
 2819              		.cfi_def_cfa_register 7
1772:Generated_Source\PSoC5/ADC.c ****     int8 result;
1773:Generated_Source\PSoC5/ADC.c **** 
1774:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1775:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2820              		.loc 1 1775 0
 2821 0006 0C4A     		ldr	r2, .L142
 2822 0008 0B4B     		ldr	r3, .L142
 2823 000a 1B78     		ldrb	r3, [r3]
 2824 000c DBB2     		uxtb	r3, r3
 2825 000e 43F00403 		orr	r3, r3, #4
 2826 0012 DBB2     		uxtb	r3, r3
 2827 0014 1370     		strb	r3, [r2]
1776:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2828              		.loc 1 1776 0
 2829 0016 FFF7FEFF 		bl	ADC_StartConvert
1777:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2830              		.loc 1 1777 0
 2831 001a 0020     		movs	r0, #0
 2832 001c FFF7FEFF 		bl	ADC_IsEndConversion
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 82


1778:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult8();
 2833              		.loc 1 1778 0
 2834 0020 FFF7FEFF 		bl	ADC_GetResult8
 2835 0024 0346     		mov	r3, r0
 2836 0026 FB71     		strb	r3, [r7, #7]
1779:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2837              		.loc 1 1779 0
 2838 0028 FFF7FEFF 		bl	ADC_StopConvert
1780:Generated_Source\PSoC5/ADC.c ****     
1781:Generated_Source\PSoC5/ADC.c ****      return(result);
 2839              		.loc 1 1781 0
 2840 002c 97F90730 		ldrsb	r3, [r7, #7]
1782:Generated_Source\PSoC5/ADC.c **** }
 2841              		.loc 1 1782 0
 2842 0030 1846     		mov	r0, r3
 2843 0032 0837     		adds	r7, r7, #8
 2844              		.cfi_def_cfa_offset 8
 2845 0034 BD46     		mov	sp, r7
 2846              		.cfi_def_cfa_register 13
 2847              		@ sp needed
 2848 0036 80BD     		pop	{r7, pc}
 2849              	.L143:
 2850              		.align	2
 2851              	.L142:
 2852 0038 014E0040 		.word	1073761793
 2853              		.cfi_endproc
 2854              	.LFE23:
 2855              		.size	ADC_Read8, .-ADC_Read8
 2856              		.section	.text.ADC_Read16,"ax",%progbits
 2857              		.align	2
 2858              		.global	ADC_Read16
 2859              		.thumb
 2860              		.thumb_func
 2861              		.type	ADC_Read16, %function
 2862              	ADC_Read16:
 2863              	.LFB24:
1783:Generated_Source\PSoC5/ADC.c **** 
1784:Generated_Source\PSoC5/ADC.c **** 
1785:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1786:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read16
1787:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1788:Generated_Source\PSoC5/ADC.c **** *
1789:Generated_Source\PSoC5/ADC.c **** * Summary:
1790:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1791:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1792:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1793:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1794:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1795:Generated_Source\PSoC5/ADC.c **** *
1796:Generated_Source\PSoC5/ADC.c **** * Parameters:
1797:Generated_Source\PSoC5/ADC.c **** *   void
1798:Generated_Source\PSoC5/ADC.c **** *
1799:Generated_Source\PSoC5/ADC.c **** * Return:
1800:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
1801:Generated_Source\PSoC5/ADC.c **** *
1802:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1803:Generated_Source\PSoC5/ADC.c **** int16 ADC_Read16(void) 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 83


1804:Generated_Source\PSoC5/ADC.c **** {
 2864              		.loc 1 1804 0
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 8
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868 0000 80B5     		push	{r7, lr}
 2869              		.cfi_def_cfa_offset 8
 2870              		.cfi_offset 7, -8
 2871              		.cfi_offset 14, -4
 2872 0002 82B0     		sub	sp, sp, #8
 2873              		.cfi_def_cfa_offset 16
 2874 0004 00AF     		add	r7, sp, #0
 2875              		.cfi_def_cfa_register 7
1805:Generated_Source\PSoC5/ADC.c ****     int16 result;
1806:Generated_Source\PSoC5/ADC.c **** 
1807:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1808:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2876              		.loc 1 1808 0
 2877 0006 0C4A     		ldr	r2, .L146
 2878 0008 0B4B     		ldr	r3, .L146
 2879 000a 1B78     		ldrb	r3, [r3]
 2880 000c DBB2     		uxtb	r3, r3
 2881 000e 43F00403 		orr	r3, r3, #4
 2882 0012 DBB2     		uxtb	r3, r3
 2883 0014 1370     		strb	r3, [r2]
1809:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2884              		.loc 1 1809 0
 2885 0016 FFF7FEFF 		bl	ADC_StartConvert
1810:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2886              		.loc 1 1810 0
 2887 001a 0020     		movs	r0, #0
 2888 001c FFF7FEFF 		bl	ADC_IsEndConversion
1811:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult16();
 2889              		.loc 1 1811 0
 2890 0020 FFF7FEFF 		bl	ADC_GetResult16
 2891 0024 0346     		mov	r3, r0
 2892 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1812:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2893              		.loc 1 1812 0
 2894 0028 FFF7FEFF 		bl	ADC_StopConvert
1813:Generated_Source\PSoC5/ADC.c ****     
1814:Generated_Source\PSoC5/ADC.c ****      return(result);
 2895              		.loc 1 1814 0
 2896 002c B7F90630 		ldrsh	r3, [r7, #6]
1815:Generated_Source\PSoC5/ADC.c **** }
 2897              		.loc 1 1815 0
 2898 0030 1846     		mov	r0, r3
 2899 0032 0837     		adds	r7, r7, #8
 2900              		.cfi_def_cfa_offset 8
 2901 0034 BD46     		mov	sp, r7
 2902              		.cfi_def_cfa_register 13
 2903              		@ sp needed
 2904 0036 80BD     		pop	{r7, pc}
 2905              	.L147:
 2906              		.align	2
 2907              	.L146:
 2908 0038 014E0040 		.word	1073761793
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 84


 2909              		.cfi_endproc
 2910              	.LFE24:
 2911              		.size	ADC_Read16, .-ADC_Read16
 2912              		.section	.text.ADC_Read32,"ax",%progbits
 2913              		.align	2
 2914              		.global	ADC_Read32
 2915              		.thumb
 2916              		.thumb_func
 2917              		.type	ADC_Read32, %function
 2918              	ADC_Read32:
 2919              	.LFB25:
1816:Generated_Source\PSoC5/ADC.c **** 
1817:Generated_Source\PSoC5/ADC.c **** 
1818:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1819:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read32
1820:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1821:Generated_Source\PSoC5/ADC.c **** *
1822:Generated_Source\PSoC5/ADC.c **** * Summary:
1823:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1824:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1825:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1826:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1827:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1828:Generated_Source\PSoC5/ADC.c **** *
1829:Generated_Source\PSoC5/ADC.c **** * Parameters:
1830:Generated_Source\PSoC5/ADC.c **** *  None
1831:Generated_Source\PSoC5/ADC.c **** *
1832:Generated_Source\PSoC5/ADC.c **** * Return:
1833:Generated_Source\PSoC5/ADC.c **** *  int32: ADC result.
1834:Generated_Source\PSoC5/ADC.c **** *
1835:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1836:Generated_Source\PSoC5/ADC.c **** int32 ADC_Read32(void) 
1837:Generated_Source\PSoC5/ADC.c **** {
 2920              		.loc 1 1837 0
 2921              		.cfi_startproc
 2922              		@ args = 0, pretend = 0, frame = 8
 2923              		@ frame_needed = 1, uses_anonymous_args = 0
 2924 0000 80B5     		push	{r7, lr}
 2925              		.cfi_def_cfa_offset 8
 2926              		.cfi_offset 7, -8
 2927              		.cfi_offset 14, -4
 2928 0002 82B0     		sub	sp, sp, #8
 2929              		.cfi_def_cfa_offset 16
 2930 0004 00AF     		add	r7, sp, #0
 2931              		.cfi_def_cfa_register 7
1838:Generated_Source\PSoC5/ADC.c ****     int32 result;
1839:Generated_Source\PSoC5/ADC.c ****     
1840:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1841:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2932              		.loc 1 1841 0
 2933 0006 0B4A     		ldr	r2, .L150
 2934 0008 0A4B     		ldr	r3, .L150
 2935 000a 1B78     		ldrb	r3, [r3]
 2936 000c DBB2     		uxtb	r3, r3
 2937 000e 43F00403 		orr	r3, r3, #4
 2938 0012 DBB2     		uxtb	r3, r3
 2939 0014 1370     		strb	r3, [r2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 85


1842:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2940              		.loc 1 1842 0
 2941 0016 FFF7FEFF 		bl	ADC_StartConvert
1843:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2942              		.loc 1 1843 0
 2943 001a 0020     		movs	r0, #0
 2944 001c FFF7FEFF 		bl	ADC_IsEndConversion
1844:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult32();
 2945              		.loc 1 1844 0
 2946 0020 FFF7FEFF 		bl	ADC_GetResult32
 2947 0024 7860     		str	r0, [r7, #4]
1845:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2948              		.loc 1 1845 0
 2949 0026 FFF7FEFF 		bl	ADC_StopConvert
1846:Generated_Source\PSoC5/ADC.c ****     
1847:Generated_Source\PSoC5/ADC.c ****      return(result);
 2950              		.loc 1 1847 0
 2951 002a 7B68     		ldr	r3, [r7, #4]
1848:Generated_Source\PSoC5/ADC.c **** }
 2952              		.loc 1 1848 0
 2953 002c 1846     		mov	r0, r3
 2954 002e 0837     		adds	r7, r7, #8
 2955              		.cfi_def_cfa_offset 8
 2956 0030 BD46     		mov	sp, r7
 2957              		.cfi_def_cfa_register 13
 2958              		@ sp needed
 2959 0032 80BD     		pop	{r7, pc}
 2960              	.L151:
 2961              		.align	2
 2962              	.L150:
 2963 0034 014E0040 		.word	1073761793
 2964              		.cfi_endproc
 2965              	.LFE25:
 2966              		.size	ADC_Read32, .-ADC_Read32
 2967              		.text
 2968              	.Letext0:
 2969              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2970              		.file 3 "Generated_Source\\PSoC5\\ADC.h"
 2971              		.section	.debug_info,"",%progbits
 2972              	.Ldebug_info0:
 2973 0000 28070000 		.4byte	0x728
 2974 0004 0400     		.2byte	0x4
 2975 0006 00000000 		.4byte	.Ldebug_abbrev0
 2976 000a 04       		.byte	0x4
 2977 000b 01       		.uleb128 0x1
 2978 000c 5C000000 		.4byte	.LASF90
 2979 0010 0C       		.byte	0xc
 2980 0011 0A010000 		.4byte	.LASF91
 2981 0015 0E020000 		.4byte	.LASF92
 2982 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2983 001d 00000000 		.4byte	0
 2984 0021 00000000 		.4byte	.Ldebug_line0
 2985 0025 02       		.uleb128 0x2
 2986 0026 01       		.byte	0x1
 2987 0027 06       		.byte	0x6
 2988 0028 61010000 		.4byte	.LASF0
 2989 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 86


 2990 002d 01       		.byte	0x1
 2991 002e 08       		.byte	0x8
 2992 002f 7D030000 		.4byte	.LASF1
 2993 0033 02       		.uleb128 0x2
 2994 0034 02       		.byte	0x2
 2995 0035 05       		.byte	0x5
 2996 0036 A3030000 		.4byte	.LASF2
 2997 003a 02       		.uleb128 0x2
 2998 003b 02       		.byte	0x2
 2999 003c 07       		.byte	0x7
 3000 003d 6D020000 		.4byte	.LASF3
 3001 0041 02       		.uleb128 0x2
 3002 0042 04       		.byte	0x4
 3003 0043 05       		.byte	0x5
 3004 0044 A3010000 		.4byte	.LASF4
 3005 0048 02       		.uleb128 0x2
 3006 0049 04       		.byte	0x4
 3007 004a 07       		.byte	0x7
 3008 004b 4B020000 		.4byte	.LASF5
 3009 004f 02       		.uleb128 0x2
 3010 0050 08       		.byte	0x8
 3011 0051 05       		.byte	0x5
 3012 0052 53010000 		.4byte	.LASF6
 3013 0056 02       		.uleb128 0x2
 3014 0057 08       		.byte	0x8
 3015 0058 07       		.byte	0x7
 3016 0059 F3000000 		.4byte	.LASF7
 3017 005d 03       		.uleb128 0x3
 3018 005e 04       		.byte	0x4
 3019 005f 05       		.byte	0x5
 3020 0060 696E7400 		.ascii	"int\000"
 3021 0064 02       		.uleb128 0x2
 3022 0065 04       		.byte	0x4
 3023 0066 07       		.byte	0x7
 3024 0067 37020000 		.4byte	.LASF8
 3025 006b 04       		.uleb128 0x4
 3026 006c C6010000 		.4byte	.LASF9
 3027 0070 02       		.byte	0x2
 3028 0071 9201     		.2byte	0x192
 3029 0073 2C000000 		.4byte	0x2c
 3030 0077 04       		.uleb128 0x4
 3031 0078 00000000 		.4byte	.LASF10
 3032 007c 02       		.byte	0x2
 3033 007d 9301     		.2byte	0x193
 3034 007f 3A000000 		.4byte	0x3a
 3035 0083 04       		.uleb128 0x4
 3036 0084 E9010000 		.4byte	.LASF11
 3037 0088 02       		.byte	0x2
 3038 0089 9401     		.2byte	0x194
 3039 008b 48000000 		.4byte	0x48
 3040 008f 04       		.uleb128 0x4
 3041 0090 80020000 		.4byte	.LASF12
 3042 0094 02       		.byte	0x2
 3043 0095 9501     		.2byte	0x195
 3044 0097 25000000 		.4byte	0x25
 3045 009b 04       		.uleb128 0x4
 3046 009c 74040000 		.4byte	.LASF13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 87


 3047 00a0 02       		.byte	0x2
 3048 00a1 9601     		.2byte	0x196
 3049 00a3 33000000 		.4byte	0x33
 3050 00a7 04       		.uleb128 0x4
 3051 00a8 86010000 		.4byte	.LASF14
 3052 00ac 02       		.byte	0x2
 3053 00ad 9701     		.2byte	0x197
 3054 00af 41000000 		.4byte	0x41
 3055 00b3 04       		.uleb128 0x4
 3056 00b4 C7020000 		.4byte	.LASF15
 3057 00b8 02       		.byte	0x2
 3058 00b9 9801     		.2byte	0x198
 3059 00bb BF000000 		.4byte	0xbf
 3060 00bf 02       		.uleb128 0x2
 3061 00c0 04       		.byte	0x4
 3062 00c1 04       		.byte	0x4
 3063 00c2 46030000 		.4byte	.LASF16
 3064 00c6 02       		.uleb128 0x2
 3065 00c7 08       		.byte	0x8
 3066 00c8 04       		.byte	0x4
 3067 00c9 CC010000 		.4byte	.LASF17
 3068 00cd 02       		.uleb128 0x2
 3069 00ce 01       		.byte	0x1
 3070 00cf 08       		.byte	0x8
 3071 00d0 E0030000 		.4byte	.LASF18
 3072 00d4 04       		.uleb128 0x4
 3073 00d5 60030000 		.4byte	.LASF19
 3074 00d9 02       		.byte	0x2
 3075 00da 3C02     		.2byte	0x23c
 3076 00dc E0000000 		.4byte	0xe0
 3077 00e0 05       		.uleb128 0x5
 3078 00e1 6B000000 		.4byte	0x6b
 3079 00e5 04       		.uleb128 0x4
 3080 00e6 C0010000 		.4byte	.LASF20
 3081 00ea 02       		.byte	0x2
 3082 00eb 3D02     		.2byte	0x23d
 3083 00ed F1000000 		.4byte	0xf1
 3084 00f1 05       		.uleb128 0x5
 3085 00f2 77000000 		.4byte	0x77
 3086 00f6 04       		.uleb128 0x4
 3087 00f7 AC020000 		.4byte	.LASF21
 3088 00fb 02       		.byte	0x2
 3089 00fc 3E02     		.2byte	0x23e
 3090 00fe 02010000 		.4byte	0x102
 3091 0102 05       		.uleb128 0x5
 3092 0103 83000000 		.4byte	0x83
 3093 0107 02       		.uleb128 0x2
 3094 0108 08       		.byte	0x8
 3095 0109 04       		.byte	0x4
 3096 010a D8020000 		.4byte	.LASF22
 3097 010e 02       		.uleb128 0x2
 3098 010f 04       		.byte	0x4
 3099 0110 07       		.byte	0x7
 3100 0111 CF020000 		.4byte	.LASF23
 3101 0115 06       		.uleb128 0x6
 3102 0116 04       		.byte	0x4
 3103 0117 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 88


 3104 0118 2F       		.byte	0x2f
 3105 0119 36010000 		.4byte	0x136
 3106 011d 07       		.uleb128 0x7
 3107 011e 57000000 		.4byte	.LASF24
 3108 0122 03       		.byte	0x3
 3109 0123 31       		.byte	0x31
 3110 0124 77000000 		.4byte	0x77
 3111 0128 00       		.byte	0
 3112 0129 07       		.uleb128 0x7
 3113 012a F3030000 		.4byte	.LASF25
 3114 012e 03       		.byte	0x3
 3115 012f 32       		.byte	0x32
 3116 0130 6B000000 		.4byte	0x6b
 3117 0134 02       		.byte	0x2
 3118 0135 00       		.byte	0
 3119 0136 08       		.uleb128 0x8
 3120 0137 5D020000 		.4byte	.LASF26
 3121 013b 03       		.byte	0x3
 3122 013c 33       		.byte	0x33
 3123 013d 15010000 		.4byte	0x115
 3124 0141 09       		.uleb128 0x9
 3125 0142 EA000000 		.4byte	.LASF29
 3126 0146 01       		.byte	0x1
 3127 0147 5B       		.byte	0x5b
 3128 0148 00000000 		.4byte	.LFB0
 3129 014c 58010000 		.4byte	.LFE0-.LFB0
 3130 0150 01       		.uleb128 0x1
 3131 0151 9C       		.byte	0x9c
 3132 0152 0A       		.uleb128 0xa
 3133 0153 51040000 		.4byte	.LASF31
 3134 0157 01       		.byte	0x1
 3135 0158 BA       		.byte	0xba
 3136 0159 00000000 		.4byte	.LFB1
 3137 015d 58010000 		.4byte	.LFE1-.LFB1
 3138 0161 01       		.uleb128 0x1
 3139 0162 9C       		.byte	0x9c
 3140 0163 84010000 		.4byte	0x184
 3141 0167 0B       		.uleb128 0xb
 3142 0168 EC030000 		.4byte	.LASF27
 3143 016c 01       		.byte	0x1
 3144 016d BC       		.byte	0xbc
 3145 016e 6B000000 		.4byte	0x6b
 3146 0172 02       		.uleb128 0x2
 3147 0173 91       		.byte	0x91
 3148 0174 76       		.sleb128 -10
 3149 0175 0B       		.uleb128 0xb
 3150 0176 40040000 		.4byte	.LASF28
 3151 017a 01       		.byte	0x1
 3152 017b BD       		.byte	0xbd
 3153 017c 6B000000 		.4byte	0x6b
 3154 0180 02       		.uleb128 0x2
 3155 0181 91       		.byte	0x91
 3156 0182 77       		.sleb128 -9
 3157 0183 00       		.byte	0
 3158 0184 0C       		.uleb128 0xc
 3159 0185 8C010000 		.4byte	.LASF30
 3160 0189 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 89


 3161 018a 4E01     		.2byte	0x14e
 3162 018c 00000000 		.4byte	.LFB2
 3163 0190 30000000 		.4byte	.LFE2-.LFB2
 3164 0194 01       		.uleb128 0x1
 3165 0195 9C       		.byte	0x9c
 3166 0196 0D       		.uleb128 0xd
 3167 0197 AD030000 		.4byte	.LASF32
 3168 019b 01       		.byte	0x1
 3169 019c 6F01     		.2byte	0x16f
 3170 019e 00000000 		.4byte	.LFB3
 3171 01a2 7C010000 		.4byte	.LFE3-.LFB3
 3172 01a6 01       		.uleb128 0x1
 3173 01a7 9C       		.byte	0x9c
 3174 01a8 BC010000 		.4byte	0x1bc
 3175 01ac 0E       		.uleb128 0xe
 3176 01ad 40040000 		.4byte	.LASF28
 3177 01b1 01       		.byte	0x1
 3178 01b2 7101     		.2byte	0x171
 3179 01b4 6B000000 		.4byte	0x6b
 3180 01b8 02       		.uleb128 0x2
 3181 01b9 91       		.byte	0x91
 3182 01ba 77       		.sleb128 -9
 3183 01bb 00       		.byte	0
 3184 01bc 0F       		.uleb128 0xf
 3185 01bd 74010000 		.4byte	.LASF33
 3186 01c1 01       		.byte	0x1
 3187 01c2 B201     		.2byte	0x1b2
 3188 01c4 00000000 		.4byte	.LFB4
 3189 01c8 3C000000 		.4byte	.LFE4-.LFB4
 3190 01cc 01       		.uleb128 0x1
 3191 01cd 9C       		.byte	0x9c
 3192 01ce F1010000 		.4byte	0x1f1
 3193 01d2 10       		.uleb128 0x10
 3194 01d3 35030000 		.4byte	.LASF36
 3195 01d7 01       		.byte	0x1
 3196 01d8 B201     		.2byte	0x1b2
 3197 01da 6B000000 		.4byte	0x6b
 3198 01de 02       		.uleb128 0x2
 3199 01df 91       		.byte	0x91
 3200 01e0 6F       		.sleb128 -17
 3201 01e1 0E       		.uleb128 0xe
 3202 01e2 9A040000 		.4byte	.LASF34
 3203 01e6 01       		.byte	0x1
 3204 01e7 B401     		.2byte	0x1b4
 3205 01e9 6B000000 		.4byte	0x6b
 3206 01ed 02       		.uleb128 0x2
 3207 01ee 91       		.byte	0x91
 3208 01ef 77       		.sleb128 -9
 3209 01f0 00       		.byte	0
 3210 01f1 0F       		.uleb128 0xf
 3211 01f2 10040000 		.4byte	.LASF35
 3212 01f6 01       		.byte	0x1
 3213 01f7 D601     		.2byte	0x1d6
 3214 01f9 00000000 		.4byte	.LFB5
 3215 01fd 38000000 		.4byte	.LFE5-.LFB5
 3216 0201 01       		.uleb128 0x1
 3217 0202 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 90


 3218 0203 26020000 		.4byte	0x226
 3219 0207 10       		.uleb128 0x10
 3220 0208 2B030000 		.4byte	.LASF37
 3221 020c 01       		.byte	0x1
 3222 020d D601     		.2byte	0x1d6
 3223 020f 6B000000 		.4byte	0x6b
 3224 0213 02       		.uleb128 0x2
 3225 0214 91       		.byte	0x91
 3226 0215 6F       		.sleb128 -17
 3227 0216 0E       		.uleb128 0xe
 3228 0217 9A040000 		.4byte	.LASF34
 3229 021b 01       		.byte	0x1
 3230 021c D801     		.2byte	0x1d8
 3231 021e 6B000000 		.4byte	0x6b
 3232 0222 02       		.uleb128 0x2
 3233 0223 91       		.byte	0x91
 3234 0224 77       		.sleb128 -9
 3235 0225 00       		.byte	0
 3236 0226 11       		.uleb128 0x11
 3237 0227 E4020000 		.4byte	.LASF41
 3238 022b 01       		.byte	0x1
 3239 022c FE01     		.2byte	0x1fe
 3240 022e 6B000000 		.4byte	0x6b
 3241 0232 00000000 		.4byte	.LFB6
 3242 0236 AC000000 		.4byte	.LFE6-.LFB6
 3243 023a 01       		.uleb128 0x1
 3244 023b 9C       		.byte	0x9c
 3245 023c 7D020000 		.4byte	0x27d
 3246 0240 10       		.uleb128 0x10
 3247 0241 69040000 		.4byte	.LASF38
 3248 0245 01       		.byte	0x1
 3249 0246 FE01     		.2byte	0x1fe
 3250 0248 B3000000 		.4byte	0xb3
 3251 024c 02       		.uleb128 0x2
 3252 024d 91       		.byte	0x91
 3253 024e 6C       		.sleb128 -20
 3254 024f 0E       		.uleb128 0xe
 3255 0250 9A040000 		.4byte	.LASF34
 3256 0254 01       		.byte	0x1
 3257 0255 0002     		.2byte	0x200
 3258 0257 77000000 		.4byte	0x77
 3259 025b 02       		.uleb128 0x2
 3260 025c 91       		.byte	0x91
 3261 025d 74       		.sleb128 -12
 3262 025e 0E       		.uleb128 0xe
 3263 025f 6D010000 		.4byte	.LASF39
 3264 0263 01       		.byte	0x1
 3265 0264 0102     		.2byte	0x201
 3266 0266 6B000000 		.4byte	0x6b
 3267 026a 02       		.uleb128 0x2
 3268 026b 91       		.byte	0x91
 3269 026c 77       		.sleb128 -9
 3270 026d 0E       		.uleb128 0xe
 3271 026e 00040000 		.4byte	.LASF40
 3272 0272 01       		.byte	0x1
 3273 0273 0202     		.2byte	0x202
 3274 0275 B3000000 		.4byte	0xb3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 91


 3275 0279 02       		.uleb128 0x2
 3276 027a 91       		.byte	0x91
 3277 027b 70       		.sleb128 -16
 3278 027c 00       		.byte	0
 3279 027d 12       		.uleb128 0x12
 3280 027e 5C040000 		.4byte	.LASF42
 3281 0282 01       		.byte	0x1
 3282 0283 2D02     		.2byte	0x22d
 3283 0285 77000000 		.4byte	0x77
 3284 0289 00000000 		.4byte	.LFB7
 3285 028d 3C000000 		.4byte	.LFE7-.LFB7
 3286 0291 01       		.uleb128 0x1
 3287 0292 9C       		.byte	0x9c
 3288 0293 B6020000 		.4byte	0x2b6
 3289 0297 0E       		.uleb128 0xe
 3290 0298 E5030000 		.4byte	.LASF43
 3291 029c 01       		.byte	0x1
 3292 029d 2F02     		.2byte	0x22f
 3293 029f 6B000000 		.4byte	0x6b
 3294 02a3 02       		.uleb128 0x2
 3295 02a4 91       		.byte	0x91
 3296 02a5 75       		.sleb128 -11
 3297 02a6 0E       		.uleb128 0xe
 3298 02a7 95020000 		.4byte	.LASF44
 3299 02ab 01       		.byte	0x1
 3300 02ac 3002     		.2byte	0x230
 3301 02ae 77000000 		.4byte	0x77
 3302 02b2 02       		.uleb128 0x2
 3303 02b3 91       		.byte	0x91
 3304 02b4 76       		.sleb128 -10
 3305 02b5 00       		.byte	0
 3306 02b6 13       		.uleb128 0x13
 3307 02b7 32010000 		.4byte	.LASF45
 3308 02bb 01       		.byte	0x1
 3309 02bc 4F02     		.2byte	0x24f
 3310 02be 00000000 		.4byte	.LFB8
 3311 02c2 20000000 		.4byte	.LFE8-.LFB8
 3312 02c6 01       		.uleb128 0x1
 3313 02c7 9C       		.byte	0x9c
 3314 02c8 13       		.uleb128 0x13
 3315 02c9 85020000 		.4byte	.LASF46
 3316 02cd 01       		.byte	0x1
 3317 02ce 6602     		.2byte	0x266
 3318 02d0 00000000 		.4byte	.LFB9
 3319 02d4 20000000 		.4byte	.LFE9-.LFB9
 3320 02d8 01       		.uleb128 0x1
 3321 02d9 9C       		.byte	0x9c
 3322 02da 12       		.uleb128 0x12
 3323 02db F0020000 		.4byte	.LASF47
 3324 02df 01       		.byte	0x1
 3325 02e0 8902     		.2byte	0x289
 3326 02e2 6B000000 		.4byte	0x6b
 3327 02e6 00000000 		.4byte	.LFB10
 3328 02ea 4C000000 		.4byte	.LFE10-.LFB10
 3329 02ee 01       		.uleb128 0x1
 3330 02ef 9C       		.byte	0x9c
 3331 02f0 13030000 		.4byte	0x313
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 92


 3332 02f4 10       		.uleb128 0x10
 3333 02f5 2F020000 		.4byte	.LASF48
 3334 02f9 01       		.byte	0x1
 3335 02fa 8902     		.2byte	0x289
 3336 02fc 6B000000 		.4byte	0x6b
 3337 0300 02       		.uleb128 0x2
 3338 0301 91       		.byte	0x91
 3339 0302 6F       		.sleb128 -17
 3340 0303 0E       		.uleb128 0xe
 3341 0304 6D010000 		.4byte	.LASF39
 3342 0308 01       		.byte	0x1
 3343 0309 8B02     		.2byte	0x28b
 3344 030b 6B000000 		.4byte	0x6b
 3345 030f 02       		.uleb128 0x2
 3346 0310 91       		.byte	0x91
 3347 0311 77       		.sleb128 -9
 3348 0312 00       		.byte	0
 3349 0313 12       		.uleb128 0x12
 3350 0314 1C030000 		.4byte	.LASF49
 3351 0318 01       		.byte	0x1
 3352 0319 B802     		.2byte	0x2b8
 3353 031b 8F000000 		.4byte	0x8f
 3354 031f 00000000 		.4byte	.LFB11
 3355 0323 68000000 		.4byte	.LFE11-.LFB11
 3356 0327 01       		.uleb128 0x1
 3357 0328 9C       		.byte	0x9c
 3358 0329 4C030000 		.4byte	0x34c
 3359 032d 0E       		.uleb128 0xe
 3360 032e A1040000 		.4byte	.LASF50
 3361 0332 01       		.byte	0x1
 3362 0333 BA02     		.2byte	0x2ba
 3363 0335 8F000000 		.4byte	0x8f
 3364 0339 02       		.uleb128 0x2
 3365 033a 91       		.byte	0x91
 3366 033b 76       		.sleb128 -10
 3367 033c 0E       		.uleb128 0xe
 3368 033d 2B030000 		.4byte	.LASF37
 3369 0341 01       		.byte	0x1
 3370 0342 BB02     		.2byte	0x2bb
 3371 0344 6B000000 		.4byte	0x6b
 3372 0348 02       		.uleb128 0x2
 3373 0349 91       		.byte	0x91
 3374 034a 77       		.sleb128 -9
 3375 034b 00       		.byte	0
 3376 034c 12       		.uleb128 0x12
 3377 034d A8040000 		.4byte	.LASF51
 3378 0351 01       		.byte	0x1
 3379 0352 EE02     		.2byte	0x2ee
 3380 0354 9B000000 		.4byte	0x9b
 3381 0358 00000000 		.4byte	.LFB12
 3382 035c 7C000000 		.4byte	.LFE12-.LFB12
 3383 0360 01       		.uleb128 0x1
 3384 0361 9C       		.byte	0x9c
 3385 0362 85030000 		.4byte	0x385
 3386 0366 0E       		.uleb128 0xe
 3387 0367 A1040000 		.4byte	.LASF50
 3388 036b 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 93


 3389 036c F002     		.2byte	0x2f0
 3390 036e 77000000 		.4byte	0x77
 3391 0372 02       		.uleb128 0x2
 3392 0373 91       		.byte	0x91
 3393 0374 76       		.sleb128 -10
 3394 0375 0E       		.uleb128 0xe
 3395 0376 2B030000 		.4byte	.LASF37
 3396 037a 01       		.byte	0x1
 3397 037b F102     		.2byte	0x2f1
 3398 037d 6B000000 		.4byte	0x6b
 3399 0381 02       		.uleb128 0x2
 3400 0382 91       		.byte	0x91
 3401 0383 75       		.sleb128 -11
 3402 0384 00       		.byte	0
 3403 0385 12       		.uleb128 0x12
 3404 0386 D3010000 		.4byte	.LASF52
 3405 038a 01       		.byte	0x1
 3406 038b 2A03     		.2byte	0x32a
 3407 038d A7000000 		.4byte	0xa7
 3408 0391 00000000 		.4byte	.LFB13
 3409 0395 A8000000 		.4byte	.LFE13-.LFB13
 3410 0399 01       		.uleb128 0x1
 3411 039a 9C       		.byte	0x9c
 3412 039b BE030000 		.4byte	0x3be
 3413 039f 0E       		.uleb128 0xe
 3414 03a0 A1040000 		.4byte	.LASF50
 3415 03a4 01       		.byte	0x1
 3416 03a5 2C03     		.2byte	0x32c
 3417 03a7 83000000 		.4byte	0x83
 3418 03ab 02       		.uleb128 0x2
 3419 03ac 91       		.byte	0x91
 3420 03ad 74       		.sleb128 -12
 3421 03ae 0E       		.uleb128 0xe
 3422 03af 2B030000 		.4byte	.LASF37
 3423 03b3 01       		.byte	0x1
 3424 03b4 2D03     		.2byte	0x32d
 3425 03b6 6B000000 		.4byte	0x6b
 3426 03ba 02       		.uleb128 0x2
 3427 03bb 91       		.byte	0x91
 3428 03bc 73       		.sleb128 -13
 3429 03bd 00       		.byte	0
 3430 03be 0F       		.uleb128 0xf
 3431 03bf 7A040000 		.4byte	.LASF53
 3432 03c3 01       		.byte	0x1
 3433 03c4 8703     		.2byte	0x387
 3434 03c6 00000000 		.4byte	.LFB14
 3435 03ca 1C000000 		.4byte	.LFE14-.LFB14
 3436 03ce 01       		.uleb128 0x1
 3437 03cf 9C       		.byte	0x9c
 3438 03d0 E4030000 		.4byte	0x3e4
 3439 03d4 10       		.uleb128 0x10
 3440 03d5 09040000 		.4byte	.LASF54
 3441 03d9 01       		.byte	0x1
 3442 03da 8703     		.2byte	0x387
 3443 03dc A7000000 		.4byte	0xa7
 3444 03e0 02       		.uleb128 0x2
 3445 03e1 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 94


 3446 03e2 74       		.sleb128 -12
 3447 03e3 00       		.byte	0
 3448 03e4 0F       		.uleb128 0xf
 3449 03e5 3A030000 		.4byte	.LASF55
 3450 03e9 01       		.byte	0x1
 3451 03ea AA03     		.2byte	0x3aa
 3452 03ec 00000000 		.4byte	.LFB15
 3453 03f0 1C000000 		.4byte	.LFE15-.LFB15
 3454 03f4 01       		.uleb128 0x1
 3455 03f5 9C       		.byte	0x9c
 3456 03f6 0A040000 		.4byte	0x40a
 3457 03fa 10       		.uleb128 0x10
 3458 03fb 07000000 		.4byte	.LASF56
 3459 03ff 01       		.byte	0x1
 3460 0400 AA03     		.2byte	0x3aa
 3461 0402 A7000000 		.4byte	0xa7
 3462 0406 02       		.uleb128 0x2
 3463 0407 91       		.byte	0x91
 3464 0408 74       		.sleb128 -12
 3465 0409 00       		.byte	0
 3466 040a 12       		.uleb128 0x12
 3467 040b 4C030000 		.4byte	.LASF57
 3468 040f 01       		.byte	0x1
 3469 0410 C503     		.2byte	0x3c5
 3470 0412 9B000000 		.4byte	0x9b
 3471 0416 00000000 		.4byte	.LFB16
 3472 041a 3C000000 		.4byte	.LFE16-.LFB16
 3473 041e 01       		.uleb128 0x1
 3474 041f 9C       		.byte	0x9c
 3475 0420 43040000 		.4byte	0x443
 3476 0424 10       		.uleb128 0x10
 3477 0425 2B040000 		.4byte	.LASF58
 3478 0429 01       		.byte	0x1
 3479 042a C503     		.2byte	0x3c5
 3480 042c A7000000 		.4byte	0xa7
 3481 0430 02       		.uleb128 0x2
 3482 0431 91       		.byte	0x91
 3483 0432 6C       		.sleb128 -20
 3484 0433 0E       		.uleb128 0xe
 3485 0434 9F020000 		.4byte	.LASF59
 3486 0438 01       		.byte	0x1
 3487 0439 C803     		.2byte	0x3c8
 3488 043b 9B000000 		.4byte	0x9b
 3489 043f 02       		.uleb128 0x2
 3490 0440 91       		.byte	0x91
 3491 0441 76       		.sleb128 -10
 3492 0442 00       		.byte	0
 3493 0443 11       		.uleb128 0x11
 3494 0444 1A000000 		.4byte	.LASF60
 3495 0448 01       		.byte	0x1
 3496 0449 0204     		.2byte	0x402
 3497 044b B3000000 		.4byte	0xb3
 3498 044f 00000000 		.4byte	.LFB17
 3499 0453 44000000 		.4byte	.LFE17-.LFB17
 3500 0457 01       		.uleb128 0x1
 3501 0458 9C       		.byte	0x9c
 3502 0459 7C040000 		.4byte	0x47c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 95


 3503 045d 10       		.uleb128 0x10
 3504 045e 2B040000 		.4byte	.LASF58
 3505 0462 01       		.byte	0x1
 3506 0463 0204     		.2byte	0x402
 3507 0465 A7000000 		.4byte	0xa7
 3508 0469 02       		.uleb128 0x2
 3509 046a 91       		.byte	0x91
 3510 046b 64       		.sleb128 -28
 3511 046c 0E       		.uleb128 0xe
 3512 046d E3010000 		.4byte	.LASF61
 3513 0471 01       		.byte	0x1
 3514 0472 0504     		.2byte	0x405
 3515 0474 B3000000 		.4byte	0xb3
 3516 0478 02       		.uleb128 0x2
 3517 0479 91       		.byte	0x91
 3518 047a 6C       		.sleb128 -20
 3519 047b 00       		.byte	0
 3520 047c 12       		.uleb128 0x12
 3521 047d AC010000 		.4byte	.LASF62
 3522 0481 01       		.byte	0x1
 3523 0482 4404     		.2byte	0x444
 3524 0484 A7000000 		.4byte	0xa7
 3525 0488 00000000 		.4byte	.LFB18
 3526 048c A4000000 		.4byte	.LFE18-.LFB18
 3527 0490 01       		.uleb128 0x1
 3528 0491 9C       		.byte	0x9c
 3529 0492 E2040000 		.4byte	0x4e2
 3530 0496 10       		.uleb128 0x10
 3531 0497 2B040000 		.4byte	.LASF58
 3532 049b 01       		.byte	0x1
 3533 049c 4404     		.2byte	0x444
 3534 049e A7000000 		.4byte	0xa7
 3535 04a2 02       		.uleb128 0x2
 3536 04a3 91       		.byte	0x91
 3537 04a4 64       		.sleb128 -28
 3538 04a5 0E       		.uleb128 0xe
 3539 04a6 44020000 		.4byte	.LASF63
 3540 04aa 01       		.byte	0x1
 3541 04ab 4704     		.2byte	0x447
 3542 04ad A7000000 		.4byte	0xa7
 3543 04b1 02       		.uleb128 0x2
 3544 04b2 91       		.byte	0x91
 3545 04b3 68       		.sleb128 -24
 3546 04b4 0E       		.uleb128 0xe
 3547 04b5 D4030000 		.4byte	.LASF64
 3548 04b9 01       		.byte	0x1
 3549 04ba 4804     		.2byte	0x448
 3550 04bc A7000000 		.4byte	0xa7
 3551 04c0 02       		.uleb128 0x2
 3552 04c1 91       		.byte	0x91
 3553 04c2 74       		.sleb128 -12
 3554 04c3 0E       		.uleb128 0xe
 3555 04c4 DA030000 		.4byte	.LASF65
 3556 04c8 01       		.byte	0x1
 3557 04c9 4904     		.2byte	0x449
 3558 04cb A7000000 		.4byte	0xa7
 3559 04cf 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 96


 3560 04d0 91       		.byte	0x91
 3561 04d1 70       		.sleb128 -16
 3562 04d2 0E       		.uleb128 0xe
 3563 04d3 BE030000 		.4byte	.LASF66
 3564 04d7 01       		.byte	0x1
 3565 04d8 4A04     		.2byte	0x44a
 3566 04da 6B000000 		.4byte	0x6b
 3567 04de 02       		.uleb128 0x2
 3568 04df 91       		.byte	0x91
 3569 04e0 6F       		.sleb128 -17
 3570 04e1 00       		.byte	0
 3571 04e2 14       		.uleb128 0x14
 3572 04e3 0D030000 		.4byte	.LASF69
 3573 04e7 01       		.byte	0x1
 3574 04e8 DF04     		.2byte	0x4df
 3575 04ea 00000000 		.4byte	.LFB19
 3576 04ee 10040000 		.4byte	.LFE19-.LFB19
 3577 04f2 01       		.uleb128 0x1
 3578 04f3 9C       		.byte	0x9c
 3579 04f4 08050000 		.4byte	0x508
 3580 04f8 10       		.uleb128 0x10
 3581 04f9 EC030000 		.4byte	.LASF27
 3582 04fd 01       		.byte	0x1
 3583 04fe DF04     		.2byte	0x4df
 3584 0500 6B000000 		.4byte	0x6b
 3585 0504 02       		.uleb128 0x2
 3586 0505 91       		.byte	0x91
 3587 0506 77       		.sleb128 -9
 3588 0507 00       		.byte	0
 3589 0508 0D       		.uleb128 0xd
 3590 0509 8B030000 		.4byte	.LASF67
 3591 050d 01       		.byte	0x1
 3592 050e 1806     		.2byte	0x618
 3593 0510 00000000 		.4byte	.LFB20
 3594 0514 90000000 		.4byte	.LFE20-.LFB20
 3595 0518 01       		.uleb128 0x1
 3596 0519 9C       		.byte	0x9c
 3597 051a 3D050000 		.4byte	0x53d
 3598 051e 10       		.uleb128 0x10
 3599 051f EC030000 		.4byte	.LASF27
 3600 0523 01       		.byte	0x1
 3601 0524 1806     		.2byte	0x618
 3602 0526 6B000000 		.4byte	0x6b
 3603 052a 02       		.uleb128 0x2
 3604 052b 91       		.byte	0x91
 3605 052c 77       		.sleb128 -9
 3606 052d 10       		.uleb128 0x10
 3607 052e F8030000 		.4byte	.LASF68
 3608 0532 01       		.byte	0x1
 3609 0533 1806     		.2byte	0x618
 3610 0535 6B000000 		.4byte	0x6b
 3611 0539 02       		.uleb128 0x2
 3612 053a 91       		.byte	0x91
 3613 053b 76       		.sleb128 -10
 3614 053c 00       		.byte	0
 3615 053d 14       		.uleb128 0x14
 3616 053e B2020000 		.4byte	.LASF70
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 97


 3617 0542 01       		.byte	0x1
 3618 0543 5906     		.2byte	0x659
 3619 0545 00000000 		.4byte	.LFB21
 3620 0549 70010000 		.4byte	.LFE21-.LFB21
 3621 054d 01       		.uleb128 0x1
 3622 054e 9C       		.byte	0x9c
 3623 054f DB050000 		.4byte	0x5db
 3624 0553 10       		.uleb128 0x10
 3625 0554 0F000000 		.4byte	.LASF71
 3626 0558 01       		.byte	0x1
 3627 0559 5906     		.2byte	0x659
 3628 055b 6B000000 		.4byte	0x6b
 3629 055f 02       		.uleb128 0x2
 3630 0560 91       		.byte	0x91
 3631 0561 5F       		.sleb128 -33
 3632 0562 10       		.uleb128 0x10
 3633 0563 65030000 		.4byte	.LASF72
 3634 0567 01       		.byte	0x1
 3635 0568 5906     		.2byte	0x659
 3636 056a 77000000 		.4byte	0x77
 3637 056e 02       		.uleb128 0x2
 3638 056f 91       		.byte	0x91
 3639 0570 5C       		.sleb128 -36
 3640 0571 10       		.uleb128 0x10
 3641 0572 43010000 		.4byte	.LASF73
 3642 0576 01       		.byte	0x1
 3643 0577 5906     		.2byte	0x659
 3644 0579 77000000 		.4byte	0x77
 3645 057d 02       		.uleb128 0x2
 3646 057e 91       		.byte	0x91
 3647 057f 5A       		.sleb128 -38
 3648 0580 10       		.uleb128 0x10
 3649 0581 BE030000 		.4byte	.LASF66
 3650 0585 01       		.byte	0x1
 3651 0586 5A06     		.2byte	0x65a
 3652 0588 6B000000 		.4byte	0x6b
 3653 058c 02       		.uleb128 0x2
 3654 058d 91       		.byte	0x91
 3655 058e 5E       		.sleb128 -34
 3656 058f 10       		.uleb128 0x10
 3657 0590 EC030000 		.4byte	.LASF27
 3658 0594 01       		.byte	0x1
 3659 0595 5A06     		.2byte	0x65a
 3660 0597 6B000000 		.4byte	0x6b
 3661 059b 02       		.uleb128 0x2
 3662 059c 91       		.byte	0x91
 3663 059d 00       		.sleb128 0
 3664 059e 0E       		.uleb128 0xe
 3665 059f A6020000 		.4byte	.LASF74
 3666 05a3 01       		.byte	0x1
 3667 05a4 5C06     		.2byte	0x65c
 3668 05a6 8F000000 		.4byte	0x8f
 3669 05aa 02       		.uleb128 0x2
 3670 05ab 91       		.byte	0x91
 3671 05ac 6F       		.sleb128 -17
 3672 05ad 0E       		.uleb128 0xe
 3673 05ae 72030000 		.4byte	.LASF75
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 98


 3674 05b2 01       		.byte	0x1
 3675 05b3 5D06     		.2byte	0x65d
 3676 05b5 A7000000 		.4byte	0xa7
 3677 05b9 02       		.uleb128 0x2
 3678 05ba 91       		.byte	0x91
 3679 05bb 68       		.sleb128 -24
 3680 05bc 0E       		.uleb128 0xe
 3681 05bd 95020000 		.4byte	.LASF44
 3682 05c1 01       		.byte	0x1
 3683 05c2 5E06     		.2byte	0x65e
 3684 05c4 77000000 		.4byte	0x77
 3685 05c8 02       		.uleb128 0x2
 3686 05c9 91       		.byte	0x91
 3687 05ca 6C       		.sleb128 -20
 3688 05cb 0E       		.uleb128 0xe
 3689 05cc B6030000 		.4byte	.LASF76
 3690 05d0 01       		.byte	0x1
 3691 05d1 5F06     		.2byte	0x65f
 3692 05d3 83000000 		.4byte	0x83
 3693 05d7 02       		.uleb128 0x2
 3694 05d8 91       		.byte	0x91
 3695 05d9 64       		.sleb128 -28
 3696 05da 00       		.byte	0
 3697 05db 14       		.uleb128 0x14
 3698 05dc FC010000 		.4byte	.LASF77
 3699 05e0 01       		.byte	0x1
 3700 05e1 C406     		.2byte	0x6c4
 3701 05e3 00000000 		.4byte	.LFB22
 3702 05e7 7C000000 		.4byte	.LFE22-.LFB22
 3703 05eb 01       		.uleb128 0x1
 3704 05ec 9C       		.byte	0x9c
 3705 05ed 10060000 		.4byte	0x610
 3706 05f1 10       		.uleb128 0x10
 3707 05f2 29020000 		.4byte	.LASF78
 3708 05f6 01       		.byte	0x1
 3709 05f7 C406     		.2byte	0x6c4
 3710 05f9 6B000000 		.4byte	0x6b
 3711 05fd 02       		.uleb128 0x2
 3712 05fe 91       		.byte	0x91
 3713 05ff 6F       		.sleb128 -17
 3714 0600 0E       		.uleb128 0xe
 3715 0601 40040000 		.4byte	.LASF28
 3716 0605 01       		.byte	0x1
 3717 0606 C606     		.2byte	0x6c6
 3718 0608 6B000000 		.4byte	0x6b
 3719 060c 02       		.uleb128 0x2
 3720 060d 91       		.byte	0x91
 3721 060e 77       		.sleb128 -9
 3722 060f 00       		.byte	0
 3723 0610 11       		.uleb128 0x11
 3724 0611 21040000 		.4byte	.LASF79
 3725 0615 01       		.byte	0x1
 3726 0616 EA06     		.2byte	0x6ea
 3727 0618 8F000000 		.4byte	0x8f
 3728 061c 00000000 		.4byte	.LFB23
 3729 0620 3C000000 		.4byte	.LFE23-.LFB23
 3730 0624 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 99


 3731 0625 9C       		.byte	0x9c
 3732 0626 3A060000 		.4byte	0x63a
 3733 062a 0E       		.uleb128 0xe
 3734 062b A1040000 		.4byte	.LASF50
 3735 062f 01       		.byte	0x1
 3736 0630 EC06     		.2byte	0x6ec
 3737 0632 8F000000 		.4byte	0x8f
 3738 0636 02       		.uleb128 0x2
 3739 0637 91       		.byte	0x91
 3740 0638 77       		.sleb128 -9
 3741 0639 00       		.byte	0
 3742 063a 11       		.uleb128 0x11
 3743 063b 4C000000 		.4byte	.LASF80
 3744 063f 01       		.byte	0x1
 3745 0640 0B07     		.2byte	0x70b
 3746 0642 9B000000 		.4byte	0x9b
 3747 0646 00000000 		.4byte	.LFB24
 3748 064a 3C000000 		.4byte	.LFE24-.LFB24
 3749 064e 01       		.uleb128 0x1
 3750 064f 9C       		.byte	0x9c
 3751 0650 64060000 		.4byte	0x664
 3752 0654 0E       		.uleb128 0xe
 3753 0655 A1040000 		.4byte	.LASF50
 3754 0659 01       		.byte	0x1
 3755 065a 0D07     		.2byte	0x70d
 3756 065c 9B000000 		.4byte	0x9b
 3757 0660 02       		.uleb128 0x2
 3758 0661 91       		.byte	0x91
 3759 0662 76       		.sleb128 -10
 3760 0663 00       		.byte	0
 3761 0664 11       		.uleb128 0x11
 3762 0665 35040000 		.4byte	.LASF81
 3763 0669 01       		.byte	0x1
 3764 066a 2C07     		.2byte	0x72c
 3765 066c A7000000 		.4byte	0xa7
 3766 0670 00000000 		.4byte	.LFB25
 3767 0674 38000000 		.4byte	.LFE25-.LFB25
 3768 0678 01       		.uleb128 0x1
 3769 0679 9C       		.byte	0x9c
 3770 067a 8E060000 		.4byte	0x68e
 3771 067e 0E       		.uleb128 0xe
 3772 067f A1040000 		.4byte	.LASF50
 3773 0683 01       		.byte	0x1
 3774 0684 2E07     		.2byte	0x72e
 3775 0686 A7000000 		.4byte	0xa7
 3776 068a 02       		.uleb128 0x2
 3777 068b 91       		.byte	0x91
 3778 068c 74       		.sleb128 -12
 3779 068d 00       		.byte	0
 3780 068e 15       		.uleb128 0x15
 3781 068f 36010000 		.4byte	0x136
 3782 0693 9E060000 		.4byte	0x69e
 3783 0697 16       		.uleb128 0x16
 3784 0698 0E010000 		.4byte	0x10e
 3785 069c 03       		.byte	0x3
 3786 069d 00       		.byte	0
 3787 069e 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 100


 3788 069f 04030000 		.4byte	.LASF82
 3789 06a3 01       		.byte	0x1
 3790 06a4 3D       		.byte	0x3d
 3791 06a5 8E060000 		.4byte	0x68e
 3792 06a9 05       		.uleb128 0x5
 3793 06aa 03       		.byte	0x3
 3794 06ab 08000000 		.4byte	ADC_gcor
 3795 06af 17       		.uleb128 0x17
 3796 06b0 F0010000 		.4byte	.LASF83
 3797 06b4 01       		.byte	0x1
 3798 06b5 2C       		.byte	0x2c
 3799 06b6 6B000000 		.4byte	0x6b
 3800 06ba 05       		.uleb128 0x5
 3801 06bb 03       		.byte	0x3
 3802 06bc 00000000 		.4byte	ADC_initVar
 3803 06c0 17       		.uleb128 0x17
 3804 06c1 96010000 		.4byte	.LASF84
 3805 06c5 01       		.byte	0x1
 3806 06c6 24       		.byte	0x24
 3807 06c7 E0000000 		.4byte	0xe0
 3808 06cb 05       		.uleb128 0x5
 3809 06cc 03       		.byte	0x3
 3810 06cd 00000000 		.4byte	ADC_convDone
 3811 06d1 17       		.uleb128 0x17
 3812 06d2 2D000000 		.4byte	.LASF85
 3813 06d6 01       		.byte	0x1
 3814 06d7 29       		.byte	0x29
 3815 06d8 E0000000 		.4byte	0xe0
 3816 06dc 05       		.uleb128 0x5
 3817 06dd 03       		.byte	0x3
 3818 06de 00000000 		.4byte	ADC_stopConversion
 3819 06e2 17       		.uleb128 0x17
 3820 06e3 40000000 		.4byte	.LASF86
 3821 06e7 01       		.byte	0x1
 3822 06e8 2F       		.byte	0x2f
 3823 06e9 E0000000 		.4byte	0xe0
 3824 06ed 05       		.uleb128 0x5
 3825 06ee 03       		.byte	0x3
 3826 06ef 00000000 		.4byte	ADC_started
 3827 06f3 17       		.uleb128 0x17
 3828 06f4 27010000 		.4byte	.LASF87
 3829 06f8 01       		.byte	0x1
 3830 06f9 32       		.byte	0x32
 3831 06fa E0000000 		.4byte	0xe0
 3832 06fe 05       		.uleb128 0x5
 3833 06ff 03       		.byte	0x3
 3834 0700 00000000 		.4byte	ADC_Config
 3835 0704 17       		.uleb128 0x17
 3836 0705 C9030000 		.4byte	.LASF88
 3837 0709 01       		.byte	0x1
 3838 070a 34       		.byte	0x34
 3839 070b 15070000 		.4byte	0x715
 3840 070f 05       		.uleb128 0x5
 3841 0710 03       		.byte	0x3
 3842 0711 00000000 		.4byte	ADC_Offset
 3843 0715 05       		.uleb128 0x5
 3844 0716 A7000000 		.4byte	0xa7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 101


 3845 071a 17       		.uleb128 0x17
 3846 071b 88040000 		.4byte	.LASF89
 3847 071f 01       		.byte	0x1
 3848 0720 35       		.byte	0x35
 3849 0721 15070000 		.4byte	0x715
 3850 0725 05       		.uleb128 0x5
 3851 0726 03       		.byte	0x3
 3852 0727 00000000 		.4byte	ADC_CountsPerVolt
 3853 072b 00       		.byte	0
 3854              		.section	.debug_abbrev,"",%progbits
 3855              	.Ldebug_abbrev0:
 3856 0000 01       		.uleb128 0x1
 3857 0001 11       		.uleb128 0x11
 3858 0002 01       		.byte	0x1
 3859 0003 25       		.uleb128 0x25
 3860 0004 0E       		.uleb128 0xe
 3861 0005 13       		.uleb128 0x13
 3862 0006 0B       		.uleb128 0xb
 3863 0007 03       		.uleb128 0x3
 3864 0008 0E       		.uleb128 0xe
 3865 0009 1B       		.uleb128 0x1b
 3866 000a 0E       		.uleb128 0xe
 3867 000b 55       		.uleb128 0x55
 3868 000c 17       		.uleb128 0x17
 3869 000d 11       		.uleb128 0x11
 3870 000e 01       		.uleb128 0x1
 3871 000f 10       		.uleb128 0x10
 3872 0010 17       		.uleb128 0x17
 3873 0011 00       		.byte	0
 3874 0012 00       		.byte	0
 3875 0013 02       		.uleb128 0x2
 3876 0014 24       		.uleb128 0x24
 3877 0015 00       		.byte	0
 3878 0016 0B       		.uleb128 0xb
 3879 0017 0B       		.uleb128 0xb
 3880 0018 3E       		.uleb128 0x3e
 3881 0019 0B       		.uleb128 0xb
 3882 001a 03       		.uleb128 0x3
 3883 001b 0E       		.uleb128 0xe
 3884 001c 00       		.byte	0
 3885 001d 00       		.byte	0
 3886 001e 03       		.uleb128 0x3
 3887 001f 24       		.uleb128 0x24
 3888 0020 00       		.byte	0
 3889 0021 0B       		.uleb128 0xb
 3890 0022 0B       		.uleb128 0xb
 3891 0023 3E       		.uleb128 0x3e
 3892 0024 0B       		.uleb128 0xb
 3893 0025 03       		.uleb128 0x3
 3894 0026 08       		.uleb128 0x8
 3895 0027 00       		.byte	0
 3896 0028 00       		.byte	0
 3897 0029 04       		.uleb128 0x4
 3898 002a 16       		.uleb128 0x16
 3899 002b 00       		.byte	0
 3900 002c 03       		.uleb128 0x3
 3901 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 102


 3902 002e 3A       		.uleb128 0x3a
 3903 002f 0B       		.uleb128 0xb
 3904 0030 3B       		.uleb128 0x3b
 3905 0031 05       		.uleb128 0x5
 3906 0032 49       		.uleb128 0x49
 3907 0033 13       		.uleb128 0x13
 3908 0034 00       		.byte	0
 3909 0035 00       		.byte	0
 3910 0036 05       		.uleb128 0x5
 3911 0037 35       		.uleb128 0x35
 3912 0038 00       		.byte	0
 3913 0039 49       		.uleb128 0x49
 3914 003a 13       		.uleb128 0x13
 3915 003b 00       		.byte	0
 3916 003c 00       		.byte	0
 3917 003d 06       		.uleb128 0x6
 3918 003e 13       		.uleb128 0x13
 3919 003f 01       		.byte	0x1
 3920 0040 0B       		.uleb128 0xb
 3921 0041 0B       		.uleb128 0xb
 3922 0042 3A       		.uleb128 0x3a
 3923 0043 0B       		.uleb128 0xb
 3924 0044 3B       		.uleb128 0x3b
 3925 0045 0B       		.uleb128 0xb
 3926 0046 01       		.uleb128 0x1
 3927 0047 13       		.uleb128 0x13
 3928 0048 00       		.byte	0
 3929 0049 00       		.byte	0
 3930 004a 07       		.uleb128 0x7
 3931 004b 0D       		.uleb128 0xd
 3932 004c 00       		.byte	0
 3933 004d 03       		.uleb128 0x3
 3934 004e 0E       		.uleb128 0xe
 3935 004f 3A       		.uleb128 0x3a
 3936 0050 0B       		.uleb128 0xb
 3937 0051 3B       		.uleb128 0x3b
 3938 0052 0B       		.uleb128 0xb
 3939 0053 49       		.uleb128 0x49
 3940 0054 13       		.uleb128 0x13
 3941 0055 38       		.uleb128 0x38
 3942 0056 0B       		.uleb128 0xb
 3943 0057 00       		.byte	0
 3944 0058 00       		.byte	0
 3945 0059 08       		.uleb128 0x8
 3946 005a 16       		.uleb128 0x16
 3947 005b 00       		.byte	0
 3948 005c 03       		.uleb128 0x3
 3949 005d 0E       		.uleb128 0xe
 3950 005e 3A       		.uleb128 0x3a
 3951 005f 0B       		.uleb128 0xb
 3952 0060 3B       		.uleb128 0x3b
 3953 0061 0B       		.uleb128 0xb
 3954 0062 49       		.uleb128 0x49
 3955 0063 13       		.uleb128 0x13
 3956 0064 00       		.byte	0
 3957 0065 00       		.byte	0
 3958 0066 09       		.uleb128 0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 103


 3959 0067 2E       		.uleb128 0x2e
 3960 0068 00       		.byte	0
 3961 0069 3F       		.uleb128 0x3f
 3962 006a 19       		.uleb128 0x19
 3963 006b 03       		.uleb128 0x3
 3964 006c 0E       		.uleb128 0xe
 3965 006d 3A       		.uleb128 0x3a
 3966 006e 0B       		.uleb128 0xb
 3967 006f 3B       		.uleb128 0x3b
 3968 0070 0B       		.uleb128 0xb
 3969 0071 27       		.uleb128 0x27
 3970 0072 19       		.uleb128 0x19
 3971 0073 11       		.uleb128 0x11
 3972 0074 01       		.uleb128 0x1
 3973 0075 12       		.uleb128 0x12
 3974 0076 06       		.uleb128 0x6
 3975 0077 40       		.uleb128 0x40
 3976 0078 18       		.uleb128 0x18
 3977 0079 9642     		.uleb128 0x2116
 3978 007b 19       		.uleb128 0x19
 3979 007c 00       		.byte	0
 3980 007d 00       		.byte	0
 3981 007e 0A       		.uleb128 0xa
 3982 007f 2E       		.uleb128 0x2e
 3983 0080 01       		.byte	0x1
 3984 0081 3F       		.uleb128 0x3f
 3985 0082 19       		.uleb128 0x19
 3986 0083 03       		.uleb128 0x3
 3987 0084 0E       		.uleb128 0xe
 3988 0085 3A       		.uleb128 0x3a
 3989 0086 0B       		.uleb128 0xb
 3990 0087 3B       		.uleb128 0x3b
 3991 0088 0B       		.uleb128 0xb
 3992 0089 27       		.uleb128 0x27
 3993 008a 19       		.uleb128 0x19
 3994 008b 11       		.uleb128 0x11
 3995 008c 01       		.uleb128 0x1
 3996 008d 12       		.uleb128 0x12
 3997 008e 06       		.uleb128 0x6
 3998 008f 40       		.uleb128 0x40
 3999 0090 18       		.uleb128 0x18
 4000 0091 9642     		.uleb128 0x2116
 4001 0093 19       		.uleb128 0x19
 4002 0094 01       		.uleb128 0x1
 4003 0095 13       		.uleb128 0x13
 4004 0096 00       		.byte	0
 4005 0097 00       		.byte	0
 4006 0098 0B       		.uleb128 0xb
 4007 0099 34       		.uleb128 0x34
 4008 009a 00       		.byte	0
 4009 009b 03       		.uleb128 0x3
 4010 009c 0E       		.uleb128 0xe
 4011 009d 3A       		.uleb128 0x3a
 4012 009e 0B       		.uleb128 0xb
 4013 009f 3B       		.uleb128 0x3b
 4014 00a0 0B       		.uleb128 0xb
 4015 00a1 49       		.uleb128 0x49
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 104


 4016 00a2 13       		.uleb128 0x13
 4017 00a3 02       		.uleb128 0x2
 4018 00a4 18       		.uleb128 0x18
 4019 00a5 00       		.byte	0
 4020 00a6 00       		.byte	0
 4021 00a7 0C       		.uleb128 0xc
 4022 00a8 2E       		.uleb128 0x2e
 4023 00a9 00       		.byte	0
 4024 00aa 3F       		.uleb128 0x3f
 4025 00ab 19       		.uleb128 0x19
 4026 00ac 03       		.uleb128 0x3
 4027 00ad 0E       		.uleb128 0xe
 4028 00ae 3A       		.uleb128 0x3a
 4029 00af 0B       		.uleb128 0xb
 4030 00b0 3B       		.uleb128 0x3b
 4031 00b1 05       		.uleb128 0x5
 4032 00b2 27       		.uleb128 0x27
 4033 00b3 19       		.uleb128 0x19
 4034 00b4 11       		.uleb128 0x11
 4035 00b5 01       		.uleb128 0x1
 4036 00b6 12       		.uleb128 0x12
 4037 00b7 06       		.uleb128 0x6
 4038 00b8 40       		.uleb128 0x40
 4039 00b9 18       		.uleb128 0x18
 4040 00ba 9642     		.uleb128 0x2116
 4041 00bc 19       		.uleb128 0x19
 4042 00bd 00       		.byte	0
 4043 00be 00       		.byte	0
 4044 00bf 0D       		.uleb128 0xd
 4045 00c0 2E       		.uleb128 0x2e
 4046 00c1 01       		.byte	0x1
 4047 00c2 3F       		.uleb128 0x3f
 4048 00c3 19       		.uleb128 0x19
 4049 00c4 03       		.uleb128 0x3
 4050 00c5 0E       		.uleb128 0xe
 4051 00c6 3A       		.uleb128 0x3a
 4052 00c7 0B       		.uleb128 0xb
 4053 00c8 3B       		.uleb128 0x3b
 4054 00c9 05       		.uleb128 0x5
 4055 00ca 27       		.uleb128 0x27
 4056 00cb 19       		.uleb128 0x19
 4057 00cc 11       		.uleb128 0x11
 4058 00cd 01       		.uleb128 0x1
 4059 00ce 12       		.uleb128 0x12
 4060 00cf 06       		.uleb128 0x6
 4061 00d0 40       		.uleb128 0x40
 4062 00d1 18       		.uleb128 0x18
 4063 00d2 9642     		.uleb128 0x2116
 4064 00d4 19       		.uleb128 0x19
 4065 00d5 01       		.uleb128 0x1
 4066 00d6 13       		.uleb128 0x13
 4067 00d7 00       		.byte	0
 4068 00d8 00       		.byte	0
 4069 00d9 0E       		.uleb128 0xe
 4070 00da 34       		.uleb128 0x34
 4071 00db 00       		.byte	0
 4072 00dc 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 105


 4073 00dd 0E       		.uleb128 0xe
 4074 00de 3A       		.uleb128 0x3a
 4075 00df 0B       		.uleb128 0xb
 4076 00e0 3B       		.uleb128 0x3b
 4077 00e1 05       		.uleb128 0x5
 4078 00e2 49       		.uleb128 0x49
 4079 00e3 13       		.uleb128 0x13
 4080 00e4 02       		.uleb128 0x2
 4081 00e5 18       		.uleb128 0x18
 4082 00e6 00       		.byte	0
 4083 00e7 00       		.byte	0
 4084 00e8 0F       		.uleb128 0xf
 4085 00e9 2E       		.uleb128 0x2e
 4086 00ea 01       		.byte	0x1
 4087 00eb 3F       		.uleb128 0x3f
 4088 00ec 19       		.uleb128 0x19
 4089 00ed 03       		.uleb128 0x3
 4090 00ee 0E       		.uleb128 0xe
 4091 00ef 3A       		.uleb128 0x3a
 4092 00f0 0B       		.uleb128 0xb
 4093 00f1 3B       		.uleb128 0x3b
 4094 00f2 05       		.uleb128 0x5
 4095 00f3 27       		.uleb128 0x27
 4096 00f4 19       		.uleb128 0x19
 4097 00f5 11       		.uleb128 0x11
 4098 00f6 01       		.uleb128 0x1
 4099 00f7 12       		.uleb128 0x12
 4100 00f8 06       		.uleb128 0x6
 4101 00f9 40       		.uleb128 0x40
 4102 00fa 18       		.uleb128 0x18
 4103 00fb 9742     		.uleb128 0x2117
 4104 00fd 19       		.uleb128 0x19
 4105 00fe 01       		.uleb128 0x1
 4106 00ff 13       		.uleb128 0x13
 4107 0100 00       		.byte	0
 4108 0101 00       		.byte	0
 4109 0102 10       		.uleb128 0x10
 4110 0103 05       		.uleb128 0x5
 4111 0104 00       		.byte	0
 4112 0105 03       		.uleb128 0x3
 4113 0106 0E       		.uleb128 0xe
 4114 0107 3A       		.uleb128 0x3a
 4115 0108 0B       		.uleb128 0xb
 4116 0109 3B       		.uleb128 0x3b
 4117 010a 05       		.uleb128 0x5
 4118 010b 49       		.uleb128 0x49
 4119 010c 13       		.uleb128 0x13
 4120 010d 02       		.uleb128 0x2
 4121 010e 18       		.uleb128 0x18
 4122 010f 00       		.byte	0
 4123 0110 00       		.byte	0
 4124 0111 11       		.uleb128 0x11
 4125 0112 2E       		.uleb128 0x2e
 4126 0113 01       		.byte	0x1
 4127 0114 3F       		.uleb128 0x3f
 4128 0115 19       		.uleb128 0x19
 4129 0116 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 106


 4130 0117 0E       		.uleb128 0xe
 4131 0118 3A       		.uleb128 0x3a
 4132 0119 0B       		.uleb128 0xb
 4133 011a 3B       		.uleb128 0x3b
 4134 011b 05       		.uleb128 0x5
 4135 011c 27       		.uleb128 0x27
 4136 011d 19       		.uleb128 0x19
 4137 011e 49       		.uleb128 0x49
 4138 011f 13       		.uleb128 0x13
 4139 0120 11       		.uleb128 0x11
 4140 0121 01       		.uleb128 0x1
 4141 0122 12       		.uleb128 0x12
 4142 0123 06       		.uleb128 0x6
 4143 0124 40       		.uleb128 0x40
 4144 0125 18       		.uleb128 0x18
 4145 0126 9642     		.uleb128 0x2116
 4146 0128 19       		.uleb128 0x19
 4147 0129 01       		.uleb128 0x1
 4148 012a 13       		.uleb128 0x13
 4149 012b 00       		.byte	0
 4150 012c 00       		.byte	0
 4151 012d 12       		.uleb128 0x12
 4152 012e 2E       		.uleb128 0x2e
 4153 012f 01       		.byte	0x1
 4154 0130 3F       		.uleb128 0x3f
 4155 0131 19       		.uleb128 0x19
 4156 0132 03       		.uleb128 0x3
 4157 0133 0E       		.uleb128 0xe
 4158 0134 3A       		.uleb128 0x3a
 4159 0135 0B       		.uleb128 0xb
 4160 0136 3B       		.uleb128 0x3b
 4161 0137 05       		.uleb128 0x5
 4162 0138 27       		.uleb128 0x27
 4163 0139 19       		.uleb128 0x19
 4164 013a 49       		.uleb128 0x49
 4165 013b 13       		.uleb128 0x13
 4166 013c 11       		.uleb128 0x11
 4167 013d 01       		.uleb128 0x1
 4168 013e 12       		.uleb128 0x12
 4169 013f 06       		.uleb128 0x6
 4170 0140 40       		.uleb128 0x40
 4171 0141 18       		.uleb128 0x18
 4172 0142 9742     		.uleb128 0x2117
 4173 0144 19       		.uleb128 0x19
 4174 0145 01       		.uleb128 0x1
 4175 0146 13       		.uleb128 0x13
 4176 0147 00       		.byte	0
 4177 0148 00       		.byte	0
 4178 0149 13       		.uleb128 0x13
 4179 014a 2E       		.uleb128 0x2e
 4180 014b 00       		.byte	0
 4181 014c 3F       		.uleb128 0x3f
 4182 014d 19       		.uleb128 0x19
 4183 014e 03       		.uleb128 0x3
 4184 014f 0E       		.uleb128 0xe
 4185 0150 3A       		.uleb128 0x3a
 4186 0151 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 107


 4187 0152 3B       		.uleb128 0x3b
 4188 0153 05       		.uleb128 0x5
 4189 0154 27       		.uleb128 0x27
 4190 0155 19       		.uleb128 0x19
 4191 0156 11       		.uleb128 0x11
 4192 0157 01       		.uleb128 0x1
 4193 0158 12       		.uleb128 0x12
 4194 0159 06       		.uleb128 0x6
 4195 015a 40       		.uleb128 0x40
 4196 015b 18       		.uleb128 0x18
 4197 015c 9742     		.uleb128 0x2117
 4198 015e 19       		.uleb128 0x19
 4199 015f 00       		.byte	0
 4200 0160 00       		.byte	0
 4201 0161 14       		.uleb128 0x14
 4202 0162 2E       		.uleb128 0x2e
 4203 0163 01       		.byte	0x1
 4204 0164 03       		.uleb128 0x3
 4205 0165 0E       		.uleb128 0xe
 4206 0166 3A       		.uleb128 0x3a
 4207 0167 0B       		.uleb128 0xb
 4208 0168 3B       		.uleb128 0x3b
 4209 0169 05       		.uleb128 0x5
 4210 016a 27       		.uleb128 0x27
 4211 016b 19       		.uleb128 0x19
 4212 016c 11       		.uleb128 0x11
 4213 016d 01       		.uleb128 0x1
 4214 016e 12       		.uleb128 0x12
 4215 016f 06       		.uleb128 0x6
 4216 0170 40       		.uleb128 0x40
 4217 0171 18       		.uleb128 0x18
 4218 0172 9642     		.uleb128 0x2116
 4219 0174 19       		.uleb128 0x19
 4220 0175 01       		.uleb128 0x1
 4221 0176 13       		.uleb128 0x13
 4222 0177 00       		.byte	0
 4223 0178 00       		.byte	0
 4224 0179 15       		.uleb128 0x15
 4225 017a 01       		.uleb128 0x1
 4226 017b 01       		.byte	0x1
 4227 017c 49       		.uleb128 0x49
 4228 017d 13       		.uleb128 0x13
 4229 017e 01       		.uleb128 0x1
 4230 017f 13       		.uleb128 0x13
 4231 0180 00       		.byte	0
 4232 0181 00       		.byte	0
 4233 0182 16       		.uleb128 0x16
 4234 0183 21       		.uleb128 0x21
 4235 0184 00       		.byte	0
 4236 0185 49       		.uleb128 0x49
 4237 0186 13       		.uleb128 0x13
 4238 0187 2F       		.uleb128 0x2f
 4239 0188 0B       		.uleb128 0xb
 4240 0189 00       		.byte	0
 4241 018a 00       		.byte	0
 4242 018b 17       		.uleb128 0x17
 4243 018c 34       		.uleb128 0x34
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 108


 4244 018d 00       		.byte	0
 4245 018e 03       		.uleb128 0x3
 4246 018f 0E       		.uleb128 0xe
 4247 0190 3A       		.uleb128 0x3a
 4248 0191 0B       		.uleb128 0xb
 4249 0192 3B       		.uleb128 0x3b
 4250 0193 0B       		.uleb128 0xb
 4251 0194 49       		.uleb128 0x49
 4252 0195 13       		.uleb128 0x13
 4253 0196 3F       		.uleb128 0x3f
 4254 0197 19       		.uleb128 0x19
 4255 0198 02       		.uleb128 0x2
 4256 0199 18       		.uleb128 0x18
 4257 019a 00       		.byte	0
 4258 019b 00       		.byte	0
 4259 019c 00       		.byte	0
 4260              		.section	.debug_aranges,"",%progbits
 4261 0000 E4000000 		.4byte	0xe4
 4262 0004 0200     		.2byte	0x2
 4263 0006 00000000 		.4byte	.Ldebug_info0
 4264 000a 04       		.byte	0x4
 4265 000b 00       		.byte	0
 4266 000c 0000     		.2byte	0
 4267 000e 0000     		.2byte	0
 4268 0010 00000000 		.4byte	.LFB0
 4269 0014 58010000 		.4byte	.LFE0-.LFB0
 4270 0018 00000000 		.4byte	.LFB1
 4271 001c 58010000 		.4byte	.LFE1-.LFB1
 4272 0020 00000000 		.4byte	.LFB2
 4273 0024 30000000 		.4byte	.LFE2-.LFB2
 4274 0028 00000000 		.4byte	.LFB3
 4275 002c 7C010000 		.4byte	.LFE3-.LFB3
 4276 0030 00000000 		.4byte	.LFB4
 4277 0034 3C000000 		.4byte	.LFE4-.LFB4
 4278 0038 00000000 		.4byte	.LFB5
 4279 003c 38000000 		.4byte	.LFE5-.LFB5
 4280 0040 00000000 		.4byte	.LFB6
 4281 0044 AC000000 		.4byte	.LFE6-.LFB6
 4282 0048 00000000 		.4byte	.LFB7
 4283 004c 3C000000 		.4byte	.LFE7-.LFB7
 4284 0050 00000000 		.4byte	.LFB8
 4285 0054 20000000 		.4byte	.LFE8-.LFB8
 4286 0058 00000000 		.4byte	.LFB9
 4287 005c 20000000 		.4byte	.LFE9-.LFB9
 4288 0060 00000000 		.4byte	.LFB10
 4289 0064 4C000000 		.4byte	.LFE10-.LFB10
 4290 0068 00000000 		.4byte	.LFB11
 4291 006c 68000000 		.4byte	.LFE11-.LFB11
 4292 0070 00000000 		.4byte	.LFB12
 4293 0074 7C000000 		.4byte	.LFE12-.LFB12
 4294 0078 00000000 		.4byte	.LFB13
 4295 007c A8000000 		.4byte	.LFE13-.LFB13
 4296 0080 00000000 		.4byte	.LFB14
 4297 0084 1C000000 		.4byte	.LFE14-.LFB14
 4298 0088 00000000 		.4byte	.LFB15
 4299 008c 1C000000 		.4byte	.LFE15-.LFB15
 4300 0090 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 109


 4301 0094 3C000000 		.4byte	.LFE16-.LFB16
 4302 0098 00000000 		.4byte	.LFB17
 4303 009c 44000000 		.4byte	.LFE17-.LFB17
 4304 00a0 00000000 		.4byte	.LFB18
 4305 00a4 A4000000 		.4byte	.LFE18-.LFB18
 4306 00a8 00000000 		.4byte	.LFB19
 4307 00ac 10040000 		.4byte	.LFE19-.LFB19
 4308 00b0 00000000 		.4byte	.LFB20
 4309 00b4 90000000 		.4byte	.LFE20-.LFB20
 4310 00b8 00000000 		.4byte	.LFB21
 4311 00bc 70010000 		.4byte	.LFE21-.LFB21
 4312 00c0 00000000 		.4byte	.LFB22
 4313 00c4 7C000000 		.4byte	.LFE22-.LFB22
 4314 00c8 00000000 		.4byte	.LFB23
 4315 00cc 3C000000 		.4byte	.LFE23-.LFB23
 4316 00d0 00000000 		.4byte	.LFB24
 4317 00d4 3C000000 		.4byte	.LFE24-.LFB24
 4318 00d8 00000000 		.4byte	.LFB25
 4319 00dc 38000000 		.4byte	.LFE25-.LFB25
 4320 00e0 00000000 		.4byte	0
 4321 00e4 00000000 		.4byte	0
 4322              		.section	.debug_ranges,"",%progbits
 4323              	.Ldebug_ranges0:
 4324 0000 00000000 		.4byte	.LFB0
 4325 0004 58010000 		.4byte	.LFE0
 4326 0008 00000000 		.4byte	.LFB1
 4327 000c 58010000 		.4byte	.LFE1
 4328 0010 00000000 		.4byte	.LFB2
 4329 0014 30000000 		.4byte	.LFE2
 4330 0018 00000000 		.4byte	.LFB3
 4331 001c 7C010000 		.4byte	.LFE3
 4332 0020 00000000 		.4byte	.LFB4
 4333 0024 3C000000 		.4byte	.LFE4
 4334 0028 00000000 		.4byte	.LFB5
 4335 002c 38000000 		.4byte	.LFE5
 4336 0030 00000000 		.4byte	.LFB6
 4337 0034 AC000000 		.4byte	.LFE6
 4338 0038 00000000 		.4byte	.LFB7
 4339 003c 3C000000 		.4byte	.LFE7
 4340 0040 00000000 		.4byte	.LFB8
 4341 0044 20000000 		.4byte	.LFE8
 4342 0048 00000000 		.4byte	.LFB9
 4343 004c 20000000 		.4byte	.LFE9
 4344 0050 00000000 		.4byte	.LFB10
 4345 0054 4C000000 		.4byte	.LFE10
 4346 0058 00000000 		.4byte	.LFB11
 4347 005c 68000000 		.4byte	.LFE11
 4348 0060 00000000 		.4byte	.LFB12
 4349 0064 7C000000 		.4byte	.LFE12
 4350 0068 00000000 		.4byte	.LFB13
 4351 006c A8000000 		.4byte	.LFE13
 4352 0070 00000000 		.4byte	.LFB14
 4353 0074 1C000000 		.4byte	.LFE14
 4354 0078 00000000 		.4byte	.LFB15
 4355 007c 1C000000 		.4byte	.LFE15
 4356 0080 00000000 		.4byte	.LFB16
 4357 0084 3C000000 		.4byte	.LFE16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 110


 4358 0088 00000000 		.4byte	.LFB17
 4359 008c 44000000 		.4byte	.LFE17
 4360 0090 00000000 		.4byte	.LFB18
 4361 0094 A4000000 		.4byte	.LFE18
 4362 0098 00000000 		.4byte	.LFB19
 4363 009c 10040000 		.4byte	.LFE19
 4364 00a0 00000000 		.4byte	.LFB20
 4365 00a4 90000000 		.4byte	.LFE20
 4366 00a8 00000000 		.4byte	.LFB21
 4367 00ac 70010000 		.4byte	.LFE21
 4368 00b0 00000000 		.4byte	.LFB22
 4369 00b4 7C000000 		.4byte	.LFE22
 4370 00b8 00000000 		.4byte	.LFB23
 4371 00bc 3C000000 		.4byte	.LFE23
 4372 00c0 00000000 		.4byte	.LFB24
 4373 00c4 3C000000 		.4byte	.LFE24
 4374 00c8 00000000 		.4byte	.LFB25
 4375 00cc 38000000 		.4byte	.LFE25
 4376 00d0 00000000 		.4byte	0
 4377 00d4 00000000 		.4byte	0
 4378              		.section	.debug_line,"",%progbits
 4379              	.Ldebug_line0:
 4380 0000 C1030000 		.section	.debug_str,"MS",%progbits,1
 4380      02004900 
 4380      00000201 
 4380      FB0E0D00 
 4380      01010101 
 4381              	.LASF10:
 4382 0000 75696E74 		.ascii	"uint16\000"
 4382      313600
 4383              	.LASF56:
 4384 0007 61646347 		.ascii	"adcGain\000"
 4384      61696E00 
 4385              	.LASF71:
 4386 000f 696E7075 		.ascii	"inputRange\000"
 4386      7452616E 
 4386      676500
 4387              	.LASF60:
 4388 001a 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4388      436F756E 
 4388      7473546F 
 4388      5F566F6C 
 4388      747300
 4389              	.LASF85:
 4390 002d 4144435F 		.ascii	"ADC_stopConversion\000"
 4390      73746F70 
 4390      436F6E76 
 4390      65727369 
 4390      6F6E00
 4391              	.LASF86:
 4392 0040 4144435F 		.ascii	"ADC_started\000"
 4392      73746172 
 4392      74656400 
 4393              	.LASF80:
 4394 004c 4144435F 		.ascii	"ADC_Read16\000"
 4394      52656164 
 4394      313600
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 111


 4395              	.LASF24:
 4396 0057 67636F72 		.ascii	"gcor\000"
 4396      00
 4397              	.LASF90:
 4398 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4398      43313120 
 4398      352E342E 
 4398      31203230 
 4398      31363036 
 4399 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4399      20726576 
 4399      6973696F 
 4399      6E203233 
 4399      37373135 
 4400 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4400      66756E63 
 4400      74696F6E 
 4400      2D736563 
 4400      74696F6E 
 4401              	.LASF29:
 4402 00ea 4144435F 		.ascii	"ADC_Init\000"
 4402      496E6974 
 4402      00
 4403              	.LASF7:
 4404 00f3 6C6F6E67 		.ascii	"long long unsigned int\000"
 4404      206C6F6E 
 4404      6720756E 
 4404      7369676E 
 4404      65642069 
 4405              	.LASF91:
 4406 010a 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC.c\000"
 4406      72617465 
 4406      645F536F 
 4406      75726365 
 4406      5C50536F 
 4407              	.LASF87:
 4408 0127 4144435F 		.ascii	"ADC_Config\000"
 4408      436F6E66 
 4408      696700
 4409              	.LASF45:
 4410 0132 4144435F 		.ascii	"ADC_StartConvert\000"
 4410      53746172 
 4410      74436F6E 
 4410      76657274 
 4410      00
 4411              	.LASF73:
 4412 0143 69646561 		.ascii	"idealOddDecGain\000"
 4412      6C4F6464 
 4412      44656347 
 4412      61696E00 
 4413              	.LASF6:
 4414 0153 6C6F6E67 		.ascii	"long long int\000"
 4414      206C6F6E 
 4414      6720696E 
 4414      7400
 4415              	.LASF0:
 4416 0161 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 112


 4416      65642063 
 4416      68617200 
 4417              	.LASF39:
 4418 016d 73746174 		.ascii	"status\000"
 4418      757300
 4419              	.LASF33:
 4420 0174 4144435F 		.ascii	"ADC_SetBufferGain\000"
 4420      53657442 
 4420      75666665 
 4420      72476169 
 4420      6E00
 4421              	.LASF14:
 4422 0186 696E7433 		.ascii	"int32\000"
 4422      3200
 4423              	.LASF30:
 4424 018c 4144435F 		.ascii	"ADC_Start\000"
 4424      53746172 
 4424      7400
 4425              	.LASF84:
 4426 0196 4144435F 		.ascii	"ADC_convDone\000"
 4426      636F6E76 
 4426      446F6E65 
 4426      00
 4427              	.LASF4:
 4428 01a3 6C6F6E67 		.ascii	"long int\000"
 4428      20696E74 
 4428      00
 4429              	.LASF62:
 4430 01ac 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4430      436F756E 
 4430      7473546F 
 4430      5F75566F 
 4430      6C747300 
 4431              	.LASF20:
 4432 01c0 72656731 		.ascii	"reg16\000"
 4432      3600
 4433              	.LASF9:
 4434 01c6 75696E74 		.ascii	"uint8\000"
 4434      3800
 4435              	.LASF17:
 4436 01cc 646F7562 		.ascii	"double\000"
 4436      6C6500
 4437              	.LASF52:
 4438 01d3 4144435F 		.ascii	"ADC_GetResult32\000"
 4438      47657452 
 4438      6573756C 
 4438      74333200 
 4439              	.LASF61:
 4440 01e3 566F6C74 		.ascii	"Volts\000"
 4440      7300
 4441              	.LASF11:
 4442 01e9 75696E74 		.ascii	"uint32\000"
 4442      333200
 4443              	.LASF83:
 4444 01f0 4144435F 		.ascii	"ADC_initVar\000"
 4444      696E6974 
 4444      56617200 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 113


 4445              	.LASF77:
 4446 01fc 4144435F 		.ascii	"ADC_SetDSMRef0Reg\000"
 4446      53657444 
 4446      534D5265 
 4446      66305265 
 4446      6700
 4447              	.LASF92:
 4448 020e 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4448      6F746F72 
 4448      694F535C 
 4448      6E6F746F 
 4448      72694F53 
 4449              	.LASF78:
 4450 0229 76616C75 		.ascii	"value\000"
 4450      6500
 4451              	.LASF48:
 4452 022f 7265744D 		.ascii	"retMode\000"
 4452      6F646500 
 4453              	.LASF8:
 4454 0237 756E7369 		.ascii	"unsigned int\000"
 4454      676E6564 
 4454      20696E74 
 4454      00
 4455              	.LASF63:
 4456 0244 75566F6C 		.ascii	"uVolts\000"
 4456      747300
 4457              	.LASF5:
 4458 024b 6C6F6E67 		.ascii	"long unsigned int\000"
 4458      20756E73 
 4458      69676E65 
 4458      6420696E 
 4458      7400
 4459              	.LASF26:
 4460 025d 4144435F 		.ascii	"ADC_GCOR_STRUCT\000"
 4460      47434F52 
 4460      5F535452 
 4460      55435400 
 4461              	.LASF3:
 4462 026d 73686F72 		.ascii	"short unsigned int\000"
 4462      7420756E 
 4462      7369676E 
 4462      65642069 
 4462      6E7400
 4463              	.LASF12:
 4464 0280 696E7438 		.ascii	"int8\000"
 4464      00
 4465              	.LASF46:
 4466 0285 4144435F 		.ascii	"ADC_StopConvert\000"
 4466      53746F70 
 4466      436F6E76 
 4466      65727400 
 4467              	.LASF44:
 4468 0295 67636F72 		.ascii	"gcorValue\000"
 4468      56616C75 
 4468      6500
 4469              	.LASF59:
 4470 029f 6D566F6C 		.ascii	"mVolts\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 114


 4470      747300
 4471              	.LASF74:
 4472 02a6 666C6173 		.ascii	"flash\000"
 4472      6800
 4473              	.LASF21:
 4474 02ac 72656733 		.ascii	"reg32\000"
 4474      3200
 4475              	.LASF70:
 4476 02b2 4144435F 		.ascii	"ADC_GainCompensation\000"
 4476      4761696E 
 4476      436F6D70 
 4476      656E7361 
 4476      74696F6E 
 4477              	.LASF15:
 4478 02c7 666C6F61 		.ascii	"float32\000"
 4478      74333200 
 4479              	.LASF23:
 4480 02cf 73697A65 		.ascii	"sizetype\000"
 4480      74797065 
 4480      00
 4481              	.LASF22:
 4482 02d8 6C6F6E67 		.ascii	"long double\000"
 4482      20646F75 
 4482      626C6500 
 4483              	.LASF41:
 4484 02e4 4144435F 		.ascii	"ADC_SetGCOR\000"
 4484      53657447 
 4484      434F5200 
 4485              	.LASF47:
 4486 02f0 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4486      4973456E 
 4486      64436F6E 
 4486      76657273 
 4486      696F6E00 
 4487              	.LASF82:
 4488 0304 4144435F 		.ascii	"ADC_gcor\000"
 4488      67636F72 
 4488      00
 4489              	.LASF69:
 4490 030d 4144435F 		.ascii	"ADC_InitConfig\000"
 4490      496E6974 
 4490      436F6E66 
 4490      696700
 4491              	.LASF49:
 4492 031c 4144435F 		.ascii	"ADC_GetResult8\000"
 4492      47657452 
 4492      6573756C 
 4492      743800
 4493              	.LASF37:
 4494 032b 636F6865 		.ascii	"coherency\000"
 4494      72656E63 
 4494      7900
 4495              	.LASF36:
 4496 0335 6761696E 		.ascii	"gain\000"
 4496      00
 4497              	.LASF55:
 4498 033a 4144435F 		.ascii	"ADC_SetGain\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 115


 4498      53657447 
 4498      61696E00 
 4499              	.LASF16:
 4500 0346 666C6F61 		.ascii	"float\000"
 4500      7400
 4501              	.LASF57:
 4502 034c 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4502      436F756E 
 4502      7473546F 
 4502      5F6D566F 
 4502      6C747300 
 4503              	.LASF19:
 4504 0360 72656738 		.ascii	"reg8\000"
 4504      00
 4505              	.LASF72:
 4506 0365 69646561 		.ascii	"idealDecGain\000"
 4506      6C446563 
 4506      4761696E 
 4506      00
 4507              	.LASF75:
 4508 0372 6E6F726D 		.ascii	"normalised\000"
 4508      616C6973 
 4508      656400
 4509              	.LASF1:
 4510 037d 756E7369 		.ascii	"unsigned char\000"
 4510      676E6564 
 4510      20636861 
 4510      7200
 4511              	.LASF67:
 4512 038b 4144435F 		.ascii	"ADC_SelectConfiguration\000"
 4512      53656C65 
 4512      6374436F 
 4512      6E666967 
 4512      75726174 
 4513              	.LASF2:
 4514 03a3 73686F72 		.ascii	"short int\000"
 4514      7420696E 
 4514      7400
 4515              	.LASF32:
 4516 03ad 4144435F 		.ascii	"ADC_Stop\000"
 4516      53746F70 
 4516      00
 4517              	.LASF76:
 4518 03b6 67636F72 		.ascii	"gcorTmp\000"
 4518      546D7000 
 4519              	.LASF66:
 4520 03be 7265736F 		.ascii	"resolution\000"
 4520      6C757469 
 4520      6F6E00
 4521              	.LASF88:
 4522 03c9 4144435F 		.ascii	"ADC_Offset\000"
 4522      4F666673 
 4522      657400
 4523              	.LASF64:
 4524 03d4 636F6566 		.ascii	"coefA\000"
 4524      4100
 4525              	.LASF65:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 116


 4526 03da 636F6566 		.ascii	"coefB\000"
 4526      4200
 4527              	.LASF18:
 4528 03e0 63686172 		.ascii	"char\000"
 4528      00
 4529              	.LASF43:
 4530 03e5 6756616C 		.ascii	"gValue\000"
 4530      756500
 4531              	.LASF27:
 4532 03ec 636F6E66 		.ascii	"config\000"
 4532      696700
 4533              	.LASF25:
 4534 03f3 6776616C 		.ascii	"gval\000"
 4534      00
 4535              	.LASF68:
 4536 03f8 72657374 		.ascii	"restart\000"
 4536      61727400 
 4537              	.LASF40:
 4538 0400 746D7056 		.ascii	"tmpValue\000"
 4538      616C7565 
 4538      00
 4539              	.LASF54:
 4540 0409 6F666673 		.ascii	"offset\000"
 4540      657400
 4541              	.LASF35:
 4542 0410 4144435F 		.ascii	"ADC_SetCoherency\000"
 4542      53657443 
 4542      6F686572 
 4542      656E6379 
 4542      00
 4543              	.LASF79:
 4544 0421 4144435F 		.ascii	"ADC_Read8\000"
 4544      52656164 
 4544      3800
 4545              	.LASF58:
 4546 042b 61646343 		.ascii	"adcCounts\000"
 4546      6F756E74 
 4546      7300
 4547              	.LASF81:
 4548 0435 4144435F 		.ascii	"ADC_Read32\000"
 4548      52656164 
 4548      333200
 4549              	.LASF28:
 4550 0440 656E6162 		.ascii	"enableInterrupts\000"
 4550      6C65496E 
 4550      74657272 
 4550      75707473 
 4550      00
 4551              	.LASF31:
 4552 0451 4144435F 		.ascii	"ADC_Enable\000"
 4552      456E6162 
 4552      6C6500
 4553              	.LASF42:
 4554 045c 4144435F 		.ascii	"ADC_ReadGCOR\000"
 4554      52656164 
 4554      47434F52 
 4554      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc1DdS9h.s 			page 117


 4555              	.LASF38:
 4556 0469 6761696E 		.ascii	"gainAdjust\000"
 4556      41646A75 
 4556      737400
 4557              	.LASF13:
 4558 0474 696E7431 		.ascii	"int16\000"
 4558      3600
 4559              	.LASF53:
 4560 047a 4144435F 		.ascii	"ADC_SetOffset\000"
 4560      5365744F 
 4560      66667365 
 4560      7400
 4561              	.LASF89:
 4562 0488 4144435F 		.ascii	"ADC_CountsPerVolt\000"
 4562      436F756E 
 4562      74735065 
 4562      72566F6C 
 4562      7400
 4563              	.LASF34:
 4564 049a 746D7052 		.ascii	"tmpReg\000"
 4564      656700
 4565              	.LASF50:
 4566 04a1 72657375 		.ascii	"result\000"
 4566      6C7400
 4567              	.LASF51:
 4568 04a8 4144435F 		.ascii	"ADC_GetResult16\000"
 4568      47657452 
 4568      6573756C 
 4568      74313600 
 4569              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

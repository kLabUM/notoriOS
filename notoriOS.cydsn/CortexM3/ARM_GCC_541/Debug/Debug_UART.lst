ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Debug_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Debug_UART_initVar
  20              		.bss
  21              		.type	Debug_UART_initVar, %object
  22              		.size	Debug_UART_initVar, 1
  23              	Debug_UART_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Debug_UART_Start,"ax",%progbits
  26              		.align	2
  27              		.global	Debug_UART_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	Debug_UART_Start, %function
  31              	Debug_UART_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\Debug_UART.c"
   1:Generated_Source\PSoC5/Debug_UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Debug_UART.c **** * File Name: Debug_UART.c
   3:Generated_Source\PSoC5/Debug_UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/Debug_UART.c **** *
   5:Generated_Source\PSoC5/Debug_UART.c **** * Description:
   6:Generated_Source\PSoC5/Debug_UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/Debug_UART.c **** *
   8:Generated_Source\PSoC5/Debug_UART.c **** * Note:
   9:Generated_Source\PSoC5/Debug_UART.c **** *
  10:Generated_Source\PSoC5/Debug_UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Debug_UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Debug_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/Debug_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/Debug_UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Debug_UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Debug_UART.c **** 
  17:Generated_Source\PSoC5/Debug_UART.c **** #include "Debug_UART.h"
  18:Generated_Source\PSoC5/Debug_UART.c **** #if (Debug_UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/Debug_UART.c ****     #include "Debug_UART_IntClock.h"
  20:Generated_Source\PSoC5/Debug_UART.c **** #endif /* End Debug_UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/Debug_UART.c **** 
  22:Generated_Source\PSoC5/Debug_UART.c **** 
  23:Generated_Source\PSoC5/Debug_UART.c **** /***************************************
  24:Generated_Source\PSoC5/Debug_UART.c **** * Global data allocation
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 2


  25:Generated_Source\PSoC5/Debug_UART.c **** ***************************************/
  26:Generated_Source\PSoC5/Debug_UART.c **** 
  27:Generated_Source\PSoC5/Debug_UART.c **** uint8 Debug_UART_initVar = 0u;
  28:Generated_Source\PSoC5/Debug_UART.c **** 
  29:Generated_Source\PSoC5/Debug_UART.c **** #if (Debug_UART_TX_INTERRUPT_ENABLED && Debug_UART_TX_ENABLED)
  30:Generated_Source\PSoC5/Debug_UART.c ****     volatile uint8 Debug_UART_txBuffer[Debug_UART_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/Debug_UART.c ****     volatile uint8 Debug_UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/Debug_UART.c **** #endif /* (Debug_UART_TX_INTERRUPT_ENABLED && Debug_UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/Debug_UART.c **** 
  35:Generated_Source\PSoC5/Debug_UART.c **** #if (Debug_UART_RX_INTERRUPT_ENABLED && (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED))
  36:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/Debug_UART.c ****     volatile uint8 Debug_UART_rxBuffer[Debug_UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/Debug_UART.c ****     volatile uint8 Debug_UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/Debug_UART.c ****     volatile uint8 Debug_UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/Debug_UART.c ****     volatile uint8 Debug_UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/Debug_UART.c ****     volatile uint8 Debug_UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/Debug_UART.c ****         volatile uint8 Debug_UART_rxAddressMode = Debug_UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/Debug_UART.c ****         volatile uint8 Debug_UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/Debug_UART.c **** #endif /* (Debug_UART_RX_INTERRUPT_ENABLED && (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/Debug_UART.c **** 
  48:Generated_Source\PSoC5/Debug_UART.c **** 
  49:Generated_Source\PSoC5/Debug_UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/Debug_UART.c **** * Function Name: Debug_UART_Start
  51:Generated_Source\PSoC5/Debug_UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/Debug_UART.c **** *
  53:Generated_Source\PSoC5/Debug_UART.c **** * Summary:
  54:Generated_Source\PSoC5/Debug_UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/Debug_UART.c **** *  Debug_UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/Debug_UART.c **** *  Debug_UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/Debug_UART.c **** *  Debug_UART_Enable() function.
  58:Generated_Source\PSoC5/Debug_UART.c **** *
  59:Generated_Source\PSoC5/Debug_UART.c **** * Parameters:
  60:Generated_Source\PSoC5/Debug_UART.c **** *  None.
  61:Generated_Source\PSoC5/Debug_UART.c **** *
  62:Generated_Source\PSoC5/Debug_UART.c **** * Return:
  63:Generated_Source\PSoC5/Debug_UART.c **** *  None.
  64:Generated_Source\PSoC5/Debug_UART.c **** *
  65:Generated_Source\PSoC5/Debug_UART.c **** * Global variables:
  66:Generated_Source\PSoC5/Debug_UART.c **** *  The Debug_UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/Debug_UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/Debug_UART.c **** *  and set to one (1u) the first time Debug_UART_Start() is called. This
  69:Generated_Source\PSoC5/Debug_UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/Debug_UART.c **** *  subsequent calls to the Debug_UART_Start() routine.
  71:Generated_Source\PSoC5/Debug_UART.c **** *
  72:Generated_Source\PSoC5/Debug_UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/Debug_UART.c **** *  No.
  74:Generated_Source\PSoC5/Debug_UART.c **** *
  75:Generated_Source\PSoC5/Debug_UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/Debug_UART.c **** void Debug_UART_Start(void) 
  77:Generated_Source\PSoC5/Debug_UART.c **** {
  34              		.loc 1 77 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 3


  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/Debug_UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/Debug_UART.c ****     if(Debug_UART_initVar == 0u)
  44              		.loc 1 79 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/Debug_UART.c ****     {
  81:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_Init();
  49              		.loc 1 81 0
  50 000c FFF7FEFF 		bl	Debug_UART_Init
  82:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_initVar = 1u;
  51              		.loc 1 82 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  83:Generated_Source\PSoC5/Debug_UART.c ****     }
  84:Generated_Source\PSoC5/Debug_UART.c **** 
  85:Generated_Source\PSoC5/Debug_UART.c ****     Debug_UART_Enable();
  56              		.loc 1 85 0
  57 0016 FFF7FEFF 		bl	Debug_UART_Enable
  86:Generated_Source\PSoC5/Debug_UART.c **** }
  58              		.loc 1 86 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	Debug_UART_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	Debug_UART_Start, .-Debug_UART_Start
  68              		.section	.text.Debug_UART_Init,"ax",%progbits
  69              		.align	2
  70              		.global	Debug_UART_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	Debug_UART_Init, %function
  74              	Debug_UART_Init:
  75              	.LFB1:
  87:Generated_Source\PSoC5/Debug_UART.c **** 
  88:Generated_Source\PSoC5/Debug_UART.c **** 
  89:Generated_Source\PSoC5/Debug_UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/Debug_UART.c **** * Function Name: Debug_UART_Init
  91:Generated_Source\PSoC5/Debug_UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/Debug_UART.c **** *
  93:Generated_Source\PSoC5/Debug_UART.c **** * Summary:
  94:Generated_Source\PSoC5/Debug_UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/Debug_UART.c **** *  dialog settings. It is not necessary to call Debug_UART_Init() because
  96:Generated_Source\PSoC5/Debug_UART.c **** *  the Debug_UART_Start() API calls this function and is the preferred
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 4


  97:Generated_Source\PSoC5/Debug_UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/Debug_UART.c **** *
  99:Generated_Source\PSoC5/Debug_UART.c **** * Parameters:
 100:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 101:Generated_Source\PSoC5/Debug_UART.c **** *
 102:Generated_Source\PSoC5/Debug_UART.c **** * Return:
 103:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 104:Generated_Source\PSoC5/Debug_UART.c **** *
 105:Generated_Source\PSoC5/Debug_UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/Debug_UART.c **** void Debug_UART_Init(void) 
 107:Generated_Source\PSoC5/Debug_UART.c **** {
  76              		.loc 1 107 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 80B4     		push	{r7}
  82              		.cfi_def_cfa_offset 4
  83              		.cfi_offset 7, -4
  84 0002 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/Debug_UART.c ****     #if(Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED)
 109:Generated_Source\PSoC5/Debug_UART.c **** 
 110:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/Debug_UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/Debug_UART.c ****             (void) CyIntSetVector(Debug_UART_RX_VECT_NUM, &Debug_UART_RXISR);
 113:Generated_Source\PSoC5/Debug_UART.c ****             CyIntSetPriority(Debug_UART_RX_VECT_NUM, Debug_UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/Debug_UART.c **** 
 117:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_SetRxAddressMode(Debug_UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_SetRxAddress1(Debug_UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_SetRxAddress2(Debug_UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* End Debug_UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/Debug_UART.c **** 
 123:Generated_Source\PSoC5/Debug_UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXBITCTR_PERIOD_REG = Debug_UART_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/Debug_UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXSTATUS_MASK_REG  = Debug_UART_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* End Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/Debug_UART.c **** 
 129:Generated_Source\PSoC5/Debug_UART.c ****     #if(Debug_UART_TX_ENABLED)
 130:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/Debug_UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/Debug_UART.c ****             (void) CyIntSetVector(Debug_UART_TX_VECT_NUM, &Debug_UART_TXISR);
 133:Generated_Source\PSoC5/Debug_UART.c ****             CyIntSetPriority(Debug_UART_TX_VECT_NUM, Debug_UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/Debug_UART.c **** 
 136:Generated_Source\PSoC5/Debug_UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXBITCLKGEN_CTR_REG = Debug_UART_BIT_CENTER;
  86              		.loc 1 138 0
  87 0004 064B     		ldr	r3, .L6
  88 0006 0622     		movs	r2, #6
  89 0008 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXBITCLKTX_COMPLETE_REG = ((Debug_UART_NUMBER_OF_DATA_BITS +
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 5


  90              		.loc 1 139 0
  91 000a 064B     		ldr	r3, .L6+4
  92 000c 4722     		movs	r2, #71
  93 000e 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/Debug_UART.c ****                         Debug_UART_NUMBER_OF_START_BIT) * Debug_UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/Debug_UART.c ****         #else
 142:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXBITCTR_PERIOD_REG = ((Debug_UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/Debug_UART.c ****                         Debug_UART_NUMBER_OF_START_BIT) * Debug_UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* End Debug_UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/Debug_UART.c **** 
 146:Generated_Source\PSoC5/Debug_UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXSTATUS_MASK_REG = Debug_UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/Debug_UART.c ****         #else
 150:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXSTATUS_MASK_REG = Debug_UART_INIT_TX_INTERRUPTS_MASK;
  94              		.loc 1 150 0
  95 0010 054B     		ldr	r3, .L6+8
  96 0012 0022     		movs	r2, #0
  97 0014 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC5/Debug_UART.c ****         #endif /*End Debug_UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/Debug_UART.c **** 
 153:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* End Debug_UART_TX_ENABLED */
 154:Generated_Source\PSoC5/Debug_UART.c **** 
 155:Generated_Source\PSoC5/Debug_UART.c ****     #if(Debug_UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/Debug_UART.c ****             (Debug_UART_ReadControlRegister() & (uint8)~Debug_UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/Debug_UART.c ****             (uint8)(Debug_UART_PARITY_TYPE << Debug_UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* End Debug_UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/Debug_UART.c **** }
  98              		.loc 1 160 0
  99 0016 00BF     		nop
 100 0018 BD46     		mov	sp, r7
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 001a 80BC     		pop	{r7}
 104              		.cfi_restore 7
 105              		.cfi_def_cfa_offset 0
 106 001c 7047     		bx	lr
 107              	.L7:
 108 001e 00BF     		.align	2
 109              	.L6:
 110 0020 23640040 		.word	1073767459
 111 0024 33640040 		.word	1073767475
 112 0028 85640040 		.word	1073767557
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	Debug_UART_Init, .-Debug_UART_Init
 116              		.section	.text.Debug_UART_Enable,"ax",%progbits
 117              		.align	2
 118              		.global	Debug_UART_Enable
 119              		.thumb
 120              		.thumb_func
 121              		.type	Debug_UART_Enable, %function
 122              	Debug_UART_Enable:
 123              	.LFB2:
 161:Generated_Source\PSoC5/Debug_UART.c **** 
 162:Generated_Source\PSoC5/Debug_UART.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 6


 163:Generated_Source\PSoC5/Debug_UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/Debug_UART.c **** * Function Name: Debug_UART_Enable
 165:Generated_Source\PSoC5/Debug_UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/Debug_UART.c **** *
 167:Generated_Source\PSoC5/Debug_UART.c **** * Summary:
 168:Generated_Source\PSoC5/Debug_UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/Debug_UART.c **** *  to call Debug_UART_Enable() because the Debug_UART_Start() API
 170:Generated_Source\PSoC5/Debug_UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/Debug_UART.c **** *  operation.
 172:Generated_Source\PSoC5/Debug_UART.c **** 
 173:Generated_Source\PSoC5/Debug_UART.c **** * Parameters:
 174:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 175:Generated_Source\PSoC5/Debug_UART.c **** *
 176:Generated_Source\PSoC5/Debug_UART.c **** * Return:
 177:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 178:Generated_Source\PSoC5/Debug_UART.c **** *
 179:Generated_Source\PSoC5/Debug_UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/Debug_UART.c **** *  Debug_UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/Debug_UART.c **** *
 182:Generated_Source\PSoC5/Debug_UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/Debug_UART.c **** void Debug_UART_Enable(void) 
 184:Generated_Source\PSoC5/Debug_UART.c **** {
 124              		.loc 1 184 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              		.cfi_def_cfa_offset 16
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/Debug_UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/Debug_UART.c ****     enableInterrupts = CyEnterCriticalSection();
 136              		.loc 1 186 0
 137 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 138 000a 0346     		mov	r3, r0
 139 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/Debug_UART.c **** 
 188:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED)
 189:Generated_Source\PSoC5/Debug_UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXBITCTR_CONTROL_REG |= Debug_UART_CNTR_ENABLE;
 191:Generated_Source\PSoC5/Debug_UART.c **** 
 192:Generated_Source\PSoC5/Debug_UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXSTATUS_ACTL_REG  |= Debug_UART_INT_ENABLE;
 194:Generated_Source\PSoC5/Debug_UART.c **** 
 195:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_EnableRxInt();
 197:Generated_Source\PSoC5/Debug_UART.c **** 
 198:Generated_Source\PSoC5/Debug_UART.c ****             #if (Debug_UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/Debug_UART.c ****             #endif /* (Debug_UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/Debug_UART.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 7


 204:Generated_Source\PSoC5/Debug_UART.c ****     #if(Debug_UART_TX_ENABLED)
 205:Generated_Source\PSoC5/Debug_UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/Debug_UART.c ****         #if(!Debug_UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXBITCTR_CONTROL_REG |= Debug_UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* End Debug_UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/Debug_UART.c **** 
 210:Generated_Source\PSoC5/Debug_UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_TXSTATUS_ACTL_REG |= Debug_UART_INT_ENABLE;
 140              		.loc 1 211 0
 141 000e 094A     		ldr	r2, .L9
 142 0010 084B     		ldr	r3, .L9
 143 0012 1B78     		ldrb	r3, [r3]
 144 0014 DBB2     		uxtb	r3, r3
 145 0016 43F01003 		orr	r3, r3, #16
 146 001a DBB2     		uxtb	r3, r3
 147 001c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_EnableTxInt();
 215:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/Debug_UART.c ****      #endif /* (Debug_UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/Debug_UART.c **** 
 218:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_IntClock_Start();  /* Enable the clock */
 148              		.loc 1 219 0
 149 001e FFF7FEFF 		bl	Debug_UART_IntClock_Start
 220:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/Debug_UART.c **** 
 222:Generated_Source\PSoC5/Debug_UART.c ****     CyExitCriticalSection(enableInterrupts);
 150              		.loc 1 222 0
 151 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 152 0024 1846     		mov	r0, r3
 153 0026 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/Debug_UART.c **** }
 154              		.loc 1 223 0
 155 002a 00BF     		nop
 156 002c 0837     		adds	r7, r7, #8
 157              		.cfi_def_cfa_offset 8
 158 002e BD46     		mov	sp, r7
 159              		.cfi_def_cfa_register 13
 160              		@ sp needed
 161 0030 80BD     		pop	{r7, pc}
 162              	.L10:
 163 0032 00BF     		.align	2
 164              	.L9:
 165 0034 95640040 		.word	1073767573
 166              		.cfi_endproc
 167              	.LFE2:
 168              		.size	Debug_UART_Enable, .-Debug_UART_Enable
 169              		.section	.text.Debug_UART_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	Debug_UART_Stop
 172              		.thumb
 173              		.thumb_func
 174              		.type	Debug_UART_Stop, %function
 175              	Debug_UART_Stop:
 176              	.LFB3:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 8


 224:Generated_Source\PSoC5/Debug_UART.c **** 
 225:Generated_Source\PSoC5/Debug_UART.c **** 
 226:Generated_Source\PSoC5/Debug_UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/Debug_UART.c **** * Function Name: Debug_UART_Stop
 228:Generated_Source\PSoC5/Debug_UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/Debug_UART.c **** *
 230:Generated_Source\PSoC5/Debug_UART.c **** * Summary:
 231:Generated_Source\PSoC5/Debug_UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/Debug_UART.c **** *
 233:Generated_Source\PSoC5/Debug_UART.c **** * Parameters:
 234:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 235:Generated_Source\PSoC5/Debug_UART.c **** *
 236:Generated_Source\PSoC5/Debug_UART.c **** * Return:
 237:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 238:Generated_Source\PSoC5/Debug_UART.c **** *
 239:Generated_Source\PSoC5/Debug_UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/Debug_UART.c **** void Debug_UART_Stop(void) 
 241:Generated_Source\PSoC5/Debug_UART.c **** {
 177              		.loc 1 241 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              		.cfi_def_cfa_offset 16
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/Debug_UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/Debug_UART.c ****     enableInterrupts = CyEnterCriticalSection();
 189              		.loc 1 243 0
 190 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 191 000a 0346     		mov	r3, r0
 192 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/Debug_UART.c **** 
 245:Generated_Source\PSoC5/Debug_UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED)
 247:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXBITCTR_CONTROL_REG &= (uint8) ~Debug_UART_CNTR_ENABLE;
 248:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/Debug_UART.c **** 
 250:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_TX_ENABLED)
 251:Generated_Source\PSoC5/Debug_UART.c ****         #if(!Debug_UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXBITCTR_CONTROL_REG &= (uint8) ~Debug_UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (!Debug_UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/Debug_UART.c **** 
 256:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_IntClock_Stop();   /* Disable the clock */
 193              		.loc 1 257 0
 194 000e FFF7FEFF 		bl	Debug_UART_IntClock_Stop
 258:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/Debug_UART.c **** 
 260:Generated_Source\PSoC5/Debug_UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED)
 262:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXSTATUS_ACTL_REG  &= (uint8) ~Debug_UART_INT_ENABLE;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 9


 263:Generated_Source\PSoC5/Debug_UART.c **** 
 264:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_DisableRxInt();
 266:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/Debug_UART.c **** 
 269:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_TX_ENABLED)
 270:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_TXSTATUS_ACTL_REG &= (uint8) ~Debug_UART_INT_ENABLE;
 195              		.loc 1 270 0
 196 0012 084A     		ldr	r2, .L12
 197 0014 074B     		ldr	r3, .L12
 198 0016 1B78     		ldrb	r3, [r3]
 199 0018 DBB2     		uxtb	r3, r3
 200 001a 23F01003 		bic	r3, r3, #16
 201 001e DBB2     		uxtb	r3, r3
 202 0020 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/Debug_UART.c **** 
 272:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_DisableTxInt();
 274:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/Debug_UART.c **** 
 277:Generated_Source\PSoC5/Debug_UART.c ****     CyExitCriticalSection(enableInterrupts);
 203              		.loc 1 277 0
 204 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 205 0024 1846     		mov	r0, r3
 206 0026 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/Debug_UART.c **** }
 207              		.loc 1 278 0
 208 002a 00BF     		nop
 209 002c 0837     		adds	r7, r7, #8
 210              		.cfi_def_cfa_offset 8
 211 002e BD46     		mov	sp, r7
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 0030 80BD     		pop	{r7, pc}
 215              	.L13:
 216 0032 00BF     		.align	2
 217              	.L12:
 218 0034 95640040 		.word	1073767573
 219              		.cfi_endproc
 220              	.LFE3:
 221              		.size	Debug_UART_Stop, .-Debug_UART_Stop
 222              		.section	.text.Debug_UART_ReadControlRegister,"ax",%progbits
 223              		.align	2
 224              		.global	Debug_UART_ReadControlRegister
 225              		.thumb
 226              		.thumb_func
 227              		.type	Debug_UART_ReadControlRegister, %function
 228              	Debug_UART_ReadControlRegister:
 229              	.LFB4:
 279:Generated_Source\PSoC5/Debug_UART.c **** 
 280:Generated_Source\PSoC5/Debug_UART.c **** 
 281:Generated_Source\PSoC5/Debug_UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/Debug_UART.c **** * Function Name: Debug_UART_ReadControlRegister
 283:Generated_Source\PSoC5/Debug_UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/Debug_UART.c **** *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 10


 285:Generated_Source\PSoC5/Debug_UART.c **** * Summary:
 286:Generated_Source\PSoC5/Debug_UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/Debug_UART.c **** *
 288:Generated_Source\PSoC5/Debug_UART.c **** * Parameters:
 289:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 290:Generated_Source\PSoC5/Debug_UART.c **** *
 291:Generated_Source\PSoC5/Debug_UART.c **** * Return:
 292:Generated_Source\PSoC5/Debug_UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/Debug_UART.c **** *
 294:Generated_Source\PSoC5/Debug_UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/Debug_UART.c **** uint8 Debug_UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/Debug_UART.c **** {
 230              		.loc 1 296 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 80B4     		push	{r7}
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 00AF     		add	r7, sp, #0
 239              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/Debug_UART.c ****         return(0u);
 240              		.loc 1 298 0
 241 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/Debug_UART.c ****     #else
 300:Generated_Source\PSoC5/Debug_UART.c ****         return(Debug_UART_CONTROL_REG);
 301:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/Debug_UART.c **** }
 242              		.loc 1 302 0
 243 0006 1846     		mov	r0, r3
 244 0008 BD46     		mov	sp, r7
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 000a 80BC     		pop	{r7}
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 000c 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE4:
 253              		.size	Debug_UART_ReadControlRegister, .-Debug_UART_ReadControlRegister
 254 000e 00BF     		.section	.text.Debug_UART_WriteControlRegister,"ax",%progbits
 255              		.align	2
 256              		.global	Debug_UART_WriteControlRegister
 257              		.thumb
 258              		.thumb_func
 259              		.type	Debug_UART_WriteControlRegister, %function
 260              	Debug_UART_WriteControlRegister:
 261              	.LFB5:
 303:Generated_Source\PSoC5/Debug_UART.c **** 
 304:Generated_Source\PSoC5/Debug_UART.c **** 
 305:Generated_Source\PSoC5/Debug_UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/Debug_UART.c **** * Function Name: Debug_UART_WriteControlRegister
 307:Generated_Source\PSoC5/Debug_UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/Debug_UART.c **** *
 309:Generated_Source\PSoC5/Debug_UART.c **** * Summary:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 11


 310:Generated_Source\PSoC5/Debug_UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/Debug_UART.c **** *
 312:Generated_Source\PSoC5/Debug_UART.c **** * Parameters:
 313:Generated_Source\PSoC5/Debug_UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/Debug_UART.c **** *
 315:Generated_Source\PSoC5/Debug_UART.c **** * Return:
 316:Generated_Source\PSoC5/Debug_UART.c **** *  None.
 317:Generated_Source\PSoC5/Debug_UART.c **** *
 318:Generated_Source\PSoC5/Debug_UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/Debug_UART.c **** void  Debug_UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/Debug_UART.c **** {
 262              		.loc 1 320 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0000 80B4     		push	{r7}
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 7, -4
 270 0002 83B0     		sub	sp, sp, #12
 271              		.cfi_def_cfa_offset 16
 272 0004 00AF     		add	r7, sp, #0
 273              		.cfi_def_cfa_register 7
 274 0006 0346     		mov	r3, r0
 275 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/Debug_UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/Debug_UART.c ****         {
 324:Generated_Source\PSoC5/Debug_UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/Debug_UART.c ****         }
 326:Generated_Source\PSoC5/Debug_UART.c ****     #else
 327:Generated_Source\PSoC5/Debug_UART.c ****        Debug_UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/Debug_UART.c **** }
 276              		.loc 1 329 0
 277 000a 00BF     		nop
 278 000c 0C37     		adds	r7, r7, #12
 279              		.cfi_def_cfa_offset 4
 280 000e BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 0010 80BC     		pop	{r7}
 284              		.cfi_restore 7
 285              		.cfi_def_cfa_offset 0
 286 0012 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE5:
 289              		.size	Debug_UART_WriteControlRegister, .-Debug_UART_WriteControlRegister
 290              		.section	.text.Debug_UART_SetTxInterruptMode,"ax",%progbits
 291              		.align	2
 292              		.global	Debug_UART_SetTxInterruptMode
 293              		.thumb
 294              		.thumb_func
 295              		.type	Debug_UART_SetTxInterruptMode, %function
 296              	Debug_UART_SetTxInterruptMode:
 297              	.LFB6:
 330:Generated_Source\PSoC5/Debug_UART.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 12


 331:Generated_Source\PSoC5/Debug_UART.c **** 
 332:Generated_Source\PSoC5/Debug_UART.c **** #if(Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED)
 333:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/Debug_UART.c ****     *
 337:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 338:Generated_Source\PSoC5/Debug_UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/Debug_UART.c ****     *
 340:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/Debug_UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/Debug_UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/Debug_UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/Debug_UART.c ****     *
 352:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 353:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 354:Generated_Source\PSoC5/Debug_UART.c ****     *
 355:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
 356:Generated_Source\PSoC5/Debug_UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/Debug_UART.c ****     *
 358:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/Debug_UART.c ****     {
 361:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXSTATUS_MASK_REG  = intSrc;
 362:Generated_Source\PSoC5/Debug_UART.c ****     }
 363:Generated_Source\PSoC5/Debug_UART.c **** 
 364:Generated_Source\PSoC5/Debug_UART.c **** 
 365:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_ReadRxData
 367:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/Debug_UART.c ****     *
 369:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 370:Generated_Source\PSoC5/Debug_UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/Debug_UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/Debug_UART.c ****     *
 373:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 375:Generated_Source\PSoC5/Debug_UART.c ****     *
 376:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 377:Generated_Source\PSoC5/Debug_UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/Debug_UART.c ****     *
 379:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/Debug_UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/Debug_UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/Debug_UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/Debug_UART.c ****     *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 13


 388:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
 390:Generated_Source\PSoC5/Debug_UART.c ****     *
 391:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/Debug_UART.c ****     {
 394:Generated_Source\PSoC5/Debug_UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/Debug_UART.c **** 
 396:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/Debug_UART.c **** 
 398:Generated_Source\PSoC5/Debug_UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/Debug_UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/Debug_UART.c **** 
 401:Generated_Source\PSoC5/Debug_UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_DisableRxInt();
 403:Generated_Source\PSoC5/Debug_UART.c **** 
 404:Generated_Source\PSoC5/Debug_UART.c ****         locRxBufferRead  = Debug_UART_rxBufferRead;
 405:Generated_Source\PSoC5/Debug_UART.c ****         locRxBufferWrite = Debug_UART_rxBufferWrite;
 406:Generated_Source\PSoC5/Debug_UART.c **** 
 407:Generated_Source\PSoC5/Debug_UART.c ****         if( (Debug_UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/Debug_UART.c ****         {
 409:Generated_Source\PSoC5/Debug_UART.c ****             rxData = Debug_UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/Debug_UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/Debug_UART.c **** 
 412:Generated_Source\PSoC5/Debug_UART.c ****             if(locRxBufferRead >= Debug_UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/Debug_UART.c ****             {
 414:Generated_Source\PSoC5/Debug_UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/Debug_UART.c ****             }
 416:Generated_Source\PSoC5/Debug_UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/Debug_UART.c **** 
 419:Generated_Source\PSoC5/Debug_UART.c ****             if(Debug_UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/Debug_UART.c ****             {
 421:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/Debug_UART.c ****                 #if ((Debug_UART_RX_INTERRUPT_ENABLED) && (Debug_UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/Debug_UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/Debug_UART.c ****                     #if( Debug_UART_HD_ENABLED )
 425:Generated_Source\PSoC5/Debug_UART.c ****                         if((Debug_UART_CONTROL_REG & Debug_UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/Debug_UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/Debug_UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/Debug_UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/Debug_UART.c ****                             */
 430:Generated_Source\PSoC5/Debug_UART.c ****                             Debug_UART_RXSTATUS_MASK_REG  |= Debug_UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/Debug_UART.c ****                         }
 432:Generated_Source\PSoC5/Debug_UART.c ****                     #else
 433:Generated_Source\PSoC5/Debug_UART.c ****                         Debug_UART_RXSTATUS_MASK_REG  |= Debug_UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/Debug_UART.c ****                     #endif /* end Debug_UART_HD_ENABLED */
 435:Generated_Source\PSoC5/Debug_UART.c ****                 #endif /* ((Debug_UART_RX_INTERRUPT_ENABLED) && (Debug_UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/Debug_UART.c ****             }
 437:Generated_Source\PSoC5/Debug_UART.c ****         }
 438:Generated_Source\PSoC5/Debug_UART.c ****         else
 439:Generated_Source\PSoC5/Debug_UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/Debug_UART.c ****             rxData = Debug_UART_RXDATA_REG;
 441:Generated_Source\PSoC5/Debug_UART.c ****         }
 442:Generated_Source\PSoC5/Debug_UART.c **** 
 443:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_EnableRxInt();
 444:Generated_Source\PSoC5/Debug_UART.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 14


 445:Generated_Source\PSoC5/Debug_UART.c ****     #else
 446:Generated_Source\PSoC5/Debug_UART.c **** 
 447:Generated_Source\PSoC5/Debug_UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/Debug_UART.c ****         rxData = Debug_UART_RXDATA_REG;
 449:Generated_Source\PSoC5/Debug_UART.c **** 
 450:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/Debug_UART.c **** 
 452:Generated_Source\PSoC5/Debug_UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/Debug_UART.c ****     }
 454:Generated_Source\PSoC5/Debug_UART.c **** 
 455:Generated_Source\PSoC5/Debug_UART.c **** 
 456:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_ReadRxStatus
 458:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/Debug_UART.c ****     *
 460:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 461:Generated_Source\PSoC5/Debug_UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/Debug_UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/Debug_UART.c ****     *
 464:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 466:Generated_Source\PSoC5/Debug_UART.c ****     *
 467:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 468:Generated_Source\PSoC5/Debug_UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/Debug_UART.c ****     *
 470:Generated_Source\PSoC5/Debug_UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/Debug_UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/Debug_UART.c ****     *  register read.
 475:Generated_Source\PSoC5/Debug_UART.c ****     *
 476:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/Debug_UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/Debug_UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/Debug_UART.c ****     *   bits.
 483:Generated_Source\PSoC5/Debug_UART.c ****     *
 484:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/Debug_UART.c ****     {
 487:Generated_Source\PSoC5/Debug_UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/Debug_UART.c **** 
 489:Generated_Source\PSoC5/Debug_UART.c ****         status = Debug_UART_RXSTATUS_REG & Debug_UART_RX_HW_MASK;
 490:Generated_Source\PSoC5/Debug_UART.c **** 
 491:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/Debug_UART.c ****         {
 494:Generated_Source\PSoC5/Debug_UART.c ****             status |= Debug_UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/Debug_UART.c ****         }
 497:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/Debug_UART.c **** 
 499:Generated_Source\PSoC5/Debug_UART.c ****         return(status);
 500:Generated_Source\PSoC5/Debug_UART.c ****     }
 501:Generated_Source\PSoC5/Debug_UART.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 15


 502:Generated_Source\PSoC5/Debug_UART.c **** 
 503:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_GetChar
 505:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/Debug_UART.c ****     *
 507:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 508:Generated_Source\PSoC5/Debug_UART.c ****     *  Returns the last received byte of data. Debug_UART_GetChar() is
 509:Generated_Source\PSoC5/Debug_UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/Debug_UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/Debug_UART.c ****     *
 512:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 514:Generated_Source\PSoC5/Debug_UART.c ****     *
 515:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 516:Generated_Source\PSoC5/Debug_UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/Debug_UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/Debug_UART.c ****     *
 519:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/Debug_UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/Debug_UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/Debug_UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/Debug_UART.c ****     *
 528:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
 530:Generated_Source\PSoC5/Debug_UART.c ****     *
 531:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_GetChar(void) 
 533:Generated_Source\PSoC5/Debug_UART.c ****     {
 534:Generated_Source\PSoC5/Debug_UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/Debug_UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/Debug_UART.c **** 
 537:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/Debug_UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/Debug_UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/Debug_UART.c **** 
 541:Generated_Source\PSoC5/Debug_UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_DisableRxInt();
 543:Generated_Source\PSoC5/Debug_UART.c **** 
 544:Generated_Source\PSoC5/Debug_UART.c ****         locRxBufferRead  = Debug_UART_rxBufferRead;
 545:Generated_Source\PSoC5/Debug_UART.c ****         locRxBufferWrite = Debug_UART_rxBufferWrite;
 546:Generated_Source\PSoC5/Debug_UART.c **** 
 547:Generated_Source\PSoC5/Debug_UART.c ****         if( (Debug_UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/Debug_UART.c ****         {
 549:Generated_Source\PSoC5/Debug_UART.c ****             rxData = Debug_UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/Debug_UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/Debug_UART.c ****             if(locRxBufferRead >= Debug_UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/Debug_UART.c ****             {
 553:Generated_Source\PSoC5/Debug_UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/Debug_UART.c ****             }
 555:Generated_Source\PSoC5/Debug_UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/Debug_UART.c **** 
 558:Generated_Source\PSoC5/Debug_UART.c ****             if(Debug_UART_rxBufferLoopDetect != 0u)
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 16


 559:Generated_Source\PSoC5/Debug_UART.c ****             {
 560:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/Debug_UART.c ****                 #if( (Debug_UART_RX_INTERRUPT_ENABLED) && (Debug_UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/Debug_UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/Debug_UART.c ****                     #if( Debug_UART_HD_ENABLED )
 564:Generated_Source\PSoC5/Debug_UART.c ****                         if((Debug_UART_CONTROL_REG & Debug_UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/Debug_UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/Debug_UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/Debug_UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/Debug_UART.c ****                             */
 569:Generated_Source\PSoC5/Debug_UART.c ****                             Debug_UART_RXSTATUS_MASK_REG |= Debug_UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/Debug_UART.c ****                         }
 571:Generated_Source\PSoC5/Debug_UART.c ****                     #else
 572:Generated_Source\PSoC5/Debug_UART.c ****                         Debug_UART_RXSTATUS_MASK_REG |= Debug_UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/Debug_UART.c ****                     #endif /* end Debug_UART_HD_ENABLED */
 574:Generated_Source\PSoC5/Debug_UART.c ****                 #endif /* Debug_UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/Debug_UART.c ****             }
 576:Generated_Source\PSoC5/Debug_UART.c **** 
 577:Generated_Source\PSoC5/Debug_UART.c ****         }
 578:Generated_Source\PSoC5/Debug_UART.c ****         else
 579:Generated_Source\PSoC5/Debug_UART.c ****         {   rxStatus = Debug_UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/Debug_UART.c ****             if((rxStatus & Debug_UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/Debug_UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/Debug_UART.c ****                 rxData = Debug_UART_RXDATA_REG;
 583:Generated_Source\PSoC5/Debug_UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/Debug_UART.c ****                 if((rxStatus & (Debug_UART_RX_STS_BREAK | Debug_UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/Debug_UART.c ****                                 Debug_UART_RX_STS_STOP_ERROR | Debug_UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/Debug_UART.c ****                 {
 587:Generated_Source\PSoC5/Debug_UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/Debug_UART.c ****                 }
 589:Generated_Source\PSoC5/Debug_UART.c ****             }
 590:Generated_Source\PSoC5/Debug_UART.c ****         }
 591:Generated_Source\PSoC5/Debug_UART.c **** 
 592:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_EnableRxInt();
 593:Generated_Source\PSoC5/Debug_UART.c **** 
 594:Generated_Source\PSoC5/Debug_UART.c ****     #else
 595:Generated_Source\PSoC5/Debug_UART.c **** 
 596:Generated_Source\PSoC5/Debug_UART.c ****         rxStatus =Debug_UART_RXSTATUS_REG;
 597:Generated_Source\PSoC5/Debug_UART.c ****         if((rxStatus & Debug_UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/Debug_UART.c ****         {
 599:Generated_Source\PSoC5/Debug_UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/Debug_UART.c ****             rxData = Debug_UART_RXDATA_REG;
 601:Generated_Source\PSoC5/Debug_UART.c **** 
 602:Generated_Source\PSoC5/Debug_UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/Debug_UART.c ****             if((rxStatus & (Debug_UART_RX_STS_BREAK | Debug_UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/Debug_UART.c ****                             Debug_UART_RX_STS_STOP_ERROR | Debug_UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/Debug_UART.c ****             {
 606:Generated_Source\PSoC5/Debug_UART.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/Debug_UART.c ****             }
 608:Generated_Source\PSoC5/Debug_UART.c ****         }
 609:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/Debug_UART.c **** 
 611:Generated_Source\PSoC5/Debug_UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/Debug_UART.c ****     }
 613:Generated_Source\PSoC5/Debug_UART.c **** 
 614:Generated_Source\PSoC5/Debug_UART.c **** 
 615:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 17


 616:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_GetByte
 617:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/Debug_UART.c ****     *
 619:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 620:Generated_Source\PSoC5/Debug_UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/Debug_UART.c ****     *  condition.
 622:Generated_Source\PSoC5/Debug_UART.c ****     *
 623:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 625:Generated_Source\PSoC5/Debug_UART.c ****     *
 626:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 627:Generated_Source\PSoC5/Debug_UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/Debug_UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/Debug_UART.c ****     *
 630:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
 632:Generated_Source\PSoC5/Debug_UART.c ****     *
 633:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/Debug_UART.c ****     uint16 Debug_UART_GetByte(void) 
 635:Generated_Source\PSoC5/Debug_UART.c ****     {
 636:Generated_Source\PSoC5/Debug_UART.c ****         
 637:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/Debug_UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/Debug_UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_DisableRxInt();
 641:Generated_Source\PSoC5/Debug_UART.c ****         locErrorStatus = (uint16)Debug_UART_errorStatus;
 642:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_EnableRxInt();
 644:Generated_Source\PSoC5/Debug_UART.c ****         return ( (uint16)(locErrorStatus << 8u) | Debug_UART_ReadRxData() );
 645:Generated_Source\PSoC5/Debug_UART.c ****     #else
 646:Generated_Source\PSoC5/Debug_UART.c ****         return ( ((uint16)Debug_UART_ReadRxStatus() << 8u) | Debug_UART_ReadRxData() );
 647:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* Debug_UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/Debug_UART.c ****         
 649:Generated_Source\PSoC5/Debug_UART.c ****     }
 650:Generated_Source\PSoC5/Debug_UART.c **** 
 651:Generated_Source\PSoC5/Debug_UART.c **** 
 652:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_GetRxBufferSize
 654:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/Debug_UART.c ****     *
 656:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 657:Generated_Source\PSoC5/Debug_UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/Debug_UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/Debug_UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/Debug_UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/Debug_UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/Debug_UART.c ****     *    account.
 663:Generated_Source\PSoC5/Debug_UART.c ****     *
 664:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 666:Generated_Source\PSoC5/Debug_UART.c ****     *
 667:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 668:Generated_Source\PSoC5/Debug_UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/Debug_UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/Debug_UART.c ****     *
 671:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferWrite - used to calculate left bytes.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 18


 673:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/Debug_UART.c ****     *
 676:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
 678:Generated_Source\PSoC5/Debug_UART.c ****     *
 679:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
 680:Generated_Source\PSoC5/Debug_UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/Debug_UART.c ****     *
 682:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/Debug_UART.c ****                                                             
 685:Generated_Source\PSoC5/Debug_UART.c ****     {
 686:Generated_Source\PSoC5/Debug_UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/Debug_UART.c **** 
 688:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/Debug_UART.c **** 
 690:Generated_Source\PSoC5/Debug_UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_DisableRxInt();
 692:Generated_Source\PSoC5/Debug_UART.c **** 
 693:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_rxBufferRead == Debug_UART_rxBufferWrite)
 694:Generated_Source\PSoC5/Debug_UART.c ****         {
 695:Generated_Source\PSoC5/Debug_UART.c ****             if(Debug_UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/Debug_UART.c ****             {
 697:Generated_Source\PSoC5/Debug_UART.c ****                 size = Debug_UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/Debug_UART.c ****             }
 699:Generated_Source\PSoC5/Debug_UART.c ****             else
 700:Generated_Source\PSoC5/Debug_UART.c ****             {
 701:Generated_Source\PSoC5/Debug_UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/Debug_UART.c ****             }
 703:Generated_Source\PSoC5/Debug_UART.c ****         }
 704:Generated_Source\PSoC5/Debug_UART.c ****         else if(Debug_UART_rxBufferRead < Debug_UART_rxBufferWrite)
 705:Generated_Source\PSoC5/Debug_UART.c ****         {
 706:Generated_Source\PSoC5/Debug_UART.c ****             size = (Debug_UART_rxBufferWrite - Debug_UART_rxBufferRead);
 707:Generated_Source\PSoC5/Debug_UART.c ****         }
 708:Generated_Source\PSoC5/Debug_UART.c ****         else
 709:Generated_Source\PSoC5/Debug_UART.c ****         {
 710:Generated_Source\PSoC5/Debug_UART.c ****             size = (Debug_UART_RX_BUFFER_SIZE - Debug_UART_rxBufferRead) + Debug_UART_rxBufferWrite
 711:Generated_Source\PSoC5/Debug_UART.c ****         }
 712:Generated_Source\PSoC5/Debug_UART.c **** 
 713:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_EnableRxInt();
 714:Generated_Source\PSoC5/Debug_UART.c **** 
 715:Generated_Source\PSoC5/Debug_UART.c ****     #else
 716:Generated_Source\PSoC5/Debug_UART.c **** 
 717:Generated_Source\PSoC5/Debug_UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/Debug_UART.c ****         size = ((Debug_UART_RXSTATUS_REG & Debug_UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/Debug_UART.c **** 
 720:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/Debug_UART.c **** 
 722:Generated_Source\PSoC5/Debug_UART.c ****         return(size);
 723:Generated_Source\PSoC5/Debug_UART.c ****     }
 724:Generated_Source\PSoC5/Debug_UART.c **** 
 725:Generated_Source\PSoC5/Debug_UART.c **** 
 726:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_ClearRxBuffer
 728:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/Debug_UART.c ****     *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 19


 730:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 731:Generated_Source\PSoC5/Debug_UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/Debug_UART.c ****     *
 733:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 735:Generated_Source\PSoC5/Debug_UART.c ****     *
 736:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 737:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 738:Generated_Source\PSoC5/Debug_UART.c ****     *
 739:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/Debug_UART.c ****     *
 745:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
 747:Generated_Source\PSoC5/Debug_UART.c ****     *
 748:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
 749:Generated_Source\PSoC5/Debug_UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/Debug_UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/Debug_UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/Debug_UART.c ****     *
 753:Generated_Source\PSoC5/Debug_UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/Debug_UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/Debug_UART.c ****     *
 756:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/Debug_UART.c ****     {
 759:Generated_Source\PSoC5/Debug_UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/Debug_UART.c **** 
 761:Generated_Source\PSoC5/Debug_UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/Debug_UART.c ****         enableInterrupts = CyEnterCriticalSection();
 763:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXDATA_AUX_CTL_REG |= (uint8)  Debug_UART_RX_FIFO_CLR;
 764:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXDATA_AUX_CTL_REG &= (uint8) ~Debug_UART_RX_FIFO_CLR;
 765:Generated_Source\PSoC5/Debug_UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/Debug_UART.c **** 
 767:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/Debug_UART.c **** 
 769:Generated_Source\PSoC5/Debug_UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_DisableRxInt();
 771:Generated_Source\PSoC5/Debug_UART.c **** 
 772:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/Debug_UART.c **** 
 777:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_EnableRxInt();
 778:Generated_Source\PSoC5/Debug_UART.c **** 
 779:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/Debug_UART.c **** 
 781:Generated_Source\PSoC5/Debug_UART.c ****     }
 782:Generated_Source\PSoC5/Debug_UART.c **** 
 783:Generated_Source\PSoC5/Debug_UART.c **** 
 784:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_SetRxAddressMode
 786:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 20


 787:Generated_Source\PSoC5/Debug_UART.c ****     *
 788:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 789:Generated_Source\PSoC5/Debug_UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/Debug_UART.c ****     *  UART.
 791:Generated_Source\PSoC5/Debug_UART.c ****     *
 792:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/Debug_UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/Debug_UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/Debug_UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/Debug_UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/Debug_UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/Debug_UART.c ****     *
 804:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 805:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 806:Generated_Source\PSoC5/Debug_UART.c ****     *
 807:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/Debug_UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/Debug_UART.c ****     *
 812:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/Debug_UART.c ****                                                         
 815:Generated_Source\PSoC5/Debug_UART.c ****     {
 816:Generated_Source\PSoC5/Debug_UART.c ****         #if(Debug_UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/Debug_UART.c ****             #if(Debug_UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/Debug_UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/Debug_UART.c ****                 {
 820:Generated_Source\PSoC5/Debug_UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/Debug_UART.c ****                 }
 822:Generated_Source\PSoC5/Debug_UART.c ****             #else /* Debug_UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/Debug_UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/Debug_UART.c ****                 tmpCtrl = Debug_UART_CONTROL_REG & (uint8)~Debug_UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/Debug_UART.c ****                 tmpCtrl |= (uint8)(addressMode << Debug_UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/Debug_UART.c **** 
 828:Generated_Source\PSoC5/Debug_UART.c ****                 #if(Debug_UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/Debug_UART.c ****                    (Debug_UART_RXBUFFERSIZE > Debug_UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/Debug_UART.c ****                     Debug_UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/Debug_UART.c ****                     Debug_UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/Debug_UART.c ****                 #endif /* End Debug_UART_RXBUFFERSIZE > Debug_UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/Debug_UART.c ****             #endif /* End Debug_UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/Debug_UART.c ****         #else /* Debug_UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/Debug_UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/Debug_UART.c ****             {
 837:Generated_Source\PSoC5/Debug_UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/Debug_UART.c ****             }
 839:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* End Debug_UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/Debug_UART.c ****     }
 841:Generated_Source\PSoC5/Debug_UART.c **** 
 842:Generated_Source\PSoC5/Debug_UART.c **** 
 843:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 21


 844:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_SetRxAddress1
 845:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/Debug_UART.c ****     *
 847:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 848:Generated_Source\PSoC5/Debug_UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/Debug_UART.c ****     *
 850:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/Debug_UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/Debug_UART.c ****     *
 853:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 854:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 855:Generated_Source\PSoC5/Debug_UART.c ****     *
 856:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/Debug_UART.c ****     {
 859:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXADDRESS1_REG = address;
 860:Generated_Source\PSoC5/Debug_UART.c ****     }
 861:Generated_Source\PSoC5/Debug_UART.c **** 
 862:Generated_Source\PSoC5/Debug_UART.c **** 
 863:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_SetRxAddress2
 865:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/Debug_UART.c ****     *
 867:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 868:Generated_Source\PSoC5/Debug_UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/Debug_UART.c ****     *
 870:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/Debug_UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/Debug_UART.c ****     *
 873:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 874:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 875:Generated_Source\PSoC5/Debug_UART.c ****     *
 876:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/Debug_UART.c ****     {
 879:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_RXADDRESS2_REG = address;
 880:Generated_Source\PSoC5/Debug_UART.c ****     }
 881:Generated_Source\PSoC5/Debug_UART.c **** 
 882:Generated_Source\PSoC5/Debug_UART.c **** #endif  /* Debug_UART_RX_ENABLED || Debug_UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/Debug_UART.c **** 
 884:Generated_Source\PSoC5/Debug_UART.c **** 
 885:Generated_Source\PSoC5/Debug_UART.c **** #if( (Debug_UART_TX_ENABLED) || (Debug_UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/Debug_UART.c ****     *
 890:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 891:Generated_Source\PSoC5/Debug_UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/Debug_UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/Debug_UART.c ****     *
 894:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/Debug_UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/Debug_UART.c ****     *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 22


 901:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 902:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 903:Generated_Source\PSoC5/Debug_UART.c ****     *
 904:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
 905:Generated_Source\PSoC5/Debug_UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/Debug_UART.c ****     *
 907:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/Debug_UART.c ****     {
 298              		.loc 1 909 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 7, -4
 306 0002 83B0     		sub	sp, sp, #12
 307              		.cfi_def_cfa_offset 16
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 0346     		mov	r3, r0
 311 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_TXSTATUS_MASK_REG = intSrc;
 312              		.loc 1 910 0
 313 000a 044A     		ldr	r2, .L18
 314 000c FB79     		ldrb	r3, [r7, #7]
 315 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/Debug_UART.c ****     }
 316              		.loc 1 911 0
 317 0010 00BF     		nop
 318 0012 0C37     		adds	r7, r7, #12
 319              		.cfi_def_cfa_offset 4
 320 0014 BD46     		mov	sp, r7
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 0016 80BC     		pop	{r7}
 324              		.cfi_restore 7
 325              		.cfi_def_cfa_offset 0
 326 0018 7047     		bx	lr
 327              	.L19:
 328 001a 00BF     		.align	2
 329              	.L18:
 330 001c 85640040 		.word	1073767557
 331              		.cfi_endproc
 332              	.LFE6:
 333              		.size	Debug_UART_SetTxInterruptMode, .-Debug_UART_SetTxInterruptMode
 334              		.section	.text.Debug_UART_WriteTxData,"ax",%progbits
 335              		.align	2
 336              		.global	Debug_UART_WriteTxData
 337              		.thumb
 338              		.thumb_func
 339              		.type	Debug_UART_WriteTxData, %function
 340              	Debug_UART_WriteTxData:
 341              	.LFB7:
 912:Generated_Source\PSoC5/Debug_UART.c **** 
 913:Generated_Source\PSoC5/Debug_UART.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 23


 914:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_WriteTxData
 916:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/Debug_UART.c ****     *
 918:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 919:Generated_Source\PSoC5/Debug_UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/Debug_UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/Debug_UART.c ****     *  separately.
 922:Generated_Source\PSoC5/Debug_UART.c ****     *
 923:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/Debug_UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/Debug_UART.c ****     *
 926:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 927:Generated_Source\PSoC5/Debug_UART.c ****     * None.
 928:Generated_Source\PSoC5/Debug_UART.c ****     *
 929:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/Debug_UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/Debug_UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/Debug_UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/Debug_UART.c ****     *
 938:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
 940:Generated_Source\PSoC5/Debug_UART.c ****     *
 941:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/Debug_UART.c ****     {
 342              		.loc 1 943 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 8
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347 0000 80B4     		push	{r7}
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 83B0     		sub	sp, sp, #12
 351              		.cfi_def_cfa_offset 16
 352 0004 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 354 0006 0346     		mov	r3, r0
 355 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/Debug_UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_initVar != 0u)
 356              		.loc 1 945 0
 357 000a 064B     		ldr	r3, .L23
 358 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 359 000e 002B     		cmp	r3, #0
 360 0010 02D0     		beq	.L22
 946:Generated_Source\PSoC5/Debug_UART.c ****         {
 947:Generated_Source\PSoC5/Debug_UART.c ****         #if (Debug_UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/Debug_UART.c **** 
 949:Generated_Source\PSoC5/Debug_UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_DisableTxInt();
 951:Generated_Source\PSoC5/Debug_UART.c **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 24


 952:Generated_Source\PSoC5/Debug_UART.c ****             if( (Debug_UART_txBufferRead == Debug_UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/Debug_UART.c ****                 ((Debug_UART_TXSTATUS_REG & Debug_UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/Debug_UART.c ****             {
 955:Generated_Source\PSoC5/Debug_UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/Debug_UART.c ****             }
 958:Generated_Source\PSoC5/Debug_UART.c ****             else
 959:Generated_Source\PSoC5/Debug_UART.c ****             {
 960:Generated_Source\PSoC5/Debug_UART.c ****                 if(Debug_UART_txBufferWrite >= Debug_UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/Debug_UART.c ****                 {
 962:Generated_Source\PSoC5/Debug_UART.c ****                     Debug_UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/Debug_UART.c ****                 }
 964:Generated_Source\PSoC5/Debug_UART.c **** 
 965:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_txBuffer[Debug_UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/Debug_UART.c **** 
 967:Generated_Source\PSoC5/Debug_UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_txBufferWrite++;
 969:Generated_Source\PSoC5/Debug_UART.c ****             }
 970:Generated_Source\PSoC5/Debug_UART.c **** 
 971:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_EnableTxInt();
 972:Generated_Source\PSoC5/Debug_UART.c **** 
 973:Generated_Source\PSoC5/Debug_UART.c ****         #else
 974:Generated_Source\PSoC5/Debug_UART.c **** 
 975:Generated_Source\PSoC5/Debug_UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXDATA_REG = txDataByte;
 361              		.loc 1 976 0
 362 0012 054A     		ldr	r2, .L23+4
 363 0014 FB79     		ldrb	r3, [r7, #7]
 364 0016 1370     		strb	r3, [r2]
 365              	.L22:
 977:Generated_Source\PSoC5/Debug_UART.c **** 
 978:Generated_Source\PSoC5/Debug_UART.c ****         #endif /*(Debug_UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/Debug_UART.c ****         }
 980:Generated_Source\PSoC5/Debug_UART.c ****     }
 366              		.loc 1 980 0
 367 0018 00BF     		nop
 368 001a 0C37     		adds	r7, r7, #12
 369              		.cfi_def_cfa_offset 4
 370 001c BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 001e 80BC     		pop	{r7}
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 0020 7047     		bx	lr
 377              	.L24:
 378 0022 00BF     		.align	2
 379              	.L23:
 380 0024 00000000 		.word	Debug_UART_initVar
 381 0028 45640040 		.word	1073767493
 382              		.cfi_endproc
 383              	.LFE7:
 384              		.size	Debug_UART_WriteTxData, .-Debug_UART_WriteTxData
 385              		.section	.text.Debug_UART_ReadTxStatus,"ax",%progbits
 386              		.align	2
 387              		.global	Debug_UART_ReadTxStatus
 388              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 25


 389              		.thumb_func
 390              		.type	Debug_UART_ReadTxStatus, %function
 391              	Debug_UART_ReadTxStatus:
 392              	.LFB8:
 981:Generated_Source\PSoC5/Debug_UART.c **** 
 982:Generated_Source\PSoC5/Debug_UART.c **** 
 983:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_ReadTxStatus
 985:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/Debug_UART.c ****     *
 987:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
 988:Generated_Source\PSoC5/Debug_UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/Debug_UART.c ****     *
 990:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
 992:Generated_Source\PSoC5/Debug_UART.c ****     *
 993:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
 994:Generated_Source\PSoC5/Debug_UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/Debug_UART.c ****     *
 996:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
 997:Generated_Source\PSoC5/Debug_UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/Debug_UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/Debug_UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/Debug_UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/Debug_UART.c ****     *
1002:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/Debug_UART.c ****     {
 393              		.loc 1 1004 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 7, -4
 401 0002 00AF     		add	r7, sp, #0
 402              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/Debug_UART.c ****         return(Debug_UART_TXSTATUS_REG);
 403              		.loc 1 1005 0
 404 0004 034B     		ldr	r3, .L27
 405 0006 1B78     		ldrb	r3, [r3]
 406 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/Debug_UART.c ****     }
 407              		.loc 1 1006 0
 408 000a 1846     		mov	r0, r3
 409 000c BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 000e 80BC     		pop	{r7}
 413              		.cfi_restore 7
 414              		.cfi_def_cfa_offset 0
 415 0010 7047     		bx	lr
 416              	.L28:
 417 0012 00BF     		.align	2
 418              	.L27:
 419 0014 65640040 		.word	1073767525
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 26


 420              		.cfi_endproc
 421              	.LFE8:
 422              		.size	Debug_UART_ReadTxStatus, .-Debug_UART_ReadTxStatus
 423              		.section	.text.Debug_UART_PutChar,"ax",%progbits
 424              		.align	2
 425              		.global	Debug_UART_PutChar
 426              		.thumb
 427              		.thumb_func
 428              		.type	Debug_UART_PutChar, %function
 429              	Debug_UART_PutChar:
 430              	.LFB9:
1007:Generated_Source\PSoC5/Debug_UART.c **** 
1008:Generated_Source\PSoC5/Debug_UART.c **** 
1009:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_PutChar
1011:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/Debug_UART.c ****     *
1013:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1014:Generated_Source\PSoC5/Debug_UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/Debug_UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/Debug_UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/Debug_UART.c ****     *
1018:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/Debug_UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/Debug_UART.c ****     *
1021:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1022:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1023:Generated_Source\PSoC5/Debug_UART.c ****     *
1024:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/Debug_UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/Debug_UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/Debug_UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/Debug_UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/Debug_UART.c ****     *
1034:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
1036:Generated_Source\PSoC5/Debug_UART.c ****     *
1037:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
1038:Generated_Source\PSoC5/Debug_UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/Debug_UART.c ****     *
1040:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/Debug_UART.c ****     {
 431              		.loc 1 1042 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 0000 80B4     		push	{r7}
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 7, -4
 439 0002 83B0     		sub	sp, sp, #12
 440              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 27


 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 443 0006 0346     		mov	r3, r0
 444 0008 FB71     		strb	r3, [r7, #7]
1043:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/Debug_UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/Debug_UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/Debug_UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/Debug_UART.c ****         */
1048:Generated_Source\PSoC5/Debug_UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/Debug_UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/Debug_UART.c **** 
1051:Generated_Source\PSoC5/Debug_UART.c ****         do
1052:Generated_Source\PSoC5/Debug_UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/Debug_UART.c **** 
1054:Generated_Source\PSoC5/Debug_UART.c ****         #if ((Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/Debug_UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_DisableTxInt();
1057:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/Debug_UART.c **** 
1059:Generated_Source\PSoC5/Debug_UART.c ****             locTxBufferWrite = Debug_UART_txBufferWrite;
1060:Generated_Source\PSoC5/Debug_UART.c ****             locTxBufferRead  = Debug_UART_txBufferRead;
1061:Generated_Source\PSoC5/Debug_UART.c **** 
1062:Generated_Source\PSoC5/Debug_UART.c ****         #if ((Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/Debug_UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_EnableTxInt();
1065:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/Debug_UART.c ****         }
1067:Generated_Source\PSoC5/Debug_UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/Debug_UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/Debug_UART.c ****                                 (uint8)(Debug_UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/Debug_UART.c **** 
1071:Generated_Source\PSoC5/Debug_UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/Debug_UART.c ****             ((Debug_UART_TXSTATUS_REG & Debug_UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/Debug_UART.c ****         {
1074:Generated_Source\PSoC5/Debug_UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/Debug_UART.c ****         }
1077:Generated_Source\PSoC5/Debug_UART.c ****         else
1078:Generated_Source\PSoC5/Debug_UART.c ****         {
1079:Generated_Source\PSoC5/Debug_UART.c ****             if(locTxBufferWrite >= Debug_UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/Debug_UART.c ****             {
1081:Generated_Source\PSoC5/Debug_UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/Debug_UART.c ****             }
1083:Generated_Source\PSoC5/Debug_UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/Debug_UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/Debug_UART.c **** 
1087:Generated_Source\PSoC5/Debug_UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/Debug_UART.c ****         #if ((Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_DisableTxInt();
1090:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/Debug_UART.c **** 
1092:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/Debug_UART.c **** 
1094:Generated_Source\PSoC5/Debug_UART.c ****         #if ((Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_EnableTxInt();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 28


1096:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* (Debug_UART_TX_BUFFER_SIZE > Debug_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/Debug_UART.c **** 
1098:Generated_Source\PSoC5/Debug_UART.c ****             if(0u != (Debug_UART_TXSTATUS_REG & Debug_UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/Debug_UART.c ****             {
1100:Generated_Source\PSoC5/Debug_UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/Debug_UART.c ****             }
1103:Generated_Source\PSoC5/Debug_UART.c ****         }
1104:Generated_Source\PSoC5/Debug_UART.c **** 
1105:Generated_Source\PSoC5/Debug_UART.c ****     #else
1106:Generated_Source\PSoC5/Debug_UART.c **** 
1107:Generated_Source\PSoC5/Debug_UART.c ****         while((Debug_UART_TXSTATUS_REG & Debug_UART_TX_STS_FIFO_FULL) != 0u)
 445              		.loc 1 1107 0
 446 000a 00BF     		nop
 447              	.L30:
 448              		.loc 1 1107 0 is_stmt 0 discriminator 1
 449 000c 074B     		ldr	r3, .L31
 450 000e 1B78     		ldrb	r3, [r3]
 451 0010 DBB2     		uxtb	r3, r3
 452 0012 03F00403 		and	r3, r3, #4
 453 0016 002B     		cmp	r3, #0
 454 0018 F8D1     		bne	.L30
1108:Generated_Source\PSoC5/Debug_UART.c ****         {
1109:Generated_Source\PSoC5/Debug_UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/Debug_UART.c ****         }
1111:Generated_Source\PSoC5/Debug_UART.c **** 
1112:Generated_Source\PSoC5/Debug_UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_TXDATA_REG = txDataByte;
 455              		.loc 1 1113 0 is_stmt 1
 456 001a 054A     		ldr	r2, .L31+4
 457 001c FB79     		ldrb	r3, [r7, #7]
 458 001e 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC5/Debug_UART.c **** 
1115:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* Debug_UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/Debug_UART.c ****     }
 459              		.loc 1 1116 0
 460 0020 00BF     		nop
 461 0022 0C37     		adds	r7, r7, #12
 462              		.cfi_def_cfa_offset 4
 463 0024 BD46     		mov	sp, r7
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 0026 80BC     		pop	{r7}
 467              		.cfi_restore 7
 468              		.cfi_def_cfa_offset 0
 469 0028 7047     		bx	lr
 470              	.L32:
 471 002a 00BF     		.align	2
 472              	.L31:
 473 002c 65640040 		.word	1073767525
 474 0030 45640040 		.word	1073767493
 475              		.cfi_endproc
 476              	.LFE9:
 477              		.size	Debug_UART_PutChar, .-Debug_UART_PutChar
 478              		.section	.text.Debug_UART_PutString,"ax",%progbits
 479              		.align	2
 480              		.global	Debug_UART_PutString
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 29


 481              		.thumb
 482              		.thumb_func
 483              		.type	Debug_UART_PutString, %function
 484              	Debug_UART_PutString:
 485              	.LFB10:
1117:Generated_Source\PSoC5/Debug_UART.c **** 
1118:Generated_Source\PSoC5/Debug_UART.c **** 
1119:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_PutString
1121:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/Debug_UART.c ****     *
1123:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1124:Generated_Source\PSoC5/Debug_UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/Debug_UART.c ****     *
1126:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/Debug_UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/Debug_UART.c ****     *
1129:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1130:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1131:Generated_Source\PSoC5/Debug_UART.c ****     *
1132:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/Debug_UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/Debug_UART.c ****     *
1136:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
1138:Generated_Source\PSoC5/Debug_UART.c ****     *
1139:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
1140:Generated_Source\PSoC5/Debug_UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/Debug_UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/Debug_UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/Debug_UART.c ****     *
1144:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/Debug_UART.c ****     {
 486              		.loc 1 1146 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 16
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490 0000 80B5     		push	{r7, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 7, -8
 493              		.cfi_offset 14, -4
 494 0002 84B0     		sub	sp, sp, #16
 495              		.cfi_def_cfa_offset 24
 496 0004 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 498 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/Debug_UART.c ****         uint16 bufIndex = 0u;
 499              		.loc 1 1147 0
 500 0008 0023     		movs	r3, #0
 501 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/Debug_UART.c **** 
1149:Generated_Source\PSoC5/Debug_UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_initVar != 0u)
 502              		.loc 1 1150 0
 503 000c 0C4B     		ldr	r3, .L38
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 30


 504 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 505 0010 002B     		cmp	r3, #0
 506 0012 10D0     		beq	.L37
1151:Generated_Source\PSoC5/Debug_UART.c ****         {
1152:Generated_Source\PSoC5/Debug_UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/Debug_UART.c ****             while(string[bufIndex] != (char8) 0)
 507              		.loc 1 1153 0
 508 0014 09E0     		b	.L35
 509              	.L36:
1154:Generated_Source\PSoC5/Debug_UART.c ****             {
1155:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_PutChar((uint8)string[bufIndex]);
 510              		.loc 1 1155 0
 511 0016 FB89     		ldrh	r3, [r7, #14]
 512 0018 7A68     		ldr	r2, [r7, #4]
 513 001a 1344     		add	r3, r3, r2
 514 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 001e 1846     		mov	r0, r3
 516 0020 FFF7FEFF 		bl	Debug_UART_PutChar
1156:Generated_Source\PSoC5/Debug_UART.c ****                 bufIndex++;
 517              		.loc 1 1156 0
 518 0024 FB89     		ldrh	r3, [r7, #14]
 519 0026 0133     		adds	r3, r3, #1
 520 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 521              	.L35:
1153:Generated_Source\PSoC5/Debug_UART.c ****             {
 522              		.loc 1 1153 0
 523 002a FB89     		ldrh	r3, [r7, #14]
 524 002c 7A68     		ldr	r2, [r7, #4]
 525 002e 1344     		add	r3, r3, r2
 526 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 0032 002B     		cmp	r3, #0
 528 0034 EFD1     		bne	.L36
 529              	.L37:
1157:Generated_Source\PSoC5/Debug_UART.c ****             }
1158:Generated_Source\PSoC5/Debug_UART.c ****         }
1159:Generated_Source\PSoC5/Debug_UART.c ****     }
 530              		.loc 1 1159 0
 531 0036 00BF     		nop
 532 0038 1037     		adds	r7, r7, #16
 533              		.cfi_def_cfa_offset 8
 534 003a BD46     		mov	sp, r7
 535              		.cfi_def_cfa_register 13
 536              		@ sp needed
 537 003c 80BD     		pop	{r7, pc}
 538              	.L39:
 539 003e 00BF     		.align	2
 540              	.L38:
 541 0040 00000000 		.word	Debug_UART_initVar
 542              		.cfi_endproc
 543              	.LFE10:
 544              		.size	Debug_UART_PutString, .-Debug_UART_PutString
 545              		.section	.text.Debug_UART_PutArray,"ax",%progbits
 546              		.align	2
 547              		.global	Debug_UART_PutArray
 548              		.thumb
 549              		.thumb_func
 550              		.type	Debug_UART_PutArray, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 31


 551              	Debug_UART_PutArray:
 552              	.LFB11:
1160:Generated_Source\PSoC5/Debug_UART.c **** 
1161:Generated_Source\PSoC5/Debug_UART.c **** 
1162:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_PutArray
1164:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/Debug_UART.c ****     *
1166:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1167:Generated_Source\PSoC5/Debug_UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/Debug_UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/Debug_UART.c ****     *
1170:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/Debug_UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/Debug_UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/Debug_UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/Debug_UART.c ****     *
1175:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1176:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1177:Generated_Source\PSoC5/Debug_UART.c ****     *
1178:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/Debug_UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/Debug_UART.c ****     *
1182:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
1184:Generated_Source\PSoC5/Debug_UART.c ****     *
1185:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
1186:Generated_Source\PSoC5/Debug_UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/Debug_UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/Debug_UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/Debug_UART.c ****     *
1190:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/Debug_UART.c ****                                                                     
1193:Generated_Source\PSoC5/Debug_UART.c ****     {
 553              		.loc 1 1193 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 16
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 80B5     		push	{r7, lr}
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 84B0     		sub	sp, sp, #16
 562              		.cfi_def_cfa_offset 24
 563 0004 00AF     		add	r7, sp, #0
 564              		.cfi_def_cfa_register 7
 565 0006 7860     		str	r0, [r7, #4]
 566 0008 0B46     		mov	r3, r1
 567 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/Debug_UART.c ****         uint8 bufIndex = 0u;
 568              		.loc 1 1194 0
 569 000c 0023     		movs	r3, #0
 570 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/Debug_UART.c **** 
1196:Generated_Source\PSoC5/Debug_UART.c ****         /* If not Initialized then skip this function */
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 32


1197:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_initVar != 0u)
 571              		.loc 1 1197 0
 572 0010 0B4B     		ldr	r3, .L45
 573 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0014 002B     		cmp	r3, #0
 575 0016 0ED0     		beq	.L44
1198:Generated_Source\PSoC5/Debug_UART.c ****         {
1199:Generated_Source\PSoC5/Debug_UART.c ****             while(bufIndex < byteCount)
 576              		.loc 1 1199 0
 577 0018 09E0     		b	.L42
 578              	.L43:
1200:Generated_Source\PSoC5/Debug_UART.c ****             {
1201:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_PutChar(string[bufIndex]);
 579              		.loc 1 1201 0
 580 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 581 001c 7A68     		ldr	r2, [r7, #4]
 582 001e 1344     		add	r3, r3, r2
 583 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 0022 1846     		mov	r0, r3
 585 0024 FFF7FEFF 		bl	Debug_UART_PutChar
1202:Generated_Source\PSoC5/Debug_UART.c ****                 bufIndex++;
 586              		.loc 1 1202 0
 587 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 588 002a 0133     		adds	r3, r3, #1
 589 002c FB73     		strb	r3, [r7, #15]
 590              	.L42:
1199:Generated_Source\PSoC5/Debug_UART.c ****             {
 591              		.loc 1 1199 0
 592 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 593 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 594 0032 9A42     		cmp	r2, r3
 595 0034 F1D3     		bcc	.L43
 596              	.L44:
1203:Generated_Source\PSoC5/Debug_UART.c ****             }
1204:Generated_Source\PSoC5/Debug_UART.c ****         }
1205:Generated_Source\PSoC5/Debug_UART.c ****     }
 597              		.loc 1 1205 0
 598 0036 00BF     		nop
 599 0038 1037     		adds	r7, r7, #16
 600              		.cfi_def_cfa_offset 8
 601 003a BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 003c 80BD     		pop	{r7, pc}
 605              	.L46:
 606 003e 00BF     		.align	2
 607              	.L45:
 608 0040 00000000 		.word	Debug_UART_initVar
 609              		.cfi_endproc
 610              	.LFE11:
 611              		.size	Debug_UART_PutArray, .-Debug_UART_PutArray
 612              		.section	.text.Debug_UART_PutCRLF,"ax",%progbits
 613              		.align	2
 614              		.global	Debug_UART_PutCRLF
 615              		.thumb
 616              		.thumb_func
 617              		.type	Debug_UART_PutCRLF, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 33


 618              	Debug_UART_PutCRLF:
 619              	.LFB12:
1206:Generated_Source\PSoC5/Debug_UART.c **** 
1207:Generated_Source\PSoC5/Debug_UART.c **** 
1208:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_PutCRLF
1210:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/Debug_UART.c ****     *
1212:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1213:Generated_Source\PSoC5/Debug_UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/Debug_UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/Debug_UART.c ****     *
1216:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/Debug_UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/Debug_UART.c ****     *
1219:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1220:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1221:Generated_Source\PSoC5/Debug_UART.c ****     *
1222:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/Debug_UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/Debug_UART.c ****     *
1226:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
1228:Generated_Source\PSoC5/Debug_UART.c ****     *
1229:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/Debug_UART.c ****     {
 620              		.loc 1 1231 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 8
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624 0000 80B5     		push	{r7, lr}
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 7, -8
 627              		.cfi_offset 14, -4
 628 0002 82B0     		sub	sp, sp, #8
 629              		.cfi_def_cfa_offset 16
 630 0004 00AF     		add	r7, sp, #0
 631              		.cfi_def_cfa_register 7
 632 0006 0346     		mov	r3, r0
 633 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/Debug_UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_initVar != 0u)
 634              		.loc 1 1233 0
 635 000a 094B     		ldr	r3, .L50
 636 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 637 000e 002B     		cmp	r3, #0
 638 0010 09D0     		beq	.L49
1234:Generated_Source\PSoC5/Debug_UART.c ****         {
1235:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_PutChar(txDataByte);
 639              		.loc 1 1235 0
 640 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 641 0014 1846     		mov	r0, r3
 642 0016 FFF7FEFF 		bl	Debug_UART_PutChar
1236:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_PutChar(0x0Du);
 643              		.loc 1 1236 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 34


 644 001a 0D20     		movs	r0, #13
 645 001c FFF7FEFF 		bl	Debug_UART_PutChar
1237:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_PutChar(0x0Au);
 646              		.loc 1 1237 0
 647 0020 0A20     		movs	r0, #10
 648 0022 FFF7FEFF 		bl	Debug_UART_PutChar
 649              	.L49:
1238:Generated_Source\PSoC5/Debug_UART.c ****         }
1239:Generated_Source\PSoC5/Debug_UART.c ****     }
 650              		.loc 1 1239 0
 651 0026 00BF     		nop
 652 0028 0837     		adds	r7, r7, #8
 653              		.cfi_def_cfa_offset 8
 654 002a BD46     		mov	sp, r7
 655              		.cfi_def_cfa_register 13
 656              		@ sp needed
 657 002c 80BD     		pop	{r7, pc}
 658              	.L51:
 659 002e 00BF     		.align	2
 660              	.L50:
 661 0030 00000000 		.word	Debug_UART_initVar
 662              		.cfi_endproc
 663              	.LFE12:
 664              		.size	Debug_UART_PutCRLF, .-Debug_UART_PutCRLF
 665              		.section	.text.Debug_UART_GetTxBufferSize,"ax",%progbits
 666              		.align	2
 667              		.global	Debug_UART_GetTxBufferSize
 668              		.thumb
 669              		.thumb_func
 670              		.type	Debug_UART_GetTxBufferSize, %function
 671              	Debug_UART_GetTxBufferSize:
 672              	.LFB13:
1240:Generated_Source\PSoC5/Debug_UART.c **** 
1241:Generated_Source\PSoC5/Debug_UART.c **** 
1242:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_GetTxBufferSize
1244:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/Debug_UART.c ****     *
1246:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1247:Generated_Source\PSoC5/Debug_UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/Debug_UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/Debug_UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/Debug_UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/Debug_UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/Debug_UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/Debug_UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/Debug_UART.c ****     *
1255:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1257:Generated_Source\PSoC5/Debug_UART.c ****     *
1258:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1259:Generated_Source\PSoC5/Debug_UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/Debug_UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/Debug_UART.c ****     *
1262:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferRead - used to calculate left space.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 35


1265:Generated_Source\PSoC5/Debug_UART.c ****     *
1266:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
1268:Generated_Source\PSoC5/Debug_UART.c ****     *
1269:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
1270:Generated_Source\PSoC5/Debug_UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/Debug_UART.c ****     *
1272:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/Debug_UART.c ****     uint8 Debug_UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/Debug_UART.c ****                                                             
1275:Generated_Source\PSoC5/Debug_UART.c ****     {
 673              		.loc 1 1275 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 8
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 83B0     		sub	sp, sp, #12
 682              		.cfi_def_cfa_offset 16
 683 0004 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/Debug_UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/Debug_UART.c **** 
1278:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/Debug_UART.c **** 
1280:Generated_Source\PSoC5/Debug_UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_DisableTxInt();
1282:Generated_Source\PSoC5/Debug_UART.c **** 
1283:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_txBufferRead == Debug_UART_txBufferWrite)
1284:Generated_Source\PSoC5/Debug_UART.c ****         {
1285:Generated_Source\PSoC5/Debug_UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/Debug_UART.c ****         }
1287:Generated_Source\PSoC5/Debug_UART.c ****         else if(Debug_UART_txBufferRead < Debug_UART_txBufferWrite)
1288:Generated_Source\PSoC5/Debug_UART.c ****         {
1289:Generated_Source\PSoC5/Debug_UART.c ****             size = (Debug_UART_txBufferWrite - Debug_UART_txBufferRead);
1290:Generated_Source\PSoC5/Debug_UART.c ****         }
1291:Generated_Source\PSoC5/Debug_UART.c ****         else
1292:Generated_Source\PSoC5/Debug_UART.c ****         {
1293:Generated_Source\PSoC5/Debug_UART.c ****             size = (Debug_UART_TX_BUFFER_SIZE - Debug_UART_txBufferRead) +
1294:Generated_Source\PSoC5/Debug_UART.c ****                     Debug_UART_txBufferWrite;
1295:Generated_Source\PSoC5/Debug_UART.c ****         }
1296:Generated_Source\PSoC5/Debug_UART.c **** 
1297:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_EnableTxInt();
1298:Generated_Source\PSoC5/Debug_UART.c **** 
1299:Generated_Source\PSoC5/Debug_UART.c ****     #else
1300:Generated_Source\PSoC5/Debug_UART.c **** 
1301:Generated_Source\PSoC5/Debug_UART.c ****         size = Debug_UART_TXSTATUS_REG;
 685              		.loc 1 1301 0
 686 0006 0D4B     		ldr	r3, .L57
 687 0008 1B78     		ldrb	r3, [r3]
 688 000a FB71     		strb	r3, [r7, #7]
1302:Generated_Source\PSoC5/Debug_UART.c **** 
1303:Generated_Source\PSoC5/Debug_UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/Debug_UART.c ****         if((size & Debug_UART_TX_STS_FIFO_FULL) != 0u)
 689              		.loc 1 1304 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 36


 690 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 691 000e 03F00403 		and	r3, r3, #4
 692 0012 002B     		cmp	r3, #0
 693 0014 02D0     		beq	.L53
1305:Generated_Source\PSoC5/Debug_UART.c ****         {
1306:Generated_Source\PSoC5/Debug_UART.c ****             size = Debug_UART_FIFO_LENGTH;
 694              		.loc 1 1306 0
 695 0016 0423     		movs	r3, #4
 696 0018 FB71     		strb	r3, [r7, #7]
 697 001a 09E0     		b	.L54
 698              	.L53:
1307:Generated_Source\PSoC5/Debug_UART.c ****         }
1308:Generated_Source\PSoC5/Debug_UART.c ****         else if((size & Debug_UART_TX_STS_FIFO_EMPTY) != 0u)
 699              		.loc 1 1308 0
 700 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 701 001e 03F00203 		and	r3, r3, #2
 702 0022 002B     		cmp	r3, #0
 703 0024 02D0     		beq	.L55
1309:Generated_Source\PSoC5/Debug_UART.c ****         {
1310:Generated_Source\PSoC5/Debug_UART.c ****             size = 0u;
 704              		.loc 1 1310 0
 705 0026 0023     		movs	r3, #0
 706 0028 FB71     		strb	r3, [r7, #7]
 707 002a 01E0     		b	.L54
 708              	.L55:
1311:Generated_Source\PSoC5/Debug_UART.c ****         }
1312:Generated_Source\PSoC5/Debug_UART.c ****         else
1313:Generated_Source\PSoC5/Debug_UART.c ****         {
1314:Generated_Source\PSoC5/Debug_UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/Debug_UART.c ****             size = 1u;
 709              		.loc 1 1315 0
 710 002c 0123     		movs	r3, #1
 711 002e FB71     		strb	r3, [r7, #7]
 712              	.L54:
1316:Generated_Source\PSoC5/Debug_UART.c ****         }
1317:Generated_Source\PSoC5/Debug_UART.c **** 
1318:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/Debug_UART.c **** 
1320:Generated_Source\PSoC5/Debug_UART.c ****     return(size);
 713              		.loc 1 1320 0
 714 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/Debug_UART.c ****     }
 715              		.loc 1 1321 0
 716 0032 1846     		mov	r0, r3
 717 0034 0C37     		adds	r7, r7, #12
 718              		.cfi_def_cfa_offset 4
 719 0036 BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 0038 80BC     		pop	{r7}
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 003a 7047     		bx	lr
 726              	.L58:
 727              		.align	2
 728              	.L57:
 729 003c 65640040 		.word	1073767525
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 37


 730              		.cfi_endproc
 731              	.LFE13:
 732              		.size	Debug_UART_GetTxBufferSize, .-Debug_UART_GetTxBufferSize
 733              		.section	.text.Debug_UART_ClearTxBuffer,"ax",%progbits
 734              		.align	2
 735              		.global	Debug_UART_ClearTxBuffer
 736              		.thumb
 737              		.thumb_func
 738              		.type	Debug_UART_ClearTxBuffer, %function
 739              	Debug_UART_ClearTxBuffer:
 740              	.LFB14:
1322:Generated_Source\PSoC5/Debug_UART.c **** 
1323:Generated_Source\PSoC5/Debug_UART.c **** 
1324:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_ClearTxBuffer
1326:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/Debug_UART.c ****     *
1328:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1329:Generated_Source\PSoC5/Debug_UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/Debug_UART.c ****     *
1331:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1333:Generated_Source\PSoC5/Debug_UART.c ****     *
1334:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1335:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1336:Generated_Source\PSoC5/Debug_UART.c ****     *
1337:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/Debug_UART.c ****     *
1341:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
1343:Generated_Source\PSoC5/Debug_UART.c ****     *
1344:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
1345:Generated_Source\PSoC5/Debug_UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/Debug_UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/Debug_UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/Debug_UART.c ****     *
1349:Generated_Source\PSoC5/Debug_UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/Debug_UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/Debug_UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/Debug_UART.c ****     *
1353:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/Debug_UART.c ****     {
 741              		.loc 1 1355 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 8
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745 0000 80B5     		push	{r7, lr}
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 7, -8
 748              		.cfi_offset 14, -4
 749 0002 82B0     		sub	sp, sp, #8
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 38


1356:Generated_Source\PSoC5/Debug_UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/Debug_UART.c **** 
1358:Generated_Source\PSoC5/Debug_UART.c ****         enableInterrupts = CyEnterCriticalSection();
 753              		.loc 1 1358 0
 754 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 755 000a 0346     		mov	r3, r0
 756 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/Debug_UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_TXDATA_AUX_CTL_REG |= (uint8)  Debug_UART_TX_FIFO_CLR;
 757              		.loc 1 1360 0
 758 000e 0C4A     		ldr	r2, .L60
 759 0010 0B4B     		ldr	r3, .L60
 760 0012 1B78     		ldrb	r3, [r3]
 761 0014 DBB2     		uxtb	r3, r3
 762 0016 43F00103 		orr	r3, r3, #1
 763 001a DBB2     		uxtb	r3, r3
 764 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_TXDATA_AUX_CTL_REG &= (uint8) ~Debug_UART_TX_FIFO_CLR;
 765              		.loc 1 1361 0
 766 001e 084A     		ldr	r2, .L60
 767 0020 074B     		ldr	r3, .L60
 768 0022 1B78     		ldrb	r3, [r3]
 769 0024 DBB2     		uxtb	r3, r3
 770 0026 23F00103 		bic	r3, r3, #1
 771 002a DBB2     		uxtb	r3, r3
 772 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/Debug_UART.c ****         CyExitCriticalSection(enableInterrupts);
 773              		.loc 1 1362 0
 774 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 775 0030 1846     		mov	r0, r3
 776 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/Debug_UART.c **** 
1364:Generated_Source\PSoC5/Debug_UART.c ****     #if (Debug_UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/Debug_UART.c **** 
1366:Generated_Source\PSoC5/Debug_UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_DisableTxInt();
1368:Generated_Source\PSoC5/Debug_UART.c **** 
1369:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/Debug_UART.c **** 
1372:Generated_Source\PSoC5/Debug_UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/Debug_UART.c ****         Debug_UART_EnableTxInt();
1374:Generated_Source\PSoC5/Debug_UART.c **** 
1375:Generated_Source\PSoC5/Debug_UART.c ****     #endif /* (Debug_UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/Debug_UART.c ****     }
 777              		.loc 1 1376 0
 778 0036 00BF     		nop
 779 0038 0837     		adds	r7, r7, #8
 780              		.cfi_def_cfa_offset 8
 781 003a BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 003c 80BD     		pop	{r7, pc}
 785              	.L61:
 786 003e 00BF     		.align	2
 787              	.L60:
 788 0040 95640040 		.word	1073767573
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 39


 789              		.cfi_endproc
 790              	.LFE14:
 791              		.size	Debug_UART_ClearTxBuffer, .-Debug_UART_ClearTxBuffer
 792              		.section	.text.Debug_UART_SendBreak,"ax",%progbits
 793              		.align	2
 794              		.global	Debug_UART_SendBreak
 795              		.thumb
 796              		.thumb_func
 797              		.type	Debug_UART_SendBreak, %function
 798              	Debug_UART_SendBreak:
 799              	.LFB15:
1377:Generated_Source\PSoC5/Debug_UART.c **** 
1378:Generated_Source\PSoC5/Debug_UART.c **** 
1379:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_SendBreak
1381:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/Debug_UART.c ****     *
1383:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1384:Generated_Source\PSoC5/Debug_UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/Debug_UART.c ****     *
1386:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/Debug_UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/Debug_UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/Debug_UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/Debug_UART.c ****     *       then return.
1394:Generated_Source\PSoC5/Debug_UART.c ****     *   Debug_UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/Debug_UART.c ****     *      Debug_UART_SEND_BREAK and Debug_UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/Debug_UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/Debug_UART.c ****     *
1398:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1399:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1400:Generated_Source\PSoC5/Debug_UART.c ****     *
1401:Generated_Source\PSoC5/Debug_UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/Debug_UART.c ****     *  Debug_UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/Debug_UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/Debug_UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/Debug_UART.c ****     *
1406:Generated_Source\PSoC5/Debug_UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/Debug_UART.c ****     *  No.
1408:Generated_Source\PSoC5/Debug_UART.c ****     *
1409:Generated_Source\PSoC5/Debug_UART.c ****     * Theory:
1410:Generated_Source\PSoC5/Debug_UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/Debug_UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/Debug_UART.c ****     *  operation.
1413:Generated_Source\PSoC5/Debug_UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/Debug_UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/Debug_UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/Debug_UART.c ****     *     complete.
1417:Generated_Source\PSoC5/Debug_UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/Debug_UART.c ****     *     operation
1419:Generated_Source\PSoC5/Debug_UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/Debug_UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/Debug_UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/Debug_UART.c ****     *     SendBreak(1);     - complete Break operation
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 40


1423:Generated_Source\PSoC5/Debug_UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/Debug_UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/Debug_UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/Debug_UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/Debug_UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/Debug_UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/Debug_UART.c ****     *     When interrupt appear with Debug_UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/Debug_UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/Debug_UART.c ****     *
1432:Generated_Source\PSoC5/Debug_UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/Debug_UART.c ****     *  The Debug_UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/Debug_UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/Debug_UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/Debug_UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/Debug_UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/Debug_UART.c ****     *
1439:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/Debug_UART.c ****     {
 800              		.loc 1 1441 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 16
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 805 0000 80B4     		push	{r7}
 806              		.cfi_def_cfa_offset 4
 807              		.cfi_offset 7, -4
 808 0002 85B0     		sub	sp, sp, #20
 809              		.cfi_def_cfa_offset 24
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 812 0006 0346     		mov	r3, r0
 813 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/Debug_UART.c **** 
1443:Generated_Source\PSoC5/Debug_UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/Debug_UART.c ****         if(Debug_UART_initVar != 0u)
 814              		.loc 1 1444 0
 815 000a 1F4B     		ldr	r3, .L71
 816 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 817 000e 002B     		cmp	r3, #0
 818 0010 35D0     		beq	.L70
 819              	.LBB2:
1445:Generated_Source\PSoC5/Debug_UART.c ****         {
1446:Generated_Source\PSoC5/Debug_UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/Debug_UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/Debug_UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/Debug_UART.c **** 
1450:Generated_Source\PSoC5/Debug_UART.c ****         #if(Debug_UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/Debug_UART.c **** 
1452:Generated_Source\PSoC5/Debug_UART.c ****             if( (retMode == Debug_UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/Debug_UART.c ****             {
1455:Generated_Source\PSoC5/Debug_UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_WriteControlRegister(Debug_UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/Debug_UART.c ****                                                       Debug_UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/Debug_UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_TXDATA_REG = 0u;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 41


1460:Generated_Source\PSoC5/Debug_UART.c **** 
1461:Generated_Source\PSoC5/Debug_UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/Debug_UART.c ****                 {
1463:Generated_Source\PSoC5/Debug_UART.c ****                     tmpStat = Debug_UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/Debug_UART.c ****                 }
1465:Generated_Source\PSoC5/Debug_UART.c ****                 while((tmpStat & Debug_UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/Debug_UART.c ****             }
1467:Generated_Source\PSoC5/Debug_UART.c **** 
1468:Generated_Source\PSoC5/Debug_UART.c ****             if( (retMode == Debug_UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/Debug_UART.c ****             {
1471:Generated_Source\PSoC5/Debug_UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/Debug_UART.c ****                 {
1473:Generated_Source\PSoC5/Debug_UART.c ****                     tmpStat = Debug_UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/Debug_UART.c ****                 }
1475:Generated_Source\PSoC5/Debug_UART.c ****                 while(((uint8)~tmpStat & Debug_UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/Debug_UART.c ****             }
1477:Generated_Source\PSoC5/Debug_UART.c **** 
1478:Generated_Source\PSoC5/Debug_UART.c ****             if( (retMode == Debug_UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_REINIT) ||
1480:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/Debug_UART.c ****             {
1482:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_WriteControlRegister(Debug_UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/Debug_UART.c ****                                               (uint8)~Debug_UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/Debug_UART.c ****             }
1485:Generated_Source\PSoC5/Debug_UART.c **** 
1486:Generated_Source\PSoC5/Debug_UART.c ****         #else /* Debug_UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/Debug_UART.c **** 
1488:Generated_Source\PSoC5/Debug_UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/Debug_UART.c **** 
1490:Generated_Source\PSoC5/Debug_UART.c ****             if( (retMode == Debug_UART_SEND_BREAK) ||
 820              		.loc 1 1490 0
 821 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 822 0014 002B     		cmp	r3, #0
 823 0016 02D0     		beq	.L64
 824              		.loc 1 1490 0 is_stmt 0 discriminator 1
 825 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 826 001a 032B     		cmp	r3, #3
 827 001c 12D1     		bne	.L65
 828              	.L64:
1491:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/Debug_UART.c ****             {
1493:Generated_Source\PSoC5/Debug_UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/Debug_UART.c ****                 #if( (Debug_UART_PARITY_TYPE != Debug_UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/Debug_UART.c ****                                     (Debug_UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/Debug_UART.c ****                     Debug_UART_WriteControlRegister(Debug_UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/Debug_UART.c ****                                                           Debug_UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/Debug_UART.c ****                 #endif /* End Debug_UART_PARITY_TYPE != Debug_UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/Debug_UART.c **** 
1500:Generated_Source\PSoC5/Debug_UART.c ****                 #if(Debug_UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/Debug_UART.c ****                     txPeriod = Debug_UART_TXBITCLKTX_COMPLETE_REG;
 829              		.loc 1 1501 0 is_stmt 1
 830 001e 1B4B     		ldr	r3, .L71+4
 831 0020 1B78     		ldrb	r3, [r3]
 832 0022 DAB2     		uxtb	r2, r3
 833 0024 1A4B     		ldr	r3, .L71+8
 834 0026 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 42


1502:Generated_Source\PSoC5/Debug_UART.c ****                     Debug_UART_TXBITCLKTX_COMPLETE_REG = Debug_UART_TXBITCTR_BREAKBITS;
 835              		.loc 1 1502 0
 836 0028 184B     		ldr	r3, .L71+4
 837 002a 6722     		movs	r2, #103
 838 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/Debug_UART.c ****                 #else
1504:Generated_Source\PSoC5/Debug_UART.c ****                     txPeriod = Debug_UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/Debug_UART.c ****                     Debug_UART_TXBITCTR_PERIOD_REG = Debug_UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/Debug_UART.c ****                 #endif /* End Debug_UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/Debug_UART.c **** 
1508:Generated_Source\PSoC5/Debug_UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_TXDATA_REG = 0u;
 839              		.loc 1 1509 0
 840 002e 194B     		ldr	r3, .L71+12
 841 0030 0022     		movs	r2, #0
 842 0032 1A70     		strb	r2, [r3]
 843              	.L66:
1510:Generated_Source\PSoC5/Debug_UART.c **** 
1511:Generated_Source\PSoC5/Debug_UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/Debug_UART.c ****                 {
1513:Generated_Source\PSoC5/Debug_UART.c ****                     tmpStat = Debug_UART_TXSTATUS_REG;
 844              		.loc 1 1513 0 discriminator 1
 845 0034 184B     		ldr	r3, .L71+16
 846 0036 1B78     		ldrb	r3, [r3]
 847 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/Debug_UART.c ****                 }
1515:Generated_Source\PSoC5/Debug_UART.c ****                 while((tmpStat & Debug_UART_TX_STS_FIFO_EMPTY) != 0u);
 848              		.loc 1 1515 0 discriminator 1
 849 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 850 003c 03F00203 		and	r3, r3, #2
 851 0040 002B     		cmp	r3, #0
 852 0042 F7D1     		bne	.L66
 853              	.L65:
1516:Generated_Source\PSoC5/Debug_UART.c ****             }
1517:Generated_Source\PSoC5/Debug_UART.c **** 
1518:Generated_Source\PSoC5/Debug_UART.c ****             if( (retMode == Debug_UART_WAIT_FOR_COMPLETE_REINIT) ||
 854              		.loc 1 1518 0
 855 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 856 0046 012B     		cmp	r3, #1
 857 0048 02D0     		beq	.L67
 858              		.loc 1 1518 0 is_stmt 0 discriminator 1
 859 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 860 004c 032B     		cmp	r3, #3
 861 004e 09D1     		bne	.L68
 862              	.L67:
1519:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/Debug_UART.c ****             {
1521:Generated_Source\PSoC5/Debug_UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/Debug_UART.c ****                 {
1523:Generated_Source\PSoC5/Debug_UART.c ****                     tmpStat = Debug_UART_TXSTATUS_REG;
 863              		.loc 1 1523 0 is_stmt 1 discriminator 1
 864 0050 114B     		ldr	r3, .L71+16
 865 0052 1B78     		ldrb	r3, [r3]
 866 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/Debug_UART.c ****                 }
1525:Generated_Source\PSoC5/Debug_UART.c ****                 while(((uint8)~tmpStat & Debug_UART_TX_STS_COMPLETE) != 0u);
 867              		.loc 1 1525 0 discriminator 1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 43


 868 0056 FB7B     		ldrb	r3, [r7, #15]
 869 0058 DB43     		mvns	r3, r3
 870 005a DBB2     		uxtb	r3, r3
 871 005c 03F00103 		and	r3, r3, #1
 872 0060 002B     		cmp	r3, #0
 873 0062 F5D1     		bne	.L67
 874              	.L68:
1526:Generated_Source\PSoC5/Debug_UART.c ****             }
1527:Generated_Source\PSoC5/Debug_UART.c **** 
1528:Generated_Source\PSoC5/Debug_UART.c ****             if( (retMode == Debug_UART_WAIT_FOR_COMPLETE_REINIT) ||
 875              		.loc 1 1528 0
 876 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 877 0066 012B     		cmp	r3, #1
 878 0068 05D0     		beq	.L69
 879              		.loc 1 1528 0 is_stmt 0 discriminator 1
 880 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 881 006c 022B     		cmp	r3, #2
 882 006e 02D0     		beq	.L69
1529:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_REINIT) ||
 883              		.loc 1 1529 0 is_stmt 1
 884 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 885 0072 032B     		cmp	r3, #3
 886 0074 03D1     		bne	.L70
 887              	.L69:
1530:Generated_Source\PSoC5/Debug_UART.c ****                 (retMode == Debug_UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/Debug_UART.c ****             {
1532:Generated_Source\PSoC5/Debug_UART.c **** 
1533:Generated_Source\PSoC5/Debug_UART.c ****             #if(Debug_UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 888              		.loc 1 1534 0
 889 0076 054B     		ldr	r3, .L71+4
 890 0078 054A     		ldr	r2, .L71+8
 891 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 892 007c 1A70     		strb	r2, [r3]
 893              	.L70:
 894              	.LBE2:
1535:Generated_Source\PSoC5/Debug_UART.c ****             #else
1536:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/Debug_UART.c ****             #endif /* End Debug_UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/Debug_UART.c **** 
1539:Generated_Source\PSoC5/Debug_UART.c ****             #if( (Debug_UART_PARITY_TYPE != Debug_UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/Debug_UART.c ****                  (Debug_UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/Debug_UART.c ****                 Debug_UART_WriteControlRegister(Debug_UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/Debug_UART.c ****                                                       (uint8) ~Debug_UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/Debug_UART.c ****             #endif /* End Debug_UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/Debug_UART.c ****             }
1545:Generated_Source\PSoC5/Debug_UART.c ****         #endif    /* End Debug_UART_HD_ENABLED */
1546:Generated_Source\PSoC5/Debug_UART.c ****         }
1547:Generated_Source\PSoC5/Debug_UART.c ****     }
 895              		.loc 1 1547 0
 896 007e 00BF     		nop
 897 0080 1437     		adds	r7, r7, #20
 898              		.cfi_def_cfa_offset 4
 899 0082 BD46     		mov	sp, r7
 900              		.cfi_def_cfa_register 13
 901              		@ sp needed
 902 0084 80BC     		pop	{r7}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 44


 903              		.cfi_restore 7
 904              		.cfi_def_cfa_offset 0
 905 0086 7047     		bx	lr
 906              	.L72:
 907              		.align	2
 908              	.L71:
 909 0088 00000000 		.word	Debug_UART_initVar
 910 008c 33640040 		.word	1073767475
 911 0090 01000000 		.word	txPeriod.5056
 912 0094 45640040 		.word	1073767493
 913 0098 65640040 		.word	1073767525
 914              		.cfi_endproc
 915              	.LFE15:
 916              		.size	Debug_UART_SendBreak, .-Debug_UART_SendBreak
 917              		.section	.text.Debug_UART_SetTxAddressMode,"ax",%progbits
 918              		.align	2
 919              		.global	Debug_UART_SetTxAddressMode
 920              		.thumb
 921              		.thumb_func
 922              		.type	Debug_UART_SetTxAddressMode, %function
 923              	Debug_UART_SetTxAddressMode:
 924              	.LFB16:
1548:Generated_Source\PSoC5/Debug_UART.c **** 
1549:Generated_Source\PSoC5/Debug_UART.c **** 
1550:Generated_Source\PSoC5/Debug_UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/Debug_UART.c ****     * Function Name: Debug_UART_SetTxAddressMode
1552:Generated_Source\PSoC5/Debug_UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/Debug_UART.c ****     *
1554:Generated_Source\PSoC5/Debug_UART.c ****     * Summary:
1555:Generated_Source\PSoC5/Debug_UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/Debug_UART.c ****     *
1557:Generated_Source\PSoC5/Debug_UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/Debug_UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/Debug_UART.c ****     *       Debug_UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/Debug_UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/Debug_UART.c ****     *       Debug_UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/Debug_UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/Debug_UART.c ****     *
1564:Generated_Source\PSoC5/Debug_UART.c ****     * Return:
1565:Generated_Source\PSoC5/Debug_UART.c ****     *  None.
1566:Generated_Source\PSoC5/Debug_UART.c ****     *
1567:Generated_Source\PSoC5/Debug_UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/Debug_UART.c ****     *  This function sets and clears Debug_UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/Debug_UART.c ****     *  register.
1570:Generated_Source\PSoC5/Debug_UART.c ****     *
1571:Generated_Source\PSoC5/Debug_UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/Debug_UART.c ****     void Debug_UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/Debug_UART.c ****     {
 925              		.loc 1 1573 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 8
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 930 0000 80B4     		push	{r7}
 931              		.cfi_def_cfa_offset 4
 932              		.cfi_offset 7, -4
 933 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 45


 934              		.cfi_def_cfa_offset 16
 935 0004 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 937 0006 0346     		mov	r3, r0
 938 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/Debug_UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/Debug_UART.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/Debug_UART.c ****         {
1577:Generated_Source\PSoC5/Debug_UART.c ****         #if( Debug_UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_WriteControlRegister(Debug_UART_ReadControlRegister() |
1579:Generated_Source\PSoC5/Debug_UART.c ****                                                   Debug_UART_CTRL_MARK);
1580:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* End Debug_UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/Debug_UART.c ****         }
1582:Generated_Source\PSoC5/Debug_UART.c ****         else
1583:Generated_Source\PSoC5/Debug_UART.c ****         {
1584:Generated_Source\PSoC5/Debug_UART.c ****         #if( Debug_UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/Debug_UART.c ****             Debug_UART_WriteControlRegister(Debug_UART_ReadControlRegister() &
1586:Generated_Source\PSoC5/Debug_UART.c ****                                                   (uint8) ~Debug_UART_CTRL_MARK);
1587:Generated_Source\PSoC5/Debug_UART.c ****         #endif /* End Debug_UART_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/Debug_UART.c ****         }
1589:Generated_Source\PSoC5/Debug_UART.c ****     }
 939              		.loc 1 1589 0
 940 000a 00BF     		nop
 941 000c 0C37     		adds	r7, r7, #12
 942              		.cfi_def_cfa_offset 4
 943 000e BD46     		mov	sp, r7
 944              		.cfi_def_cfa_register 13
 945              		@ sp needed
 946 0010 80BC     		pop	{r7}
 947              		.cfi_restore 7
 948              		.cfi_def_cfa_offset 0
 949 0012 7047     		bx	lr
 950              		.cfi_endproc
 951              	.LFE16:
 952              		.size	Debug_UART_SetTxAddressMode, .-Debug_UART_SetTxAddressMode
 953              		.bss
 954              	txPeriod.5056:
 955 0001 00       		.space	1
 956              		.text
 957              	.Letext0:
 958              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 959              		.section	.debug_info,"",%progbits
 960              	.Ldebug_info0:
 961 0000 7B030000 		.4byte	0x37b
 962 0004 0400     		.2byte	0x4
 963 0006 00000000 		.4byte	.Ldebug_abbrev0
 964 000a 04       		.byte	0x4
 965 000b 01       		.uleb128 0x1
 966 000c 0E000000 		.4byte	.LASF46
 967 0010 0C       		.byte	0xc
 968 0011 9C000000 		.4byte	.LASF47
 969 0015 33020000 		.4byte	.LASF48
 970 0019 00000000 		.4byte	.Ldebug_ranges0+0
 971 001d 00000000 		.4byte	0
 972 0021 00000000 		.4byte	.Ldebug_line0
 973 0025 02       		.uleb128 0x2
 974 0026 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 46


 975 0027 06       		.byte	0x6
 976 0028 6C030000 		.4byte	.LASF0
 977 002c 02       		.uleb128 0x2
 978 002d 01       		.byte	0x1
 979 002e 08       		.byte	0x8
 980 002f EF010000 		.4byte	.LASF1
 981 0033 02       		.uleb128 0x2
 982 0034 02       		.byte	0x2
 983 0035 05       		.byte	0x5
 984 0036 18030000 		.4byte	.LASF2
 985 003a 02       		.uleb128 0x2
 986 003b 02       		.byte	0x2
 987 003c 07       		.byte	0x7
 988 003d E3000000 		.4byte	.LASF3
 989 0041 02       		.uleb128 0x2
 990 0042 04       		.byte	0x4
 991 0043 05       		.byte	0x5
 992 0044 22030000 		.4byte	.LASF4
 993 0048 02       		.uleb128 0x2
 994 0049 04       		.byte	0x4
 995 004a 07       		.byte	0x7
 996 004b 8D010000 		.4byte	.LASF5
 997 004f 02       		.uleb128 0x2
 998 0050 08       		.byte	0x8
 999 0051 05       		.byte	0x5
 1000 0052 00000000 		.4byte	.LASF6
 1001 0056 02       		.uleb128 0x2
 1002 0057 08       		.byte	0x8
 1003 0058 07       		.byte	0x7
 1004 0059 5B020000 		.4byte	.LASF7
 1005 005d 03       		.uleb128 0x3
 1006 005e 04       		.byte	0x4
 1007 005f 05       		.byte	0x5
 1008 0060 696E7400 		.ascii	"int\000"
 1009 0064 02       		.uleb128 0x2
 1010 0065 04       		.byte	0x4
 1011 0066 07       		.byte	0x7
 1012 0067 4E020000 		.4byte	.LASF8
 1013 006b 04       		.uleb128 0x4
 1014 006c B2010000 		.4byte	.LASF9
 1015 0070 02       		.byte	0x2
 1016 0071 9201     		.2byte	0x192
 1017 0073 2C000000 		.4byte	0x2c
 1018 0077 04       		.uleb128 0x4
 1019 0078 1B020000 		.4byte	.LASF10
 1020 007c 02       		.byte	0x2
 1021 007d 9301     		.2byte	0x193
 1022 007f 3A000000 		.4byte	0x3a
 1023 0083 02       		.uleb128 0x2
 1024 0084 04       		.byte	0x4
 1025 0085 04       		.byte	0x4
 1026 0086 5B010000 		.4byte	.LASF11
 1027 008a 02       		.uleb128 0x2
 1028 008b 08       		.byte	0x8
 1029 008c 04       		.byte	0x4
 1030 008d FD010000 		.4byte	.LASF12
 1031 0091 04       		.uleb128 0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 47


 1032 0092 B5020000 		.4byte	.LASF13
 1033 0096 02       		.byte	0x2
 1034 0097 A301     		.2byte	0x1a3
 1035 0099 9D000000 		.4byte	0x9d
 1036 009d 02       		.uleb128 0x2
 1037 009e 01       		.byte	0x1
 1038 009f 08       		.byte	0x8
 1039 00a0 2B030000 		.4byte	.LASF14
 1040 00a4 04       		.uleb128 0x4
 1041 00a5 88010000 		.4byte	.LASF15
 1042 00a9 02       		.byte	0x2
 1043 00aa 3C02     		.2byte	0x23c
 1044 00ac B0000000 		.4byte	0xb0
 1045 00b0 05       		.uleb128 0x5
 1046 00b1 6B000000 		.4byte	0x6b
 1047 00b5 02       		.uleb128 0x2
 1048 00b6 08       		.byte	0x8
 1049 00b7 04       		.byte	0x4
 1050 00b8 40030000 		.4byte	.LASF16
 1051 00bc 02       		.uleb128 0x2
 1052 00bd 04       		.byte	0x4
 1053 00be 07       		.byte	0x7
 1054 00bf AC020000 		.4byte	.LASF17
 1055 00c3 06       		.uleb128 0x6
 1056 00c4 22020000 		.4byte	.LASF18
 1057 00c8 01       		.byte	0x1
 1058 00c9 4C       		.byte	0x4c
 1059 00ca 00000000 		.4byte	.LFB0
 1060 00ce 24000000 		.4byte	.LFE0-.LFB0
 1061 00d2 01       		.uleb128 0x1
 1062 00d3 9C       		.byte	0x9c
 1063 00d4 07       		.uleb128 0x7
 1064 00d5 30030000 		.4byte	.LASF19
 1065 00d9 01       		.byte	0x1
 1066 00da 6A       		.byte	0x6a
 1067 00db 00000000 		.4byte	.LFB1
 1068 00df 2C000000 		.4byte	.LFE1-.LFB1
 1069 00e3 01       		.uleb128 0x1
 1070 00e4 9C       		.byte	0x9c
 1071 00e5 08       		.uleb128 0x8
 1072 00e6 C9000000 		.4byte	.LASF20
 1073 00ea 01       		.byte	0x1
 1074 00eb B7       		.byte	0xb7
 1075 00ec 00000000 		.4byte	.LFB2
 1076 00f0 38000000 		.4byte	.LFE2-.LFB2
 1077 00f4 01       		.uleb128 0x1
 1078 00f5 9C       		.byte	0x9c
 1079 00f6 09010000 		.4byte	0x109
 1080 00fa 09       		.uleb128 0x9
 1081 00fb CA010000 		.4byte	.LASF22
 1082 00ff 01       		.byte	0x1
 1083 0100 B9       		.byte	0xb9
 1084 0101 6B000000 		.4byte	0x6b
 1085 0105 02       		.uleb128 0x2
 1086 0106 91       		.byte	0x91
 1087 0107 77       		.sleb128 -9
 1088 0108 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 48


 1089 0109 08       		.uleb128 0x8
 1090 010a 2C010000 		.4byte	.LASF21
 1091 010e 01       		.byte	0x1
 1092 010f F0       		.byte	0xf0
 1093 0110 00000000 		.4byte	.LFB3
 1094 0114 38000000 		.4byte	.LFE3-.LFB3
 1095 0118 01       		.uleb128 0x1
 1096 0119 9C       		.byte	0x9c
 1097 011a 2D010000 		.4byte	0x12d
 1098 011e 09       		.uleb128 0x9
 1099 011f CA010000 		.4byte	.LASF22
 1100 0123 01       		.byte	0x1
 1101 0124 F2       		.byte	0xf2
 1102 0125 6B000000 		.4byte	0x6b
 1103 0129 02       		.uleb128 0x2
 1104 012a 91       		.byte	0x91
 1105 012b 77       		.sleb128 -9
 1106 012c 00       		.byte	0
 1107 012d 0A       		.uleb128 0xa
 1108 012e 3C010000 		.4byte	.LASF29
 1109 0132 01       		.byte	0x1
 1110 0133 2701     		.2byte	0x127
 1111 0135 6B000000 		.4byte	0x6b
 1112 0139 00000000 		.4byte	.LFB4
 1113 013d 0E000000 		.4byte	.LFE4-.LFB4
 1114 0141 01       		.uleb128 0x1
 1115 0142 9C       		.byte	0x9c
 1116 0143 0B       		.uleb128 0xb
 1117 0144 4C030000 		.4byte	.LASF23
 1118 0148 01       		.byte	0x1
 1119 0149 3F01     		.2byte	0x13f
 1120 014b 00000000 		.4byte	.LFB5
 1121 014f 14000000 		.4byte	.LFE5-.LFB5
 1122 0153 01       		.uleb128 0x1
 1123 0154 9C       		.byte	0x9c
 1124 0155 69010000 		.4byte	0x169
 1125 0159 0C       		.uleb128 0xc
 1126 015a B8010000 		.4byte	.LASF25
 1127 015e 01       		.byte	0x1
 1128 015f 3F01     		.2byte	0x13f
 1129 0161 6B000000 		.4byte	0x6b
 1130 0165 02       		.uleb128 0x2
 1131 0166 91       		.byte	0x91
 1132 0167 77       		.sleb128 -9
 1133 0168 00       		.byte	0
 1134 0169 0B       		.uleb128 0xb
 1135 016a 72020000 		.4byte	.LASF24
 1136 016e 01       		.byte	0x1
 1137 016f 8C03     		.2byte	0x38c
 1138 0171 00000000 		.4byte	.LFB6
 1139 0175 20000000 		.4byte	.LFE6-.LFB6
 1140 0179 01       		.uleb128 0x1
 1141 017a 9C       		.byte	0x9c
 1142 017b 8F010000 		.4byte	0x18f
 1143 017f 0C       		.uleb128 0xc
 1144 0180 1E010000 		.4byte	.LASF26
 1145 0184 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 49


 1146 0185 8C03     		.2byte	0x38c
 1147 0187 6B000000 		.4byte	0x6b
 1148 018b 02       		.uleb128 0x2
 1149 018c 91       		.byte	0x91
 1150 018d 77       		.sleb128 -9
 1151 018e 00       		.byte	0
 1152 018f 0B       		.uleb128 0xb
 1153 0190 04020000 		.4byte	.LASF27
 1154 0194 01       		.byte	0x1
 1155 0195 AE03     		.2byte	0x3ae
 1156 0197 00000000 		.4byte	.LFB7
 1157 019b 2C000000 		.4byte	.LFE7-.LFB7
 1158 019f 01       		.uleb128 0x1
 1159 01a0 9C       		.byte	0x9c
 1160 01a1 B5010000 		.4byte	0x1b5
 1161 01a5 0C       		.uleb128 0xc
 1162 01a6 D7020000 		.4byte	.LASF28
 1163 01aa 01       		.byte	0x1
 1164 01ab AE03     		.2byte	0x3ae
 1165 01ad 6B000000 		.4byte	0x6b
 1166 01b1 02       		.uleb128 0x2
 1167 01b2 91       		.byte	0x91
 1168 01b3 77       		.sleb128 -9
 1169 01b4 00       		.byte	0
 1170 01b5 0A       		.uleb128 0xa
 1171 01b6 78030000 		.4byte	.LASF30
 1172 01ba 01       		.byte	0x1
 1173 01bb EB03     		.2byte	0x3eb
 1174 01bd 6B000000 		.4byte	0x6b
 1175 01c1 00000000 		.4byte	.LFB8
 1176 01c5 18000000 		.4byte	.LFE8-.LFB8
 1177 01c9 01       		.uleb128 0x1
 1178 01ca 9C       		.byte	0x9c
 1179 01cb 0B       		.uleb128 0xb
 1180 01cc F6000000 		.4byte	.LASF31
 1181 01d0 01       		.byte	0x1
 1182 01d1 1104     		.2byte	0x411
 1183 01d3 00000000 		.4byte	.LFB9
 1184 01d7 34000000 		.4byte	.LFE9-.LFB9
 1185 01db 01       		.uleb128 0x1
 1186 01dc 9C       		.byte	0x9c
 1187 01dd F1010000 		.4byte	0x1f1
 1188 01e1 0C       		.uleb128 0xc
 1189 01e2 D7020000 		.4byte	.LASF28
 1190 01e6 01       		.byte	0x1
 1191 01e7 1104     		.2byte	0x411
 1192 01e9 6B000000 		.4byte	0x6b
 1193 01ed 02       		.uleb128 0x2
 1194 01ee 91       		.byte	0x91
 1195 01ef 77       		.sleb128 -9
 1196 01f0 00       		.byte	0
 1197 01f1 0D       		.uleb128 0xd
 1198 01f2 09010000 		.4byte	.LASF32
 1199 01f6 01       		.byte	0x1
 1200 01f7 7904     		.2byte	0x479
 1201 01f9 00000000 		.4byte	.LFB10
 1202 01fd 44000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 50


 1203 0201 01       		.uleb128 0x1
 1204 0202 9C       		.byte	0x9c
 1205 0203 26020000 		.4byte	0x226
 1206 0207 0C       		.uleb128 0xc
 1207 0208 25010000 		.4byte	.LASF33
 1208 020c 01       		.byte	0x1
 1209 020d 7904     		.2byte	0x479
 1210 020f 26020000 		.4byte	0x226
 1211 0213 02       		.uleb128 0x2
 1212 0214 91       		.byte	0x91
 1213 0215 6C       		.sleb128 -20
 1214 0216 0E       		.uleb128 0xe
 1215 0217 90020000 		.4byte	.LASF34
 1216 021b 01       		.byte	0x1
 1217 021c 7B04     		.2byte	0x47b
 1218 021e 77000000 		.4byte	0x77
 1219 0222 02       		.uleb128 0x2
 1220 0223 91       		.byte	0x91
 1221 0224 76       		.sleb128 -10
 1222 0225 00       		.byte	0
 1223 0226 0F       		.uleb128 0xf
 1224 0227 04       		.byte	0x4
 1225 0228 2C020000 		.4byte	0x22c
 1226 022c 10       		.uleb128 0x10
 1227 022d 91000000 		.4byte	0x91
 1228 0231 0D       		.uleb128 0xd
 1229 0232 DB010000 		.4byte	.LASF35
 1230 0236 01       		.byte	0x1
 1231 0237 A704     		.2byte	0x4a7
 1232 0239 00000000 		.4byte	.LFB11
 1233 023d 44000000 		.4byte	.LFE11-.LFB11
 1234 0241 01       		.uleb128 0x1
 1235 0242 9C       		.byte	0x9c
 1236 0243 75020000 		.4byte	0x275
 1237 0247 0C       		.uleb128 0xc
 1238 0248 25010000 		.4byte	.LASF33
 1239 024c 01       		.byte	0x1
 1240 024d A704     		.2byte	0x4a7
 1241 024f 75020000 		.4byte	0x275
 1242 0253 02       		.uleb128 0x2
 1243 0254 91       		.byte	0x91
 1244 0255 6C       		.sleb128 -20
 1245 0256 0C       		.uleb128 0xc
 1246 0257 C0010000 		.4byte	.LASF36
 1247 025b 01       		.byte	0x1
 1248 025c A704     		.2byte	0x4a7
 1249 025e 6B000000 		.4byte	0x6b
 1250 0262 02       		.uleb128 0x2
 1251 0263 91       		.byte	0x91
 1252 0264 6B       		.sleb128 -21
 1253 0265 0E       		.uleb128 0xe
 1254 0266 90020000 		.4byte	.LASF34
 1255 026a 01       		.byte	0x1
 1256 026b AA04     		.2byte	0x4aa
 1257 026d 6B000000 		.4byte	0x6b
 1258 0271 02       		.uleb128 0x2
 1259 0272 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 51


 1260 0273 77       		.sleb128 -9
 1261 0274 00       		.byte	0
 1262 0275 0F       		.uleb128 0xf
 1263 0276 04       		.byte	0x4
 1264 0277 7B020000 		.4byte	0x27b
 1265 027b 10       		.uleb128 0x10
 1266 027c 6B000000 		.4byte	0x6b
 1267 0280 0D       		.uleb128 0xd
 1268 0281 9F010000 		.4byte	.LASF37
 1269 0285 01       		.byte	0x1
 1270 0286 CE04     		.2byte	0x4ce
 1271 0288 00000000 		.4byte	.LFB12
 1272 028c 34000000 		.4byte	.LFE12-.LFB12
 1273 0290 01       		.uleb128 0x1
 1274 0291 9C       		.byte	0x9c
 1275 0292 A6020000 		.4byte	0x2a6
 1276 0296 0C       		.uleb128 0xc
 1277 0297 D7020000 		.4byte	.LASF28
 1278 029b 01       		.byte	0x1
 1279 029c CE04     		.2byte	0x4ce
 1280 029e 6B000000 		.4byte	0x6b
 1281 02a2 02       		.uleb128 0x2
 1282 02a3 91       		.byte	0x91
 1283 02a4 77       		.sleb128 -9
 1284 02a5 00       		.byte	0
 1285 02a6 11       		.uleb128 0x11
 1286 02a7 61010000 		.4byte	.LASF49
 1287 02ab 01       		.byte	0x1
 1288 02ac F904     		.2byte	0x4f9
 1289 02ae 6B000000 		.4byte	0x6b
 1290 02b2 00000000 		.4byte	.LFB13
 1291 02b6 40000000 		.4byte	.LFE13-.LFB13
 1292 02ba 01       		.uleb128 0x1
 1293 02bb 9C       		.byte	0x9c
 1294 02bc D0020000 		.4byte	0x2d0
 1295 02c0 0E       		.uleb128 0xe
 1296 02c1 90030000 		.4byte	.LASF38
 1297 02c5 01       		.byte	0x1
 1298 02c6 FC04     		.2byte	0x4fc
 1299 02c8 6B000000 		.4byte	0x6b
 1300 02cc 02       		.uleb128 0x2
 1301 02cd 91       		.byte	0x91
 1302 02ce 77       		.sleb128 -9
 1303 02cf 00       		.byte	0
 1304 02d0 0D       		.uleb128 0xd
 1305 02d1 E2020000 		.4byte	.LASF39
 1306 02d5 01       		.byte	0x1
 1307 02d6 4A05     		.2byte	0x54a
 1308 02d8 00000000 		.4byte	.LFB14
 1309 02dc 44000000 		.4byte	.LFE14-.LFB14
 1310 02e0 01       		.uleb128 0x1
 1311 02e1 9C       		.byte	0x9c
 1312 02e2 F6020000 		.4byte	0x2f6
 1313 02e6 0E       		.uleb128 0xe
 1314 02e7 CA010000 		.4byte	.LASF22
 1315 02eb 01       		.byte	0x1
 1316 02ec 4C05     		.2byte	0x54c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 52


 1317 02ee 6B000000 		.4byte	0x6b
 1318 02f2 02       		.uleb128 0x2
 1319 02f3 91       		.byte	0x91
 1320 02f4 77       		.sleb128 -9
 1321 02f5 00       		.byte	0
 1322 02f6 0B       		.uleb128 0xb
 1323 02f7 FB020000 		.4byte	.LASF40
 1324 02fb 01       		.byte	0x1
 1325 02fc A005     		.2byte	0x5a0
 1326 02fe 00000000 		.4byte	.LFB15
 1327 0302 9C000000 		.4byte	.LFE15-.LFB15
 1328 0306 01       		.uleb128 0x1
 1329 0307 9C       		.byte	0x9c
 1330 0308 47030000 		.4byte	0x347
 1331 030c 0C       		.uleb128 0xc
 1332 030d 10030000 		.4byte	.LASF41
 1333 0311 01       		.byte	0x1
 1334 0312 A005     		.2byte	0x5a0
 1335 0314 6B000000 		.4byte	0x6b
 1336 0318 02       		.uleb128 0x2
 1337 0319 91       		.byte	0x91
 1338 031a 6F       		.sleb128 -17
 1339 031b 12       		.uleb128 0x12
 1340 031c 12000000 		.4byte	.LBB2
 1341 0320 6C000000 		.4byte	.LBE2-.LBB2
 1342 0324 0E       		.uleb128 0xe
 1343 0325 DB000000 		.4byte	.LASF42
 1344 0329 01       		.byte	0x1
 1345 032a A805     		.2byte	0x5a8
 1346 032c 6B000000 		.4byte	0x6b
 1347 0330 02       		.uleb128 0x2
 1348 0331 91       		.byte	0x91
 1349 0332 77       		.sleb128 -9
 1350 0333 0E       		.uleb128 0xe
 1351 0334 C0000000 		.4byte	.LASF43
 1352 0338 01       		.byte	0x1
 1353 0339 D005     		.2byte	0x5d0
 1354 033b 6B000000 		.4byte	0x6b
 1355 033f 05       		.uleb128 0x5
 1356 0340 03       		.byte	0x3
 1357 0341 01000000 		.4byte	txPeriod.5056
 1358 0345 00       		.byte	0
 1359 0346 00       		.byte	0
 1360 0347 0B       		.uleb128 0xb
 1361 0348 BB020000 		.4byte	.LASF44
 1362 034c 01       		.byte	0x1
 1363 034d 2406     		.2byte	0x624
 1364 034f 00000000 		.4byte	.LFB16
 1365 0353 14000000 		.4byte	.LFE16-.LFB16
 1366 0357 01       		.uleb128 0x1
 1367 0358 9C       		.byte	0x9c
 1368 0359 6D030000 		.4byte	0x36d
 1369 035d 0C       		.uleb128 0xc
 1370 035e 7C010000 		.4byte	.LASF45
 1371 0362 01       		.byte	0x1
 1372 0363 2406     		.2byte	0x624
 1373 0365 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 53


 1374 0369 02       		.uleb128 0x2
 1375 036a 91       		.byte	0x91
 1376 036b 77       		.sleb128 -9
 1377 036c 00       		.byte	0
 1378 036d 13       		.uleb128 0x13
 1379 036e 99020000 		.4byte	.LASF50
 1380 0372 01       		.byte	0x1
 1381 0373 1B       		.byte	0x1b
 1382 0374 6B000000 		.4byte	0x6b
 1383 0378 05       		.uleb128 0x5
 1384 0379 03       		.byte	0x3
 1385 037a 00000000 		.4byte	Debug_UART_initVar
 1386 037e 00       		.byte	0
 1387              		.section	.debug_abbrev,"",%progbits
 1388              	.Ldebug_abbrev0:
 1389 0000 01       		.uleb128 0x1
 1390 0001 11       		.uleb128 0x11
 1391 0002 01       		.byte	0x1
 1392 0003 25       		.uleb128 0x25
 1393 0004 0E       		.uleb128 0xe
 1394 0005 13       		.uleb128 0x13
 1395 0006 0B       		.uleb128 0xb
 1396 0007 03       		.uleb128 0x3
 1397 0008 0E       		.uleb128 0xe
 1398 0009 1B       		.uleb128 0x1b
 1399 000a 0E       		.uleb128 0xe
 1400 000b 55       		.uleb128 0x55
 1401 000c 17       		.uleb128 0x17
 1402 000d 11       		.uleb128 0x11
 1403 000e 01       		.uleb128 0x1
 1404 000f 10       		.uleb128 0x10
 1405 0010 17       		.uleb128 0x17
 1406 0011 00       		.byte	0
 1407 0012 00       		.byte	0
 1408 0013 02       		.uleb128 0x2
 1409 0014 24       		.uleb128 0x24
 1410 0015 00       		.byte	0
 1411 0016 0B       		.uleb128 0xb
 1412 0017 0B       		.uleb128 0xb
 1413 0018 3E       		.uleb128 0x3e
 1414 0019 0B       		.uleb128 0xb
 1415 001a 03       		.uleb128 0x3
 1416 001b 0E       		.uleb128 0xe
 1417 001c 00       		.byte	0
 1418 001d 00       		.byte	0
 1419 001e 03       		.uleb128 0x3
 1420 001f 24       		.uleb128 0x24
 1421 0020 00       		.byte	0
 1422 0021 0B       		.uleb128 0xb
 1423 0022 0B       		.uleb128 0xb
 1424 0023 3E       		.uleb128 0x3e
 1425 0024 0B       		.uleb128 0xb
 1426 0025 03       		.uleb128 0x3
 1427 0026 08       		.uleb128 0x8
 1428 0027 00       		.byte	0
 1429 0028 00       		.byte	0
 1430 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 54


 1431 002a 16       		.uleb128 0x16
 1432 002b 00       		.byte	0
 1433 002c 03       		.uleb128 0x3
 1434 002d 0E       		.uleb128 0xe
 1435 002e 3A       		.uleb128 0x3a
 1436 002f 0B       		.uleb128 0xb
 1437 0030 3B       		.uleb128 0x3b
 1438 0031 05       		.uleb128 0x5
 1439 0032 49       		.uleb128 0x49
 1440 0033 13       		.uleb128 0x13
 1441 0034 00       		.byte	0
 1442 0035 00       		.byte	0
 1443 0036 05       		.uleb128 0x5
 1444 0037 35       		.uleb128 0x35
 1445 0038 00       		.byte	0
 1446 0039 49       		.uleb128 0x49
 1447 003a 13       		.uleb128 0x13
 1448 003b 00       		.byte	0
 1449 003c 00       		.byte	0
 1450 003d 06       		.uleb128 0x6
 1451 003e 2E       		.uleb128 0x2e
 1452 003f 00       		.byte	0
 1453 0040 3F       		.uleb128 0x3f
 1454 0041 19       		.uleb128 0x19
 1455 0042 03       		.uleb128 0x3
 1456 0043 0E       		.uleb128 0xe
 1457 0044 3A       		.uleb128 0x3a
 1458 0045 0B       		.uleb128 0xb
 1459 0046 3B       		.uleb128 0x3b
 1460 0047 0B       		.uleb128 0xb
 1461 0048 27       		.uleb128 0x27
 1462 0049 19       		.uleb128 0x19
 1463 004a 11       		.uleb128 0x11
 1464 004b 01       		.uleb128 0x1
 1465 004c 12       		.uleb128 0x12
 1466 004d 06       		.uleb128 0x6
 1467 004e 40       		.uleb128 0x40
 1468 004f 18       		.uleb128 0x18
 1469 0050 9642     		.uleb128 0x2116
 1470 0052 19       		.uleb128 0x19
 1471 0053 00       		.byte	0
 1472 0054 00       		.byte	0
 1473 0055 07       		.uleb128 0x7
 1474 0056 2E       		.uleb128 0x2e
 1475 0057 00       		.byte	0
 1476 0058 3F       		.uleb128 0x3f
 1477 0059 19       		.uleb128 0x19
 1478 005a 03       		.uleb128 0x3
 1479 005b 0E       		.uleb128 0xe
 1480 005c 3A       		.uleb128 0x3a
 1481 005d 0B       		.uleb128 0xb
 1482 005e 3B       		.uleb128 0x3b
 1483 005f 0B       		.uleb128 0xb
 1484 0060 27       		.uleb128 0x27
 1485 0061 19       		.uleb128 0x19
 1486 0062 11       		.uleb128 0x11
 1487 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 55


 1488 0064 12       		.uleb128 0x12
 1489 0065 06       		.uleb128 0x6
 1490 0066 40       		.uleb128 0x40
 1491 0067 18       		.uleb128 0x18
 1492 0068 9742     		.uleb128 0x2117
 1493 006a 19       		.uleb128 0x19
 1494 006b 00       		.byte	0
 1495 006c 00       		.byte	0
 1496 006d 08       		.uleb128 0x8
 1497 006e 2E       		.uleb128 0x2e
 1498 006f 01       		.byte	0x1
 1499 0070 3F       		.uleb128 0x3f
 1500 0071 19       		.uleb128 0x19
 1501 0072 03       		.uleb128 0x3
 1502 0073 0E       		.uleb128 0xe
 1503 0074 3A       		.uleb128 0x3a
 1504 0075 0B       		.uleb128 0xb
 1505 0076 3B       		.uleb128 0x3b
 1506 0077 0B       		.uleb128 0xb
 1507 0078 27       		.uleb128 0x27
 1508 0079 19       		.uleb128 0x19
 1509 007a 11       		.uleb128 0x11
 1510 007b 01       		.uleb128 0x1
 1511 007c 12       		.uleb128 0x12
 1512 007d 06       		.uleb128 0x6
 1513 007e 40       		.uleb128 0x40
 1514 007f 18       		.uleb128 0x18
 1515 0080 9642     		.uleb128 0x2116
 1516 0082 19       		.uleb128 0x19
 1517 0083 01       		.uleb128 0x1
 1518 0084 13       		.uleb128 0x13
 1519 0085 00       		.byte	0
 1520 0086 00       		.byte	0
 1521 0087 09       		.uleb128 0x9
 1522 0088 34       		.uleb128 0x34
 1523 0089 00       		.byte	0
 1524 008a 03       		.uleb128 0x3
 1525 008b 0E       		.uleb128 0xe
 1526 008c 3A       		.uleb128 0x3a
 1527 008d 0B       		.uleb128 0xb
 1528 008e 3B       		.uleb128 0x3b
 1529 008f 0B       		.uleb128 0xb
 1530 0090 49       		.uleb128 0x49
 1531 0091 13       		.uleb128 0x13
 1532 0092 02       		.uleb128 0x2
 1533 0093 18       		.uleb128 0x18
 1534 0094 00       		.byte	0
 1535 0095 00       		.byte	0
 1536 0096 0A       		.uleb128 0xa
 1537 0097 2E       		.uleb128 0x2e
 1538 0098 00       		.byte	0
 1539 0099 3F       		.uleb128 0x3f
 1540 009a 19       		.uleb128 0x19
 1541 009b 03       		.uleb128 0x3
 1542 009c 0E       		.uleb128 0xe
 1543 009d 3A       		.uleb128 0x3a
 1544 009e 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 56


 1545 009f 3B       		.uleb128 0x3b
 1546 00a0 05       		.uleb128 0x5
 1547 00a1 27       		.uleb128 0x27
 1548 00a2 19       		.uleb128 0x19
 1549 00a3 49       		.uleb128 0x49
 1550 00a4 13       		.uleb128 0x13
 1551 00a5 11       		.uleb128 0x11
 1552 00a6 01       		.uleb128 0x1
 1553 00a7 12       		.uleb128 0x12
 1554 00a8 06       		.uleb128 0x6
 1555 00a9 40       		.uleb128 0x40
 1556 00aa 18       		.uleb128 0x18
 1557 00ab 9742     		.uleb128 0x2117
 1558 00ad 19       		.uleb128 0x19
 1559 00ae 00       		.byte	0
 1560 00af 00       		.byte	0
 1561 00b0 0B       		.uleb128 0xb
 1562 00b1 2E       		.uleb128 0x2e
 1563 00b2 01       		.byte	0x1
 1564 00b3 3F       		.uleb128 0x3f
 1565 00b4 19       		.uleb128 0x19
 1566 00b5 03       		.uleb128 0x3
 1567 00b6 0E       		.uleb128 0xe
 1568 00b7 3A       		.uleb128 0x3a
 1569 00b8 0B       		.uleb128 0xb
 1570 00b9 3B       		.uleb128 0x3b
 1571 00ba 05       		.uleb128 0x5
 1572 00bb 27       		.uleb128 0x27
 1573 00bc 19       		.uleb128 0x19
 1574 00bd 11       		.uleb128 0x11
 1575 00be 01       		.uleb128 0x1
 1576 00bf 12       		.uleb128 0x12
 1577 00c0 06       		.uleb128 0x6
 1578 00c1 40       		.uleb128 0x40
 1579 00c2 18       		.uleb128 0x18
 1580 00c3 9742     		.uleb128 0x2117
 1581 00c5 19       		.uleb128 0x19
 1582 00c6 01       		.uleb128 0x1
 1583 00c7 13       		.uleb128 0x13
 1584 00c8 00       		.byte	0
 1585 00c9 00       		.byte	0
 1586 00ca 0C       		.uleb128 0xc
 1587 00cb 05       		.uleb128 0x5
 1588 00cc 00       		.byte	0
 1589 00cd 03       		.uleb128 0x3
 1590 00ce 0E       		.uleb128 0xe
 1591 00cf 3A       		.uleb128 0x3a
 1592 00d0 0B       		.uleb128 0xb
 1593 00d1 3B       		.uleb128 0x3b
 1594 00d2 05       		.uleb128 0x5
 1595 00d3 49       		.uleb128 0x49
 1596 00d4 13       		.uleb128 0x13
 1597 00d5 02       		.uleb128 0x2
 1598 00d6 18       		.uleb128 0x18
 1599 00d7 00       		.byte	0
 1600 00d8 00       		.byte	0
 1601 00d9 0D       		.uleb128 0xd
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 57


 1602 00da 2E       		.uleb128 0x2e
 1603 00db 01       		.byte	0x1
 1604 00dc 3F       		.uleb128 0x3f
 1605 00dd 19       		.uleb128 0x19
 1606 00de 03       		.uleb128 0x3
 1607 00df 0E       		.uleb128 0xe
 1608 00e0 3A       		.uleb128 0x3a
 1609 00e1 0B       		.uleb128 0xb
 1610 00e2 3B       		.uleb128 0x3b
 1611 00e3 05       		.uleb128 0x5
 1612 00e4 27       		.uleb128 0x27
 1613 00e5 19       		.uleb128 0x19
 1614 00e6 11       		.uleb128 0x11
 1615 00e7 01       		.uleb128 0x1
 1616 00e8 12       		.uleb128 0x12
 1617 00e9 06       		.uleb128 0x6
 1618 00ea 40       		.uleb128 0x40
 1619 00eb 18       		.uleb128 0x18
 1620 00ec 9642     		.uleb128 0x2116
 1621 00ee 19       		.uleb128 0x19
 1622 00ef 01       		.uleb128 0x1
 1623 00f0 13       		.uleb128 0x13
 1624 00f1 00       		.byte	0
 1625 00f2 00       		.byte	0
 1626 00f3 0E       		.uleb128 0xe
 1627 00f4 34       		.uleb128 0x34
 1628 00f5 00       		.byte	0
 1629 00f6 03       		.uleb128 0x3
 1630 00f7 0E       		.uleb128 0xe
 1631 00f8 3A       		.uleb128 0x3a
 1632 00f9 0B       		.uleb128 0xb
 1633 00fa 3B       		.uleb128 0x3b
 1634 00fb 05       		.uleb128 0x5
 1635 00fc 49       		.uleb128 0x49
 1636 00fd 13       		.uleb128 0x13
 1637 00fe 02       		.uleb128 0x2
 1638 00ff 18       		.uleb128 0x18
 1639 0100 00       		.byte	0
 1640 0101 00       		.byte	0
 1641 0102 0F       		.uleb128 0xf
 1642 0103 0F       		.uleb128 0xf
 1643 0104 00       		.byte	0
 1644 0105 0B       		.uleb128 0xb
 1645 0106 0B       		.uleb128 0xb
 1646 0107 49       		.uleb128 0x49
 1647 0108 13       		.uleb128 0x13
 1648 0109 00       		.byte	0
 1649 010a 00       		.byte	0
 1650 010b 10       		.uleb128 0x10
 1651 010c 26       		.uleb128 0x26
 1652 010d 00       		.byte	0
 1653 010e 49       		.uleb128 0x49
 1654 010f 13       		.uleb128 0x13
 1655 0110 00       		.byte	0
 1656 0111 00       		.byte	0
 1657 0112 11       		.uleb128 0x11
 1658 0113 2E       		.uleb128 0x2e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 58


 1659 0114 01       		.byte	0x1
 1660 0115 3F       		.uleb128 0x3f
 1661 0116 19       		.uleb128 0x19
 1662 0117 03       		.uleb128 0x3
 1663 0118 0E       		.uleb128 0xe
 1664 0119 3A       		.uleb128 0x3a
 1665 011a 0B       		.uleb128 0xb
 1666 011b 3B       		.uleb128 0x3b
 1667 011c 05       		.uleb128 0x5
 1668 011d 27       		.uleb128 0x27
 1669 011e 19       		.uleb128 0x19
 1670 011f 49       		.uleb128 0x49
 1671 0120 13       		.uleb128 0x13
 1672 0121 11       		.uleb128 0x11
 1673 0122 01       		.uleb128 0x1
 1674 0123 12       		.uleb128 0x12
 1675 0124 06       		.uleb128 0x6
 1676 0125 40       		.uleb128 0x40
 1677 0126 18       		.uleb128 0x18
 1678 0127 9742     		.uleb128 0x2117
 1679 0129 19       		.uleb128 0x19
 1680 012a 01       		.uleb128 0x1
 1681 012b 13       		.uleb128 0x13
 1682 012c 00       		.byte	0
 1683 012d 00       		.byte	0
 1684 012e 12       		.uleb128 0x12
 1685 012f 0B       		.uleb128 0xb
 1686 0130 01       		.byte	0x1
 1687 0131 11       		.uleb128 0x11
 1688 0132 01       		.uleb128 0x1
 1689 0133 12       		.uleb128 0x12
 1690 0134 06       		.uleb128 0x6
 1691 0135 00       		.byte	0
 1692 0136 00       		.byte	0
 1693 0137 13       		.uleb128 0x13
 1694 0138 34       		.uleb128 0x34
 1695 0139 00       		.byte	0
 1696 013a 03       		.uleb128 0x3
 1697 013b 0E       		.uleb128 0xe
 1698 013c 3A       		.uleb128 0x3a
 1699 013d 0B       		.uleb128 0xb
 1700 013e 3B       		.uleb128 0x3b
 1701 013f 0B       		.uleb128 0xb
 1702 0140 49       		.uleb128 0x49
 1703 0141 13       		.uleb128 0x13
 1704 0142 3F       		.uleb128 0x3f
 1705 0143 19       		.uleb128 0x19
 1706 0144 02       		.uleb128 0x2
 1707 0145 18       		.uleb128 0x18
 1708 0146 00       		.byte	0
 1709 0147 00       		.byte	0
 1710 0148 00       		.byte	0
 1711              		.section	.debug_aranges,"",%progbits
 1712 0000 9C000000 		.4byte	0x9c
 1713 0004 0200     		.2byte	0x2
 1714 0006 00000000 		.4byte	.Ldebug_info0
 1715 000a 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 59


 1716 000b 00       		.byte	0
 1717 000c 0000     		.2byte	0
 1718 000e 0000     		.2byte	0
 1719 0010 00000000 		.4byte	.LFB0
 1720 0014 24000000 		.4byte	.LFE0-.LFB0
 1721 0018 00000000 		.4byte	.LFB1
 1722 001c 2C000000 		.4byte	.LFE1-.LFB1
 1723 0020 00000000 		.4byte	.LFB2
 1724 0024 38000000 		.4byte	.LFE2-.LFB2
 1725 0028 00000000 		.4byte	.LFB3
 1726 002c 38000000 		.4byte	.LFE3-.LFB3
 1727 0030 00000000 		.4byte	.LFB4
 1728 0034 0E000000 		.4byte	.LFE4-.LFB4
 1729 0038 00000000 		.4byte	.LFB5
 1730 003c 14000000 		.4byte	.LFE5-.LFB5
 1731 0040 00000000 		.4byte	.LFB6
 1732 0044 20000000 		.4byte	.LFE6-.LFB6
 1733 0048 00000000 		.4byte	.LFB7
 1734 004c 2C000000 		.4byte	.LFE7-.LFB7
 1735 0050 00000000 		.4byte	.LFB8
 1736 0054 18000000 		.4byte	.LFE8-.LFB8
 1737 0058 00000000 		.4byte	.LFB9
 1738 005c 34000000 		.4byte	.LFE9-.LFB9
 1739 0060 00000000 		.4byte	.LFB10
 1740 0064 44000000 		.4byte	.LFE10-.LFB10
 1741 0068 00000000 		.4byte	.LFB11
 1742 006c 44000000 		.4byte	.LFE11-.LFB11
 1743 0070 00000000 		.4byte	.LFB12
 1744 0074 34000000 		.4byte	.LFE12-.LFB12
 1745 0078 00000000 		.4byte	.LFB13
 1746 007c 40000000 		.4byte	.LFE13-.LFB13
 1747 0080 00000000 		.4byte	.LFB14
 1748 0084 44000000 		.4byte	.LFE14-.LFB14
 1749 0088 00000000 		.4byte	.LFB15
 1750 008c 9C000000 		.4byte	.LFE15-.LFB15
 1751 0090 00000000 		.4byte	.LFB16
 1752 0094 14000000 		.4byte	.LFE16-.LFB16
 1753 0098 00000000 		.4byte	0
 1754 009c 00000000 		.4byte	0
 1755              		.section	.debug_ranges,"",%progbits
 1756              	.Ldebug_ranges0:
 1757 0000 00000000 		.4byte	.LFB0
 1758 0004 24000000 		.4byte	.LFE0
 1759 0008 00000000 		.4byte	.LFB1
 1760 000c 2C000000 		.4byte	.LFE1
 1761 0010 00000000 		.4byte	.LFB2
 1762 0014 38000000 		.4byte	.LFE2
 1763 0018 00000000 		.4byte	.LFB3
 1764 001c 38000000 		.4byte	.LFE3
 1765 0020 00000000 		.4byte	.LFB4
 1766 0024 0E000000 		.4byte	.LFE4
 1767 0028 00000000 		.4byte	.LFB5
 1768 002c 14000000 		.4byte	.LFE5
 1769 0030 00000000 		.4byte	.LFB6
 1770 0034 20000000 		.4byte	.LFE6
 1771 0038 00000000 		.4byte	.LFB7
 1772 003c 2C000000 		.4byte	.LFE7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 60


 1773 0040 00000000 		.4byte	.LFB8
 1774 0044 18000000 		.4byte	.LFE8
 1775 0048 00000000 		.4byte	.LFB9
 1776 004c 34000000 		.4byte	.LFE9
 1777 0050 00000000 		.4byte	.LFB10
 1778 0054 44000000 		.4byte	.LFE10
 1779 0058 00000000 		.4byte	.LFB11
 1780 005c 44000000 		.4byte	.LFE11
 1781 0060 00000000 		.4byte	.LFB12
 1782 0064 34000000 		.4byte	.LFE12
 1783 0068 00000000 		.4byte	.LFB13
 1784 006c 40000000 		.4byte	.LFE13
 1785 0070 00000000 		.4byte	.LFB14
 1786 0074 44000000 		.4byte	.LFE14
 1787 0078 00000000 		.4byte	.LFB15
 1788 007c 9C000000 		.4byte	.LFE15
 1789 0080 00000000 		.4byte	.LFB16
 1790 0084 14000000 		.4byte	.LFE16
 1791 0088 00000000 		.4byte	0
 1792 008c 00000000 		.4byte	0
 1793              		.section	.debug_line,"",%progbits
 1794              	.Ldebug_line0:
 1795 0000 F7010000 		.section	.debug_str,"MS",%progbits,1
 1795      02004700 
 1795      00000201 
 1795      FB0E0D00 
 1795      01010101 
 1796              	.LASF6:
 1797 0000 6C6F6E67 		.ascii	"long long int\000"
 1797      206C6F6E 
 1797      6720696E 
 1797      7400
 1798              	.LASF46:
 1799 000e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1799      43313120 
 1799      352E342E 
 1799      31203230 
 1799      31363036 
 1800 0041 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1800      20726576 
 1800      6973696F 
 1800      6E203233 
 1800      37373135 
 1801 0074 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1801      66756E63 
 1801      74696F6E 
 1801      2D736563 
 1801      74696F6E 
 1802              	.LASF47:
 1803 009c 47656E65 		.ascii	"Generated_Source\\PSoC5\\Debug_UART.c\000"
 1803      72617465 
 1803      645F536F 
 1803      75726365 
 1803      5C50536F 
 1804              	.LASF43:
 1805 00c0 74785065 		.ascii	"txPeriod\000"
 1805      72696F64 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 61


 1805      00
 1806              	.LASF20:
 1807 00c9 44656275 		.ascii	"Debug_UART_Enable\000"
 1807      675F5541 
 1807      52545F45 
 1807      6E61626C 
 1807      6500
 1808              	.LASF42:
 1809 00db 746D7053 		.ascii	"tmpStat\000"
 1809      74617400 
 1810              	.LASF3:
 1811 00e3 73686F72 		.ascii	"short unsigned int\000"
 1811      7420756E 
 1811      7369676E 
 1811      65642069 
 1811      6E7400
 1812              	.LASF31:
 1813 00f6 44656275 		.ascii	"Debug_UART_PutChar\000"
 1813      675F5541 
 1813      52545F50 
 1813      75744368 
 1813      617200
 1814              	.LASF32:
 1815 0109 44656275 		.ascii	"Debug_UART_PutString\000"
 1815      675F5541 
 1815      52545F50 
 1815      75745374 
 1815      72696E67 
 1816              	.LASF26:
 1817 011e 696E7453 		.ascii	"intSrc\000"
 1817      726300
 1818              	.LASF33:
 1819 0125 73747269 		.ascii	"string\000"
 1819      6E6700
 1820              	.LASF21:
 1821 012c 44656275 		.ascii	"Debug_UART_Stop\000"
 1821      675F5541 
 1821      52545F53 
 1821      746F7000 
 1822              	.LASF29:
 1823 013c 44656275 		.ascii	"Debug_UART_ReadControlRegister\000"
 1823      675F5541 
 1823      52545F52 
 1823      65616443 
 1823      6F6E7472 
 1824              	.LASF11:
 1825 015b 666C6F61 		.ascii	"float\000"
 1825      7400
 1826              	.LASF49:
 1827 0161 44656275 		.ascii	"Debug_UART_GetTxBufferSize\000"
 1827      675F5541 
 1827      52545F47 
 1827      65745478 
 1827      42756666 
 1828              	.LASF45:
 1829 017c 61646472 		.ascii	"addressMode\000"
 1829      6573734D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 62


 1829      6F646500 
 1830              	.LASF15:
 1831 0188 72656738 		.ascii	"reg8\000"
 1831      00
 1832              	.LASF5:
 1833 018d 6C6F6E67 		.ascii	"long unsigned int\000"
 1833      20756E73 
 1833      69676E65 
 1833      6420696E 
 1833      7400
 1834              	.LASF37:
 1835 019f 44656275 		.ascii	"Debug_UART_PutCRLF\000"
 1835      675F5541 
 1835      52545F50 
 1835      75744352 
 1835      4C4600
 1836              	.LASF9:
 1837 01b2 75696E74 		.ascii	"uint8\000"
 1837      3800
 1838              	.LASF25:
 1839 01b8 636F6E74 		.ascii	"control\000"
 1839      726F6C00 
 1840              	.LASF36:
 1841 01c0 62797465 		.ascii	"byteCount\000"
 1841      436F756E 
 1841      7400
 1842              	.LASF22:
 1843 01ca 656E6162 		.ascii	"enableInterrupts\000"
 1843      6C65496E 
 1843      74657272 
 1843      75707473 
 1843      00
 1844              	.LASF35:
 1845 01db 44656275 		.ascii	"Debug_UART_PutArray\000"
 1845      675F5541 
 1845      52545F50 
 1845      75744172 
 1845      72617900 
 1846              	.LASF1:
 1847 01ef 756E7369 		.ascii	"unsigned char\000"
 1847      676E6564 
 1847      20636861 
 1847      7200
 1848              	.LASF12:
 1849 01fd 646F7562 		.ascii	"double\000"
 1849      6C6500
 1850              	.LASF27:
 1851 0204 44656275 		.ascii	"Debug_UART_WriteTxData\000"
 1851      675F5541 
 1851      52545F57 
 1851      72697465 
 1851      54784461 
 1852              	.LASF10:
 1853 021b 75696E74 		.ascii	"uint16\000"
 1853      313600
 1854              	.LASF18:
 1855 0222 44656275 		.ascii	"Debug_UART_Start\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 63


 1855      675F5541 
 1855      52545F53 
 1855      74617274 
 1855      00
 1856              	.LASF48:
 1857 0233 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 1857      6F746F72 
 1857      694F535C 
 1857      6E6F746F 
 1857      72694F53 
 1858              	.LASF8:
 1859 024e 756E7369 		.ascii	"unsigned int\000"
 1859      676E6564 
 1859      20696E74 
 1859      00
 1860              	.LASF7:
 1861 025b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1861      206C6F6E 
 1861      6720756E 
 1861      7369676E 
 1861      65642069 
 1862              	.LASF24:
 1863 0272 44656275 		.ascii	"Debug_UART_SetTxInterruptMode\000"
 1863      675F5541 
 1863      52545F53 
 1863      65745478 
 1863      496E7465 
 1864              	.LASF34:
 1865 0290 62756649 		.ascii	"bufIndex\000"
 1865      6E646578 
 1865      00
 1866              	.LASF50:
 1867 0299 44656275 		.ascii	"Debug_UART_initVar\000"
 1867      675F5541 
 1867      52545F69 
 1867      6E697456 
 1867      617200
 1868              	.LASF17:
 1869 02ac 73697A65 		.ascii	"sizetype\000"
 1869      74797065 
 1869      00
 1870              	.LASF13:
 1871 02b5 63686172 		.ascii	"char8\000"
 1871      3800
 1872              	.LASF44:
 1873 02bb 44656275 		.ascii	"Debug_UART_SetTxAddressMode\000"
 1873      675F5541 
 1873      52545F53 
 1873      65745478 
 1873      41646472 
 1874              	.LASF28:
 1875 02d7 74784461 		.ascii	"txDataByte\000"
 1875      74614279 
 1875      746500
 1876              	.LASF39:
 1877 02e2 44656275 		.ascii	"Debug_UART_ClearTxBuffer\000"
 1877      675F5541 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccQtVCyt.s 			page 64


 1877      52545F43 
 1877      6C656172 
 1877      54784275 
 1878              	.LASF40:
 1879 02fb 44656275 		.ascii	"Debug_UART_SendBreak\000"
 1879      675F5541 
 1879      52545F53 
 1879      656E6442 
 1879      7265616B 
 1880              	.LASF41:
 1881 0310 7265744D 		.ascii	"retMode\000"
 1881      6F646500 
 1882              	.LASF2:
 1883 0318 73686F72 		.ascii	"short int\000"
 1883      7420696E 
 1883      7400
 1884              	.LASF4:
 1885 0322 6C6F6E67 		.ascii	"long int\000"
 1885      20696E74 
 1885      00
 1886              	.LASF14:
 1887 032b 63686172 		.ascii	"char\000"
 1887      00
 1888              	.LASF19:
 1889 0330 44656275 		.ascii	"Debug_UART_Init\000"
 1889      675F5541 
 1889      52545F49 
 1889      6E697400 
 1890              	.LASF16:
 1891 0340 6C6F6E67 		.ascii	"long double\000"
 1891      20646F75 
 1891      626C6500 
 1892              	.LASF23:
 1893 034c 44656275 		.ascii	"Debug_UART_WriteControlRegister\000"
 1893      675F5541 
 1893      52545F57 
 1893      72697465 
 1893      436F6E74 
 1894              	.LASF0:
 1895 036c 7369676E 		.ascii	"signed char\000"
 1895      65642063 
 1895      68617200 
 1896              	.LASF30:
 1897 0378 44656275 		.ascii	"Debug_UART_ReadTxStatus\000"
 1897      675F5541 
 1897      52545F52 
 1897      65616454 
 1897      78537461 
 1898              	.LASF38:
 1899 0390 73697A65 		.ascii	"size\000"
 1899      00
 1900              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
